(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory(require("os"),require("tty"),require("util"),function webpackLoadOptionalExternalModule(){try{return require("crypto")}catch(e){}}(),require("fs"),require("path"),require("readline"));else if(typeof define==="function"&&define.amd)define(["os","tty","util","crypto","fs","path","readline"],factory);else if(typeof exports==="object")exports["compiler"]=factory(require("os"),
require("tty"),require("util"),function webpackLoadOptionalExternalModule(){try{return require("crypto")}catch(e){}}(),require("fs"),require("path"),require("readline"));else root["compiler"]=factory(root["os"],root["tty"],root["util"],root["crypto"],root["fs"],root["path"],root["readline"])})(global,function(__WEBPACK_EXTERNAL_MODULE__263__,__WEBPACK_EXTERNAL_MODULE__302__,__WEBPACK_EXTERNAL_MODULE__303__,__WEBPACK_EXTERNAL_MODULE__406__,__WEBPACK_EXTERNAL_MODULE__653__,__WEBPACK_EXTERNAL_MODULE__656__,
__WEBPACK_EXTERNAL_MODULE__659__){return function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,
name))Object.defineProperty(exports,name,{enumerable:true,get:getter})};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag)Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);
Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,
property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=657)}([,function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var _exportNames={prepackStdin:true,prepackFile:true,prepackFileSync:true};exports.prepackStdin=prepackStdin;exports.prepackFile=prepackFile;exports.prepackFileSync=prepackFileSync;var _options=__webpack_require__(2);var _errors=__webpack_require__(3);var _prepackStandalone=__webpack_require__(4);var _types=
__webpack_require__(19);var _DebugChannel=__webpack_require__(651);var _FileIOWrapper=__webpack_require__(652);var _statistics=__webpack_require__(407);var _fs=_interopRequireDefault(__webpack_require__(653));var _path=_interopRequireDefault(__webpack_require__(656));var _prepackStandalone2=__webpack_require__(4);Object.keys(_prepackStandalone2).forEach(function(key){if(key==="default"||key==="__esModule")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;Object.defineProperty(exports,
key,{enumerable:true,get:function(){return _prepackStandalone2[key]}})});function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function createStatistics(options){let gc=global.gc;return options.profile!==undefined?new _statistics.SerializerStatistics(()=>Date.now(),()=>{if(gc)gc();return process.memoryUsage().heapUsed},!!gc):new _statistics.SerializerStatistics}function prepackStdin(options=_options.defaultOptions,processSerializedCode,printDiagnostics){let sourceMapFilename=
options.inputSourceMapFilenames&&options.inputSourceMapFilenames.length>0?options.inputSourceMapFilenames[0]:"";process.stdin.setEncoding("utf8");process.stdin.resume();process.stdin.on("data",function(code){_fs.default.readFile(sourceMapFilename,"utf8",function(mapErr,sourceMap=""){if(mapErr)if(sourceMapFilename!=="")console.warn(`No sourcemap found at ${sourceMapFilename}.`);let filename="no-filename-specified";let serialized;let success;try{serialized=(0,_prepackStandalone.prepackSources)([{filePath:filename,
fileContents:code,sourceMapContents:sourceMap}],options,createStatistics(options));processSerializedCode(serialized);success=printDiagnostics(false)}catch(err){printDiagnostics(err instanceof _errors.FatalError);if(!(err instanceof _errors.FatalError))console.error(err.stack);success=false}if(!success)process.exit(1)})})}function getSourceMapFilename(filename,options){if(options.inputSourceMapFilenames!==undefined)for(let sourceMapFilename of options.inputSourceMapFilenames)if(_path.default.basename(filename)+
".map"===_path.default.basename(sourceMapFilename))return[sourceMapFilename,true];return[filename+".map",false]}function prepackFile(filename,options=_options.defaultOptions,callback,fileErrorHandler){let [sourceMapFilename]=getSourceMapFilename(filename,options);_fs.default.readFile(filename,"utf8",function(fileErr,code){if(fileErr){if(fileErrorHandler)fileErrorHandler(fileErr);return}_fs.default.readFile(sourceMapFilename,"utf8",function(mapErr,_sourceMap){let sourceMap=_sourceMap;if(mapErr){console.warn(`No sourcemap found at ${sourceMapFilename}.`);
sourceMap=""}let serialized;try{serialized=(0,_prepackStandalone.prepackSources)([{filePath:filename,fileContents:code,sourceMapContents:sourceMap}],options,createStatistics(options))}catch(err){callback(err,null);return}callback(null,serialized)})})}function getSourceFileCollection(filenames,options){const sourceFiles=filenames.map((filename)=>{let code=_fs.default.readFileSync(filename,"utf8");let sourceMap="";let [sourceMapFilename,matchedSourceMapFilename]=getSourceMapFilename(filename,options);
try{sourceMap=_fs.default.readFileSync(sourceMapFilename,"utf8");if(matchedSourceMapFilename)console.info(`Matching sourcemap found at ${sourceMapFilename}.`)}catch(_e){if(matchedSourceMapFilename)console.warn(`No sourcemap found at ${sourceMapFilename}.`)}return{filePath:filename,fileContents:code,sourceMapContents:sourceMap,sourceMapFilename:sourceMapFilename}});return new _types.SourceFileCollection(sourceFiles)}function prepackFileSync(filenames,options=_options.defaultOptions){let sourceFileCollection=
getSourceFileCollection(filenames,options);let filterValidSourceMaps=(a)=>a.filter((sf)=>sf.sourceMapContents!=="");if(options.debugInFilePath!==undefined&&options.debugOutFilePath!==undefined){if(options.debuggerConfigArgs===undefined)options.debuggerConfigArgs={};let debuggerConfigArgs=options.debuggerConfigArgs;let ioWrapper=new _FileIOWrapper.FileIOWrapper(false,options.debugInFilePath,options.debugOutFilePath);debuggerConfigArgs.debugChannel=new _DebugChannel.DebugChannel(ioWrapper);debuggerConfigArgs.sourcemaps=
filterValidSourceMaps(sourceFileCollection.toArray())}let debugReproArgs=options.debugReproArgs;if(debugReproArgs)debugReproArgs.sourcemaps=filterValidSourceMaps(sourceFileCollection.toArray());return(0,_prepackStandalone.prepackSources)(sourceFileCollection,options,createStatistics(options))}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.defaultOptions=exports.ReactOutputValues=exports.DiagnosticSeverityValues=exports.InvariantModeValues=
exports.CompatibilityValues=void 0;const CompatibilityValues=["browser","jsc-600-1-4-17","mobile","node-source-maps","fb-www","node-react"];exports.CompatibilityValues=CompatibilityValues;const InvariantModeValues=["throw","console.info","console.warn","console.error","nativeLoggingHook+0","nativeLoggingHook+1","nativeLoggingHook+2","nativeLoggingHook+3"];exports.InvariantModeValues=InvariantModeValues;const DiagnosticSeverityValues=["FatalError","RecoverableError","Warning","Information"];exports.DiagnosticSeverityValues=
DiagnosticSeverityValues;const ReactOutputValues=["create-element","jsx","bytecode"];exports.ReactOutputValues=ReactOutputValues;const defaultOptions={};exports.defaultOptions=defaultOptions},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.NestedOptimizedFunctionSideEffect=exports.InvariantError=exports.InfeasiblePathError=exports.FatalError=exports.CompilerDiagnostic=void 0;class CompilerDiagnostic extends Error{constructor(message,location,
errorCode,severity,sourceFilePaths){super(message);this.location=location;this.severity=severity;this.errorCode=errorCode;this.sourceFilePaths=sourceFilePaths}}exports.CompilerDiagnostic=CompilerDiagnostic;class FatalError extends Error{constructor(message){super(message===undefined?"A fatal error occurred while prepacking.":message)}}exports.FatalError=FatalError;class InfeasiblePathError extends Error{constructor(){super("Infeasible path explored")}}exports.InfeasiblePathError=InfeasiblePathError;
class InvariantError extends Error{constructor(message){super(message)}}exports.InvariantError=InvariantError;class NestedOptimizedFunctionSideEffect extends Error{}exports.NestedOptimizedFunctionSideEffect=NestedOptimizedFunctionSideEffect},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.prepackSources=prepackSources;exports.prepackVersion=void 0;var _index=_interopRequireDefault(__webpack_require__(5));var _construct_realm=_interopRequireDefault(__webpack_require__(449));
var _globals=_interopRequireDefault(__webpack_require__(630));var _index2=__webpack_require__(232);var _prepackOptions=__webpack_require__(649);var _errors=__webpack_require__(3);var _types=__webpack_require__(19);var _completions=__webpack_require__(18);var _options=__webpack_require__(2);var _invariant=_interopRequireDefault(__webpack_require__(9));var _package=__webpack_require__(650);var _statistics=__webpack_require__(407);var _ResidualHeapVisitor=__webpack_require__(423);var _modules=__webpack_require__(411);
var _logger=__webpack_require__(412);var _generator=__webpack_require__(237);var _index3=__webpack_require__(10);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function prepackSources(sourceFileCollection,options=_options.defaultOptions,statistics=undefined){if(Array.isArray(sourceFileCollection))sourceFileCollection=new _types.SourceFileCollection(sourceFileCollection);let realmOptions=(0,_prepackOptions.getRealmOptions)(options);realmOptions.errorHandler=options.errorHandler;
let realm=(0,_construct_realm.default)(realmOptions,options.debuggerConfigArgs,statistics||new _statistics.SerializerStatistics,options.debugReproArgs);(0,_globals.default)(realm);if(typeof options.additionalGlobals==="function")options.additionalGlobals(realm);if(options.check){realm.generator=new _generator.Generator(realm,"main",realm.pathConditions);let logger=new _logger.Logger(realm,!!options.internalDebug);let modules=new _modules.Modules(realm,logger,!!options.logModules);let [result]=realm.$GlobalEnv.executeSources(sourceFileCollection.toArray());
if(result instanceof _completions.AbruptCompletion)throw result;(0,_invariant.default)(options.check);checkResidualFunctions(modules,options.check[0],options.check[1]);return{code:"",map:undefined}}else{let serializer=new _index.default(realm,(0,_prepackOptions.getSerializerOptions)(options));let serialized=serializer.init(sourceFileCollection,options.sourceMaps,options.onParse,options.onExecute);if(realm.debuggerInstance)realm.debuggerInstance.shutdown();if(!serialized)throw new _errors.FatalError("serializer failed");
if(realm.debugReproManager){let localManager=realm.debugReproManager;let sourcePaths={sourceFiles:localManager.getSourceFilePaths(),sourceMaps:localManager.getSourceMapPaths()};serialized.sourceFilePaths=sourcePaths}return serialized}}function checkResidualFunctions(modules,startFunc,totalToAnalyze){let realm=modules.realm;let env=realm.$GlobalEnv;realm.$GlobalObject.makeSimple();let errorHandler=realm.errorHandler;if(!errorHandler)errorHandler=(diag,suppressDiagnostics)=>realm.handleError(diag);
realm.errorHandler=(diag,suppressDiagnostics)=>{(0,_invariant.default)(errorHandler);if(diag.severity==="FatalError")return errorHandler(diag,realm.suppressDiagnostics);else return"Recover"};modules.resolveInitializedModules();let residualHeapVisitor=new _ResidualHeapVisitor.ResidualHeapVisitor(realm,modules.logger,modules,new Map);residualHeapVisitor.visitRoots();if(modules.logger.hasErrors())return;let totalFunctions=0;let nonFatalFunctions=0;for(let fi of residualHeapVisitor.functionInstances.values()){totalFunctions++;
if(totalFunctions<=startFunc)continue;let fv=fi.functionValue;console.log("analyzing: "+totalFunctions);let thisValue=realm.intrinsics.null;let n=fv.getLength()||0;let args=[];for(let i=0;i<n;i++){let name="dummy parameter";let ob=_index3.AbstractValue.createFromType(realm,_index3.ObjectValue,name);ob.makeSimple("transitive");ob.intrinsicName=name;args[i]=ob}try{realm.evaluateForEffectsInGlobalEnv(()=>(0,_index2.EvaluateDirectCallWithArgList)(modules.realm,true,env,fv,fv,thisValue,args));nonFatalFunctions++}catch(e){}if(totalFunctions>=
startFunc+totalToAnalyze)break}console.log(`Analyzed ${totalToAnalyze} functions starting at ${startFunc} of which ${nonFatalFunctions} did not have fatal errors.`)}const prepackVersion=_package.version;exports.prepackVersion=prepackVersion},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _serializer=__webpack_require__(6);var _default=_serializer.Serializer;exports.default=_default},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.Serializer=void 0;var _realm=__webpack_require__(7);var _errors=__webpack_require__(3);var _types=__webpack_require__(19);var _completions=__webpack_require__(18);var _generator=__webpack_require__(237);var _generator2=_interopRequireDefault(__webpack_require__(335));var _traverseFast=_interopRequireDefault(__webpack_require__(279));var _invariant=_interopRequireDefault(__webpack_require__(9));var _statistics=__webpack_require__(407);var _types2=__webpack_require__(408);
var _functions=__webpack_require__(409);var _logger=__webpack_require__(412);var _modules=__webpack_require__(411);var _flow=__webpack_require__(421);var _LoggingTracer=__webpack_require__(422);var _ResidualHeapVisitor=__webpack_require__(423);var _ResidualHeapSerializer=__webpack_require__(433);var _ResidualHeapValueIdentifiers=__webpack_require__(441);var _LazyObjectsSerializer=__webpack_require__(445);var t=_interopRequireWildcard(__webpack_require__(21));var _ResidualHeapRefCounter=__webpack_require__(446);
var _ResidualHeapGraphGenerator=__webpack_require__(447);var _Referentializer=__webpack_require__(439);var _index=__webpack_require__(232);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _descriptors=__webpack_require__(268);var _ResidualOptimizedFunctions=__webpack_require__(448);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&
Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Serializer{constructor(realm,serializerOptions={}){(0,_invariant.default)(realm.useAbstractInterpretation);realm.generator=new _generator.Generator(realm,"main",realm.pathConditions);this.realm=realm;this.logger=new _logger.Logger(this.realm,
!!serializerOptions.internalDebug);this.modules=new _modules.Modules(this.realm,this.logger,!!serializerOptions.logModules);this.functions=new _functions.Functions(this.realm,this.modules.moduleTracer);if(serializerOptions.trace){let loggingTracer=new _LoggingTracer.LoggingTracer(this.realm);this.realm.tracers.push(loggingTracer)}this.options=serializerOptions}_execute(sourceFileCollection,sourceMaps=false,onParse){let realm=this.realm;let [res,code]=realm.$GlobalEnv.executeSources(sourceFileCollection.toArray(),
"script",(ast)=>{let realmPreludeGenerator=realm.preludeGenerator;(0,_invariant.default)(realmPreludeGenerator);let forbiddenNames=realmPreludeGenerator.nameGenerator.forbiddenNames;(0,_traverseFast.default)(ast,(node)=>{if(!t.isIdentifier(node))return false;forbiddenNames.add(node.name);return true});if(onParse)onParse(ast)});sourceFileCollection.destroy();if(res instanceof _completions.AbruptCompletion){let context=new _realm.ExecutionContext;realm.pushContext(context);try{this.logger.logCompletion(res)}finally{realm.popContext(context)}let diagnostic=
new _errors.CompilerDiagnostic("Global code may end abruptly",res.location,"PP0016","FatalError");realm.handleError(diagnostic);throw new _errors.FatalError;}return code}processOutputEntries(){let realm=this.realm;let output=this.logger.tryQuery(()=>(0,_index.Get)(realm,realm.$GlobalObject,"__output"),realm.intrinsics.undefined);if(!(output instanceof _index2.ObjectValue))return false;let generator=realm.generator;let preludeGenerator=realm.preludeGenerator;if(generator===undefined||preludeGenerator===
undefined)return false;generator._entries.length=0;preludeGenerator.declaredGlobals.clear();for(let name of _singletons.Properties.GetOwnPropertyKeysArray(realm,output,false,false)){let property=output.properties.get(name);if(!property)continue;let value=property.descriptor instanceof _descriptors.PropertyDescriptor&&property.descriptor.value;if(!(value instanceof _index2.Value))continue;generator.emitGlobalDeclaration(name,value)}return true}init(sourceFileCollection,sourceMaps=false,onParse,onExecute){let realmStatistics=
this.realm.statistics;(0,_invariant.default)(realmStatistics instanceof _statistics.SerializerStatistics,"serialization requires SerializerStatistics");let statistics=realmStatistics;let result=statistics.total.measure(()=>{if(this.realm.react.verbose)this.logger.logInformation(`Evaluating initialization path...`);let code=this._execute(sourceFileCollection,sourceMaps,onParse);if(this.logger.hasErrors())return undefined;if(!this.processOutputEntries())statistics.resolveInitializedModules.measure(()=>
this.modules.resolveInitializedModules());statistics.checkThatFunctionsAreIndependent.measure(()=>this.functions.checkThatFunctionsAreIndependent());let reactStatistics;if(this.realm.react.enabled)statistics.optimizeReactComponentTreeRoots.measure(()=>{reactStatistics=new _types2.ReactStatistics;this.functions.optimizeReactComponentTreeRoots(reactStatistics)});statistics.processCollectedNestedOptimizedFunctions.measure(()=>this.functions.processCollectedNestedOptimizedFunctions());statistics.dumpIR.measure(()=>
{if(onExecute!==undefined){let optimizedFunctions=new Map;for(let [functionValue,additionalFunctionEffects]of this.functions.getAdditionalFunctionValuesToEffects())optimizedFunctions.set(functionValue,additionalFunctionEffects.generator);onExecute(this.realm,optimizedFunctions)}});let modulesToInitialize=this.options.modulesToInitialize;if(modulesToInitialize){statistics.modulesToInitialize.measure(()=>this.modules.initializeMoreModules(modulesToInitialize));if(this.logger.hasErrors())return undefined}let heapGraph;
let ast=(()=>{let additionalFunctionValuesAndEffects=this.functions.getAdditionalFunctionValuesToEffects();let preludeGenerator=this.realm.preludeGenerator;(0,_invariant.default)(preludeGenerator!==undefined);if(this.realm.react.verbose)this.logger.logInformation(`Visiting evaluated nodes...`);let [residualHeapInfo,generatorTree,inspector]=(()=>{let residualHeapVisitor=new _ResidualHeapVisitor.ResidualHeapVisitor(this.realm,this.logger,this.modules,additionalFunctionValuesAndEffects);statistics.deepTraversal.measure(()=>
residualHeapVisitor.visitRoots());return[residualHeapVisitor.toInfo(),residualHeapVisitor.generatorTree,residualHeapVisitor.inspector]})();if(this.logger.hasErrors())return undefined;let residualOptimizedFunctions=new _ResidualOptimizedFunctions.ResidualOptimizedFunctions(generatorTree,additionalFunctionValuesAndEffects,residualHeapInfo.values);let referentializer=new _Referentializer.Referentializer(this.realm,this.options,preludeGenerator.createNameGenerator("__scope_"),preludeGenerator.createNameGenerator("__get_scope_binding_"),
preludeGenerator.createNameGenerator("__leaked_"),residualOptimizedFunctions);statistics.referentialization.measure(()=>{for(let instance of residualHeapInfo.functionInstances.values())referentializer.referentialize(instance)});if(this.realm.react.verbose)this.logger.logInformation(`Serializing evaluated nodes...`);const realmPreludeGenerator=this.realm.preludeGenerator;(0,_invariant.default)(realmPreludeGenerator);const residualHeapValueIdentifiers=new _ResidualHeapValueIdentifiers.ResidualHeapValueIdentifiers(residualHeapInfo.values.keys(),
realmPreludeGenerator);if(this.options.heapGraphFormat){const heapRefCounter=new _ResidualHeapRefCounter.ResidualHeapRefCounter(this.realm,this.logger,this.modules,additionalFunctionValuesAndEffects);heapRefCounter.visitRoots();const heapGraphGenerator=new _ResidualHeapGraphGenerator.ResidualHeapGraphGenerator(this.realm,this.logger,this.modules,additionalFunctionValuesAndEffects,residualHeapValueIdentifiers,heapRefCounter.getResult());heapGraphGenerator.visitRoots();(0,_invariant.default)(this.options.heapGraphFormat);
heapGraph=heapGraphGenerator.generateResult(this.options.heapGraphFormat)}if(this.options.inlineExpressions){residualHeapValueIdentifiers.initPass1();statistics.referenceCounts.measure(()=>{(new _ResidualHeapSerializer.ResidualHeapSerializer(this.realm,this.logger,this.modules,residualHeapValueIdentifiers,inspector,residualHeapInfo,this.options,additionalFunctionValuesAndEffects,referentializer,generatorTree,residualOptimizedFunctions)).serialize()});if(this.logger.hasErrors())return undefined;residualHeapValueIdentifiers.initPass2()}const TargetSerializer=
this.options.lazyObjectsRuntime!=null?_LazyObjectsSerializer.LazyObjectsSerializer:_ResidualHeapSerializer.ResidualHeapSerializer;statistics.resetBeforePass();return statistics.serializePass.measure(()=>(new TargetSerializer(this.realm,this.logger,this.modules,residualHeapValueIdentifiers,inspector,residualHeapInfo,this.options,additionalFunctionValuesAndEffects,referentializer,generatorTree,residualOptimizedFunctions)).serialize())})();(0,_invariant.default)(ast!==undefined);if(this.realm.stripFlow)(0,
_flow.stripFlowTypeAnnotations)(ast);let generated=statistics.babelGenerate.measure(()=>(0,_generator2.default)(ast,{sourceMaps:sourceMaps},code));(0,_invariant.default)(!this.logger.hasErrors());return{code:generated.code,map:generated.map,statistics,reactStatistics,heapGraph}});if(this.options.logStatistics){statistics.log();statistics.logSerializerPerformanceTrackers("time statistics",statistics.forcingGC?"Time statistics are skewed because of forced garbage collections; remove --expose-gc flag from node.js invocation to disable forced garbage collections.":
undefined,(pf)=>`${pf.time}ms`);statistics.logSerializerPerformanceTrackers("memory statistics",statistics.forcingGC?undefined:"Memory statistics are unreliable because garbage collections could not be forced; pass --expose-gc to node.js to enable forced garbage collections.",(pf)=>`${pf.memory>0?"+":""}${Math.round(pf.memory/1024/1024)}MB`)}return result}}exports.Serializer=Serializer},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.construct_empty_effects=
construct_empty_effects;exports.Realm=exports.ExecutionContext=exports.Tracer=exports.Effects=void 0;var _statistics=__webpack_require__(8);var _errors=__webpack_require__(3);var _index=__webpack_require__(10);var _index2=__webpack_require__(15);var _environment=__webpack_require__(20);var _index3=__webpack_require__(232);var _completions=__webpack_require__(18);var _invariant=_interopRequireDefault(__webpack_require__(9));var _seedrandom=_interopRequireDefault(__webpack_require__(396));var _generator=
__webpack_require__(237);var _PreludeGenerator=__webpack_require__(238);var _singletons=__webpack_require__(236);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){if(key in obj)Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});else obj[key]=value;return obj}let effects_uid=0;class Effects{constructor(result,generator,bindings,propertyBindings,
createdObjects){this.result=result;this.generator=generator;this.modifiedBindings=bindings;this.modifiedProperties=propertyBindings;this.createdObjects=createdObjects;this.canBeApplied=true;this._id=effects_uid++}shallowCloneWithResult(result){return new Effects(result,this.generator,this.modifiedBindings,this.modifiedProperties,this.createdObjects)}toDisplayString(){return _singletons.Utils.jsonToDisplayString(this,10)}toDisplayJson(depth=1){if(depth<=0)return`Effects ${this._id}`;return _singletons.Utils.verboseToDisplayJson(this,
depth)}}exports.Effects=Effects;class Tracer{beginEvaluateForEffects(state){}endEvaluateForEffects(state,effects){}detourCall(F,thisArgument,argumentsList,newTarget,performCall){}beforeCall(F,thisArgument,argumentsList,newTarget){}afterCall(F,thisArgument,argumentsList,newTarget,result){}beginOptimizingFunction(optimizedFunctionId,functionValue){}endOptimizingFunction(optimizedFunctionId){}}exports.Tracer=Tracer;class ExecutionContext{setCaller(context){this.caller=context}setFunction(F){if(F instanceof
_index.ECMAScriptSourceFunctionValue)this.isStrict=F.$Strict;this.function=F}setLocation(loc){if(!loc)return;this.loc=loc}setRealm(realm){this.realm=realm}setReadOnly(value){let oldReadOnly=this.isReadOnly;if(this.variableEnvironment)this.variableEnvironment.environmentRecord.isReadOnly=value;if(this.lexicalEnvironment)this.lexicalEnvironment.environmentRecord.isReadOnly=value;this.isReadOnly=value;return oldReadOnly}suspend(){}resume(){return this.realm.intrinsics.undefined}}exports.ExecutionContext=
ExecutionContext;function construct_empty_effects(realm,c=new _completions.SimpleNormalCompletion(realm.intrinsics.empty)){return new Effects(c,new _generator.Generator(realm,"construct_empty_effects",realm.pathConditions),new Map,new Map,new Set)}class Realm{constructor(opts,statistics){_defineProperty(this,"contextStack",[]);_defineProperty(this,"MOBILE_JSC_VERSION","jsc-600-1-4-17");_defineProperty(this,"suppressDiagnostics",false);_defineProperty(this,"objectCount",0);_defineProperty(this,"symbolCount",
867501803871088);_defineProperty(this,"functionBodyUniqueTagSeed",1);_defineProperty(this,"nextGeneratorId",0);this.statistics=statistics;this.isReadOnly=false;this.useAbstractInterpretation=opts.serialize===true||Array.isArray(opts.check);this.ignoreLeakLogic=false;this.isInPureTryStatement=false;if(opts.mathRandomSeed!==undefined)this.mathRandomGenerator=(0,_seedrandom.default)(opts.mathRandomSeed);this.strictlyMonotonicDateNow=!!opts.strictlyMonotonicDateNow;this.abstractValueImpliesMax=opts.abstractValueImpliesMax!==
undefined?opts.abstractValueImpliesMax:0;this.abstractValueImpliesCounter=0;this.inSimplificationPath=false;this.timeout=opts.timeout;if(this.timeout!==undefined)this.timeoutCounter=this.timeoutCounterThreshold=1024;this.start=Date.now();this.compatibility=opts.compatibility!==undefined?opts.compatibility:"browser";this.remainingCalls=opts.maxStackDepth||112;this.invariantLevel=opts.invariantLevel||0;this.invariantMode=opts.invariantMode||"throw";this.emitConcreteModel=!!opts.emitConcreteModel;this.$TemplateMap=
[];this.pathConditions=(0,_singletons.createPathConditions)();if(this.useAbstractInterpretation){this.preludeGenerator=new _PreludeGenerator.PreludeGenerator(opts.debugNames,opts.uniqueSuffix);_index.ObjectValue.setupTrackedPropertyAccessors(_index.ObjectValue.trackedPropertyNames);_index.ObjectValue.setupTrackedPropertyAccessors(_index.NativeFunctionValue.trackedPropertyNames);_index.ObjectValue.setupTrackedPropertyAccessors(_index.ProxyValue.trackedPropertyNames)}this.collectedNestedOptimizedFunctionEffects=
new Map;this.tracers=[];this.intrinsics={};this.$GlobalObject={};this.evaluators=Object.create(null);this.$GlobalEnv=undefined;this.derivedIds=new Map;this.temporalEntryArgToEntries=new Map;this.temporalEntryCounter=0;this.instantRender={enabled:opts.instantRender||false};this.react={abstractHints:new WeakMap,activeReconciler:undefined,classComponentMetadata:new Map,currentOwner:undefined,defaultPropsHelper:undefined,emptyArray:undefined,emptyObject:undefined,enabled:opts.reactEnabled||false,failOnUnsupportedSideEffects:opts.reactFailOnUnsupportedSideEffects===
false?false:true,hoistableFunctions:new WeakMap,hoistableReactElements:new WeakMap,noopFunction:undefined,optimizeNestedFunctions:opts.reactOptimizeNestedFunctions||false,output:opts.reactOutput||"create-element",propsWithNoPartialKeyOrRef:new WeakSet,reactElements:new WeakMap,reactElementStringTypeReferences:new Map,reactProps:new WeakSet,symbols:new Map,usedReactElementKeys:new Set,verbose:opts.reactVerbose||false};this.reportSideEffectCallbacks=new Set;this.alreadyDescribedLocations=new WeakMap;
this.stripFlow=opts.stripFlow||false;this.fbLibraries={other:new Map,react:undefined,reactDom:undefined,reactDomServer:undefined,reactNative:undefined,reactRelay:undefined};this.errorHandler=opts.errorHandler;this.globalSymbolRegistry=[];this.activeLexicalEnvironments=new Set;this._abstractValuesDefined=new Set;this.debugNames=opts.debugNames;this._checkedObjectIds=new Map;this.optimizedFunctions=new Map;this.arrayNestedOptimizedFunctionsEnabled=opts.arrayNestedOptimizedFunctionsEnabled||opts.instantRender||
false}isCompatibleWith(compatibility){return compatibility===this.compatibility}getGlobalLetBinding(key){let globrec=this.$GlobalEnv.environmentRecord;(0,_invariant.default)(globrec instanceof _environment.GlobalEnvironmentRecord);let dclrec=globrec.$DeclarativeRecord;try{return dclrec.HasBinding(key)?dclrec.GetBindingValue(key,false):undefined}catch(e){if(e instanceof _errors.FatalError)return undefined;throw e;}}setReadOnly(readOnlyValue){let oldReadOnly=this.isReadOnly;this.isReadOnly=readOnlyValue;
this.$GlobalEnv.environmentRecord.isReadOnly=readOnlyValue;this.contextStack.forEach((ctx)=>{ctx.setReadOnly(readOnlyValue)});return oldReadOnly}testTimeout(){let timeout=this.timeout;if(timeout!==undefined&&!--this.timeoutCounter){this.timeoutCounter=this.timeoutCounterThreshold;let total=Date.now()-this.start;if(total>timeout){let error=new _errors.CompilerDiagnostic(`total time has exceeded the timeout time: ${timeout}`,this.currentLocation,"PP0036","FatalError");this.handleError(error);throw new _errors.FatalError("Timed out");
}}}hasRunningContext(){return this.contextStack.length!==0}getRunningContext(){let context=this.contextStack[this.contextStack.length-1];(0,_invariant.default)(context,"There's no running execution context");return context}clearBlockBindings(modifiedBindings,environmentRecord){if(modifiedBindings===undefined)return;for(let b of modifiedBindings.keys()){if(b.mightHaveBeenCaptured)continue;if(environmentRecord.bindings[b.name]&&environmentRecord.bindings[b.name]===b)modifiedBindings.delete(b)}}onDestroyScope(lexicalEnvironment){(0,
_invariant.default)(this.activeLexicalEnvironments.has(lexicalEnvironment));let modifiedBindings=this.modifiedBindings;if(modifiedBindings){let environmentRecord=lexicalEnvironment.environmentRecord;if(environmentRecord instanceof _environment.DeclarativeEnvironmentRecord)this.clearBlockBindings(modifiedBindings,environmentRecord)}this.activeLexicalEnvironments.delete(lexicalEnvironment);lexicalEnvironment.destroy()}startCall(){if(this.remainingCalls===0){let error=new _errors.CompilerDiagnostic("Maximum stack depth exceeded",
this.currentLocation,"PP0045","FatalError");this.handleError(error);throw new _errors.FatalError;}this.remainingCalls--}endCall(){this.remainingCalls++}pushContext(context){this.contextStack.push(context)}markVisibleLocalBindingsAsPotentiallyCaptured(){let context=this.getRunningContext();if(context.function===undefined)return;let lexEnv=context.lexicalEnvironment;while(lexEnv!=null){let envRec=lexEnv.environmentRecord;if(envRec instanceof _environment.DeclarativeEnvironmentRecord){let bindings=envRec.bindings;
for(let name in bindings){let binding=bindings[name];binding.mightHaveBeenCaptured=true}}lexEnv=lexEnv.parent}}clearFunctionBindings(modifiedBindings,funcVal){if(modifiedBindings===undefined)return;for(let b of modifiedBindings.keys()){if(b.mightHaveBeenCaptured)continue;if(b.environment instanceof _environment.FunctionEnvironmentRecord&&b.environment.$FunctionObject===funcVal)modifiedBindings.delete(b)}}popContext(context){let funcVal=context.function;if(funcVal)this.clearFunctionBindings(this.modifiedBindings,
funcVal);let c=this.contextStack.pop();(0,_invariant.default)(c===context)}wrapInGlobalEnv(callback){let context=new ExecutionContext;context.isStrict=this.isStrict;context.lexicalEnvironment=this.$GlobalEnv;context.variableEnvironment=this.$GlobalEnv;context.realm=this;this.pushContext(context);try{return callback()}finally{this.popContext(context)}}assignToGlobal(name,value){this.wrapInGlobalEnv(()=>this.$GlobalEnv.assignToGlobal(name,value))}deleteGlobalBinding(name){this.$GlobalEnv.environmentRecord.DeleteBinding(name)}neverCheckProperty(object,
P){return P.startsWith("__")||object===this.$GlobalObject&&P==="global"||object.intrinsicName!==undefined&&object.intrinsicName.startsWith("__")}_getCheckedBindings(){let globalObject=this.$GlobalObject;(0,_invariant.default)(globalObject instanceof _index.ObjectValue);let binding=globalObject.properties.get("__checkedBindings");(0,_invariant.default)(binding!==undefined);let checkedBindingsObject=binding.descriptor&&binding.descriptor.throwIfNotConcrete(this).value;(0,_invariant.default)(checkedBindingsObject instanceof
_index.ObjectValue);return checkedBindingsObject}markPropertyAsChecked(object,P){(0,_invariant.default)(!this.neverCheckProperty(object,P));let objectId=this._checkedObjectIds.get(object);if(objectId===undefined)this._checkedObjectIds.set(object,objectId=this._checkedObjectIds.size);let id=`__propertyHasBeenChecked__${objectId}:${P}`;let checkedBindings=this._getCheckedBindings();checkedBindings.$Set(id,this.intrinsics.true,checkedBindings)}hasBindingBeenChecked(object,P){if(this.neverCheckProperty(object,
P))return true;let objectId=this._checkedObjectIds.get(object);if(objectId===undefined)return false;let id=`__propertyHasBeenChecked__${objectId}:${P}`;let binding=this._getCheckedBindings().properties.get(id);if(binding===undefined)return false;let value=binding.descriptor&&binding.descriptor.throwIfNotConcrete(this).value;return value instanceof _index.Value&&!value.mightNotBeTrue()}evaluatePure(f,bubbleSideEffectReports,reportSideEffectFunc){let saved_createdObjectsTrackedForLeaks=this.createdObjectsTrackedForLeaks;
let saved_reportSideEffectCallbacks;this.createdObjectsTrackedForLeaks=new Set;if(reportSideEffectFunc!==null){if(!bubbleSideEffectReports){saved_reportSideEffectCallbacks=this.reportSideEffectCallbacks;this.reportSideEffectCallbacks=new Set}this.reportSideEffectCallbacks.add(reportSideEffectFunc)}try{return f()}finally{if(saved_createdObjectsTrackedForLeaks===undefined)this.createdObjectsTrackedForLeaks=undefined;else{if(this.createdObjectsTrackedForLeaks!==undefined)for(let obj of this.createdObjectsTrackedForLeaks)saved_createdObjectsTrackedForLeaks.add(obj);
this.createdObjectsTrackedForLeaks=saved_createdObjectsTrackedForLeaks}if(reportSideEffectFunc!==null){if(!bubbleSideEffectReports&&saved_reportSideEffectCallbacks!==undefined)this.reportSideEffectCallbacks=saved_reportSideEffectCallbacks;this.reportSideEffectCallbacks.delete(reportSideEffectFunc)}}}isInPureScope(){return!!this.createdObjectsTrackedForLeaks}evaluateWithoutLeakLogic(f){(0,_invariant.default)(!this.ignoreLeakLogic,"Nesting evaluateWithoutLeakLogic() calls is not supported.");this.ignoreLeakLogic=
true;try{return f()}finally{this.ignoreLeakLogic=false}}evaluateWithPossibleThrowCompletion(f,thrownTypes,thrownValues){(0,_invariant.default)(this.isInPureScope(),"only abstract abrupt completion in pure functions");let value=f();if(this.isInPureTryStatement){let diag=new _errors.CompilerDiagnostic("Possible throw inside try/catch is not yet supported",this.currentLocation,"PP0021","RecoverableError");if(this.handleError(diag)!=="Recover")throw new _errors.FatalError;}return value}evaluateNodeForEffects(ast,
strictCode,env,state,generatorName="evaluateNodeForEffects"){return this.evaluateForEffects(()=>env.evaluateCompletionDeref(ast,strictCode),state,generatorName)}evaluateForEffectsInGlobalEnv(func,state,generatorName="evaluateForEffectsInGlobalEnv"){return this.wrapInGlobalEnv(()=>this.evaluateForEffects(func,state,generatorName))}withEffectsAppliedInGlobalEnv(func,effects){let result;this.evaluateForEffectsInGlobalEnv(()=>{try{this.applyEffects(effects,"",false);result=func(effects);return this.intrinsics.undefined}finally{this.restoreBindings(effects.modifiedBindings);
this.restoreProperties(effects.modifiedProperties);(0,_invariant.default)(!effects.canBeApplied);effects.canBeApplied=true}});(0,_invariant.default)(result!==undefined,"If we get here, func must have returned undefined.");return result}withNewOptimizedFunction(func,optimizedFunction){let result;let previousOptimizedFunction=this.currentOptimizedFunction;this.currentOptimizedFunction=optimizedFunction;try{result=func()}finally{this.currentOptimizedFunction=previousOptimizedFunction}return result}evaluateNodeForEffectsInGlobalEnv(node,
state,generatorName){return this.wrapInGlobalEnv(()=>this.evaluateNodeForEffects(node,false,this.$GlobalEnv,state,generatorName))}evaluateWithoutEffects(f){let savedGenerator=this.generator;let savedBindings=this.modifiedBindings;let savedProperties=this.modifiedProperties;let savedCreatedObjects=this.createdObjects;let saved_completion=this.savedCompletion;try{this.generator=new _generator.Generator(this,"evaluateIgnoringEffects",this.pathConditions);this.modifiedBindings=undefined;this.modifiedProperties=
undefined;this.createdObjects=undefined;this.savedCompletion=undefined;return f()}finally{this.generator=savedGenerator;this.modifiedBindings=savedBindings;this.modifiedProperties=savedProperties;this.createdObjects=savedCreatedObjects;this.savedCompletion=saved_completion}}evaluateForEffects(f,state,generatorName){let [savedBindings,savedProperties]=this.getAndResetModifiedMaps();let saved_generator=this.generator;let saved_createdObjects=this.createdObjects;let saved_completion=this.savedCompletion;
let saved_abstractValuesDefined=this._abstractValuesDefined;this.generator=new _generator.Generator(this,generatorName,this.pathConditions);this.createdObjects=new Set;this.savedCompletion=undefined;this._abstractValuesDefined=new Set(saved_abstractValuesDefined);let result;try{for(let t1 of this.tracers)t1.beginEvaluateForEffects(state);let c;try{try{c=f();if(c instanceof _environment.Reference)c=_singletons.Environment.GetValue(this,c);else if(c instanceof _completions.SimpleNormalCompletion)c=
c.value}catch(e){if(e instanceof _completions.AbruptCompletion)c=e;else throw e;}c=_singletons.Functions.incorporateSavedCompletion(this,c);(0,_invariant.default)(c!==undefined);(0,_invariant.default)(this.generator!==undefined);(0,_invariant.default)(this.modifiedBindings!==undefined);(0,_invariant.default)(this.modifiedProperties!==undefined);(0,_invariant.default)(this.createdObjects!==undefined);let astGenerator=this.generator;let astBindings=this.modifiedBindings;let astProperties=this.modifiedProperties;
let astCreatedObjects=this.createdObjects;if(c instanceof _index.Value)c=new _completions.SimpleNormalCompletion(c);result=new Effects(c,astGenerator,astBindings,astProperties,astCreatedObjects);return result}finally{if(result!==undefined){this.restoreBindings(result.modifiedBindings);this.restoreProperties(result.modifiedProperties)}else{this.restoreBindings(this.modifiedBindings);this.restoreProperties(this.modifiedProperties);let completion=this.savedCompletion;while(completion!==undefined){const {savedEffects}=
completion;if(savedEffects!==undefined){this.restoreBindings(savedEffects.modifiedBindings);this.restoreProperties(savedEffects.modifiedProperties)}completion=completion.composedWith}}this.generator=saved_generator;this.modifiedBindings=savedBindings;this.modifiedProperties=savedProperties;this.createdObjects=saved_createdObjects;this.savedCompletion=saved_completion;this._abstractValuesDefined=saved_abstractValuesDefined}}finally{for(let t2 of this.tracers)t2.endEvaluateForEffects(state,result)}}evaluateWithUndo(f,
defaultValue=this.intrinsics.undefined){if(!this.useAbstractInterpretation)return f();let oldErrorHandler=this.errorHandler;this.errorHandler=(d)=>{if(d.severity==="Information"||d.severity==="Warning")return"Recover";return"Fail"};try{let effects=this.evaluateForEffects(()=>{try{return f()}catch(e){if(e instanceof _completions.Completion)return defaultValue;else if(e instanceof _errors.FatalError)return defaultValue;else throw e;}},undefined,"evaluateWithUndo");return effects.result instanceof _completions.SimpleNormalCompletion?
effects.result.value:defaultValue}finally{this.errorHandler=oldErrorHandler}}evaluateWithUndoForDiagnostic(f){if(!this.useAbstractInterpretation)return f();let savedHandler=this.errorHandler;let diagnostic;try{this.errorHandler=(d)=>{diagnostic=d;return"Fail"};let effects=this.evaluateForEffects(f,undefined,"evaluateWithUndoForDiagnostic");this.applyEffects(effects);let resultVal=effects.result;if(resultVal instanceof _completions.AbruptCompletion)throw resultVal;return resultVal.value}catch(e){if(diagnostic!==
undefined)return diagnostic;throw e;}finally{this.errorHandler=savedHandler}}evaluateForFixpointEffects(iteration){try{let test;let f=()=>{let result;[test,result]=iteration();if(!(test instanceof _index.AbstractValue))throw new _errors.FatalError("loop terminates before fixed point");(0,_invariant.default)(result instanceof _completions.Completion);return result};let effects1=this.evaluateForEffects(f,undefined,"evaluateForFixpointEffects/1");while(true){this.restoreBindings(effects1.modifiedBindings);
this.restoreProperties(effects1.modifiedProperties);let effects2=this.evaluateForEffects(f,undefined,"evaluateForFixpointEffects/2");this.restoreBindings(effects1.modifiedBindings);this.restoreProperties(effects1.modifiedProperties);if(_singletons.Widen.containsEffects(effects1,effects2)){const e2=effects2;this._applyPropertiesToNewlyCreatedObjects(e2.modifiedProperties,e2.createdObjects);this._emitPropertyAssignments(e2.generator,e2.modifiedProperties,e2.createdObjects);this._emitLocalAssignments(e2.generator,
e2.modifiedBindings,e2.createdObjects);(0,_invariant.default)(test instanceof _index.AbstractValue);let cond=e2.generator.deriveAbstract(test.types,test.values,[test],(0,_generator.createOperationDescriptor)("SINGLE_ARG"),{skipInvariant:true});return[effects1,effects2,cond]}effects1=_singletons.Widen.widenEffects(this,effects1,effects2)}}catch(e){if(e instanceof _errors.FatalError)return undefined;throw e;}}evaluateWithAbstractConditional(condValue,consequentEffectsFunc,alternateEffectsFunc){let effects;
if(_singletons.Path.implies(condValue))effects=consequentEffectsFunc();else if(_singletons.Path.impliesNot(condValue))effects=alternateEffectsFunc();else{let effects1;try{effects1=_singletons.Path.withCondition(condValue,consequentEffectsFunc)}catch(e){if(!(e instanceof _errors.InfeasiblePathError))throw e;}let effects2;try{effects2=_singletons.Path.withInverseCondition(condValue,alternateEffectsFunc)}catch(e){if(!(e instanceof _errors.InfeasiblePathError))throw e;}if(effects1===undefined||effects2===
undefined){if(effects1===undefined&&effects2===undefined)throw new _errors.InfeasiblePathError;effects=effects1||effects2;(0,_invariant.default)(effects!==undefined)}else effects=_singletons.Join.joinEffects(condValue,effects1,effects2)}this.applyEffects(effects);return condValue.$Realm.returnOrThrowCompletion(effects.result)}_applyPropertiesToNewlyCreatedObjects(modifiedProperties,newlyCreatedObjects){if(modifiedProperties===undefined)return;modifiedProperties.forEach((desc,propertyBinding,m)=>{if(newlyCreatedObjects.has(propertyBinding.object))propertyBinding.descriptor=
desc})}_emitLocalAssignments(gen,bindings,newlyCreatedObjects){let tvalFor=new Map;bindings.forEach((binding,key,map)=>{let val=binding.value;if(val instanceof _index.AbstractValue){(0,_invariant.default)(val.operationDescriptor!==undefined);let tval=gen.deriveAbstract(val.types,val.values,[val],(0,_generator.createOperationDescriptor)("SINGLE_ARG"));tvalFor.set(key,tval)}});bindings.forEach((binding,key,map)=>{let val=binding.value;if(val instanceof _index.AbstractValue){let phiNode=key.phiNode;
let tval=tvalFor.get(key);(0,_invariant.default)(tval!==undefined);gen.emitStatement([tval],(0,_generator.createOperationDescriptor)("LOCAL_ASSIGNMENT",{value:phiNode}))}if(val instanceof _index.ObjectValue&&newlyCreatedObjects.has(val)){let phiNode=key.phiNode;gen.emitStatement([val],(0,_generator.createOperationDescriptor)("LOCAL_ASSIGNMENT",{value:phiNode}))}})}_emitPropertyAssignments(gen,pbindings,newlyCreatedObjects){let tvalFor=new Map;pbindings.forEach((val,key,map)=>{if(newlyCreatedObjects.has(key.object)||
key.object.refuseSerialization)return;let value=val&&val.throwIfNotConcrete(this).value;if(value instanceof _index.AbstractValue){(0,_invariant.default)(value.operationDescriptor!==undefined);let tval=gen.deriveAbstract(value.types,value.values,[key.object,value],(0,_generator.createOperationDescriptor)("LOGICAL_PROPERTY_ASSIGNMENT",{propertyBinding:key,value}),{skipInvariant:true});tvalFor.set(key,tval)}});pbindings.forEach((val,key,map)=>{if(newlyCreatedObjects.has(key.object)||key.object.refuseSerialization)return;
let path=key.pathNode;let tval=tvalFor.get(key);(0,_invariant.default)(val!==undefined);let value=val.throwIfNotConcrete(this).value;(0,_invariant.default)(value instanceof _index.Value);let keyKey=key.key;if(typeof keyKey==="string")if(path!==undefined)gen.emitStatement([key.object,tval||value,this.intrinsics.empty,new _index.StringValue(this,keyKey)],(0,_generator.createOperationDescriptor)("CONDITIONAL_PROPERTY_ASSIGNMENT",{path,value}));else;else{(0,_invariant.default)(keyKey instanceof _index.Value);
gen.emitStatement([key.object,keyKey,tval||value,this.intrinsics.empty],(0,_generator.createOperationDescriptor)("PROPERTY_ASSIGNMENT",{path}))}})}returnOrThrowCompletion(completion){if(completion instanceof _index.Value)completion=new _completions.SimpleNormalCompletion(completion);if(completion instanceof _completions.AbruptCompletion){let c=_singletons.Functions.incorporateSavedCompletion(this,completion);(0,_invariant.default)(c instanceof _completions.Completion);completion=c}let cc=this.composeWithSavedCompletion(completion);
if(cc instanceof _completions.AbruptCompletion)throw cc;return cc.value}composeWithSavedCompletion(completion){if(this.savedCompletion===undefined){if(completion instanceof _completions.JoinedNormalAndAbruptCompletions){this.savedCompletion=completion;this.pushPathConditionsLeadingToNormalCompletions(completion);this.captureEffects(completion)}return completion}else{let cc=_singletons.Join.composeCompletions(this.savedCompletion,completion);if(cc instanceof _completions.JoinedNormalAndAbruptCompletions){this.savedCompletion=
cc;this.pushPathConditionsLeadingToNormalCompletions(completion);if(cc.savedEffects===undefined)this.captureEffects(cc)}else this.savedCompletion=undefined;return cc}}pushPathConditionsLeadingToNormalCompletions(completion){let realm=this;let bottomValue=realm.intrinsics.__bottomValue;if(completion instanceof _completions.JoinedNormalAndAbruptCompletions&&completion.composedWith!==undefined)this.pushPathConditionsLeadingToNormalCompletions(completion.composedWith);if(completion instanceof _completions.JoinedAbruptCompletions||
completion instanceof _completions.JoinedNormalAndAbruptCompletions){let jc=completion.joinCondition;if(completion.consequent.value===bottomValue||allPathsAreOfType(_completions.AbruptCompletion,completion.consequent)){if(completion.alternate.value===bottomValue||allPathsAreOfType(_completions.AbruptCompletion,completion.alternate))return;_singletons.Path.pushInverseAndRefine(completion.joinCondition);this.pushPathConditionsLeadingToNormalCompletions(completion.alternate)}else if(completion.alternate.value===
bottomValue||allPathsAreOfType(_completions.AbruptCompletion,completion.alternate)){if(completion.consequent.value===bottomValue)return;_singletons.Path.pushAndRefine(completion.joinCondition);this.pushPathConditionsLeadingToNormalCompletions(completion.consequent)}else if(allPathsAreOfType(_completions.NormalCompletion,completion.consequent)){if(!allPathsAreOfType(_completions.NormalCompletion,completion.alternate)){let alternatePC=getNormalPathConditions(completion.alternate);let disjunct=_index.AbstractValue.createFromLogicalOp(realm,
"||",jc,alternatePC,undefined,true,true);_singletons.Path.pushAndRefine(disjunct)}}else if(allPathsAreOfType(_completions.NormalCompletion,completion.alternate)){let consequentPC=getNormalPathConditions(completion.consequent);let inverse=_index.AbstractValue.createFromUnaryOp(realm,"!",jc,true,undefined,true,true);let disjunct=_index.AbstractValue.createFromLogicalOp(realm,"||",inverse,consequentPC,undefined,true,true);_singletons.Path.pushAndRefine(disjunct)}else{let cpc=_index.AbstractValue.createFromLogicalOp(realm,
"&&",jc,getNormalPathConditions(completion.consequent),undefined,true,true);let ijc=_index.AbstractValue.createFromUnaryOp(realm,"!",jc,true,undefined,true,true);let apc=_index.AbstractValue.createFromLogicalOp(realm,"&&",ijc,getNormalPathConditions(completion.alternate),undefined,true,true);let disjunct=_index.AbstractValue.createFromLogicalOp(realm,"||",cpc,apc,undefined,true,true);_singletons.Path.pushAndRefine(disjunct)}}return;function allPathsAreOfType(CompletionType,c){if(c instanceof _completions.JoinedNormalAndAbruptCompletions){if(c.composedWith!==
undefined&&!allPathsAreOfType(CompletionType,c.composedWith))return false;return allPathsAreOfType(CompletionType,c.consequent)&&allPathsAreOfType(CompletionType,c.alternate)}else if(c instanceof _completions.JoinedAbruptCompletions)return allPathsAreOfType(CompletionType,c.consequent)&&allPathsAreOfType(CompletionType,c.alternate);else return c instanceof CompletionType}function getNormalPathConditions(c){let pathCondToComposeWith;if(c instanceof _completions.JoinedNormalAndAbruptCompletions&&c.composedWith!==
undefined)pathCondToComposeWith=getNormalPathConditions(c.composedWith);if(!(c instanceof _completions.JoinedAbruptCompletions||c instanceof _completions.JoinedNormalAndAbruptCompletions))return c instanceof _completions.AbruptCompletion?realm.intrinsics.false:realm.intrinsics.true;let pathCond;if(c.consequent.value===bottomValue||allPathsAreOfType(_completions.AbruptCompletion,c.consequent)){if(!allPathsAreOfType(_completions.AbruptCompletion,c.alternate)){let inverse=_index.AbstractValue.createFromUnaryOp(realm,
"!",c.joinCondition,true,undefined,true,true);if(allPathsAreOfType(_completions.NormalCompletion,c.alternate))pathCond=inverse;else pathCond=_index.AbstractValue.createFromLogicalOp(realm,"&&",inverse,getNormalPathConditions(c.alternate),undefined,true,true)}}else if(c.alternate.value===bottomValue||allPathsAreOfType(_completions.AbruptCompletion,c.alternate)){if(!allPathsAreOfType(_completions.AbruptCompletion,c.consequent))if(allPathsAreOfType(_completions.NormalCompletion,c.consequent))pathCond=
c.joinCondition;else{let jc=c.joinCondition;pathCond=_index.AbstractValue.createFromLogicalOp(realm,"&&",jc,getNormalPathConditions(c.consequent),undefined,true,true)}}else{let jc=c.joinCondition;let consequentPC=_index.AbstractValue.createFromLogicalOp(realm,"&&",jc,getNormalPathConditions(c.consequent),undefined,true,true);let ijc=_index.AbstractValue.createFromUnaryOp(realm,"!",jc,true,undefined,true,true);let alternatePC=_index.AbstractValue.createFromLogicalOp(realm,"&&",ijc,getNormalPathConditions(c.alternate),
undefined,true,true);pathCond=_index.AbstractValue.createFromLogicalOp(realm,"||",consequentPC,alternatePC,undefined,true,true)}if(pathCondToComposeWith===undefined&&pathCond===undefined)return realm.intrinsics.false;if(pathCondToComposeWith===undefined){(0,_invariant.default)(pathCond!==undefined);return pathCond}if(pathCond===undefined)return pathCondToComposeWith;return _index.AbstractValue.createFromLogicalOp(realm,"&&",pathCondToComposeWith,pathCond,undefined,true,true)}}captureEffects(completion){(0,
_invariant.default)(completion.savedEffects===undefined);completion.savedEffects=new Effects(new _completions.SimpleNormalCompletion(this.intrinsics.undefined),this.generator,this.modifiedBindings,this.modifiedProperties,this.createdObjects);this.generator=new _generator.Generator(this,"captured",this.pathConditions);this.modifiedBindings=new Map;this.modifiedProperties=new Map;this.createdObjects=new Set}getCapturedEffects(v=this.intrinsics.undefined){(0,_invariant.default)(this.generator!==undefined);
(0,_invariant.default)(this.modifiedBindings!==undefined);(0,_invariant.default)(this.modifiedProperties!==undefined);(0,_invariant.default)(this.createdObjects!==undefined);return new Effects(v instanceof _completions.Completion?v:new _completions.SimpleNormalCompletion(v),this.generator,this.modifiedBindings,this.modifiedProperties,this.createdObjects)}stopEffectCaptureAndUndoEffects(completion){this.restoreBindings(this.modifiedBindings);this.restoreProperties(this.modifiedProperties);if(completion.savedEffects!==
undefined){const savedEffects=completion.savedEffects;completion.savedEffects=undefined;this.generator=savedEffects.generator;this.modifiedBindings=savedEffects.modifiedBindings;this.modifiedProperties=savedEffects.modifiedProperties;this.createdObjects=savedEffects.createdObjects}else(0,_invariant.default)(false)}applyEffects(effects,leadingComment="",appendGenerator=true){(0,_invariant.default)(effects.canBeApplied,"Effects have been applied and not properly reverted. It is not safe to apply them a second time.");
effects.canBeApplied=false;let {generator,modifiedBindings,modifiedProperties,createdObjects}=effects;if(appendGenerator)this.appendGenerator(generator,leadingComment);this.restoreBindings(modifiedBindings);this.restoreProperties(modifiedProperties);let realmModifiedBindings=this.modifiedBindings;if(realmModifiedBindings!==undefined)modifiedBindings.forEach((val,key,m)=>{(0,_invariant.default)(realmModifiedBindings!==undefined);if(!realmModifiedBindings.has(key))realmModifiedBindings.set(key,val)});
let realmModifiedProperties=this.modifiedProperties;if(realmModifiedProperties!==undefined)modifiedProperties.forEach((desc,propertyBinding,m)=>{(0,_invariant.default)(realmModifiedProperties!==undefined);if(!realmModifiedProperties.has(propertyBinding))realmModifiedProperties.set(propertyBinding,desc)});if(createdObjects.size>0){let realmCreatedObjects=this.createdObjects;if(realmCreatedObjects===undefined)this.createdObjects=new Set(createdObjects);else createdObjects.forEach((ob,a)=>{(0,_invariant.default)(realmCreatedObjects!==
undefined);realmCreatedObjects.add(ob)})}}outputToConsole(method,args){if(this.isReadOnly)throw new _errors.FatalError("Trying to create console output in read-only realm");if(this.useAbstractInterpretation){(0,_invariant.default)(this.generator!==undefined);this.generator.emitConsoleLog(method,args)}else console[method](getString(this,args));function getString(realm,values){let res="";while(values.length){let next=values.shift();let nextString=_singletons.To.ToString(realm,next);res+=nextString}return res}
}recordModifiedBinding(binding,value){const isDefinedInsidePureFn=(root)=>{let context=this.getRunningContext();let {lexicalEnvironment:env}=context;while(env!==null){if(env.environmentRecord===root)return!env.destroyed;env=env.parent}return false};if(this.modifiedBindings!==undefined&&!this.modifiedBindings.has(binding)&&value!==undefined&&this.isInPureScope()){let env=binding.environment;if(!(env instanceof _environment.DeclarativeEnvironmentRecord)||env instanceof _environment.DeclarativeEnvironmentRecord&&
!isDefinedInsidePureFn(env))for(let callback of this.reportSideEffectCallbacks)callback("MODIFIED_BINDING",binding,value.expressionLocation)}if(binding.environment.isReadOnly)throw new _errors.FatalError("Trying to modify a binding in read-only realm");if(this.modifiedBindings!==undefined&&!this.modifiedBindings.has(binding))this.modifiedBindings.set(binding,{hasLeaked:binding.hasLeaked,value:binding.value});return binding}callReportObjectGetOwnProperties(ob){if(this.reportObjectGetOwnProperties!==
undefined)this.reportObjectGetOwnProperties(ob)}callReportPropertyAccess(binding,isWrite){if(this.reportPropertyAccess!==undefined)this.reportPropertyAccess(binding,isWrite)}recordModifiedProperty(binding){if(binding===undefined)return;if(this.isInPureScope()){let object=binding.object;(0,_invariant.default)(object instanceof _index.ObjectValue);const createdObjectsTrackedForLeaks=this.createdObjectsTrackedForLeaks;if(createdObjectsTrackedForLeaks!==undefined&&!createdObjectsTrackedForLeaks.has(object)&&
(typeof binding.key!=="string"||!binding.key.includes("__propertyHasBeenChecked__"))&&binding.key!=="_temporalAlias")if(binding.object===this.$GlobalObject)for(let callback of this.reportSideEffectCallbacks)callback("MODIFIED_GLOBAL",binding,object.expressionLocation);else for(let callback of this.reportSideEffectCallbacks)callback("MODIFIED_PROPERTY",binding,object.expressionLocation)}if(this.isReadOnly&&(this.getRunningContext().isReadOnly||!this.isNewObject(binding.object)))throw new _errors.FatalError("Trying to modify a property in read-only realm");
this.callReportPropertyAccess(binding,true);if(this.modifiedProperties!==undefined&&!this.modifiedProperties.has(binding)){let clone;let desc=binding.descriptor;if(desc===undefined)clone=undefined;else if(desc instanceof _descriptors.AbstractJoinedDescriptor)clone=new _descriptors.AbstractJoinedDescriptor(desc.joinCondition,desc.descriptor1,desc.descriptor2);else if(desc instanceof _descriptors.PropertyDescriptor)clone=(0,_descriptors.cloneDescriptor)(desc);else if(desc instanceof _descriptors.InternalSlotDescriptor)clone=
new _descriptors.InternalSlotDescriptor(desc.value);else(0,_invariant.default)(false,"unknown descriptor");this.modifiedProperties.set(binding,clone)}}isNewObject(object){if(object instanceof _index.AbstractObjectValue)return false;return this.createdObjects===undefined||this.createdObjects.has(object)}recordNewObject(object){if(this.createdObjects!==undefined)this.createdObjects.add(object);if(this.createdObjectsTrackedForLeaks!==undefined)this.createdObjectsTrackedForLeaks.add(object)}getAndResetModifiedMaps(){let result=
[this.modifiedBindings,this.modifiedProperties];this.modifiedBindings=new Map;this.modifiedProperties=new Map;return result}restoreBindings(modifiedBindings){if(modifiedBindings===undefined)return;modifiedBindings.forEach(({hasLeaked,value},binding,m)=>{let l=binding.hasLeaked;let v=binding.value;binding.hasLeaked=hasLeaked;binding.value=value;m.set(binding,{hasLeaked:l,value:v})})}restoreProperties(modifiedProperties){if(modifiedProperties===undefined)return;modifiedProperties.forEach((desc,propertyBinding,
m)=>{let d=propertyBinding.descriptor;propertyBinding.descriptor=desc;m.set(propertyBinding,d)})}setModifiedMaps(modifiedBindings,modifiedProperties){this.modifiedBindings=modifiedBindings;this.modifiedProperties=modifiedProperties}rebuildObjectProperty(object,key,propertyValue,path){if(!(propertyValue instanceof _index.AbstractValue))return;if(propertyValue.kind==="abstractConcreteUnion"){(0,_invariant.default)(propertyValue.args.length>=2);let absVal=propertyValue.args[0];(0,_invariant.default)(absVal instanceof
_index.AbstractValue);propertyValue=absVal}if(!propertyValue.isIntrinsic()){propertyValue.intrinsicName=`${path}.${key}`;propertyValue.kind="rebuiltProperty";propertyValue.args=[object,new _index.StringValue(this,key)];propertyValue.operationDescriptor=(0,_generator.createOperationDescriptor)("REBUILT_OBJECT");let intrinsicName=propertyValue.intrinsicName;(0,_invariant.default)(intrinsicName!==undefined);this.rebuildNestedProperties(propertyValue,intrinsicName)}}rebuildNestedProperties(abstractValue,
path){if(!(abstractValue instanceof _index.AbstractObjectValue))return;if(abstractValue.values.isTop())return;let template=abstractValue.getTemplate();(0,_invariant.default)(!template.intrinsicName||template.intrinsicName===path);template.intrinsicName=path;template.intrinsicNameGenerated=true;for(let [key,binding]of template.properties){if(binding===undefined||binding.descriptor===undefined)continue;(0,_invariant.default)(binding.descriptor!==undefined);let desc=binding.descriptor.throwIfNotConcrete(this);
let value=desc.value;_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);if(value===undefined){_index.AbstractValue.reportIntrospectionError(abstractValue,key);throw new _errors.FatalError;}(0,_invariant.default)(value instanceof _index.Value);this.rebuildObjectProperty(abstractValue,key,value,path)}}createExecutionContext(){let context=new ExecutionContext;let loc=this.nextContextLocation;if(loc){context.setLocation(loc);this.nextContextLocation=null}return context}setNextExecutionContextLocation(loc){let previousValue=
this.nextContextLocation;this.nextContextLocation=loc;return previousValue}instantRenderBailout(message,loc){if(loc===undefined)loc=this.currentLocation;let error=new _errors.CompilerDiagnostic(message,loc,"PP0039","RecoverableError");if(this.handleError(error)==="Fail")throw new _errors.FatalError;}reportIntrospectionError(message){if(message===undefined)message="";if(typeof message==="string")message=new _index.StringValue(this,message);(0,_invariant.default)(message instanceof _index.StringValue);
this.nextContextLocation=this.currentLocation;let error=new _errors.CompilerDiagnostic(message.value,this.currentLocation,"PP0001","FatalError");this.handleError(error)}createErrorThrowCompletion(type,message){(0,_invariant.default)(type!==this.intrinsics.__IntrospectionError);if(message===undefined)message="";if(typeof message==="string")message=new _index.StringValue(this,message);(0,_invariant.default)(message instanceof _index.StringValue);this.nextContextLocation=this.currentLocation;return new _completions.ThrowCompletion((0,
_index3.Construct)(this,type,[message]),this.currentLocation)}appendGenerator(generator,leadingComment=""){let realmGenerator=this.generator;if(realmGenerator===undefined){(0,_invariant.default)(generator.empty());return}realmGenerator.appendGenerator(generator,leadingComment)}evaluateForEffectsWithPriorEffects(priorEffects,f,generatorName){return this.evaluateForEffects(()=>{for(let priorEffect of priorEffects)this.applyEffects(priorEffect);try{return f()}finally{for(let priorEffect of priorEffects){(0,
_invariant.default)(!priorEffect.canBeApplied);priorEffect.canBeApplied=true}}},undefined,generatorName)}evaluateWithIncreasedMaxStackDepth(increaseRemainingCallsBy,f){(0,_invariant.default)(increaseRemainingCallsBy>0);this.remainingCalls+=increaseRemainingCallsBy;try{return f()}finally{this.remainingCalls-=increaseRemainingCallsBy}}handleError(diagnostic){if(!diagnostic.callStack&&this.contextStack.length>0){let error=this.evaluateWithIncreasedMaxStackDepth(1,()=>this.evaluateWithoutEffects(()=>
(0,_index3.Construct)(this,this.intrinsics.Error).throwIfNotConcreteObject()));let stack=error._SafeGetDataPropertyValue("stack");if(stack instanceof _index.StringValue)diagnostic.callStack=stack.value}if(this.debuggerInstance&&this.debuggerInstance.shouldStopForSeverity(diagnostic.severity))this.debuggerInstance.handlePrepackError(diagnostic);if(this.debugReproManager!==undefined){let manager=this.debugReproManager;let sourcePaths={sourceFiles:manager.getSourceFilePaths(),sourceMaps:manager.getSourceMapPaths()};
diagnostic.sourceFilePaths=sourcePaths}let errorHandler=this.errorHandler;if(!errorHandler){let msg=`${diagnostic.errorCode}: ${diagnostic.message}`;if(diagnostic.location){let loc_start=diagnostic.location.start;let loc_end=diagnostic.location.end;msg+=` at ${loc_start.line}:${loc_start.column} to ${loc_end.line}:${loc_end.column}`}try{switch(diagnostic.severity){case "Information":console.log(`Info: ${msg}`);return"Recover";case "Warning":console.warn(`Warn: ${msg}`);return"Recover";case "RecoverableError":console.error(`Error: ${msg}`);
return"Fail";case "FatalError":console.error(`Fatal Error: ${msg}`);return"Fail";default:(0,_invariant.default)(false,"Unexpected error type")}}finally{console.log(diagnostic.callStack)}}return errorHandler(diagnostic,this.suppressDiagnostics)}saveNameString(nameString){this._abstractValuesDefined.add(nameString)}isNameStringUnique(nameString){return!this._abstractValuesDefined.has(nameString)}getTemporalOperationEntryFromDerivedValue(value){let name=value.intrinsicName;if(!name)return undefined;
let temporalOperationEntry=value.$Realm.derivedIds.get(name);return temporalOperationEntry}getTemporalGeneratorEntriesReferencingArg(arg){return this.temporalEntryArgToEntries.get(arg)}saveTemporalGeneratorEntryArgs(temporalOperationEntry){let args=temporalOperationEntry.args;for(let arg of args){let temporalEntries=this.temporalEntryArgToEntries.get(arg);if(temporalEntries===undefined){temporalEntries=new Set;this.temporalEntryArgToEntries.set(arg,temporalEntries)}temporalEntries.add(temporalOperationEntry)}}}
exports.Realm=Realm},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.PerformanceTracker=exports.RealmStatistics=void 0;var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class RealmStatistics{constructor(getTime,getMemory){this.simplifications=0;this.simplificationAttempts=0;this.evaluatedNodes=0;this.parsing=new PerformanceTracker(getTime,getMemory);
this.fixupSourceLocations=new PerformanceTracker(getTime,getMemory);this.fixupFilenames=new PerformanceTracker(getTime,getMemory);this.evaluation=new PerformanceTracker(getTime,getMemory)}getRealmStatistics(){return{simplifications:this.simplifications,simplificationAttempts:this.simplificationAttempts,evaluatedNodes:this.evaluatedNodes}}projectPerformanceTrackers(suffix,projection){let res={};for(let key of Object.keys(this)){let value=this[key];if(value instanceof PerformanceTracker)res[key+suffix]=
projection(value)}return res}log(){console.log(`=== realm statistics`);console.log(`${this.evaluatedNodes} AST nodes evaluated.`);console.log(`${this.simplifications} abstract values simplified after ${this.simplificationAttempts} attempts.`)}logPerformanceTrackers(format){console.log(`${format(this.parsing)} parsing, ${format(this.fixupSourceLocations)} fixing source locations, ${format(this.fixupFilenames)} fixing filenames, ${format(this.evaluation)} evaluating global code`)}}exports.RealmStatistics=
RealmStatistics;class PerformanceTracker{constructor(getTime,getMemory){this.time=this.memory=0;this._getTime=getTime;this._getMemory=getMemory;this._running=false}start(){(0,_invariant.default)(this._running===false);if(this._getTime!==undefined)this.time=this._getTime()-this.time;if(this._getMemory!==undefined)this.memory=this._getMemory()-this.memory;this._running=true}stop(){(0,_invariant.default)(this._running===true);if(this._getTime!==undefined)this.time=this._getTime()-this.time;if(this._getMemory!==
undefined)this.memory=this._getMemory()-this.memory;this._running=false}measure(action){this.start();try{return action()}finally{this.stop()}}}exports.PerformanceTracker=PerformanceTracker},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=invariant;var _errors=__webpack_require__(3);function invariant(condition,format=""){if(condition)return;const message=`${format}
This is likely a bug in Prepack, not your code. Feel free to open an issue on GitHub.`;let error=new _errors.InvariantError(message);error.name="Invariant Violation";throw error;}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"Value",{enumerable:true,get:function(){return _Value.default}});Object.defineProperty(exports,"ConcreteValue",{enumerable:true,get:function(){return _ConcreteValue.default}});Object.defineProperty(exports,
"PrimitiveValue",{enumerable:true,get:function(){return _PrimitiveValue.default}});Object.defineProperty(exports,"ObjectValue",{enumerable:true,get:function(){return _ObjectValue.default}});Object.defineProperty(exports,"FunctionValue",{enumerable:true,get:function(){return _FunctionValue.default}});Object.defineProperty(exports,"ECMAScriptFunctionValue",{enumerable:true,get:function(){return _ECMAScriptFunctionValue.default}});Object.defineProperty(exports,"ECMAScriptSourceFunctionValue",{enumerable:true,
get:function(){return _ECMAScriptSourceFunctionValue.default}});Object.defineProperty(exports,"BoundFunctionValue",{enumerable:true,get:function(){return _BoundFunctionValue.default}});Object.defineProperty(exports,"NativeFunctionValue",{enumerable:true,get:function(){return _NativeFunctionValue.default}});Object.defineProperty(exports,"NativeFunctionCallback",{enumerable:true,get:function(){return _NativeFunctionValue.NativeFunctionCallback}});Object.defineProperty(exports,"ArrayValue",{enumerable:true,
get:function(){return _ArrayValue.default}});Object.defineProperty(exports,"UndefinedValue",{enumerable:true,get:function(){return _UndefinedValue.default}});Object.defineProperty(exports,"EmptyValue",{enumerable:true,get:function(){return _EmptyValue.default}});Object.defineProperty(exports,"NullValue",{enumerable:true,get:function(){return _NullValue.default}});Object.defineProperty(exports,"NumberValue",{enumerable:true,get:function(){return _NumberValue.NumberValue}});Object.defineProperty(exports,
"IntegralValue",{enumerable:true,get:function(){return _NumberValue.IntegralValue}});Object.defineProperty(exports,"ProxyValue",{enumerable:true,get:function(){return _ProxyValue.default}});Object.defineProperty(exports,"StringExotic",{enumerable:true,get:function(){return _StringExotic.default}});Object.defineProperty(exports,"ArgumentsExotic",{enumerable:true,get:function(){return _ArgumentsExotic.default}});Object.defineProperty(exports,"IntegerIndexedExotic",{enumerable:true,get:function(){return _IntegerIndexedExotic.default}});
Object.defineProperty(exports,"BooleanValue",{enumerable:true,get:function(){return _BooleanValue.default}});Object.defineProperty(exports,"StringValue",{enumerable:true,get:function(){return _StringValue.default}});Object.defineProperty(exports,"SymbolValue",{enumerable:true,get:function(){return _SymbolValue.default}});Object.defineProperty(exports,"AbstractValue",{enumerable:true,get:function(){return _AbstractValue.default}});Object.defineProperty(exports,"AbstractObjectValue",{enumerable:true,
get:function(){return _AbstractObjectValue.default}});var _Value=_interopRequireDefault(__webpack_require__(11));var _ConcreteValue=_interopRequireDefault(__webpack_require__(12));var _PrimitiveValue=_interopRequireDefault(__webpack_require__(13));var _ObjectValue=_interopRequireDefault(__webpack_require__(14));var _FunctionValue=_interopRequireDefault(__webpack_require__(376));var _ECMAScriptFunctionValue=_interopRequireDefault(__webpack_require__(377));var _ECMAScriptSourceFunctionValue=_interopRequireDefault(__webpack_require__(378));
var _BoundFunctionValue=_interopRequireDefault(__webpack_require__(379));var _NativeFunctionValue=_interopRequireWildcard(__webpack_require__(380));var _ArrayValue=_interopRequireDefault(__webpack_require__(381));var _UndefinedValue=_interopRequireDefault(__webpack_require__(382));var _EmptyValue=_interopRequireDefault(__webpack_require__(383));var _NullValue=_interopRequireDefault(__webpack_require__(384));var _NumberValue=__webpack_require__(385);var _ProxyValue=_interopRequireDefault(__webpack_require__(386));
var _StringExotic=_interopRequireDefault(__webpack_require__(387));var _ArgumentsExotic=_interopRequireDefault(__webpack_require__(388));var _IntegerIndexedExotic=_interopRequireDefault(__webpack_require__(389));var _BooleanValue=_interopRequireDefault(__webpack_require__(391));var _StringValue=_interopRequireDefault(__webpack_require__(392));var _SymbolValue=_interopRequireDefault(__webpack_require__(393));var _AbstractValue=_interopRequireDefault(__webpack_require__(394));var _AbstractObjectValue=
_interopRequireDefault(__webpack_require__(395));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?
obj:{default:obj}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Value{constructor(realm,intrinsicName){(0,_invariant.default)(realm,"realm required");this.$Realm=realm;this.intrinsicName=intrinsicName;this.expressionLocation=realm.currentLocation}toDisplayString(){return"["+
this.constructor.name+" originally; "+(this.__originalName?this.__originalName:"undefined")+"]"}equals(x){(0,_invariant.default)(false,"abstract method; please override")}getHash(){(0,_invariant.default)(false,"abstract method; please override")}getType(){return this.constructor}static isTypeCompatibleWith(type,Constructor){return type.prototype instanceof Constructor||type.prototype===Constructor.prototype}implies(val,depth=0){if(!this.mightNotBeFalse())return true;if(this.equals(val))return true;
return false}impliesNot(val,depth=0){if(!this.mightNotBeFalse())return true;if(this.equals(val))return false;return false}isIntrinsic(){return!!this.intrinsicName}isTemporal(){(0,_invariant.default)(false,"abstract method; please override")}isPartialObject(){return false}isSimpleObject(){return false}mightBeFalse(){(0,_invariant.default)(false,"abstract method; please override")}mightNotBeFalse(){(0,_invariant.default)(false,"abstract method; please override")}mightBeNull(){(0,_invariant.default)(false,
"abstract method; please override")}mightNotBeNull(){(0,_invariant.default)(false,"abstract method; please override")}mightBeNumber(){(0,_invariant.default)(false,"abstract method; please override")}mightNotBeNumber(){(0,_invariant.default)(false,"abstract method; please override")}mightNotBeObject(){(0,_invariant.default)(false,"abstract method; please override")}mightBeObject(){(0,_invariant.default)(false,"abstract method; please override")}mightBeString(){(0,_invariant.default)(false,"abstract method; please override")}mightNotBeString(){(0,
_invariant.default)(false,"abstract method; please override")}mightBeTrue(){return this.mightNotBeFalse()}mightNotBeTrue(){return this.mightBeFalse()}mightBeUndefined(){(0,_invariant.default)(false,"abstract method; please override")}mightNotBeUndefined(){(0,_invariant.default)(false,"abstract method; please override")}mightHaveBeenDeleted(){(0,_invariant.default)(false,"abstract method; please override")}promoteEmptyToUndefined(){(0,_invariant.default)(false,"abstract method; please override")}throwIfNotConcrete(){(0,
_invariant.default)(false,"abstract method; please override")}throwIfNotConcreteNumber(){(0,_invariant.default)(false,"abstract method; please override")}throwIfNotConcreteString(){throw new Error("abstract method; please override");}throwIfNotConcreteBoolean(){throw new Error("abstract method; please override");}throwIfNotConcreteSymbol(){throw new Error("abstract method; please override");}throwIfNotConcreteObject(){(0,_invariant.default)(false,"abstract method; please override")}throwIfNotConcretePrimitive(){(0,
_invariant.default)(false,"abstract method; please override")}throwIfNotObject(){(0,_invariant.default)(false,"abstract method; please override")}serialize(stack=new Map){if(stack.has(this))return stack.get(this);else{let set=(val)=>{stack.set(this,val);return val};return set(this._serialize(set,stack))}}_serialize(set,stack){(0,_invariant.default)(false,"abstract method; please override")}getDebugName(){return this.intrinsicName||this.__originalName}}exports.default=Value},function(module,exports,
__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ConcreteValue extends _index.Value{constructor(realm,intrinsicName){(0,_invariant.default)(realm,"realm required");super(realm,intrinsicName)}isTemporal(){return false}mightNotBeFalse(){return!this.mightBeFalse()}mightBeNull(){return this instanceof
_index.NullValue}mightNotBeNull(){return!(this instanceof _index.NullValue)}mightBeNumber(){return this instanceof _index.NumberValue}mightNotBeNumber(){return!(this instanceof _index.NumberValue)}mightNotBeObject(){return!(this instanceof _index.ObjectValue)}mightBeObject(){return this instanceof _index.ObjectValue}mightBeString(){return this instanceof _index.StringValue}mightNotBeString(){return!(this instanceof _index.StringValue)}mightBeUndefined(){return this instanceof _index.UndefinedValue}mightNotBeUndefined(){return!(this instanceof
_index.UndefinedValue)}mightHaveBeenDeleted(){return this instanceof _index.EmptyValue}promoteEmptyToUndefined(){if(this instanceof _index.EmptyValue)return this.$Realm.intrinsics.undefined;return this}throwIfNotConcrete(){return this}throwIfNotConcreteNumber(){(0,_invariant.default)(false,"expected this to be a number if concrete")}throwIfNotConcreteString(){(0,_invariant.default)(false,"expected this to be a string if concrete")}throwIfNotConcreteBoolean(){(0,_invariant.default)(false,"expected this to be a boolean if concrete")}throwIfNotConcreteSymbol(){(0,
_invariant.default)(false,"expected this to be a symbol if concrete")}throwIfNotConcreteObject(){return this.throwIfNotObject()}throwIfNotConcretePrimitive(){(0,_invariant.default)(false,"expected this to be a primitive value if concrete")}throwIfNotObject(){(0,_invariant.default)(false,"expected this to be an object if concrete")}}exports.default=ConcreteValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=
__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class PrimitiveValue extends _index.ConcreteValue{constructor(realm,intrinsicName){(0,_invariant.default)(realm,"realm required");super(realm,intrinsicName)}throwIfNotConcretePrimitive(){return this}toDisplayString(){(0,_invariant.default)(false,"abstract method; please override")}}exports.default=PrimitiveValue},function(module,exports,
__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(15);var _errors=__webpack_require__(3);var _index2=__webpack_require__(10);var _utils=__webpack_require__(291);var _index3=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _generator=__webpack_require__(237);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function")ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}));ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function _defineProperty(obj,key,value){if(key in
obj)Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});else obj[key]=value;return obj}class ObjectValue extends _index2.ConcreteValue{constructor(realm,proto,intrinsicName,refuseSerialization=false){super(realm,intrinsicName);realm.recordNewObject(this);if(realm.useAbstractInterpretation)this.setupBindings(this.getTrackedPropertyNames());this.$Prototype=proto||realm.intrinsics.null;this.$Extensible=realm.intrinsics.true;this._isPartial=realm.intrinsics.false;
this._isLeaked=realm.intrinsics.false;this._isSimple=realm.intrinsics.false;this._simplicityIsTransitive=realm.intrinsics.false;this._isFinal=realm.intrinsics.false;this.properties=new Map;this.symbols=new Map;this.refuseSerialization=refuseSerialization;this.$IsClassPrototype=false}getTrackedPropertyNames(){return ObjectValue.trackedPropertyNames}setupBindings(propertyNames){for(let propName of propertyNames){let propBindingName=ObjectValue.trackedPropertyBindingNames.get(propName);(0,_invariant.default)(propBindingName!==
undefined);this[propBindingName]=undefined}}static setupTrackedPropertyAccessors(propertyNames){for(let propName of propertyNames){let propBindingName=ObjectValue.trackedPropertyBindingNames.get(propName);if(propBindingName===undefined)ObjectValue.trackedPropertyBindingNames.set(propName,propBindingName=propName+"_binding");Object.defineProperty(ObjectValue.prototype,propName,{configurable:true,get:function(){let binding=this[propBindingName];(0,_invariant.default)(binding===undefined||binding.descriptor instanceof
_descriptors.InternalSlotDescriptor);return binding===undefined?undefined:binding.descriptor.value},set:function(v){(0,_invariant.default)(this.$IsClassPrototype===undefined||this.mightNotBeLeakedObject()||propBindingName==="_isPartial_binding","cannot mutate a leaked object");let binding=this[propBindingName];if(binding===undefined){let desc=new _descriptors.InternalSlotDescriptor(undefined);this[propBindingName]=binding={descriptor:desc,object:this,key:propName,internalSlot:true}}this.$Realm.recordModifiedProperty(binding);
binding.descriptor.value=v}})}}isValid(){return this._isPartial!==undefined}equals(x){return this===x}getHash(){if(!this.hashValue)this.hashValue=++this.$Realm.objectCount;return this.hashValue}get temporalAlias(){return this._temporalAlias}set temporalAlias(value){this._temporalAlias=value}hasStringOrSymbolProperties(){for(let prop of this.properties.values()){if(prop.descriptor===undefined)continue;return true}for(let prop of this.symbols.values()){if(prop.descriptor===undefined)continue;return true}return false}mightBeFalse(){return false}mightNotBeObject(){return false}throwIfNotObject(){return this}makePartial(){this._isPartial=
this.$Realm.intrinsics.true}makeSimple(option){this._isSimple=this.$Realm.intrinsics.true;this._simplicityIsTransitive=new _index2.BooleanValue(this.$Realm,option==="transitive"||option instanceof _index2.StringValue&&option.value==="transitive")}makeFinal(){this._isFinal=this.$Realm.intrinsics.true}makeNotFinal(){this._isFinal=this.$Realm.intrinsics.false}isPartialObject(){return this._isPartial.mightBeTrue()}isValid(){return this._isPartial!==undefined}mightBeFinalObject(){return this._isFinal.mightBeTrue()}mightNotBeFinalObject(){return this._isFinal.mightNotBeTrue()}leak(){this._isLeaked=
this.$Realm.intrinsics.true}mightBeLeakedObject(){return this._isLeaked.mightBeTrue()}mightNotBeLeakedObject(){return this._isLeaked.mightNotBeTrue()}isSimpleObject(){if(this===this.$Realm.intrinsics.ObjectPrototype)return true;if(!this._isSimple.mightNotBeTrue())return true;if(this.isPartialObject())return false;if(this.symbols.size>0)return false;for(let propertyBinding of this.properties.values()){let desc=propertyBinding.descriptor;if(desc===undefined)continue;if(!(0,_index3.IsDataDescriptor)(this.$Realm,
desc))return false;if(!desc.writable)return false}if(this.$Prototype instanceof _index2.NullValue)return true;(0,_invariant.default)(this.$Prototype);return this.$Prototype.isSimpleObject()}isTransitivelySimple(){return!this._simplicityIsTransitive.mightNotBeTrue()}getExtensible(){return this.$Extensible.throwIfNotConcreteBoolean().value}setExtensible(v){this.$Extensible=v?this.$Realm.intrinsics.true:this.$Realm.intrinsics.false}getKind(){if(this.$SymbolData!==undefined)return"Symbol";if(this.$StringData!==
undefined)return"String";if(this.$NumberData!==undefined)return"Number";if(this.$BooleanData!==undefined)return"Boolean";if(this.$DateValue!==undefined)return"Date";if(this.$RegExpMatcher!==undefined)return"RegExp";if(this.$SetData!==undefined)return"Set";if(this.$MapData!==undefined)return"Map";if(this.$DataView!==undefined)return"DataView";if(this.$ArrayBufferData!==undefined)return"ArrayBuffer";if(this.$WeakMapData!==undefined)return"WeakMap";if(this.$WeakSetData!==undefined)return"WeakSet";if((0,
_utils.isReactElement)(this)&&this.$Realm.react.enabled)return"ReactElement";if(this.$TypedArrayName!==undefined)return this.$TypedArrayName;return"Object"}defineNativeMethod(name,length,callback,desc){let intrinsicName;if(typeof name==="string"){if(this.intrinsicName)intrinsicName=`${this.intrinsicName}.${name}`}else if(name instanceof _index2.SymbolValue){if(this.intrinsicName&&name.intrinsicName)intrinsicName=`${this.intrinsicName}[${name.intrinsicName}]`}else(0,_invariant.default)(false);let fnValue=
new _index2.NativeFunctionValue(this.$Realm,intrinsicName,name,length,callback,false);this.defineNativeProperty(name,fnValue,desc);return fnValue}defineNativeProperty(name,value,desc){(0,_invariant.default)(!value||value instanceof _index2.Value);this.$DefineOwnProperty(name,new _descriptors.PropertyDescriptor(_objectSpread({value,writable:true,enumerable:false,configurable:true},desc)))}defineNativeGetter(name,callback,desc){let intrinsicName,funcName;if(typeof name==="string"){funcName=`get ${name}`;
if(this.intrinsicName)intrinsicName=`${this.intrinsicName}.${name}`}else if(name instanceof _index2.SymbolValue){funcName=name.$Description instanceof _index2.Value?`get [${name.$Description.throwIfNotConcreteString().value}]`:`get [${"?"}]`;if(this.intrinsicName&&name.intrinsicName)intrinsicName=`${this.intrinsicName}[${name.intrinsicName}]`}else(0,_invariant.default)(false);let func=new _index2.NativeFunctionValue(this.$Realm,intrinsicName,funcName,0,callback);this.$DefineOwnProperty(name,new _descriptors.PropertyDescriptor(_objectSpread({get:func,
set:this.$Realm.intrinsics.undefined,enumerable:false,configurable:true},desc)))}defineNativeConstant(name,value,desc){(0,_invariant.default)(!value||value instanceof _index2.Value);this.$DefineOwnProperty(name,new _descriptors.PropertyDescriptor(_objectSpread({value,writable:false,enumerable:false,configurable:false},desc)))}getSnapshot(options){try{if(this.temporalAlias!==undefined)return this.temporalAlias;let realm=this.$Realm;let template=new ObjectValue(this.$Realm,this.$Realm.intrinsics.ObjectPrototype);
let keys=_singletons.Properties.GetOwnPropertyKeysArray(realm,this,false,true);this.copyKeys(keys,this,template);template.makeFinal();if(realm.react.enabled&&realm.react.reactProps.has(this))realm.react.reactProps.add(template);let operationDescriptor=(0,_generator.createOperationDescriptor)("SINGLE_ARG");let result=_index2.AbstractValue.createTemporalFromBuildFunction(this.$Realm,ObjectValue,[template],operationDescriptor,{skipInvariant:true,isPure:true});(0,_invariant.default)(result instanceof
_index2.AbstractObjectValue);result.values=new _index.ValuesDomain(template);return result}finally{if(options&&options.removeProperties){this.properties=new Map;this.symbols=new Map;this.unknownProperty=undefined}}}copyKeys(keys,from,to){for(let nextKey of keys){let desc=from.$GetOwnProperty(nextKey);if(desc&&desc.throwIfNotConcrete(this.$Realm).enumerable){_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);let propValue=(0,_index3.Get)(this.$Realm,from,nextKey);_singletons.Properties.Set(this.$Realm,
to,nextKey,propValue,true)}}}_serialize(set,stack){let obj=set({});for(let [key,propertyBinding]of this.properties){let desc=propertyBinding.descriptor;if(desc===undefined)continue;_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);desc=desc.throwIfNotConcrete(this.$Realm);let serializedDesc={enumerable:desc.enumerable,configurable:desc.configurable};if(desc.value){serializedDesc.writable=desc.writable;(0,_invariant.default)(desc.value instanceof _index2.Value);serializedDesc.value=desc.value.serialize(stack)}else{(0,
_invariant.default)(desc.get!==undefined);serializedDesc.get=desc.get.serialize(stack);(0,_invariant.default)(desc.set!==undefined);serializedDesc.set=desc.set.serialize(stack)}Object.defineProperty(obj,key,serializedDesc)}return obj}usesOrdinaryObjectInternalPrototypeMethods(){return true}$GetPrototypeOf(){return this.$Prototype}$SetPrototypeOf(V){return _singletons.Properties.OrdinarySetPrototypeOf(this.$Realm,this,V)}$IsExtensible(){return(0,_index3.OrdinaryIsExtensible)(this.$Realm,this)}$PreventExtensions(){return(0,
_index3.OrdinaryPreventExtensions)(this.$Realm,this)}$GetOwnProperty(P){return _singletons.Properties.OrdinaryGetOwnProperty(this.$Realm,this,P)}$DefineOwnProperty(P,Desc){return _singletons.Properties.OrdinaryDefineOwnProperty(this.$Realm,this,P,Desc)}$HasProperty(P){if(this.unknownProperty!==undefined&&this.$GetOwnProperty(P)===undefined){_index2.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}return(0,_index3.OrdinaryHasProperty)(this.$Realm,this,P)}$Get(P,Receiver){return(0,
_index3.OrdinaryGet)(this.$Realm,this,P,Receiver)}_SafeGetDataPropertyValue(P){let savedInvariantLevel=this.$Realm.invariantLevel;try{this.$Realm.invariantLevel=0;let desc=this.$GetOwnProperty(P);if(desc===undefined)return this.$Realm.intrinsics.undefined;desc=desc.throwIfNotConcrete(this.$Realm);return desc.value?desc.value:this.$Realm.intrinsics.undefined}finally{this.$Realm.invariantLevel=savedInvariantLevel}}$GetPartial(P,Receiver){return(0,_index3.OrdinaryGetPartial)(this.$Realm,this,P,Receiver)}$Set(P,
V,Receiver){return _singletons.Properties.OrdinarySet(this.$Realm,this,P,V,Receiver)}$SetPartial(P,V,Receiver){return _singletons.Properties.OrdinarySetPartial(this.$Realm,this,P,V,Receiver)}$Delete(P){if(this.unknownProperty!==undefined){_index2.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}return _singletons.Properties.OrdinaryDelete(this.$Realm,this,P)}$OwnPropertyKeys(getOwnPropertyKeysEvenIfPartial=false){return(0,_index3.OrdinaryOwnPropertyKeys)(this.$Realm,this,
getOwnPropertyKeysEvenIfPartial)}static refuseSerializationOnPropertyBinding(pb){if(pb.object.refuseSerialization)return true;if(pb.internalSlot&&typeof pb.key==="string"&&pb.key[0]==="_")return true;return false}static isIntrinsicDerivedObject(obj){return obj instanceof ObjectValue&&obj.intrinsicName!==undefined&&obj.isScopedTemplate!==undefined}}exports.default=ObjectValue;_defineProperty(ObjectValue,"trackedPropertyNames",["_isPartial","_isLeaked","_isSimple","_isFinal","_simplicityIsTransitive",
"_temporalAlias","$ArrayIteratorNextIndex","$DateValue","$Extensible","$IteratedList","$IteratedObject","$IteratedSet","$IteratedString","$Map","$MapData","$MapNextIndex","$Prototype","$SetData","$SetNextIndex","$StringIteratorNextIndex","$WeakMapData","$WeakSetData"]);_defineProperty(ObjectValue,"trackedPropertyBindingNames",new Map)},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"TypesDomain",{enumerable:true,
get:function(){return _TypesDomain.default}});Object.defineProperty(exports,"ValuesDomain",{enumerable:true,get:function(){return _ValuesDomain.default}});var _TypesDomain=_interopRequireDefault(__webpack_require__(16));var _ValuesDomain=_interopRequireDefault(__webpack_require__(17));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _invariant=
_interopRequireDefault(__webpack_require__(9));var _index=__webpack_require__(10);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class TypesDomain{constructor(type){(0,_invariant.default)(type!==_index.ConcreteValue,"Concrete values must be specific");this._type=type===_index.Value?undefined:type}isBottom(){return this._type instanceof _index.EmptyValue}isTop(){return this._type===undefined}getType(){return this._type||_index.Value}static binaryOp(op,left,right){if(left.isBottom()||
right.isBottom())return TypesDomain.bottomVal;let lType=left._type;let rType=right._type;let resultType=_index.Value;switch(op){case "+":if(lType===undefined||rType===undefined)return TypesDomain.topVal;if(_index.Value.isTypeCompatibleWith(lType,_index.StringValue)||_index.Value.isTypeCompatibleWith(rType,_index.StringValue)){resultType=_index.StringValue;break}case "-":if(lType===undefined||rType===undefined)return TypesDomain.topVal;if(lType===_index.IntegralValue&&rType===_index.IntegralValue)resultType=
_index.IntegralValue;else if(_index.Value.isTypeCompatibleWith(lType,_index.NumberValue)&&_index.Value.isTypeCompatibleWith(rType,_index.NumberValue))resultType=_index.NumberValue;break;case "<":case ">":case ">=":case "<=":case "!=":case "==":case "!==":case "===":case "in":case "instanceof":resultType=_index.BooleanValue;break;case ">>>":case "<<":case ">>":case "&":case "|":case "^":resultType=_index.IntegralValue;break;case "**":case "%":case "/":case "*":resultType=_index.NumberValue;break;default:(0,
_invariant.default)(false)}return new TypesDomain(resultType)}static joinValues(v1,v2){if(v1===undefined&&v2===undefined)return new TypesDomain(_index.UndefinedValue);if(v1===undefined||v2===undefined)return TypesDomain.topVal;if(v1 instanceof _index.AbstractValue)return v1.types.joinWith(v2.getType());if(v2 instanceof _index.AbstractValue)return v2.types.joinWith(v1.getType());return(new TypesDomain(v1.getType())).joinWith(v2.getType())}joinWith(t){if(this.isBottom())return t===_index.EmptyValue?
TypesDomain.bottomVal:new TypesDomain(t);let type=this.getType();if(type===t||t instanceof _index.EmptyValue)return this;if(_index.Value.isTypeCompatibleWith(type,_index.NumberValue)&&_index.Value.isTypeCompatibleWith(t,_index.NumberValue))return new TypesDomain(_index.NumberValue);if(_index.Value.isTypeCompatibleWith(type,_index.FunctionValue)&&_index.Value.isTypeCompatibleWith(t,_index.FunctionValue))return new TypesDomain(_index.FunctionValue);if(_index.Value.isTypeCompatibleWith(type,_index.ObjectValue)&&
_index.Value.isTypeCompatibleWith(t,_index.ObjectValue))return new TypesDomain(_index.ObjectValue);if(_index.Value.isTypeCompatibleWith(type,_index.PrimitiveValue)&&_index.Value.isTypeCompatibleWith(t,_index.PrimitiveValue))return new TypesDomain(_index.PrimitiveValue);return TypesDomain.topVal}static logicalOp(op,left,right){return left.joinWith(right.getType())}static unaryOp(op,operand){if(operand.isBottom())return TypesDomain.bottomVal;const type=operand._type;let resultType=_index.Value;switch(op){case "-":case "+":resultType=
type===_index.IntegralValue?_index.IntegralValue:_index.NumberValue;break;case "~":resultType=_index.IntegralValue;break;case "!":case "delete":resultType=_index.BooleanValue;break;case "typeof":resultType=_index.StringValue;break;case "void":resultType=_index.UndefinedValue;break;default:(0,_invariant.default)(false)}return new TypesDomain(resultType)}}exports.default=TypesDomain},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=
void 0;var _completions=__webpack_require__(18);var _errors=__webpack_require__(3);var _invariant=_interopRequireDefault(__webpack_require__(9));var _index=__webpack_require__(232);var _singletons=__webpack_require__(236);var _index2=__webpack_require__(10);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ValuesDomain{constructor(_values){let values=_values;if(values instanceof _index2.ConcreteValue){let valueSet=new Set;valueSet.add(values);values=valueSet}this._elements=
values}contains(x){let elems=this._elements;let xelems=x._elements;if(elems===xelems)return true;if(elems===undefined)return true;if(xelems===undefined)return false;if(elems.size<xelems.size)return false;for(let e of xelems)if(!elems.has(e))return false;return true}containsValue(x){let elems=this._elements;if(elems===undefined)return true;if(x instanceof _index2.AbstractValue)return this.contains(x.values);(0,_invariant.default)(x instanceof _index2.ConcreteValue);return elems.has(x)}isBottom(){return this._elements!==
undefined&&this._elements.size===0}isTop(){return this._elements===undefined}getElements(){(0,_invariant.default)(this._elements!==undefined);return this._elements}static binaryOp(realm,op,left,right){if(left.isBottom()||right.isBottom())return ValuesDomain.bottomVal;let leftElements=left._elements;let rightElements=right._elements;if(!leftElements||!rightElements||leftElements.size>100||rightElements.size>100)return ValuesDomain.topVal;let resultSet=new Set;let savedHandler=realm.errorHandler;let savedIsReadOnly=
realm.isReadOnly;realm.isReadOnly=true;try{realm.errorHandler=()=>{throw new _errors.FatalError;};for(let leftElem of leftElements)for(let rightElem of rightElements){let result=ValuesDomain.computeBinary(realm,op,leftElem,rightElem);if(result instanceof _index2.ConcreteValue)resultSet.add(result);else{(0,_invariant.default)(result instanceof _index2.AbstractValue);if(result.values.isTop())return ValuesDomain.topVal;for(let subResult of result.values.getElements())resultSet.add(subResult)}}}catch(e){if(e instanceof
_completions.AbruptCompletion)return ValuesDomain.topVal}finally{realm.errorHandler=savedHandler;realm.isReadOnly=savedIsReadOnly}return new ValuesDomain(resultSet)}static computeBinary(realm,op,lval,rval){if(op==="+"){let lprim=_singletons.To.ToPrimitiveOrAbstract(realm,lval);let rprim=_singletons.To.ToPrimitiveOrAbstract(realm,rval);if(lprim instanceof _index2.AbstractValue||rprim instanceof _index2.AbstractValue)return _index2.AbstractValue.createFromBinaryOp(realm,op,lprim,rprim);if(lprim instanceof
_index2.StringValue||rprim instanceof _index2.StringValue){let lstr=_singletons.To.ToString(realm,lprim);let rstr=_singletons.To.ToString(realm,rprim);return new _index2.StringValue(realm,lstr+rstr)}let lnum=_singletons.To.ToNumber(realm,lprim);let rnum=_singletons.To.ToNumber(realm,rprim);return(0,_index.Add)(realm,lnum,rnum)}else if(op==="<"||op===">"||op===">="||op==="<=")if(op==="<"){let r=(0,_index.AbstractRelationalComparison)(realm,lval,rval,true,op);if(r instanceof _index2.UndefinedValue)return realm.intrinsics.false;
else return r}else if(op==="<="){let r=(0,_index.AbstractRelationalComparison)(realm,rval,lval,false,op);if(r instanceof _index2.UndefinedValue||r instanceof _index2.BooleanValue&&r.value)return realm.intrinsics.false;else if(r instanceof _index2.AbstractValue)return r;else return realm.intrinsics.true}else if(op===">"){let r=(0,_index.AbstractRelationalComparison)(realm,rval,lval,false,op);if(r instanceof _index2.UndefinedValue)return realm.intrinsics.false;else return r}else{if(op===">="){let r=
(0,_index.AbstractRelationalComparison)(realm,lval,rval,true,op);if(r instanceof _index2.UndefinedValue||r instanceof _index2.BooleanValue&&r.value)return realm.intrinsics.false;else if(r instanceof _index2.AbstractValue)return r;else return realm.intrinsics.true}}else if(op===">>>"){let lnum=_singletons.To.ToUint32(realm,lval);let rnum=_singletons.To.ToUint32(realm,rval);return _index2.IntegralValue.createFromNumberValue(realm,lnum>>>rnum)}else if(op==="<<"||op===">>"){let lnum=_singletons.To.ToInt32(realm,
lval);let rnum=_singletons.To.ToUint32(realm,rval);if(op==="<<")return _index2.IntegralValue.createFromNumberValue(realm,lnum<<rnum);else if(op===">>")return _index2.IntegralValue.createFromNumberValue(realm,lnum>>rnum)}else if(op==="**"){let base=_singletons.To.ToNumberOrAbstract(realm,lval);let exponent=_singletons.To.ToNumberOrAbstract(realm,rval);if(base instanceof _index2.AbstractValue||exponent instanceof _index2.AbstractValue){const baseVal=base instanceof _index2.AbstractValue?base:new _index2.NumberValue(realm,
base);const exponentVal=exponent instanceof _index2.AbstractValue?exponent:new _index2.NumberValue(realm,exponent);return _index2.AbstractValue.createFromBinaryOp(realm,op,baseVal,exponentVal)}return new _index2.NumberValue(realm,Math.pow(base,exponent))}else if(op==="%"||op==="/"||op==="*"||op==="-"){let lnum=_singletons.To.ToNumberOrAbstract(realm,lval);let rnum=_singletons.To.ToNumberOrAbstract(realm,rval);if(lnum instanceof _index2.AbstractValue||rnum instanceof _index2.AbstractValue){const lnumVal=
lnum instanceof _index2.AbstractValue?lnum:new _index2.NumberValue(realm,lnum);const rnumVal=rnum instanceof _index2.AbstractValue?rnum:new _index2.NumberValue(realm,rnum);return _index2.AbstractValue.createFromBinaryOp(realm,op,lnumVal,rnumVal)}if(isNaN(rnum))return realm.intrinsics.NaN;if(isNaN(lnum))return realm.intrinsics.NaN;if(op==="-")return(0,_index.Add)(realm,lnum,rnum,true);else if(op==="%")return new _index2.NumberValue(realm,lnum%rnum);else if(op==="/")return new _index2.NumberValue(realm,
lnum/rnum);else if(op==="*")return new _index2.NumberValue(realm,lnum*rnum)}else if(op==="!==")return new _index2.BooleanValue(realm,!(0,_index.StrictEqualityComparison)(realm,lval,rval));else if(op==="===")return new _index2.BooleanValue(realm,(0,_index.StrictEqualityComparison)(realm,lval,rval));else if(op==="!="||op==="==")return(0,_index.AbstractEqualityComparison)(realm,lval,rval,op);else if(op==="&"||op==="|"||op==="^"){let lnum=_singletons.To.ToInt32(realm,lval);let rnum=_singletons.To.ToInt32(realm,
rval);if(op==="&")return _index2.IntegralValue.createFromNumberValue(realm,lnum&rnum);else if(op==="|")return _index2.IntegralValue.createFromNumberValue(realm,lnum|rnum);else if(op==="^")return _index2.IntegralValue.createFromNumberValue(realm,lnum^rnum)}else if(op==="in"){if(!(rval instanceof _index2.ObjectValue))throw new _errors.FatalError;return new _index2.BooleanValue(realm,(0,_index.HasProperty)(realm,rval,_singletons.To.ToPropertyKey(realm,lval)))}else if(op==="instanceof")return new _index2.BooleanValue(realm,
(0,_index.InstanceofOperator)(realm,lval,rval));(0,_invariant.default)(false,"unimplemented "+op)}static logicalOp(realm,op,left,right){let leftElements=left._elements;let rightElements=right._elements;if(!leftElements||!rightElements||leftElements.size>100||rightElements.size>100)return ValuesDomain.topVal;let resultSet=new Set;let savedHandler=realm.errorHandler;let savedIsReadOnly=realm.isReadOnly;realm.isReadOnly=true;try{realm.errorHandler=()=>{throw new _errors.FatalError;};for(let leftElem of leftElements)for(let rightElem of rightElements){let result=
ValuesDomain.computeLogical(realm,op,leftElem,rightElem);resultSet.add(result)}}catch(e){if(e instanceof _completions.AbruptCompletion)return ValuesDomain.topVal}finally{realm.errorHandler=savedHandler;realm.isReadOnly=savedIsReadOnly}return new ValuesDomain(resultSet)}static computeLogical(realm,op,lval,rval){let lbool=_singletons.To.ToBoolean(realm,lval);if(op==="&&"){if(lbool===false)return lval}else if(op==="||")if(lbool===true)return lval;return rval}static computeUnary(realm,op,value){if(op===
"+")return _index2.IntegralValue.createFromNumberValue(realm,_singletons.To.ToNumber(realm,value));else if(op==="-"){let oldValue=_singletons.To.ToNumber(realm,value);if(isNaN(oldValue))return realm.intrinsics.NaN;return _index2.IntegralValue.createFromNumberValue(realm,-oldValue)}else if(op==="~"){let oldValue=_singletons.To.ToInt32(realm,value);return _index2.IntegralValue.createFromNumberValue(realm,~oldValue)}else if(op==="!"){let oldValue=_singletons.To.ToBoolean(realm,value);if(oldValue===true)return realm.intrinsics.false;
return realm.intrinsics.true}else if(op==="void")return realm.intrinsics.undefined;else if(op==="typeof"){let val=value;let typeString=_singletons.Utils.typeToString(val.getType());(0,_invariant.default)(typeString!==undefined);return new _index2.StringValue(realm,typeString)}else(0,_invariant.default)(false,`${op} is a state update, not a pure operation, so we don't support it`)}static unaryOp(realm,op,operandValues){if(operandValues.isBottom())return ValuesDomain.bottomVal;let operandElements=operandValues._elements;
if(operandElements===undefined)return ValuesDomain.topVal;let resultSet=new Set;let savedHandler=realm.errorHandler;let savedIsReadOnly=realm.isReadOnly;realm.isReadOnly=true;try{realm.errorHandler=()=>{throw new _errors.FatalError;};for(let operandElem of operandElements){let result=ValuesDomain.computeUnary(realm,op,operandElem);if(result instanceof _index2.ConcreteValue)resultSet.add(result);else{(0,_invariant.default)(result instanceof _index2.AbstractValue);if(result.values.isTop())return ValuesDomain.topVal;
for(let subResult of result.values.getElements())resultSet.add(subResult)}}}catch(e){if(e instanceof _completions.AbruptCompletion)return ValuesDomain.topVal}finally{realm.errorHandler=savedHandler;realm.isReadOnly=savedIsReadOnly}return new ValuesDomain(resultSet)}includesValueNotOfType(type){(0,_invariant.default)(!this.isTop());for(let cval of this.getElements())if(!(cval instanceof type))return true;return false}includesValueOfType(type){(0,_invariant.default)(!this.isTop());for(let cval of this.getElements())if(cval instanceof
type)return true;return false}mightBeFalse(){(0,_invariant.default)(!this.isTop());for(let cval of this.getElements())if(cval.mightBeFalse())return true;return false}mightNotBeFalse(){(0,_invariant.default)(!this.isTop());for(let cval of this.getElements())if(cval.mightNotBeFalse())return true;return false}static joinValues(realm,v1=realm.intrinsics.undefined,v2=realm.intrinsics.undefined){if(v1 instanceof _index2.AbstractValue)return v1.values.joinWith(v2);if(v2 instanceof _index2.AbstractValue)return v2.values.joinWith(v1);
let union=new Set;(0,_invariant.default)(v1 instanceof _index2.ConcreteValue);union.add(v1);(0,_invariant.default)(v2 instanceof _index2.ConcreteValue);union.add(v2);return new ValuesDomain(union)}joinWith(y){if(this.isTop())return this;let union=new Set(this.getElements());if(y instanceof _index2.AbstractValue){if(y.values.isTop())return y.values;y.values.getElements().forEach((v)=>union.add(v))}else{(0,_invariant.default)(y instanceof _index2.ConcreteValue);union.add(y)}if(union.size===0)return ValuesDomain.bottomVal;
return new ValuesDomain(union)}static meetValues(realm,v1=realm.intrinsics.undefined,v2=realm.intrinsics.undefined){if(v1 instanceof _index2.AbstractValue)return v1.values.meetWith(v2);if(v2 instanceof _index2.AbstractValue)return v2.values.meetWith(v1);let intersection=new Set;(0,_invariant.default)(v1 instanceof _index2.ConcreteValue);(0,_invariant.default)(v2 instanceof _index2.ConcreteValue);if(v1===v2)intersection.add(v1);if(intersection.size===0)return ValuesDomain.bottomVal;return new ValuesDomain(intersection)}meetWith(y){let intersection=
new Set;let elements=this._elements;if(y instanceof _index2.AbstractValue){if(y.values.isTop())return this;y.values.getElements().forEach((v)=>{if(elements===undefined||elements.has(v))intersection.add(v)})}else{(0,_invariant.default)(y instanceof _index2.ConcreteValue);if(elements===undefined||elements.has(y))intersection.add(y)}if(intersection.size===0)return ValuesDomain.bottomVal;return new ValuesDomain(intersection)}promoteEmptyToUndefined(){if(this.isTop()||this.isBottom())return this;let newSet=
new Set;for(let cval of this.getElements())if(cval instanceof _index2.EmptyValue)newSet.add(cval.$Realm.intrinsics.undefined);else newSet.add(cval);return new ValuesDomain(newSet)}}exports.default=ValuesDomain},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.JoinedNormalAndAbruptCompletions=exports.JoinedAbruptCompletions=exports.ReturnCompletion=exports.BreakCompletion=exports.ContinueCompletion=exports.ThrowCompletion=exports.AbruptCompletion=
exports.SimpleNormalCompletion=exports.NormalCompletion=exports.Completion=void 0;var _invariant=_interopRequireDefault(__webpack_require__(9));var _types=__webpack_require__(19);var _index=__webpack_require__(10);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Completion{constructor(value,location,target){this.value=value;this.target=target;this.location=location;(0,_invariant.default)(this.constructor!==Completion,"Completion is an abstract base class")}containsSelectedCompletion(selector){return selector(this)}shallowClone(){(0,
_invariant.default)(false,"abstract base method")}toDisplayString(){return"["+this.constructor.name+" value "+(this.value?this.value.toDisplayString():"undefined")+"]"}static makeAllNormalCompletionsResultInUndefined(completion){let undefinedVal=completion.value.$Realm.intrinsics.undefined;if(completion instanceof SimpleNormalCompletion)completion.value=undefinedVal;else if(completion instanceof JoinedNormalAndAbruptCompletions){if(completion.composedWith!==undefined)Completion.makeAllNormalCompletionsResultInUndefined(completion.composedWith);
Completion.makeAllNormalCompletionsResultInUndefined(completion.consequent);Completion.makeAllNormalCompletionsResultInUndefined(completion.alternate)}}static makeSelectedCompletionsInfeasible(selector,completion){let bottomValue=completion.value.$Realm.intrinsics.__bottomValue;if(selector(completion))completion.value=bottomValue;else if(completion instanceof JoinedNormalAndAbruptCompletions||completion instanceof JoinedAbruptCompletions){if(completion instanceof JoinedNormalAndAbruptCompletions&&
completion.composedWith!==undefined)Completion.makeSelectedCompletionsInfeasible(selector,completion.composedWith);Completion.makeSelectedCompletionsInfeasible(selector,completion.consequent);Completion.makeSelectedCompletionsInfeasible(selector,completion.alternate)}}static makeSelectedCompletionsInfeasibleInCopy(selector,completion){let bottomValue=completion.value.$Realm.intrinsics.__bottomValue;let clone=completion.shallowClone();if(selector(clone))clone.value=bottomValue;else if(clone instanceof
JoinedNormalAndAbruptCompletions||clone instanceof JoinedAbruptCompletions){clone.consequent=Completion.makeSelectedCompletionsInfeasibleInCopy(selector,clone.consequent);clone.alternate=Completion.makeSelectedCompletionsInfeasibleInCopy(selector,clone.alternate);if(clone.consequent.value===bottomValue)return clone.alternate;if(clone.alternate.value===bottomValue)return clone.consequent}return clone}static normalizeSelectedCompletions(selector,completion){if(selector(completion))return new SimpleNormalCompletion(completion.value);
let normalizedComposedWith;if(completion instanceof JoinedNormalAndAbruptCompletions){(0,_invariant.default)(completion.savedEffects===undefined);if(completion.composedWith!==undefined)normalizedComposedWith=Completion.normalizeSelectedCompletions(selector,completion.composedWith)}if(completion instanceof JoinedNormalAndAbruptCompletions||completion instanceof JoinedAbruptCompletions){let nc=Completion.normalizeSelectedCompletions(selector,completion.consequent);let na=Completion.normalizeSelectedCompletions(selector,
completion.alternate);if(normalizedComposedWith===undefined){if(nc===completion.consequent&&na===completion.alternate)return completion;if(nc instanceof AbruptCompletion&&na instanceof AbruptCompletion)return completion;if(nc instanceof SimpleNormalCompletion&&na instanceof SimpleNormalCompletion)return new SimpleNormalCompletion(_index.AbstractValue.createFromConditionalOp(completion.value.$Realm,completion.joinCondition,nc.value,na.value));(0,_invariant.default)(nc instanceof AbruptCompletion||
nc instanceof NormalCompletion);(0,_invariant.default)(na instanceof AbruptCompletion||na instanceof NormalCompletion);return new JoinedNormalAndAbruptCompletions(completion.joinCondition,nc,na)}(0,_invariant.default)(nc instanceof AbruptCompletion||nc instanceof NormalCompletion);(0,_invariant.default)(na instanceof AbruptCompletion||na instanceof NormalCompletion);let result=new JoinedNormalAndAbruptCompletions(completion.joinCondition,nc,na);if(normalizedComposedWith instanceof JoinedNormalAndAbruptCompletions)result.composedWith=
normalizedComposedWith;return result}return completion}}exports.Completion=Completion;class NormalCompletion extends Completion{constructor(value,location,target){super(value,location,target);(0,_invariant.default)(this.constructor!==NormalCompletion,"NormalCompletion is an abstract base class")}}exports.NormalCompletion=NormalCompletion;class SimpleNormalCompletion extends NormalCompletion{shallowClone(){return new SimpleNormalCompletion(this.value,this.location,this.target)}}exports.SimpleNormalCompletion=
SimpleNormalCompletion;class AbruptCompletion extends Completion{constructor(value,location,target){super(value,location,target);(0,_invariant.default)(this.constructor!==AbruptCompletion,"AbruptCompletion is an abstract base class")}}exports.AbruptCompletion=AbruptCompletion;class ThrowCompletion extends AbruptCompletion{constructor(value,location,nativeStack,emitWarning=true){super(value,location);this.nativeStack=nativeStack||(new Error).stack}shallowClone(){return new ThrowCompletion(this.value,
this.location,this.nativeStack,false)}}exports.ThrowCompletion=ThrowCompletion;class ContinueCompletion extends AbruptCompletion{constructor(value,location,target){super(value,location,target||null)}shallowClone(){return new ContinueCompletion(this.value,this.location,this.target)}}exports.ContinueCompletion=ContinueCompletion;class BreakCompletion extends AbruptCompletion{constructor(value,location,target){super(value,location,target||null)}shallowClone(){return new BreakCompletion(this.value,this.location,
this.target)}}exports.BreakCompletion=BreakCompletion;class ReturnCompletion extends AbruptCompletion{constructor(value,location){super(value,location);if(value instanceof _index.EmptyValue)this.value=value.$Realm.intrinsics.undefined}shallowClone(){return new ReturnCompletion(this.value,this.location)}}exports.ReturnCompletion=ReturnCompletion;class JoinedAbruptCompletions extends AbruptCompletion{constructor(joinCondition,consequent,alternate){super(joinCondition.$Realm.intrinsics.empty,consequent.location);
this.joinCondition=joinCondition;this.consequent=consequent;this.alternate=alternate}containsSelectedCompletion(selector){if(selector(this.consequent))return true;if(selector(this.alternate))return true;if(this.consequent instanceof JoinedAbruptCompletions)if(this.consequent.containsSelectedCompletion(selector))return true;if(this.alternate instanceof JoinedAbruptCompletions)if(this.alternate.containsSelectedCompletion(selector))return true;return false}shallowClone(){return new JoinedAbruptCompletions(this.joinCondition,
this.consequent,this.alternate)}toDisplayString(){let superString=super.toDisplayString().slice(0,-1);return superString+" c: ["+this.consequent.toDisplayString()+"] a: ["+this.alternate.toDisplayString()+"]]"}}exports.JoinedAbruptCompletions=JoinedAbruptCompletions;class JoinedNormalAndAbruptCompletions extends NormalCompletion{constructor(joinCondition,consequent,alternate){super(consequent instanceof NormalCompletion?consequent.value:alternate.value,consequent.location);this.joinCondition=joinCondition;
this.consequent=consequent;this.alternate=alternate;this.pathConditionsAtCreation=joinCondition.$Realm.pathConditions}containsSelectedCompletion(selector){if(this.composedWith!==undefined&&this.composedWith.containsSelectedCompletion(selector))return true;if(selector(this.consequent))return true;if(selector(this.alternate))return true;if(this.consequent instanceof JoinedAbruptCompletions||this.consequent instanceof JoinedNormalAndAbruptCompletions)if(this.consequent.containsSelectedCompletion(selector))return true;
if(this.alternate instanceof JoinedAbruptCompletions||this.alternate instanceof JoinedNormalAndAbruptCompletions)if(this.alternate.containsSelectedCompletion(selector))return true;return false}shallowClone(){let clone=new JoinedNormalAndAbruptCompletions(this.joinCondition,this.consequent,this.alternate);clone.composedWith=this.composedWith;clone.pathConditionsAtCreation=this.pathConditionsAtCreation;return clone}toDisplayString(){let superString=super.toDisplayString().slice(0,-1);return superString+
" c: ["+this.consequent.toDisplayString()+"] a: ["+this.alternate.toDisplayString()+"]]"}}exports.JoinedNormalAndAbruptCompletions=JoinedNormalAndAbruptCompletions},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.PathConditions=exports.SourceFileCollection=exports.ElementSize=void 0;var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _environment=__webpack_require__(20);var _errors=__webpack_require__(3);var _invariant=
_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const ElementSize={Float32:4,Float64:8,Int8:1,Int16:2,Int32:4,Uint8:1,Uint16:2,Uint32:4,Uint8Clamped:1};exports.ElementSize=ElementSize;class SourceFileCollection{constructor(sourceFiles){this._sourceFiles=sourceFiles}toArray(){(0,_invariant.default)(this._sourceFiles!==undefined);return this._sourceFiles}destroy(){this._sourceFiles=undefined}}exports.SourceFileCollection=
SourceFileCollection;class PathConditions{add(c){}implies(e,depth=0){return false}impliesNot(e,depth=0){return false}isEmpty(){return false}isReadOnly(){return false}getLength(){return 0}getAssumedConditions(){return new Set}refineBaseConditons(realm,depth=0){}}exports.PathConditions=PathConditions},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.materializeBinding=materializeBinding;exports.leakBinding=leakBinding;exports.isValidBaseValue=
isValidBaseValue;exports.mightBecomeAnObject=mightBecomeAnObject;exports.Reference=exports.LexicalEnvironment=exports.GlobalEnvironmentRecord=exports.FunctionEnvironmentRecord=exports.ObjectEnvironmentRecord=exports.DeclarativeEnvironmentRecord=exports.EnvironmentRecord=void 0;var t=_interopRequireWildcard(__webpack_require__(21));var _completions=__webpack_require__(18);var _errors=__webpack_require__(3);var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _parse=_interopRequireDefault(__webpack_require__(227));
var _invariant=_interopRequireDefault(__webpack_require__(9));var _traverseFast=_interopRequireDefault(__webpack_require__(279));var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _index3=__webpack_require__(15);var _PrimitiveValue=_interopRequireDefault(__webpack_require__(13));var _generator=__webpack_require__(237);var _sourceMap=__webpack_require__(280);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:
{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _defineProperty(obj,key,value){if(key in obj)Object.defineProperty(obj,key,{value:value,
enumerable:true,configurable:true,writable:true});else obj[key]=value;return obj}function deriveGetBinding(realm,binding){let types=_index3.TypesDomain.topVal;let values=_index3.ValuesDomain.topVal;(0,_invariant.default)(realm.generator!==undefined);return realm.generator.deriveAbstract(types,values,[],(0,_generator.createOperationDescriptor)("GET_BINDING",{binding}))}function materializeBinding(realm,binding){let realmGenerator=realm.generator;(0,_invariant.default)(realmGenerator!==undefined);let value=
binding.value;if(value!==undefined&&value!==realm.intrinsics.undefined)realmGenerator.emitBindingAssignment(binding,value)}function leakBinding(binding){let realm=binding.environment.realm;if(!binding.hasLeaked){if(binding.mutable)realm.recordModifiedBinding(binding).hasLeaked=true;else binding.hasLeaked=true;materializeBinding(realm,binding)}if(binding.mutable===true)binding.value=undefined}class EnvironmentRecord{constructor(realm){(0,_invariant.default)(realm,"expected realm");this.realm=realm;
this.isReadOnly=false;this.id=EnvironmentRecord.nextId++;this.creatingOptimizedFunction=realm.currentOptimizedFunction}HasBinding(N){(0,_invariant.default)(false,"abstract method; please override")}CreateMutableBinding(N,D,isGlobal){(0,_invariant.default)(false,"abstract method; please override")}CreateImmutableBinding(N,S,isGlobal,skipRecord){(0,_invariant.default)(false,"abstract method; please override")}InitializeBinding(N,V,skipRecord){(0,_invariant.default)(false,"abstract method; please override")}SetMutableBinding(N,
V,S){(0,_invariant.default)(false,"abstract method; please override")}GetBindingValue(N,S){(0,_invariant.default)(false,"abstract method; please override")}DeleteBinding(N){(0,_invariant.default)(false,"abstract method; please override")}HasThisBinding(){(0,_invariant.default)(false,"abstract method; please override")}GetThisBinding(){(0,_invariant.default)(false,"abstract method; please override")}HasSuperBinding(){(0,_invariant.default)(false,"abstract method; please override")}WithBaseObject(){(0,
_invariant.default)(false,"abstract method; please override")}BindThisValue(V){(0,_invariant.default)(false,"abstract method; please override")}}exports.EnvironmentRecord=EnvironmentRecord;_defineProperty(EnvironmentRecord,"nextId",0);class DeclarativeEnvironmentRecord extends EnvironmentRecord{constructor(realm){super(realm);this.bindings=Object.create(null);this.frozen=false}HasBinding(N){let envRec=this;if(envRec.bindings[N])return true;return false}CreateMutableBinding(N,D,isGlobal=false){(0,
_invariant.default)(!this.frozen);let realm=this.realm;let envRec=this;(0,_invariant.default)(!envRec.bindings[N],`shouldn't have the binding ${N}`);this.bindings[N]=realm.recordModifiedBinding({initialized:false,mutable:true,deletable:D,environment:envRec,name:N,isGlobal:isGlobal,mightHaveBeenCaptured:false,hasLeaked:false});return realm.intrinsics.undefined}CreateImmutableBinding(N,S,isGlobal=false,skipRecord=false){(0,_invariant.default)(!this.frozen);let realm=this.realm;let envRec=this;(0,_invariant.default)(!envRec.bindings[N],
`shouldn't have the binding ${N}`);let binding={initialized:false,strict:S,deletable:false,environment:envRec,name:N,isGlobal:isGlobal,mightHaveBeenCaptured:false,hasLeaked:false};this.bindings[N]=skipRecord?binding:realm.recordModifiedBinding(binding);return realm.intrinsics.undefined}InitializeBinding(N,V,skipRecord=false){let envRec=this;let binding=envRec.bindings[N];(0,_invariant.default)(binding&&binding.initialized!==true,`shouldn't have the binding ${N}`);if(!skipRecord)this.realm.recordModifiedBinding(binding,
V).value=V;else binding.value=V;binding.initialized=true;return this.realm.intrinsics.empty}SetMutableBinding(N,V,_S){let S=_S;let realm=this.realm;let envRec=this;let binding=envRec.bindings[N];if(!binding){if(S)throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError,`${N} not found`);envRec.CreateMutableBinding(N,true);envRec.InitializeBinding(N,V);return this.realm.intrinsics.empty}if(binding.strict===true)S=true;if(binding.initialized!==true)throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError,
`${N} has not yet been initialized`);else if(binding.mutable)if(binding.hasLeaked){_singletons.Leak.value(realm,V);(0,_invariant.default)(realm.generator);realm.generator.emitBindingAssignment(binding,V)}else realm.recordModifiedBinding(binding,V).value=V;else if(S)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"attempt to change immutable binding");return this.realm.intrinsics.empty}GetBindingValue(N,S){let realm=this.realm;let envRec=this;let binding=envRec.bindings[N];(0,_invariant.default)(binding,
"expected binding");if(!binding.initialized)throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError);if(binding.hasLeaked&&binding.mutable)return deriveGetBinding(realm,binding);(0,_invariant.default)(binding.value);return binding.value}DeleteBinding(N){(0,_invariant.default)(!this.frozen);let envRec=this;(0,_invariant.default)(envRec.bindings[N],"expected binding to exist");if(!envRec.bindings[N].deletable)return false;this.realm.recordModifiedBinding(envRec.bindings[N]).value=undefined;
delete envRec.bindings[N];return true}HasThisBinding(){return false}HasSuperBinding(){return false}WithBaseObject(){return this.realm.intrinsics.undefined}}exports.DeclarativeEnvironmentRecord=DeclarativeEnvironmentRecord;class ObjectEnvironmentRecord extends EnvironmentRecord{constructor(realm,obj){super(realm);this.object=obj}HasBinding(N){let realm=this.realm;let envRec=this;let bindings=this.object;let foundBinding=(0,_index2.HasProperty)(realm,bindings,N);if(!foundBinding)return false;if(!envRec.withEnvironment)return true;
let unscopables=(0,_index2.Get)(realm,bindings,realm.intrinsics.SymbolUnscopables);if(unscopables instanceof _index.ObjectValue||unscopables instanceof _index.AbstractObjectValue){let blocked=_singletons.To.ToBooleanPartial(realm,(0,_index2.Get)(realm,unscopables,N));if(blocked)return false}unscopables.throwIfNotConcrete();return true}CreateMutableBinding(N,D){let realm=this.realm;let envRec=this;let bindings=envRec.object;let configValue=D?true:false;return new _index.BooleanValue(realm,_singletons.Properties.DefinePropertyOrThrow(realm,
bindings,N,new _descriptors.PropertyDescriptor({value:realm.intrinsics.undefined,writable:true,enumerable:true,configurable:configValue})))}CreateImmutableBinding(N,S){(0,_invariant.default)(false)}InitializeBinding(N,V){let envRec=this;return envRec.SetMutableBinding(N,V,false)}SetMutableBinding(N,V,S){let realm=this.realm;let envRec=this;let bindings=envRec.object;return new _index.BooleanValue(realm,_singletons.Properties.Set(realm,bindings,N,V,S))}GetBindingValue(N,S){let realm=this.realm;let envRec=
this;let bindings=envRec.object;let value=(0,_index2.HasProperty)(realm,bindings,N);if(!value)if(!S)return realm.intrinsics.undefined;else throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError);return(0,_index2.Get)(realm,bindings,N)}DeleteBinding(N){let envRec=this;let bindings=envRec.object;return bindings.$Delete(N)}HasThisBinding(){return false}HasSuperBinding(){return false}WithBaseObject(){let envRec=this;if(envRec.withEnvironment)return envRec.object;return this.realm.intrinsics.undefined}}
exports.ObjectEnvironmentRecord=ObjectEnvironmentRecord;class FunctionEnvironmentRecord extends DeclarativeEnvironmentRecord{BindThisValue(V){let realm=this.realm;let envRec=this;(0,_invariant.default)(envRec.$ThisBindingStatus!=="lexical","this binding status shouldn't be lexical");if(envRec.$ThisBindingStatus==="initialized")throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError);envRec.$ThisValue=V;envRec.$ThisBindingStatus="initialized";return V}HasThisBinding(){let envRec=this;
return envRec.$ThisBindingStatus==="lexical"?false:true}HasSuperBinding(){let envRec=this;if(envRec.$ThisBindingStatus==="lexical")return false;if(envRec.$HomeObject===undefined)return false;else return true}GetThisBinding(){let realm=this.realm;let envRec=this;(0,_invariant.default)(envRec.$ThisBindingStatus!=="lexical","this binding status shouldn't be lexical");if(envRec.$ThisBindingStatus==="uninitialized")throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError);return envRec.$ThisValue}GetSuperBase(){let envRec=
this;let home=envRec.$HomeObject;if(home===undefined)return this.realm.intrinsics.undefined;(0,_invariant.default)(home instanceof _index.ObjectValue,"expected object value");return home.$GetPrototypeOf()}}exports.FunctionEnvironmentRecord=FunctionEnvironmentRecord;class GlobalEnvironmentRecord extends EnvironmentRecord{HasBinding(N){let envRec=this;let DclRec=envRec.$DeclarativeRecord;if(DclRec.HasBinding(N))return true;let ObjRec=envRec.$ObjectRecord;return ObjRec.HasBinding(N)}CreateMutableBinding(N,
D){let realm=this.realm;let envRec=this;let DclRec=envRec.$DeclarativeRecord;if(DclRec.HasBinding(N))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return DclRec.CreateMutableBinding(N,D,true)}CreateImmutableBinding(N,S){let realm=this.realm;let envRec=this;let DclRec=envRec.$DeclarativeRecord;if(DclRec.HasBinding(N))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return DclRec.CreateImmutableBinding(N,S,true)}InitializeBinding(N,V){let envRec=this;let DclRec=
envRec.$DeclarativeRecord;if(DclRec.HasBinding(N))return DclRec.InitializeBinding(N,V);let ObjRec=envRec.$ObjectRecord;return ObjRec.InitializeBinding(N,V)}SetMutableBinding(N,V,S){let envRec=this;let DclRec=envRec.$DeclarativeRecord;if(DclRec.HasBinding(N))return DclRec.SetMutableBinding(N,V,S);let ObjRec=envRec.$ObjectRecord;return ObjRec.SetMutableBinding(N,V,S)}GetBindingValue(N,S){let envRec=this;let DclRec=envRec.$DeclarativeRecord;if(DclRec.HasBinding(N))return DclRec.GetBindingValue(N,S);
let ObjRec=envRec.$ObjectRecord;return ObjRec.GetBindingValue(N,S)}DeleteBinding(N){let realm=this.realm;let envRec=this;let DclRec=envRec.$DeclarativeRecord;if(DclRec.HasBinding(N))return DclRec.DeleteBinding(N);let ObjRec=envRec.$ObjectRecord;let globalObject=ObjRec.object;let existingProp=(0,_index2.HasOwnProperty)(realm,globalObject,N);if(existingProp){let status=ObjRec.DeleteBinding(N);if(status){let varNames=envRec.$VarNames;if(varNames.indexOf(N)>=0)varNames.splice(varNames.indexOf(N),1)}return status}return true}HasThisBinding(){return true}HasSuperBinding(){return true}WithBaseObject(){return this.realm.intrinsics.undefined}GetThisBinding(){let envRec=
this;(0,_invariant.default)(envRec.$GlobalThisValue);return envRec.$GlobalThisValue}HasVarDeclaration(N){let envRec=this;let varDeclaredNames=envRec.$VarNames;if(varDeclaredNames.indexOf(N)>=0)return true;return false}HasLexicalDeclaration(N){let envRec=this;let DclRec=envRec.$DeclarativeRecord;return DclRec.HasBinding(N)}HasRestrictedGlobalProperty(N){let envRec=this;let ObjRec=envRec.$ObjectRecord;let globalObject=ObjRec.object;let existingProp=globalObject.$GetOwnProperty(N);if(!existingProp)return false;
_singletons.Properties.ThrowIfMightHaveBeenDeleted(existingProp);existingProp=existingProp.throwIfNotConcrete(globalObject.$Realm);if(existingProp.configurable)return false;return true}CanDeclareGlobalVar(N){let realm=this.realm;let envRec=this;let ObjRec=envRec.$ObjectRecord;let globalObject=ObjRec.object;let hasProperty=(0,_index2.HasOwnProperty)(realm,globalObject,N);if(hasProperty)return true;return(0,_index2.IsExtensible)(realm,globalObject)}CanDeclareGlobalFunction(N){let realm=this.realm;let envRec=
this;let ObjRec=envRec.$ObjectRecord;let globalObject=ObjRec.object;let existingProp=globalObject.$GetOwnProperty(N);if(!existingProp)return(0,_index2.IsExtensible)(realm,globalObject);_singletons.Properties.ThrowIfMightHaveBeenDeleted(existingProp);existingProp=existingProp.throwIfNotConcrete(globalObject.$Realm);if(existingProp.configurable)return true;if((0,_index2.IsDataDescriptor)(realm,existingProp)&&existingProp.writable&&existingProp.enumerable)return true;return false}CreateGlobalVarBinding(N,
D){let realm=this.realm;let envRec=this;let ObjRec=envRec.$ObjectRecord;let globalObject=ObjRec.object;let hasProperty=(0,_index2.HasOwnProperty)(realm,globalObject,N);let extensible=(0,_index2.IsExtensible)(realm,globalObject);if(!hasProperty&&extensible){ObjRec.CreateMutableBinding(N,D);ObjRec.InitializeBinding(N,this.realm.intrinsics.undefined)}let varDeclaredNames=envRec.$VarNames;if(varDeclaredNames.indexOf(N)<0)varDeclaredNames.push(N)}CreateGlobalFunctionBinding(N,V,D){let envRec=this;let ObjRec=
envRec.$ObjectRecord;let globalObject=ObjRec.object;let existingProp=globalObject.$GetOwnProperty(N);if(existingProp)existingProp=existingProp.throwIfNotConcrete(globalObject.$Realm);let desc;if(!existingProp||existingProp.configurable)desc=new _descriptors.PropertyDescriptor({value:V,writable:true,enumerable:true,configurable:D});else{_singletons.Properties.ThrowIfMightHaveBeenDeleted(existingProp);desc=new _descriptors.PropertyDescriptor({value:V})}_singletons.Properties.DefinePropertyOrThrow(this.realm,
globalObject,N,desc);_singletons.Properties.Set(this.realm,globalObject,N,V,false);let varDeclaredNames=envRec.$VarNames;if(varDeclaredNames.indexOf(N)<0)varDeclaredNames.push(N)}}exports.GlobalEnvironmentRecord=GlobalEnvironmentRecord;let uid=0;class LexicalEnvironment{constructor(realm){(0,_invariant.default)(realm,"expected realm");this.realm=realm;this.destroyed=false;this._uid=uid++}destroy(){this.destroyed=true;if(this.environmentRecord instanceof DeclarativeEnvironmentRecord)this.environmentRecord.frozen=
true}assignToGlobal(globalAst,rvalue){let globalValue=this.evaluate(globalAst,false);_singletons.Properties.PutValue(this.realm,globalValue,rvalue)}evaluateCompletionDeref(ast,strictCode,metadata){let result=this.evaluateCompletion(ast,strictCode,metadata);if(result instanceof Reference)result=_singletons.Environment.GetValue(this.realm,result);return result}evaluateCompletion(ast,strictCode,metadata){try{return this.evaluate(ast,strictCode,metadata)}catch(err){if(err instanceof _completions.AbruptCompletion)return err;
if(err instanceof Error)throw err;throw new _errors.FatalError(err);}}evaluateAbstractCompletion(ast,strictCode,metadata){try{return this.evaluateAbstract(ast,strictCode,metadata)}catch(err){if(err instanceof _completions.Completion)return err;if(err instanceof Error)throw err;if(err instanceof Object)throw new _errors.FatalError(err.constructor.name+": "+err);throw new _errors.FatalError(err);}}concatenateAndParse(sources,sourceType="script"){let asts=[];let code={};let directives=[];for(let source of sources)try{let node=
this.realm.statistics.parsing.measure(()=>(0,_parse.default)(this.realm,source.fileContents,source.filePath,sourceType));let sourceMapContents=source.sourceMapContents;if(sourceMapContents&&sourceMapContents.length>0)this.realm.statistics.fixupSourceLocations.measure(()=>this.fixupSourceLocations(node,sourceMapContents));this.realm.statistics.fixupFilenames.measure(()=>this.fixupFilenames(node));asts=asts.concat(node.program.body);code[source.filePath]=source.fileContents;directives=directives.concat(node.program.directives)}catch(e){if(e instanceof
_completions.ThrowCompletion){let error=e.value;if(error instanceof _index.ObjectValue){let message=error._SafeGetDataPropertyValue("message");if(message instanceof _index.StringValue){message.value=`Syntax error: ${message.value}`;e.location.source=source.filePath;e.location.start={line:e.location.line,column:e.location.column};e.location.end={line:e.location.line,column:e.location.column};let diagnostic=new _errors.CompilerDiagnostic(message.value,e.location,"PP1004","FatalError");this.realm.handleError(diagnostic);
throw new _errors.FatalError(message.value);}}}throw e;}return[t.file(t.program(asts,directives)),code]}executeSources(sources,sourceType="script",onParse=undefined){let context=new _realm.ExecutionContext;context.lexicalEnvironment=this;context.variableEnvironment=this;context.realm=this.realm;this.realm.pushContext(context);let res,code;try{let ast;[ast,code]=this.concatenateAndParse(sources,sourceType);if(onParse)onParse(ast);res=this.realm.statistics.evaluation.measure(()=>this.evaluateCompletion(ast,
false))}finally{this.realm.popContext(context);this.realm.onDestroyScope(context.lexicalEnvironment);if(!this.destroyed)this.realm.onDestroyScope(this);(0,_invariant.default)(this.realm.activeLexicalEnvironments.size===0,`expected 0 active lexical environments, got ${this.realm.activeLexicalEnvironments.size}`)}if(res instanceof _completions.AbruptCompletion)return[res,code];return[_singletons.Environment.GetValue(this.realm,res),code]}execute(code,filename,map="",sourceType="script",onParse=undefined){let context=
new _realm.ExecutionContext;context.lexicalEnvironment=this;context.variableEnvironment=this;context.realm=this.realm;this.realm.pushContext(context);let ast,res;try{try{ast=(0,_parse.default)(this.realm,code,filename,sourceType)}catch(e){if(e instanceof _completions.ThrowCompletion)return e;throw e;}if(onParse)onParse(ast);if(map.length>0)this.fixupSourceLocations(ast,map);this.fixupFilenames(ast);res=this.evaluateCompletion(ast,false)}finally{this.realm.popContext(context);if(context.lexicalEnvironment!==
this)this.realm.onDestroyScope(context.lexicalEnvironment);(0,_invariant.default)(this.realm.activeLexicalEnvironments.size===1,`expected 1 active lexical environment, got ${this.realm.activeLexicalEnvironments.size}`)}if(res instanceof _completions.AbruptCompletion)return res;return _singletons.Environment.GetValue(this.realm,res)}fixupSourceLocations(ast,map){(0,_invariant.default)(ast.loc);const source=ast.loc.source;(0,_invariant.default)(source!==undefined);const positionInfos=new Map;const smc=
new _sourceMap.SourceMapConsumer(map);(0,_traverseFast.default)(ast,(node)=>{fixupLocation(node.loc);fixupComments(node.leadingComments);fixupComments(node.innerComments);fixupComments(node.trailingComments);return false});function getPositionInfo(position){let info=positionInfos.get(position);if(info===undefined)positionInfos.set(position,info={originalPosition:smc.originalPositionFor(position),newLine:position.line,newColumn:position.column,rewritten:false});return info}function fixupPosition(pos,
posInfo,otherInfo){if(posInfo.rewritten)return;let posOriginalPosition=posInfo.originalPosition;if(posOriginalPosition.source==null){(0,_invariant.default)(otherInfo.originalPosition.source!=null);let deltaLine=posInfo.newLine-otherInfo.newLine;pos.line=Math.max(1,otherInfo.originalPosition.line+deltaLine);let deltaColumn=posInfo.newColumn-otherInfo.newColumn;pos.column=Math.max(0,otherInfo.originalPosition.column+deltaColumn)}else{(0,_invariant.default)(typeof posOriginalPosition.line==="number");
pos.line=posOriginalPosition.line;(0,_invariant.default)(typeof posOriginalPosition.column==="number");pos.column=posOriginalPosition.column}posInfo.rewritten=true}function fixupLocation(loc){if(loc==null)return;if(loc.source===undefined||loc.source!==source)return;let locStart=loc.start;let locEnd=loc.end;let startInfo=getPositionInfo(locStart);let endInfo=getPositionInfo(locEnd);let startOriginalPosition=startInfo.originalPosition;let endOriginalPosition=endInfo.originalPosition;(0,_invariant.default)(startInfo.newLine<=
endInfo.newLine);(0,_invariant.default)(startInfo.newLine!==endInfo.newLine||startInfo.newColumn<=endInfo.newColumn);let originalSource=startOriginalPosition.source||endOriginalPosition.source;if(originalSource){fixupPosition(locStart,startInfo,endInfo);fixupPosition(locEnd,endInfo,startInfo);(0,_invariant.default)(loc.source!==originalSource);loc.source=originalSource}}function fixupComments(comments){if(!comments)return;for(let c of comments)fixupLocation(c.loc)}}fixupFilenames(ast){(0,_traverseFast.default)(ast,
(node)=>{let loc=node.loc;if(loc&&loc.source)loc.filename=loc.source;else node.loc=null;fixupComments(node.leadingComments);fixupComments(node.innerComments);fixupComments(node.trailingComments);return false});function fixupComments(comments){if(!comments)return;for(let c of comments){let loc=c.loc;if(loc&&loc.source)loc.filename=loc.source;else c.loc=null}}}evaluate(ast,strictCode,metadata){if(this.realm.debuggerInstance)this.realm.debuggerInstance.checkForActions(ast);if(this.realm.debugReproManager)if(ast.loc!==
undefined&&ast.loc!==null&&ast.loc.source)this.realm.debugReproManager.addSourceFile(ast.loc.source);let res=this.evaluateAbstract(ast,strictCode,metadata);(0,_invariant.default)(res instanceof _index.Value||res instanceof Reference,ast.type);return res}evaluateAbstract(ast,strictCode,metadata){this.realm.currentLocation=ast.loc;this.realm.testTimeout();let evaluator=this.realm.evaluators[ast.type];if(evaluator){this.realm.statistics.evaluatedNodes++;let result=evaluator(ast,strictCode,this,this.realm,
metadata);return result}throw new TypeError(`Unsupported node type ${ast.type}`);}evaluateDeref(ast,strictCode,metadata){let result=this.evaluate(ast,strictCode,metadata);if(result instanceof Reference)result=_singletons.Environment.GetValue(this.realm,result);return result}}exports.LexicalEnvironment=LexicalEnvironment;function isValidBaseValue(val){return val instanceof _index.AbstractValue||val instanceof _index.ObjectValue||mightBecomeAnObject(val)}function mightBecomeAnObject(base){let type=
base.getType();return type===_index.Value||type===_PrimitiveValue.default||type===_index.BooleanValue||type===_index.StringValue||type===_index.SymbolValue||type===_index.NumberValue||type===_index.IntegralValue}class Reference{constructor(base,refName,strict,thisValue){(0,_invariant.default)(base instanceof _index.AbstractObjectValue||base===undefined||base instanceof _index.ObjectValue||base instanceof EnvironmentRecord||mightBecomeAnObject(base));this.base=base;this.referencedName=refName;(0,_invariant.default)(!(refName instanceof
_index.AbstractValue)||!(refName.mightNotBeString()&&refName.mightNotBeNumber()&&!refName.isSimpleObject())||refName.$Realm.isInPureScope());this.strict=strict;this.thisValue=thisValue;(0,_invariant.default)(thisValue===undefined||!(base instanceof EnvironmentRecord))}}exports.Reference=Reference},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var _exportNames={react:true,assertNode:true,createTypeAnnotationBasedOnTypeof:true,createUnionTypeAnnotation:true,
cloneNode:true,clone:true,cloneDeep:true,cloneWithoutLoc:true,addComment:true,addComments:true,inheritInnerComments:true,inheritLeadingComments:true,inheritsComments:true,inheritTrailingComments:true,removeComments:true,ensureBlock:true,toBindingIdentifierName:true,toBlock:true,toComputedKey:true,toExpression:true,toIdentifier:true,toKeyAlias:true,toSequenceExpression:true,toStatement:true,valueToNode:true,appendToMemberExpression:true,inherits:true,prependToMemberExpression:true,removeProperties:true,
removePropertiesDeep:true,removeTypeDuplicates:true,getBindingIdentifiers:true,getOuterBindingIdentifiers:true,traverse:true,traverseFast:true,shallowEqual:true,is:true,isBinding:true,isBlockScoped:true,isImmutable:true,isLet:true,isNode:true,isNodesEquivalent:true,isReferenced:true,isScope:true,isSpecifierDefault:true,isType:true,isValidES3Identifier:true,isValidIdentifier:true,isVar:true,matchesPattern:true,validate:true,buildMatchMemberExpression:true};Object.defineProperty(exports,"assertNode",
{enumerable:true,get:function(){return _assertNode.default}});Object.defineProperty(exports,"createTypeAnnotationBasedOnTypeof",{enumerable:true,get:function(){return _createTypeAnnotationBasedOnTypeof.default}});Object.defineProperty(exports,"createUnionTypeAnnotation",{enumerable:true,get:function(){return _createUnionTypeAnnotation.default}});Object.defineProperty(exports,"cloneNode",{enumerable:true,get:function(){return _cloneNode.default}});Object.defineProperty(exports,"clone",{enumerable:true,
get:function(){return _clone.default}});Object.defineProperty(exports,"cloneDeep",{enumerable:true,get:function(){return _cloneDeep.default}});Object.defineProperty(exports,"cloneWithoutLoc",{enumerable:true,get:function(){return _cloneWithoutLoc.default}});Object.defineProperty(exports,"addComment",{enumerable:true,get:function(){return _addComment.default}});Object.defineProperty(exports,"addComments",{enumerable:true,get:function(){return _addComments.default}});Object.defineProperty(exports,"inheritInnerComments",
{enumerable:true,get:function(){return _inheritInnerComments.default}});Object.defineProperty(exports,"inheritLeadingComments",{enumerable:true,get:function(){return _inheritLeadingComments.default}});Object.defineProperty(exports,"inheritsComments",{enumerable:true,get:function(){return _inheritsComments.default}});Object.defineProperty(exports,"inheritTrailingComments",{enumerable:true,get:function(){return _inheritTrailingComments.default}});Object.defineProperty(exports,"removeComments",{enumerable:true,
get:function(){return _removeComments.default}});Object.defineProperty(exports,"ensureBlock",{enumerable:true,get:function(){return _ensureBlock.default}});Object.defineProperty(exports,"toBindingIdentifierName",{enumerable:true,get:function(){return _toBindingIdentifierName.default}});Object.defineProperty(exports,"toBlock",{enumerable:true,get:function(){return _toBlock.default}});Object.defineProperty(exports,"toComputedKey",{enumerable:true,get:function(){return _toComputedKey.default}});Object.defineProperty(exports,
"toExpression",{enumerable:true,get:function(){return _toExpression.default}});Object.defineProperty(exports,"toIdentifier",{enumerable:true,get:function(){return _toIdentifier.default}});Object.defineProperty(exports,"toKeyAlias",{enumerable:true,get:function(){return _toKeyAlias.default}});Object.defineProperty(exports,"toSequenceExpression",{enumerable:true,get:function(){return _toSequenceExpression.default}});Object.defineProperty(exports,"toStatement",{enumerable:true,get:function(){return _toStatement.default}});
Object.defineProperty(exports,"valueToNode",{enumerable:true,get:function(){return _valueToNode.default}});Object.defineProperty(exports,"appendToMemberExpression",{enumerable:true,get:function(){return _appendToMemberExpression.default}});Object.defineProperty(exports,"inherits",{enumerable:true,get:function(){return _inherits.default}});Object.defineProperty(exports,"prependToMemberExpression",{enumerable:true,get:function(){return _prependToMemberExpression.default}});Object.defineProperty(exports,
"removeProperties",{enumerable:true,get:function(){return _removeProperties.default}});Object.defineProperty(exports,"removePropertiesDeep",{enumerable:true,get:function(){return _removePropertiesDeep.default}});Object.defineProperty(exports,"removeTypeDuplicates",{enumerable:true,get:function(){return _removeTypeDuplicates.default}});Object.defineProperty(exports,"getBindingIdentifiers",{enumerable:true,get:function(){return _getBindingIdentifiers.default}});Object.defineProperty(exports,"getOuterBindingIdentifiers",
{enumerable:true,get:function(){return _getOuterBindingIdentifiers.default}});Object.defineProperty(exports,"traverse",{enumerable:true,get:function(){return _traverse.default}});Object.defineProperty(exports,"traverseFast",{enumerable:true,get:function(){return _traverseFast.default}});Object.defineProperty(exports,"shallowEqual",{enumerable:true,get:function(){return _shallowEqual.default}});Object.defineProperty(exports,"is",{enumerable:true,get:function(){return _is.default}});Object.defineProperty(exports,
"isBinding",{enumerable:true,get:function(){return _isBinding.default}});Object.defineProperty(exports,"isBlockScoped",{enumerable:true,get:function(){return _isBlockScoped.default}});Object.defineProperty(exports,"isImmutable",{enumerable:true,get:function(){return _isImmutable.default}});Object.defineProperty(exports,"isLet",{enumerable:true,get:function(){return _isLet.default}});Object.defineProperty(exports,"isNode",{enumerable:true,get:function(){return _isNode.default}});Object.defineProperty(exports,
"isNodesEquivalent",{enumerable:true,get:function(){return _isNodesEquivalent.default}});Object.defineProperty(exports,"isReferenced",{enumerable:true,get:function(){return _isReferenced.default}});Object.defineProperty(exports,"isScope",{enumerable:true,get:function(){return _isScope.default}});Object.defineProperty(exports,"isSpecifierDefault",{enumerable:true,get:function(){return _isSpecifierDefault.default}});Object.defineProperty(exports,"isType",{enumerable:true,get:function(){return _isType.default}});
Object.defineProperty(exports,"isValidES3Identifier",{enumerable:true,get:function(){return _isValidES3Identifier.default}});Object.defineProperty(exports,"isValidIdentifier",{enumerable:true,get:function(){return _isValidIdentifier.default}});Object.defineProperty(exports,"isVar",{enumerable:true,get:function(){return _isVar.default}});Object.defineProperty(exports,"matchesPattern",{enumerable:true,get:function(){return _matchesPattern.default}});Object.defineProperty(exports,"validate",{enumerable:true,
get:function(){return _validate.default}});Object.defineProperty(exports,"buildMatchMemberExpression",{enumerable:true,get:function(){return _buildMatchMemberExpression.default}});exports.react=void 0;var _isReactComponent=_interopRequireDefault(__webpack_require__(22));var _isCompatTag=_interopRequireDefault(__webpack_require__(27));var _buildChildren=_interopRequireDefault(__webpack_require__(28));var _assertNode=_interopRequireDefault(__webpack_require__(160));var _generated=__webpack_require__(162);
Object.keys(_generated).forEach(function(key){if(key==="default"||key==="__esModule")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _generated[key]}})});var _createTypeAnnotationBasedOnTypeof=_interopRequireDefault(__webpack_require__(163));var _createUnionTypeAnnotation=_interopRequireDefault(__webpack_require__(164));var _generated2=__webpack_require__(30);Object.keys(_generated2).forEach(function(key){if(key===
"default"||key==="__esModule")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _generated2[key]}})});var _cloneNode=_interopRequireDefault(__webpack_require__(166));var _clone=_interopRequireDefault(__webpack_require__(167));var _cloneDeep=_interopRequireDefault(__webpack_require__(168));var _cloneWithoutLoc=_interopRequireDefault(__webpack_require__(169));var _addComment=_interopRequireDefault(__webpack_require__(170));
var _addComments=_interopRequireDefault(__webpack_require__(171));var _inheritInnerComments=_interopRequireDefault(__webpack_require__(172));var _inheritLeadingComments=_interopRequireDefault(__webpack_require__(189));var _inheritsComments=_interopRequireDefault(__webpack_require__(190));var _inheritTrailingComments=_interopRequireDefault(__webpack_require__(191));var _removeComments=_interopRequireDefault(__webpack_require__(192));var _generated3=__webpack_require__(193);Object.keys(_generated3).forEach(function(key){if(key===
"default"||key==="__esModule")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _generated3[key]}})});var _constants=__webpack_require__(149);Object.keys(_constants).forEach(function(key){if(key==="default"||key==="__esModule")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _constants[key]}})});var _ensureBlock=
_interopRequireDefault(__webpack_require__(194));var _toBindingIdentifierName=_interopRequireDefault(__webpack_require__(196));var _toBlock=_interopRequireDefault(__webpack_require__(195));var _toComputedKey=_interopRequireDefault(__webpack_require__(198));var _toExpression=_interopRequireDefault(__webpack_require__(199));var _toIdentifier=_interopRequireDefault(__webpack_require__(197));var _toKeyAlias=_interopRequireDefault(__webpack_require__(200));var _toSequenceExpression=_interopRequireDefault(__webpack_require__(204));
var _toStatement=_interopRequireDefault(__webpack_require__(207));var _valueToNode=_interopRequireDefault(__webpack_require__(208));var _definitions=__webpack_require__(141);Object.keys(_definitions).forEach(function(key){if(key==="default"||key==="__esModule")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _definitions[key]}})});var _appendToMemberExpression=_interopRequireDefault(__webpack_require__(212));
var _inherits=_interopRequireDefault(__webpack_require__(213));var _prependToMemberExpression=_interopRequireDefault(__webpack_require__(214));var _removeProperties=_interopRequireDefault(__webpack_require__(203));var _removePropertiesDeep=_interopRequireDefault(__webpack_require__(201));var _removeTypeDuplicates=_interopRequireDefault(__webpack_require__(165));var _getBindingIdentifiers=_interopRequireDefault(__webpack_require__(206));var _getOuterBindingIdentifiers=_interopRequireDefault(__webpack_require__(215));
var _traverse=_interopRequireDefault(__webpack_require__(216));var _traverseFast=_interopRequireDefault(__webpack_require__(202));var _shallowEqual=_interopRequireDefault(__webpack_require__(26));var _is=_interopRequireDefault(__webpack_require__(151));var _isBinding=_interopRequireDefault(__webpack_require__(217));var _isBlockScoped=_interopRequireDefault(__webpack_require__(218));var _isImmutable=_interopRequireDefault(__webpack_require__(220));var _isLet=_interopRequireDefault(__webpack_require__(219));
var _isNode=_interopRequireDefault(__webpack_require__(161));var _isNodesEquivalent=_interopRequireDefault(__webpack_require__(221));var _isReferenced=_interopRequireDefault(__webpack_require__(222));var _isScope=_interopRequireDefault(__webpack_require__(223));var _isSpecifierDefault=_interopRequireDefault(__webpack_require__(224));var _isType=_interopRequireDefault(__webpack_require__(152));var _isValidES3Identifier=_interopRequireDefault(__webpack_require__(225));var _isValidIdentifier=_interopRequireDefault(__webpack_require__(144));
var _isVar=_interopRequireDefault(__webpack_require__(226));var _matchesPattern=_interopRequireDefault(__webpack_require__(24));var _validate=_interopRequireDefault(__webpack_require__(159));var _buildMatchMemberExpression=_interopRequireDefault(__webpack_require__(23));var _generated4=__webpack_require__(25);Object.keys(_generated4).forEach(function(key){if(key==="default"||key==="__esModule")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;Object.defineProperty(exports,key,
{enumerable:true,get:function(){return _generated4[key]}})});function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const react={isReactComponent:_isReactComponent.default,isCompatTag:_isCompatTag.default,buildChildren:_buildChildren.default};exports.react=react},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _buildMatchMemberExpression=_interopRequireDefault(__webpack_require__(23));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}const isReactComponent=(0,_buildMatchMemberExpression.default)("React.Component");var _default=isReactComponent;exports.default=_default},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=buildMatchMemberExpression;var _matchesPattern=_interopRequireDefault(__webpack_require__(24));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function buildMatchMemberExpression(match,
allowPartial){const parts=match.split(".");return(member)=>(0,_matchesPattern.default)(member,parts,allowPartial)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=matchesPattern;var _generated=__webpack_require__(25);function matchesPattern(member,match,allowPartial){if(!(0,_generated.isMemberExpression)(member))return false;const parts=Array.isArray(match)?match:match.split(".");const nodes=[];let node;for(node=member;(0,_generated.isMemberExpression)(node);node=
node.object)nodes.push(node.property);nodes.push(node);if(nodes.length<parts.length)return false;if(!allowPartial&&nodes.length>parts.length)return false;for(let i=0,j=nodes.length-1;i<parts.length;i++,j--){const node=nodes[j];let value;if((0,_generated.isIdentifier)(node))value=node.name;else if((0,_generated.isStringLiteral)(node))value=node.value;else return false;if(parts[i]!==value)return false}return true}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.isArrayExpression=isArrayExpression;exports.isAssignmentExpression=isAssignmentExpression;exports.isBinaryExpression=isBinaryExpression;exports.isInterpreterDirective=isInterpreterDirective;exports.isDirective=isDirective;exports.isDirectiveLiteral=isDirectiveLiteral;exports.isBlockStatement=isBlockStatement;exports.isBreakStatement=isBreakStatement;exports.isCallExpression=isCallExpression;exports.isCatchClause=isCatchClause;exports.isConditionalExpression=isConditionalExpression;
exports.isContinueStatement=isContinueStatement;exports.isDebuggerStatement=isDebuggerStatement;exports.isDoWhileStatement=isDoWhileStatement;exports.isEmptyStatement=isEmptyStatement;exports.isExpressionStatement=isExpressionStatement;exports.isFile=isFile;exports.isForInStatement=isForInStatement;exports.isForStatement=isForStatement;exports.isFunctionDeclaration=isFunctionDeclaration;exports.isFunctionExpression=isFunctionExpression;exports.isIdentifier=isIdentifier;exports.isIfStatement=isIfStatement;
exports.isLabeledStatement=isLabeledStatement;exports.isStringLiteral=isStringLiteral;exports.isNumericLiteral=isNumericLiteral;exports.isNullLiteral=isNullLiteral;exports.isBooleanLiteral=isBooleanLiteral;exports.isRegExpLiteral=isRegExpLiteral;exports.isLogicalExpression=isLogicalExpression;exports.isMemberExpression=isMemberExpression;exports.isNewExpression=isNewExpression;exports.isProgram=isProgram;exports.isObjectExpression=isObjectExpression;exports.isObjectMethod=isObjectMethod;exports.isObjectProperty=
isObjectProperty;exports.isRestElement=isRestElement;exports.isReturnStatement=isReturnStatement;exports.isSequenceExpression=isSequenceExpression;exports.isSwitchCase=isSwitchCase;exports.isSwitchStatement=isSwitchStatement;exports.isThisExpression=isThisExpression;exports.isThrowStatement=isThrowStatement;exports.isTryStatement=isTryStatement;exports.isUnaryExpression=isUnaryExpression;exports.isUpdateExpression=isUpdateExpression;exports.isVariableDeclaration=isVariableDeclaration;exports.isVariableDeclarator=
isVariableDeclarator;exports.isWhileStatement=isWhileStatement;exports.isWithStatement=isWithStatement;exports.isAssignmentPattern=isAssignmentPattern;exports.isArrayPattern=isArrayPattern;exports.isArrowFunctionExpression=isArrowFunctionExpression;exports.isClassBody=isClassBody;exports.isClassDeclaration=isClassDeclaration;exports.isClassExpression=isClassExpression;exports.isExportAllDeclaration=isExportAllDeclaration;exports.isExportDefaultDeclaration=isExportDefaultDeclaration;exports.isExportNamedDeclaration=
isExportNamedDeclaration;exports.isExportSpecifier=isExportSpecifier;exports.isForOfStatement=isForOfStatement;exports.isImportDeclaration=isImportDeclaration;exports.isImportDefaultSpecifier=isImportDefaultSpecifier;exports.isImportNamespaceSpecifier=isImportNamespaceSpecifier;exports.isImportSpecifier=isImportSpecifier;exports.isMetaProperty=isMetaProperty;exports.isClassMethod=isClassMethod;exports.isObjectPattern=isObjectPattern;exports.isSpreadElement=isSpreadElement;exports.isSuper=isSuper;
exports.isTaggedTemplateExpression=isTaggedTemplateExpression;exports.isTemplateElement=isTemplateElement;exports.isTemplateLiteral=isTemplateLiteral;exports.isYieldExpression=isYieldExpression;exports.isAnyTypeAnnotation=isAnyTypeAnnotation;exports.isArrayTypeAnnotation=isArrayTypeAnnotation;exports.isBooleanTypeAnnotation=isBooleanTypeAnnotation;exports.isBooleanLiteralTypeAnnotation=isBooleanLiteralTypeAnnotation;exports.isNullLiteralTypeAnnotation=isNullLiteralTypeAnnotation;exports.isClassImplements=
isClassImplements;exports.isDeclareClass=isDeclareClass;exports.isDeclareFunction=isDeclareFunction;exports.isDeclareInterface=isDeclareInterface;exports.isDeclareModule=isDeclareModule;exports.isDeclareModuleExports=isDeclareModuleExports;exports.isDeclareTypeAlias=isDeclareTypeAlias;exports.isDeclareOpaqueType=isDeclareOpaqueType;exports.isDeclareVariable=isDeclareVariable;exports.isDeclareExportDeclaration=isDeclareExportDeclaration;exports.isDeclareExportAllDeclaration=isDeclareExportAllDeclaration;
exports.isDeclaredPredicate=isDeclaredPredicate;exports.isExistsTypeAnnotation=isExistsTypeAnnotation;exports.isFunctionTypeAnnotation=isFunctionTypeAnnotation;exports.isFunctionTypeParam=isFunctionTypeParam;exports.isGenericTypeAnnotation=isGenericTypeAnnotation;exports.isInferredPredicate=isInferredPredicate;exports.isInterfaceExtends=isInterfaceExtends;exports.isInterfaceDeclaration=isInterfaceDeclaration;exports.isInterfaceTypeAnnotation=isInterfaceTypeAnnotation;exports.isIntersectionTypeAnnotation=
isIntersectionTypeAnnotation;exports.isMixedTypeAnnotation=isMixedTypeAnnotation;exports.isEmptyTypeAnnotation=isEmptyTypeAnnotation;exports.isNullableTypeAnnotation=isNullableTypeAnnotation;exports.isNumberLiteralTypeAnnotation=isNumberLiteralTypeAnnotation;exports.isNumberTypeAnnotation=isNumberTypeAnnotation;exports.isObjectTypeAnnotation=isObjectTypeAnnotation;exports.isObjectTypeInternalSlot=isObjectTypeInternalSlot;exports.isObjectTypeCallProperty=isObjectTypeCallProperty;exports.isObjectTypeIndexer=
isObjectTypeIndexer;exports.isObjectTypeProperty=isObjectTypeProperty;exports.isObjectTypeSpreadProperty=isObjectTypeSpreadProperty;exports.isOpaqueType=isOpaqueType;exports.isQualifiedTypeIdentifier=isQualifiedTypeIdentifier;exports.isStringLiteralTypeAnnotation=isStringLiteralTypeAnnotation;exports.isStringTypeAnnotation=isStringTypeAnnotation;exports.isThisTypeAnnotation=isThisTypeAnnotation;exports.isTupleTypeAnnotation=isTupleTypeAnnotation;exports.isTypeofTypeAnnotation=isTypeofTypeAnnotation;
exports.isTypeAlias=isTypeAlias;exports.isTypeAnnotation=isTypeAnnotation;exports.isTypeCastExpression=isTypeCastExpression;exports.isTypeParameter=isTypeParameter;exports.isTypeParameterDeclaration=isTypeParameterDeclaration;exports.isTypeParameterInstantiation=isTypeParameterInstantiation;exports.isUnionTypeAnnotation=isUnionTypeAnnotation;exports.isVariance=isVariance;exports.isVoidTypeAnnotation=isVoidTypeAnnotation;exports.isJSXAttribute=isJSXAttribute;exports.isJSXClosingElement=isJSXClosingElement;
exports.isJSXElement=isJSXElement;exports.isJSXEmptyExpression=isJSXEmptyExpression;exports.isJSXExpressionContainer=isJSXExpressionContainer;exports.isJSXSpreadChild=isJSXSpreadChild;exports.isJSXIdentifier=isJSXIdentifier;exports.isJSXMemberExpression=isJSXMemberExpression;exports.isJSXNamespacedName=isJSXNamespacedName;exports.isJSXOpeningElement=isJSXOpeningElement;exports.isJSXSpreadAttribute=isJSXSpreadAttribute;exports.isJSXText=isJSXText;exports.isJSXFragment=isJSXFragment;exports.isJSXOpeningFragment=
isJSXOpeningFragment;exports.isJSXClosingFragment=isJSXClosingFragment;exports.isNoop=isNoop;exports.isParenthesizedExpression=isParenthesizedExpression;exports.isAwaitExpression=isAwaitExpression;exports.isBindExpression=isBindExpression;exports.isClassProperty=isClassProperty;exports.isOptionalMemberExpression=isOptionalMemberExpression;exports.isPipelineTopicExpression=isPipelineTopicExpression;exports.isPipelineBareFunction=isPipelineBareFunction;exports.isPipelinePrimaryTopicReference=isPipelinePrimaryTopicReference;
exports.isOptionalCallExpression=isOptionalCallExpression;exports.isClassPrivateProperty=isClassPrivateProperty;exports.isClassPrivateMethod=isClassPrivateMethod;exports.isImport=isImport;exports.isDecorator=isDecorator;exports.isDoExpression=isDoExpression;exports.isExportDefaultSpecifier=isExportDefaultSpecifier;exports.isExportNamespaceSpecifier=isExportNamespaceSpecifier;exports.isPrivateName=isPrivateName;exports.isBigIntLiteral=isBigIntLiteral;exports.isTSParameterProperty=isTSParameterProperty;
exports.isTSDeclareFunction=isTSDeclareFunction;exports.isTSDeclareMethod=isTSDeclareMethod;exports.isTSQualifiedName=isTSQualifiedName;exports.isTSCallSignatureDeclaration=isTSCallSignatureDeclaration;exports.isTSConstructSignatureDeclaration=isTSConstructSignatureDeclaration;exports.isTSPropertySignature=isTSPropertySignature;exports.isTSMethodSignature=isTSMethodSignature;exports.isTSIndexSignature=isTSIndexSignature;exports.isTSAnyKeyword=isTSAnyKeyword;exports.isTSUnknownKeyword=isTSUnknownKeyword;
exports.isTSNumberKeyword=isTSNumberKeyword;exports.isTSObjectKeyword=isTSObjectKeyword;exports.isTSBooleanKeyword=isTSBooleanKeyword;exports.isTSStringKeyword=isTSStringKeyword;exports.isTSSymbolKeyword=isTSSymbolKeyword;exports.isTSVoidKeyword=isTSVoidKeyword;exports.isTSUndefinedKeyword=isTSUndefinedKeyword;exports.isTSNullKeyword=isTSNullKeyword;exports.isTSNeverKeyword=isTSNeverKeyword;exports.isTSThisType=isTSThisType;exports.isTSFunctionType=isTSFunctionType;exports.isTSConstructorType=isTSConstructorType;
exports.isTSTypeReference=isTSTypeReference;exports.isTSTypePredicate=isTSTypePredicate;exports.isTSTypeQuery=isTSTypeQuery;exports.isTSTypeLiteral=isTSTypeLiteral;exports.isTSArrayType=isTSArrayType;exports.isTSTupleType=isTSTupleType;exports.isTSOptionalType=isTSOptionalType;exports.isTSRestType=isTSRestType;exports.isTSUnionType=isTSUnionType;exports.isTSIntersectionType=isTSIntersectionType;exports.isTSConditionalType=isTSConditionalType;exports.isTSInferType=isTSInferType;exports.isTSParenthesizedType=
isTSParenthesizedType;exports.isTSTypeOperator=isTSTypeOperator;exports.isTSIndexedAccessType=isTSIndexedAccessType;exports.isTSMappedType=isTSMappedType;exports.isTSLiteralType=isTSLiteralType;exports.isTSExpressionWithTypeArguments=isTSExpressionWithTypeArguments;exports.isTSInterfaceDeclaration=isTSInterfaceDeclaration;exports.isTSInterfaceBody=isTSInterfaceBody;exports.isTSTypeAliasDeclaration=isTSTypeAliasDeclaration;exports.isTSAsExpression=isTSAsExpression;exports.isTSTypeAssertion=isTSTypeAssertion;
exports.isTSEnumDeclaration=isTSEnumDeclaration;exports.isTSEnumMember=isTSEnumMember;exports.isTSModuleDeclaration=isTSModuleDeclaration;exports.isTSModuleBlock=isTSModuleBlock;exports.isTSImportType=isTSImportType;exports.isTSImportEqualsDeclaration=isTSImportEqualsDeclaration;exports.isTSExternalModuleReference=isTSExternalModuleReference;exports.isTSNonNullExpression=isTSNonNullExpression;exports.isTSExportAssignment=isTSExportAssignment;exports.isTSNamespaceExportDeclaration=isTSNamespaceExportDeclaration;
exports.isTSTypeAnnotation=isTSTypeAnnotation;exports.isTSTypeParameterInstantiation=isTSTypeParameterInstantiation;exports.isTSTypeParameterDeclaration=isTSTypeParameterDeclaration;exports.isTSTypeParameter=isTSTypeParameter;exports.isExpression=isExpression;exports.isBinary=isBinary;exports.isScopable=isScopable;exports.isBlockParent=isBlockParent;exports.isBlock=isBlock;exports.isStatement=isStatement;exports.isTerminatorless=isTerminatorless;exports.isCompletionStatement=isCompletionStatement;
exports.isConditional=isConditional;exports.isLoop=isLoop;exports.isWhile=isWhile;exports.isExpressionWrapper=isExpressionWrapper;exports.isFor=isFor;exports.isForXStatement=isForXStatement;exports.isFunction=isFunction;exports.isFunctionParent=isFunctionParent;exports.isPureish=isPureish;exports.isDeclaration=isDeclaration;exports.isPatternLike=isPatternLike;exports.isLVal=isLVal;exports.isTSEntityName=isTSEntityName;exports.isLiteral=isLiteral;exports.isImmutable=isImmutable;exports.isUserWhitespacable=
isUserWhitespacable;exports.isMethod=isMethod;exports.isObjectMember=isObjectMember;exports.isProperty=isProperty;exports.isUnaryLike=isUnaryLike;exports.isPattern=isPattern;exports.isClass=isClass;exports.isModuleDeclaration=isModuleDeclaration;exports.isExportDeclaration=isExportDeclaration;exports.isModuleSpecifier=isModuleSpecifier;exports.isFlow=isFlow;exports.isFlowType=isFlowType;exports.isFlowBaseAnnotation=isFlowBaseAnnotation;exports.isFlowDeclaration=isFlowDeclaration;exports.isFlowPredicate=
isFlowPredicate;exports.isJSX=isJSX;exports.isPrivate=isPrivate;exports.isTSTypeElement=isTSTypeElement;exports.isTSType=isTSType;exports.isNumberLiteral=isNumberLiteral;exports.isRegexLiteral=isRegexLiteral;exports.isRestProperty=isRestProperty;exports.isSpreadProperty=isSpreadProperty;var _shallowEqual=_interopRequireDefault(__webpack_require__(26));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function isArrayExpression(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="ArrayExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isAssignmentExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="AssignmentExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isBinaryExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="BinaryExpression")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isInterpreterDirective(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="InterpreterDirective")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDirective(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Directive")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isDirectiveLiteral(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DirectiveLiteral")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isBlockStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="BlockStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isBreakStatement(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="BreakStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isCallExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="CallExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isCatchClause(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="CatchClause")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isConditionalExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ConditionalExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isContinueStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ContinueStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isDebuggerStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DebuggerStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDoWhileStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DoWhileStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isEmptyStatement(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="EmptyStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isExpressionStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ExpressionStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFile(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="File")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isForInStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ForInStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isForStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ForStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFunctionDeclaration(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="FunctionDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFunctionExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="FunctionExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isIdentifier(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType===
"Identifier")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isIfStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="IfStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isLabeledStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="LabeledStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isStringLiteral(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="StringLiteral")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isNumericLiteral(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="NumericLiteral")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isNullLiteral(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="NullLiteral")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isBooleanLiteral(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="BooleanLiteral")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isRegExpLiteral(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="RegExpLiteral")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isLogicalExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="LogicalExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isMemberExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="MemberExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isNewExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="NewExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isProgram(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Program")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isObjectExpression(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="ObjectExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isObjectMethod(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ObjectMethod")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isObjectProperty(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ObjectProperty")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isRestElement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="RestElement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isReturnStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ReturnStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isSequenceExpression(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="SequenceExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isSwitchCase(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="SwitchCase")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isSwitchStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="SwitchStatement")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isThisExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ThisExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isThrowStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ThrowStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);
return false}function isTryStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TryStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isUnaryExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="UnaryExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isUpdateExpression(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="UpdateExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isVariableDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="VariableDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isVariableDeclarator(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="VariableDeclarator")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isWhileStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="WhileStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isWithStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="WithStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);
return false}function isAssignmentPattern(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="AssignmentPattern")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isArrayPattern(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ArrayPattern")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isArrowFunctionExpression(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="ArrowFunctionExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isClassBody(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ClassBody")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isClassDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ClassDeclaration")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isClassExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ClassExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isExportAllDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ExportAllDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isExportDefaultDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ExportDefaultDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isExportNamedDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ExportNamedDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isExportSpecifier(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ExportSpecifier")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isForOfStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ForOfStatement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isImportDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType===
"ImportDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isImportDefaultSpecifier(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ImportDefaultSpecifier")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isImportNamespaceSpecifier(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ImportNamespaceSpecifier")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isImportSpecifier(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ImportSpecifier")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isMetaProperty(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="MetaProperty")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);
return false}function isClassMethod(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ClassMethod")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isObjectPattern(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ObjectPattern")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isSpreadElement(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="SpreadElement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isSuper(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Super")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTaggedTemplateExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TaggedTemplateExpression")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isTemplateElement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TemplateElement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTemplateLiteral(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TemplateLiteral")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isYieldExpression(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="YieldExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isAnyTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="AnyTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isArrayTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType===
"ArrayTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isBooleanTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="BooleanTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isBooleanLiteralTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="BooleanLiteralTypeAnnotation")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isNullLiteralTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="NullLiteralTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isClassImplements(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ClassImplements")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isDeclareClass(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DeclareClass")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDeclareFunction(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DeclareFunction")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDeclareInterface(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="DeclareInterface")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDeclareModule(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DeclareModule")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDeclareModuleExports(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DeclareModuleExports")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDeclareTypeAlias(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DeclareTypeAlias")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDeclareOpaqueType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DeclareOpaqueType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isDeclareVariable(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DeclareVariable")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDeclareExportDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DeclareExportDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDeclareExportAllDeclaration(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DeclareExportAllDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDeclaredPredicate(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DeclaredPredicate")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isExistsTypeAnnotation(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="ExistsTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFunctionTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="FunctionTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFunctionTypeParam(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="FunctionTypeParam")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isGenericTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="GenericTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isInferredPredicate(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="InferredPredicate")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isInterfaceExtends(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="InterfaceExtends")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isInterfaceDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="InterfaceDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isInterfaceTypeAnnotation(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="InterfaceTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isIntersectionTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="IntersectionTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isMixedTypeAnnotation(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="MixedTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isEmptyTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="EmptyTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isNullableTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="NullableTypeAnnotation")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isNumberLiteralTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="NumberLiteralTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isNumberTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="NumberTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,
_shallowEqual.default)(node,opts);return false}function isObjectTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ObjectTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isObjectTypeInternalSlot(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ObjectTypeInternalSlot")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}
function isObjectTypeCallProperty(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ObjectTypeCallProperty")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isObjectTypeIndexer(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ObjectTypeIndexer")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isObjectTypeProperty(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="ObjectTypeProperty")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isObjectTypeSpreadProperty(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ObjectTypeSpreadProperty")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isOpaqueType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="OpaqueType")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isQualifiedTypeIdentifier(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="QualifiedTypeIdentifier")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isStringLiteralTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="StringLiteralTypeAnnotation")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isStringTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="StringTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isThisTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ThisTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);
return false}function isTupleTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TupleTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTypeofTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TypeofTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTypeAlias(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="TypeAlias")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTypeCastExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TypeCastExpression")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTypeParameter(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TypeParameter")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTypeParameterDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TypeParameterDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isTypeParameterInstantiation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TypeParameterInstantiation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isUnionTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="UnionTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isVariance(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Variance")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isVoidTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="VoidTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXAttribute(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType===
"JSXAttribute")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXClosingElement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXClosingElement")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXElement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXElement")if(typeof opts==="undefined")return true;else return(0,
_shallowEqual.default)(node,opts);return false}function isJSXEmptyExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXEmptyExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXExpressionContainer(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXExpressionContainer")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}
function isJSXSpreadChild(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXSpreadChild")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXIdentifier(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXIdentifier")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXMemberExpression(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="JSXMemberExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXNamespacedName(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXNamespacedName")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXOpeningElement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXOpeningElement")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXSpreadAttribute(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXSpreadAttribute")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXText(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXText")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}
function isJSXFragment(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXFragment")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXOpeningFragment(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSXOpeningFragment")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isJSXClosingFragment(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="JSXClosingFragment")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isNoop(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Noop")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isParenthesizedExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ParenthesizedExpression")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isAwaitExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="AwaitExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isBindExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="BindExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isClassProperty(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ClassProperty")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isOptionalMemberExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="OptionalMemberExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isPipelineTopicExpression(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="PipelineTopicExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isPipelineBareFunction(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="PipelineBareFunction")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isPipelinePrimaryTopicReference(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="PipelinePrimaryTopicReference")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isOptionalCallExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="OptionalCallExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isClassPrivateProperty(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ClassPrivateProperty")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isClassPrivateMethod(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ClassPrivateMethod")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isImport(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Import")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDecorator(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="Decorator")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDoExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="DoExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isExportDefaultSpecifier(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ExportDefaultSpecifier")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isExportNamespaceSpecifier(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ExportNamespaceSpecifier")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isPrivateName(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="PrivateName")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}
function isBigIntLiteral(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="BigIntLiteral")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSParameterProperty(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSParameterProperty")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSDeclareFunction(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="TSDeclareFunction")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSDeclareMethod(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSDeclareMethod")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSQualifiedName(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSQualifiedName")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSCallSignatureDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSCallSignatureDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSConstructSignatureDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSConstructSignatureDeclaration")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isTSPropertySignature(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSPropertySignature")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSMethodSignature(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSMethodSignature")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}
function isTSIndexSignature(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSIndexSignature")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSAnyKeyword(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSAnyKeyword")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSUnknownKeyword(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="TSUnknownKeyword")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSNumberKeyword(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSNumberKeyword")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSObjectKeyword(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSObjectKeyword")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isTSBooleanKeyword(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSBooleanKeyword")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSStringKeyword(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSStringKeyword")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}
function isTSSymbolKeyword(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSSymbolKeyword")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSVoidKeyword(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSVoidKeyword")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSUndefinedKeyword(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="TSUndefinedKeyword")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSNullKeyword(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSNullKeyword")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSNeverKeyword(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSNeverKeyword")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isTSThisType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSThisType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSFunctionType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSFunctionType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSConstructorType(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSConstructorType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTypeReference(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSTypeReference")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTypePredicate(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType===
"TSTypePredicate")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTypeQuery(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSTypeQuery")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTypeLiteral(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSTypeLiteral")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isTSArrayType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSArrayType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTupleType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSTupleType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSOptionalType(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="TSOptionalType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSRestType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSRestType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSUnionType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSUnionType")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isTSIntersectionType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSIntersectionType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSConditionalType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSConditionalType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}
function isTSInferType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSInferType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSParenthesizedType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSParenthesizedType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTypeOperator(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="TSTypeOperator")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSIndexedAccessType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSIndexedAccessType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSMappedType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSMappedType")if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isTSLiteralType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSLiteralType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSExpressionWithTypeArguments(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSExpressionWithTypeArguments")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isTSInterfaceDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSInterfaceDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSInterfaceBody(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSInterfaceBody")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTypeAliasDeclaration(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSTypeAliasDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSAsExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSAsExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTypeAssertion(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType===
"TSTypeAssertion")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSEnumDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSEnumDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSEnumMember(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSEnumMember")if(typeof opts==="undefined")return true;else return(0,
_shallowEqual.default)(node,opts);return false}function isTSModuleDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSModuleDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSModuleBlock(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSModuleBlock")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSImportType(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSImportType")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSImportEqualsDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSImportEqualsDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSExternalModuleReference(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="TSExternalModuleReference")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSNonNullExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSNonNullExpression")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSExportAssignment(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSExportAssignment")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSNamespaceExportDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSNamespaceExportDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTypeAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSTypeAnnotation")if(typeof opts==="undefined")return true;else return(0,
_shallowEqual.default)(node,opts);return false}function isTSTypeParameterInstantiation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSTypeParameterInstantiation")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTypeParameterDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSTypeParameterDeclaration")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isTSTypeParameter(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSTypeParameter")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isExpression(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Expression"||"ArrayExpression"===nodeType||"AssignmentExpression"===nodeType||"BinaryExpression"===nodeType||"CallExpression"===nodeType||"ConditionalExpression"===nodeType||
"FunctionExpression"===nodeType||"Identifier"===nodeType||"StringLiteral"===nodeType||"NumericLiteral"===nodeType||"NullLiteral"===nodeType||"BooleanLiteral"===nodeType||"RegExpLiteral"===nodeType||"LogicalExpression"===nodeType||"MemberExpression"===nodeType||"NewExpression"===nodeType||"ObjectExpression"===nodeType||"SequenceExpression"===nodeType||"ThisExpression"===nodeType||"UnaryExpression"===nodeType||"UpdateExpression"===nodeType||"ArrowFunctionExpression"===nodeType||"ClassExpression"===
nodeType||"MetaProperty"===nodeType||"Super"===nodeType||"TaggedTemplateExpression"===nodeType||"TemplateLiteral"===nodeType||"YieldExpression"===nodeType||"TypeCastExpression"===nodeType||"JSXElement"===nodeType||"JSXFragment"===nodeType||"ParenthesizedExpression"===nodeType||"AwaitExpression"===nodeType||"BindExpression"===nodeType||"OptionalMemberExpression"===nodeType||"PipelinePrimaryTopicReference"===nodeType||"OptionalCallExpression"===nodeType||"Import"===nodeType||"DoExpression"===nodeType||
"BigIntLiteral"===nodeType||"TSAsExpression"===nodeType||"TSTypeAssertion"===nodeType||"TSNonNullExpression"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isBinary(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Binary"||"BinaryExpression"===nodeType||"LogicalExpression"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isScopable(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Scopable"||"BlockStatement"===nodeType||"CatchClause"===nodeType||"DoWhileStatement"===nodeType||"ForInStatement"===nodeType||"ForStatement"===nodeType||"FunctionDeclaration"===nodeType||"FunctionExpression"===nodeType||"Program"===nodeType||"ObjectMethod"===nodeType||"SwitchStatement"===nodeType||"WhileStatement"===nodeType||"ArrowFunctionExpression"===nodeType||"ClassDeclaration"===nodeType||"ClassExpression"===nodeType||"ForOfStatement"===
nodeType||"ClassMethod"===nodeType||"ClassPrivateMethod"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isBlockParent(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="BlockParent"||"BlockStatement"===nodeType||"CatchClause"===nodeType||"DoWhileStatement"===nodeType||"ForInStatement"===nodeType||"ForStatement"===nodeType||"FunctionDeclaration"===nodeType||"FunctionExpression"===nodeType||"Program"===
nodeType||"ObjectMethod"===nodeType||"SwitchStatement"===nodeType||"WhileStatement"===nodeType||"ArrowFunctionExpression"===nodeType||"ForOfStatement"===nodeType||"ClassMethod"===nodeType||"ClassPrivateMethod"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isBlock(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Block"||"BlockStatement"===nodeType||"Program"===nodeType)if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Statement"||"BlockStatement"===nodeType||"BreakStatement"===nodeType||"ContinueStatement"===nodeType||"DebuggerStatement"===nodeType||"DoWhileStatement"===nodeType||"EmptyStatement"===nodeType||"ExpressionStatement"===nodeType||"ForInStatement"===nodeType||"ForStatement"===nodeType||"FunctionDeclaration"===nodeType||"IfStatement"===nodeType||"LabeledStatement"===
nodeType||"ReturnStatement"===nodeType||"SwitchStatement"===nodeType||"ThrowStatement"===nodeType||"TryStatement"===nodeType||"VariableDeclaration"===nodeType||"WhileStatement"===nodeType||"WithStatement"===nodeType||"ClassDeclaration"===nodeType||"ExportAllDeclaration"===nodeType||"ExportDefaultDeclaration"===nodeType||"ExportNamedDeclaration"===nodeType||"ForOfStatement"===nodeType||"ImportDeclaration"===nodeType||"DeclareClass"===nodeType||"DeclareFunction"===nodeType||"DeclareInterface"===nodeType||
"DeclareModule"===nodeType||"DeclareModuleExports"===nodeType||"DeclareTypeAlias"===nodeType||"DeclareOpaqueType"===nodeType||"DeclareVariable"===nodeType||"DeclareExportDeclaration"===nodeType||"DeclareExportAllDeclaration"===nodeType||"InterfaceDeclaration"===nodeType||"OpaqueType"===nodeType||"TypeAlias"===nodeType||"TSDeclareFunction"===nodeType||"TSInterfaceDeclaration"===nodeType||"TSTypeAliasDeclaration"===nodeType||"TSEnumDeclaration"===nodeType||"TSModuleDeclaration"===nodeType||"TSImportEqualsDeclaration"===
nodeType||"TSExportAssignment"===nodeType||"TSNamespaceExportDeclaration"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTerminatorless(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Terminatorless"||"BreakStatement"===nodeType||"ContinueStatement"===nodeType||"ReturnStatement"===nodeType||"ThrowStatement"===nodeType||"YieldExpression"===nodeType||"AwaitExpression"===nodeType)if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isCompletionStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="CompletionStatement"||"BreakStatement"===nodeType||"ContinueStatement"===nodeType||"ReturnStatement"===nodeType||"ThrowStatement"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isConditional(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType===
"Conditional"||"ConditionalExpression"===nodeType||"IfStatement"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isLoop(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Loop"||"DoWhileStatement"===nodeType||"ForInStatement"===nodeType||"ForStatement"===nodeType||"WhileStatement"===nodeType||"ForOfStatement"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isWhile(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="While"||"DoWhileStatement"===nodeType||"WhileStatement"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isExpressionWrapper(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ExpressionWrapper"||"ExpressionStatement"===nodeType||"TypeCastExpression"===nodeType||"ParenthesizedExpression"===nodeType)if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFor(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="For"||"ForInStatement"===nodeType||"ForStatement"===nodeType||"ForOfStatement"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isForXStatement(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ForXStatement"||"ForInStatement"===nodeType||
"ForOfStatement"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFunction(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Function"||"FunctionDeclaration"===nodeType||"FunctionExpression"===nodeType||"ObjectMethod"===nodeType||"ArrowFunctionExpression"===nodeType||"ClassMethod"===nodeType||"ClassPrivateMethod"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isFunctionParent(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="FunctionParent"||"FunctionDeclaration"===nodeType||"FunctionExpression"===nodeType||"ObjectMethod"===nodeType||"ArrowFunctionExpression"===nodeType||"ClassMethod"===nodeType||"ClassPrivateMethod"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isPureish(node,opts){if(!node)return false;const nodeType=node.type;
if(nodeType==="Pureish"||"FunctionDeclaration"===nodeType||"FunctionExpression"===nodeType||"StringLiteral"===nodeType||"NumericLiteral"===nodeType||"NullLiteral"===nodeType||"BooleanLiteral"===nodeType||"ArrowFunctionExpression"===nodeType||"ClassDeclaration"===nodeType||"ClassExpression"===nodeType||"BigIntLiteral"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isDeclaration(node,opts){if(!node)return false;const nodeType=
node.type;if(nodeType==="Declaration"||"FunctionDeclaration"===nodeType||"VariableDeclaration"===nodeType||"ClassDeclaration"===nodeType||"ExportAllDeclaration"===nodeType||"ExportDefaultDeclaration"===nodeType||"ExportNamedDeclaration"===nodeType||"ImportDeclaration"===nodeType||"DeclareClass"===nodeType||"DeclareFunction"===nodeType||"DeclareInterface"===nodeType||"DeclareModule"===nodeType||"DeclareModuleExports"===nodeType||"DeclareTypeAlias"===nodeType||"DeclareOpaqueType"===nodeType||"DeclareVariable"===
nodeType||"DeclareExportDeclaration"===nodeType||"DeclareExportAllDeclaration"===nodeType||"InterfaceDeclaration"===nodeType||"OpaqueType"===nodeType||"TypeAlias"===nodeType||"TSDeclareFunction"===nodeType||"TSInterfaceDeclaration"===nodeType||"TSTypeAliasDeclaration"===nodeType||"TSEnumDeclaration"===nodeType||"TSModuleDeclaration"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isPatternLike(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="PatternLike"||"Identifier"===nodeType||"RestElement"===nodeType||"AssignmentPattern"===nodeType||"ArrayPattern"===nodeType||"ObjectPattern"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isLVal(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="LVal"||"Identifier"===nodeType||"MemberExpression"===nodeType||"RestElement"===nodeType||"AssignmentPattern"===nodeType||
"ArrayPattern"===nodeType||"ObjectPattern"===nodeType||"TSParameterProperty"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSEntityName(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSEntityName"||"Identifier"===nodeType||"TSQualifiedName"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isLiteral(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="Literal"||"StringLiteral"===nodeType||"NumericLiteral"===nodeType||"NullLiteral"===nodeType||"BooleanLiteral"===nodeType||"RegExpLiteral"===nodeType||"TemplateLiteral"===nodeType||"BigIntLiteral"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isImmutable(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Immutable"||"StringLiteral"===nodeType||"NumericLiteral"===
nodeType||"NullLiteral"===nodeType||"BooleanLiteral"===nodeType||"JSXAttribute"===nodeType||"JSXClosingElement"===nodeType||"JSXElement"===nodeType||"JSXExpressionContainer"===nodeType||"JSXSpreadChild"===nodeType||"JSXOpeningElement"===nodeType||"JSXText"===nodeType||"JSXFragment"===nodeType||"JSXOpeningFragment"===nodeType||"JSXClosingFragment"===nodeType||"BigIntLiteral"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isUserWhitespacable(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="UserWhitespacable"||"ObjectMethod"===nodeType||"ObjectProperty"===nodeType||"ObjectTypeInternalSlot"===nodeType||"ObjectTypeCallProperty"===nodeType||"ObjectTypeIndexer"===nodeType||"ObjectTypeProperty"===nodeType||"ObjectTypeSpreadProperty"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isMethod(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType===
"Method"||"ObjectMethod"===nodeType||"ClassMethod"===nodeType||"ClassPrivateMethod"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isObjectMember(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ObjectMember"||"ObjectMethod"===nodeType||"ObjectProperty"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isProperty(node,opts){if(!node)return false;
const nodeType=node.type;if(nodeType==="Property"||"ObjectProperty"===nodeType||"ClassProperty"===nodeType||"ClassPrivateProperty"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isUnaryLike(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="UnaryLike"||"UnaryExpression"===nodeType||"SpreadElement"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}
function isPattern(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Pattern"||"AssignmentPattern"===nodeType||"ArrayPattern"===nodeType||"ObjectPattern"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isClass(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Class"||"ClassDeclaration"===nodeType||"ClassExpression"===nodeType)if(typeof opts==="undefined")return true;else return(0,
_shallowEqual.default)(node,opts);return false}function isModuleDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ModuleDeclaration"||"ExportAllDeclaration"===nodeType||"ExportDefaultDeclaration"===nodeType||"ExportNamedDeclaration"===nodeType||"ImportDeclaration"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isExportDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType===
"ExportDeclaration"||"ExportAllDeclaration"===nodeType||"ExportDefaultDeclaration"===nodeType||"ExportNamedDeclaration"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isModuleSpecifier(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="ModuleSpecifier"||"ExportSpecifier"===nodeType||"ImportDefaultSpecifier"===nodeType||"ImportNamespaceSpecifier"===nodeType||"ImportSpecifier"===nodeType||"ExportDefaultSpecifier"===
nodeType||"ExportNamespaceSpecifier"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFlow(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Flow"||"AnyTypeAnnotation"===nodeType||"ArrayTypeAnnotation"===nodeType||"BooleanTypeAnnotation"===nodeType||"BooleanLiteralTypeAnnotation"===nodeType||"NullLiteralTypeAnnotation"===nodeType||"ClassImplements"===nodeType||"DeclareClass"===nodeType||"DeclareFunction"===
nodeType||"DeclareInterface"===nodeType||"DeclareModule"===nodeType||"DeclareModuleExports"===nodeType||"DeclareTypeAlias"===nodeType||"DeclareOpaqueType"===nodeType||"DeclareVariable"===nodeType||"DeclareExportDeclaration"===nodeType||"DeclareExportAllDeclaration"===nodeType||"DeclaredPredicate"===nodeType||"ExistsTypeAnnotation"===nodeType||"FunctionTypeAnnotation"===nodeType||"FunctionTypeParam"===nodeType||"GenericTypeAnnotation"===nodeType||"InferredPredicate"===nodeType||"InterfaceExtends"===
nodeType||"InterfaceDeclaration"===nodeType||"InterfaceTypeAnnotation"===nodeType||"IntersectionTypeAnnotation"===nodeType||"MixedTypeAnnotation"===nodeType||"EmptyTypeAnnotation"===nodeType||"NullableTypeAnnotation"===nodeType||"NumberLiteralTypeAnnotation"===nodeType||"NumberTypeAnnotation"===nodeType||"ObjectTypeAnnotation"===nodeType||"ObjectTypeInternalSlot"===nodeType||"ObjectTypeCallProperty"===nodeType||"ObjectTypeIndexer"===nodeType||"ObjectTypeProperty"===nodeType||"ObjectTypeSpreadProperty"===
nodeType||"OpaqueType"===nodeType||"QualifiedTypeIdentifier"===nodeType||"StringLiteralTypeAnnotation"===nodeType||"StringTypeAnnotation"===nodeType||"ThisTypeAnnotation"===nodeType||"TupleTypeAnnotation"===nodeType||"TypeofTypeAnnotation"===nodeType||"TypeAlias"===nodeType||"TypeAnnotation"===nodeType||"TypeCastExpression"===nodeType||"TypeParameter"===nodeType||"TypeParameterDeclaration"===nodeType||"TypeParameterInstantiation"===nodeType||"UnionTypeAnnotation"===nodeType||"Variance"===nodeType||
"VoidTypeAnnotation"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFlowType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="FlowType"||"AnyTypeAnnotation"===nodeType||"ArrayTypeAnnotation"===nodeType||"BooleanTypeAnnotation"===nodeType||"BooleanLiteralTypeAnnotation"===nodeType||"NullLiteralTypeAnnotation"===nodeType||"ExistsTypeAnnotation"===nodeType||"FunctionTypeAnnotation"===nodeType||"GenericTypeAnnotation"===
nodeType||"InterfaceTypeAnnotation"===nodeType||"IntersectionTypeAnnotation"===nodeType||"MixedTypeAnnotation"===nodeType||"EmptyTypeAnnotation"===nodeType||"NullableTypeAnnotation"===nodeType||"NumberLiteralTypeAnnotation"===nodeType||"NumberTypeAnnotation"===nodeType||"ObjectTypeAnnotation"===nodeType||"StringLiteralTypeAnnotation"===nodeType||"StringTypeAnnotation"===nodeType||"ThisTypeAnnotation"===nodeType||"TupleTypeAnnotation"===nodeType||"TypeofTypeAnnotation"===nodeType||"UnionTypeAnnotation"===
nodeType||"VoidTypeAnnotation"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFlowBaseAnnotation(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="FlowBaseAnnotation"||"AnyTypeAnnotation"===nodeType||"BooleanTypeAnnotation"===nodeType||"NullLiteralTypeAnnotation"===nodeType||"MixedTypeAnnotation"===nodeType||"EmptyTypeAnnotation"===nodeType||"NumberTypeAnnotation"===nodeType||"StringTypeAnnotation"===
nodeType||"ThisTypeAnnotation"===nodeType||"VoidTypeAnnotation"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFlowDeclaration(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="FlowDeclaration"||"DeclareClass"===nodeType||"DeclareFunction"===nodeType||"DeclareInterface"===nodeType||"DeclareModule"===nodeType||"DeclareModuleExports"===nodeType||"DeclareTypeAlias"===nodeType||"DeclareOpaqueType"===nodeType||
"DeclareVariable"===nodeType||"DeclareExportDeclaration"===nodeType||"DeclareExportAllDeclaration"===nodeType||"InterfaceDeclaration"===nodeType||"OpaqueType"===nodeType||"TypeAlias"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isFlowPredicate(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="FlowPredicate"||"DeclaredPredicate"===nodeType||"InferredPredicate"===nodeType)if(typeof opts==="undefined")return true;
else return(0,_shallowEqual.default)(node,opts);return false}function isJSX(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="JSX"||"JSXAttribute"===nodeType||"JSXClosingElement"===nodeType||"JSXElement"===nodeType||"JSXEmptyExpression"===nodeType||"JSXExpressionContainer"===nodeType||"JSXSpreadChild"===nodeType||"JSXIdentifier"===nodeType||"JSXMemberExpression"===nodeType||"JSXNamespacedName"===nodeType||"JSXOpeningElement"===nodeType||"JSXSpreadAttribute"===nodeType||"JSXText"===
nodeType||"JSXFragment"===nodeType||"JSXOpeningFragment"===nodeType||"JSXClosingFragment"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isPrivate(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="Private"||"ClassPrivateProperty"===nodeType||"ClassPrivateMethod"===nodeType||"PrivateName"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSTypeElement(node,
opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSTypeElement"||"TSCallSignatureDeclaration"===nodeType||"TSConstructSignatureDeclaration"===nodeType||"TSPropertySignature"===nodeType||"TSMethodSignature"===nodeType||"TSIndexSignature"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isTSType(node,opts){if(!node)return false;const nodeType=node.type;if(nodeType==="TSType"||"TSAnyKeyword"===nodeType||"TSUnknownKeyword"===
nodeType||"TSNumberKeyword"===nodeType||"TSObjectKeyword"===nodeType||"TSBooleanKeyword"===nodeType||"TSStringKeyword"===nodeType||"TSSymbolKeyword"===nodeType||"TSVoidKeyword"===nodeType||"TSUndefinedKeyword"===nodeType||"TSNullKeyword"===nodeType||"TSNeverKeyword"===nodeType||"TSThisType"===nodeType||"TSFunctionType"===nodeType||"TSConstructorType"===nodeType||"TSTypeReference"===nodeType||"TSTypePredicate"===nodeType||"TSTypeQuery"===nodeType||"TSTypeLiteral"===nodeType||"TSArrayType"===nodeType||
"TSTupleType"===nodeType||"TSOptionalType"===nodeType||"TSRestType"===nodeType||"TSUnionType"===nodeType||"TSIntersectionType"===nodeType||"TSConditionalType"===nodeType||"TSInferType"===nodeType||"TSParenthesizedType"===nodeType||"TSTypeOperator"===nodeType||"TSIndexedAccessType"===nodeType||"TSMappedType"===nodeType||"TSLiteralType"===nodeType||"TSExpressionWithTypeArguments"===nodeType||"TSImportType"===nodeType)if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,
opts);return false}function isNumberLiteral(node,opts){console.trace("The node type NumberLiteral has been renamed to NumericLiteral");if(!node)return false;const nodeType=node.type;if(nodeType==="NumberLiteral")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isRegexLiteral(node,opts){console.trace("The node type RegexLiteral has been renamed to RegExpLiteral");if(!node)return false;const nodeType=node.type;if(nodeType==="RegexLiteral")if(typeof opts===
"undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isRestProperty(node,opts){console.trace("The node type RestProperty has been renamed to RestElement");if(!node)return false;const nodeType=node.type;if(nodeType==="RestProperty")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}function isSpreadProperty(node,opts){console.trace("The node type SpreadProperty has been renamed to SpreadElement");if(!node)return false;
const nodeType=node.type;if(nodeType==="SpreadProperty")if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts);return false}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=shallowEqual;function shallowEqual(actual,expected){const keys=Object.keys(expected);for(const key of keys)if(actual[key]!==expected[key])return false;return true}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=isCompatTag;function isCompatTag(tagName){return!!tagName&&/^[a-z]/.test(tagName)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=buildChildren;var _generated=__webpack_require__(25);var _cleanJSXElementLiteralChild=_interopRequireDefault(__webpack_require__(29));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function buildChildren(node){const elements=
[];for(let i=0;i<node.children.length;i++){let child=node.children[i];if((0,_generated.isJSXText)(child)){(0,_cleanJSXElementLiteralChild.default)(child,elements);continue}if((0,_generated.isJSXExpressionContainer)(child))child=child.expression;if((0,_generated.isJSXEmptyExpression)(child))continue;elements.push(child)}return elements}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=cleanJSXElementLiteralChild;var _generated=__webpack_require__(30);
function cleanJSXElementLiteralChild(child,args){const lines=child.value.split(/\r\n|\n|\r/);let lastNonEmptyLine=0;for(let i=0;i<lines.length;i++)if(lines[i].match(/[^ \t]/))lastNonEmptyLine=i;let str="";for(let i=0;i<lines.length;i++){const line=lines[i];const isFirstLine=i===0;const isLastLine=i===lines.length-1;const isLastNonEmptyLine=i===lastNonEmptyLine;let trimmedLine=line.replace(/\t/g," ");if(!isFirstLine)trimmedLine=trimmedLine.replace(/^[ ]+/,"");if(!isLastLine)trimmedLine=trimmedLine.replace(/[ ]+$/,
"");if(trimmedLine){if(!isLastNonEmptyLine)trimmedLine+=" ";str+=trimmedLine}}if(str)args.push((0,_generated.stringLiteral)(str))}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.arrayExpression=exports.ArrayExpression=ArrayExpression;exports.assignmentExpression=exports.AssignmentExpression=AssignmentExpression;exports.binaryExpression=exports.BinaryExpression=BinaryExpression;exports.interpreterDirective=exports.InterpreterDirective=
InterpreterDirective;exports.directive=exports.Directive=Directive;exports.directiveLiteral=exports.DirectiveLiteral=DirectiveLiteral;exports.blockStatement=exports.BlockStatement=BlockStatement;exports.breakStatement=exports.BreakStatement=BreakStatement;exports.callExpression=exports.CallExpression=CallExpression;exports.catchClause=exports.CatchClause=CatchClause;exports.conditionalExpression=exports.ConditionalExpression=ConditionalExpression;exports.continueStatement=exports.ContinueStatement=
ContinueStatement;exports.debuggerStatement=exports.DebuggerStatement=DebuggerStatement;exports.doWhileStatement=exports.DoWhileStatement=DoWhileStatement;exports.emptyStatement=exports.EmptyStatement=EmptyStatement;exports.expressionStatement=exports.ExpressionStatement=ExpressionStatement;exports.file=exports.File=File;exports.forInStatement=exports.ForInStatement=ForInStatement;exports.forStatement=exports.ForStatement=ForStatement;exports.functionDeclaration=exports.FunctionDeclaration=FunctionDeclaration;
exports.functionExpression=exports.FunctionExpression=FunctionExpression;exports.identifier=exports.Identifier=Identifier;exports.ifStatement=exports.IfStatement=IfStatement;exports.labeledStatement=exports.LabeledStatement=LabeledStatement;exports.stringLiteral=exports.StringLiteral=StringLiteral;exports.numericLiteral=exports.NumericLiteral=NumericLiteral;exports.nullLiteral=exports.NullLiteral=NullLiteral;exports.booleanLiteral=exports.BooleanLiteral=BooleanLiteral;exports.regExpLiteral=exports.RegExpLiteral=
RegExpLiteral;exports.logicalExpression=exports.LogicalExpression=LogicalExpression;exports.memberExpression=exports.MemberExpression=MemberExpression;exports.newExpression=exports.NewExpression=NewExpression;exports.program=exports.Program=Program;exports.objectExpression=exports.ObjectExpression=ObjectExpression;exports.objectMethod=exports.ObjectMethod=ObjectMethod;exports.objectProperty=exports.ObjectProperty=ObjectProperty;exports.restElement=exports.RestElement=RestElement;exports.returnStatement=
exports.ReturnStatement=ReturnStatement;exports.sequenceExpression=exports.SequenceExpression=SequenceExpression;exports.switchCase=exports.SwitchCase=SwitchCase;exports.switchStatement=exports.SwitchStatement=SwitchStatement;exports.thisExpression=exports.ThisExpression=ThisExpression;exports.throwStatement=exports.ThrowStatement=ThrowStatement;exports.tryStatement=exports.TryStatement=TryStatement;exports.unaryExpression=exports.UnaryExpression=UnaryExpression;exports.updateExpression=exports.UpdateExpression=
UpdateExpression;exports.variableDeclaration=exports.VariableDeclaration=VariableDeclaration;exports.variableDeclarator=exports.VariableDeclarator=VariableDeclarator;exports.whileStatement=exports.WhileStatement=WhileStatement;exports.withStatement=exports.WithStatement=WithStatement;exports.assignmentPattern=exports.AssignmentPattern=AssignmentPattern;exports.arrayPattern=exports.ArrayPattern=ArrayPattern;exports.arrowFunctionExpression=exports.ArrowFunctionExpression=ArrowFunctionExpression;exports.classBody=
exports.ClassBody=ClassBody;exports.classDeclaration=exports.ClassDeclaration=ClassDeclaration;exports.classExpression=exports.ClassExpression=ClassExpression;exports.exportAllDeclaration=exports.ExportAllDeclaration=ExportAllDeclaration;exports.exportDefaultDeclaration=exports.ExportDefaultDeclaration=ExportDefaultDeclaration;exports.exportNamedDeclaration=exports.ExportNamedDeclaration=ExportNamedDeclaration;exports.exportSpecifier=exports.ExportSpecifier=ExportSpecifier;exports.forOfStatement=
exports.ForOfStatement=ForOfStatement;exports.importDeclaration=exports.ImportDeclaration=ImportDeclaration;exports.importDefaultSpecifier=exports.ImportDefaultSpecifier=ImportDefaultSpecifier;exports.importNamespaceSpecifier=exports.ImportNamespaceSpecifier=ImportNamespaceSpecifier;exports.importSpecifier=exports.ImportSpecifier=ImportSpecifier;exports.metaProperty=exports.MetaProperty=MetaProperty;exports.classMethod=exports.ClassMethod=ClassMethod;exports.objectPattern=exports.ObjectPattern=ObjectPattern;
exports.spreadElement=exports.SpreadElement=SpreadElement;exports.super=exports.Super=Super;exports.taggedTemplateExpression=exports.TaggedTemplateExpression=TaggedTemplateExpression;exports.templateElement=exports.TemplateElement=TemplateElement;exports.templateLiteral=exports.TemplateLiteral=TemplateLiteral;exports.yieldExpression=exports.YieldExpression=YieldExpression;exports.anyTypeAnnotation=exports.AnyTypeAnnotation=AnyTypeAnnotation;exports.arrayTypeAnnotation=exports.ArrayTypeAnnotation=
ArrayTypeAnnotation;exports.booleanTypeAnnotation=exports.BooleanTypeAnnotation=BooleanTypeAnnotation;exports.booleanLiteralTypeAnnotation=exports.BooleanLiteralTypeAnnotation=BooleanLiteralTypeAnnotation;exports.nullLiteralTypeAnnotation=exports.NullLiteralTypeAnnotation=NullLiteralTypeAnnotation;exports.classImplements=exports.ClassImplements=ClassImplements;exports.declareClass=exports.DeclareClass=DeclareClass;exports.declareFunction=exports.DeclareFunction=DeclareFunction;exports.declareInterface=
exports.DeclareInterface=DeclareInterface;exports.declareModule=exports.DeclareModule=DeclareModule;exports.declareModuleExports=exports.DeclareModuleExports=DeclareModuleExports;exports.declareTypeAlias=exports.DeclareTypeAlias=DeclareTypeAlias;exports.declareOpaqueType=exports.DeclareOpaqueType=DeclareOpaqueType;exports.declareVariable=exports.DeclareVariable=DeclareVariable;exports.declareExportDeclaration=exports.DeclareExportDeclaration=DeclareExportDeclaration;exports.declareExportAllDeclaration=
exports.DeclareExportAllDeclaration=DeclareExportAllDeclaration;exports.declaredPredicate=exports.DeclaredPredicate=DeclaredPredicate;exports.existsTypeAnnotation=exports.ExistsTypeAnnotation=ExistsTypeAnnotation;exports.functionTypeAnnotation=exports.FunctionTypeAnnotation=FunctionTypeAnnotation;exports.functionTypeParam=exports.FunctionTypeParam=FunctionTypeParam;exports.genericTypeAnnotation=exports.GenericTypeAnnotation=GenericTypeAnnotation;exports.inferredPredicate=exports.InferredPredicate=
InferredPredicate;exports.interfaceExtends=exports.InterfaceExtends=InterfaceExtends;exports.interfaceDeclaration=exports.InterfaceDeclaration=InterfaceDeclaration;exports.interfaceTypeAnnotation=exports.InterfaceTypeAnnotation=InterfaceTypeAnnotation;exports.intersectionTypeAnnotation=exports.IntersectionTypeAnnotation=IntersectionTypeAnnotation;exports.mixedTypeAnnotation=exports.MixedTypeAnnotation=MixedTypeAnnotation;exports.emptyTypeAnnotation=exports.EmptyTypeAnnotation=EmptyTypeAnnotation;
exports.nullableTypeAnnotation=exports.NullableTypeAnnotation=NullableTypeAnnotation;exports.numberLiteralTypeAnnotation=exports.NumberLiteralTypeAnnotation=NumberLiteralTypeAnnotation;exports.numberTypeAnnotation=exports.NumberTypeAnnotation=NumberTypeAnnotation;exports.objectTypeAnnotation=exports.ObjectTypeAnnotation=ObjectTypeAnnotation;exports.objectTypeInternalSlot=exports.ObjectTypeInternalSlot=ObjectTypeInternalSlot;exports.objectTypeCallProperty=exports.ObjectTypeCallProperty=ObjectTypeCallProperty;
exports.objectTypeIndexer=exports.ObjectTypeIndexer=ObjectTypeIndexer;exports.objectTypeProperty=exports.ObjectTypeProperty=ObjectTypeProperty;exports.objectTypeSpreadProperty=exports.ObjectTypeSpreadProperty=ObjectTypeSpreadProperty;exports.opaqueType=exports.OpaqueType=OpaqueType;exports.qualifiedTypeIdentifier=exports.QualifiedTypeIdentifier=QualifiedTypeIdentifier;exports.stringLiteralTypeAnnotation=exports.StringLiteralTypeAnnotation=StringLiteralTypeAnnotation;exports.stringTypeAnnotation=exports.StringTypeAnnotation=
StringTypeAnnotation;exports.thisTypeAnnotation=exports.ThisTypeAnnotation=ThisTypeAnnotation;exports.tupleTypeAnnotation=exports.TupleTypeAnnotation=TupleTypeAnnotation;exports.typeofTypeAnnotation=exports.TypeofTypeAnnotation=TypeofTypeAnnotation;exports.typeAlias=exports.TypeAlias=TypeAlias;exports.typeAnnotation=exports.TypeAnnotation=TypeAnnotation;exports.typeCastExpression=exports.TypeCastExpression=TypeCastExpression;exports.typeParameter=exports.TypeParameter=TypeParameter;exports.typeParameterDeclaration=
exports.TypeParameterDeclaration=TypeParameterDeclaration;exports.typeParameterInstantiation=exports.TypeParameterInstantiation=TypeParameterInstantiation;exports.unionTypeAnnotation=exports.UnionTypeAnnotation=UnionTypeAnnotation;exports.variance=exports.Variance=Variance;exports.voidTypeAnnotation=exports.VoidTypeAnnotation=VoidTypeAnnotation;exports.jSXAttribute=exports.jsxAttribute=exports.JSXAttribute=JSXAttribute;exports.jSXClosingElement=exports.jsxClosingElement=exports.JSXClosingElement=
JSXClosingElement;exports.jSXElement=exports.jsxElement=exports.JSXElement=JSXElement;exports.jSXEmptyExpression=exports.jsxEmptyExpression=exports.JSXEmptyExpression=JSXEmptyExpression;exports.jSXExpressionContainer=exports.jsxExpressionContainer=exports.JSXExpressionContainer=JSXExpressionContainer;exports.jSXSpreadChild=exports.jsxSpreadChild=exports.JSXSpreadChild=JSXSpreadChild;exports.jSXIdentifier=exports.jsxIdentifier=exports.JSXIdentifier=JSXIdentifier;exports.jSXMemberExpression=exports.jsxMemberExpression=
exports.JSXMemberExpression=JSXMemberExpression;exports.jSXNamespacedName=exports.jsxNamespacedName=exports.JSXNamespacedName=JSXNamespacedName;exports.jSXOpeningElement=exports.jsxOpeningElement=exports.JSXOpeningElement=JSXOpeningElement;exports.jSXSpreadAttribute=exports.jsxSpreadAttribute=exports.JSXSpreadAttribute=JSXSpreadAttribute;exports.jSXText=exports.jsxText=exports.JSXText=JSXText;exports.jSXFragment=exports.jsxFragment=exports.JSXFragment=JSXFragment;exports.jSXOpeningFragment=exports.jsxOpeningFragment=
exports.JSXOpeningFragment=JSXOpeningFragment;exports.jSXClosingFragment=exports.jsxClosingFragment=exports.JSXClosingFragment=JSXClosingFragment;exports.noop=exports.Noop=Noop;exports.parenthesizedExpression=exports.ParenthesizedExpression=ParenthesizedExpression;exports.awaitExpression=exports.AwaitExpression=AwaitExpression;exports.bindExpression=exports.BindExpression=BindExpression;exports.classProperty=exports.ClassProperty=ClassProperty;exports.optionalMemberExpression=exports.OptionalMemberExpression=
OptionalMemberExpression;exports.pipelineTopicExpression=exports.PipelineTopicExpression=PipelineTopicExpression;exports.pipelineBareFunction=exports.PipelineBareFunction=PipelineBareFunction;exports.pipelinePrimaryTopicReference=exports.PipelinePrimaryTopicReference=PipelinePrimaryTopicReference;exports.optionalCallExpression=exports.OptionalCallExpression=OptionalCallExpression;exports.classPrivateProperty=exports.ClassPrivateProperty=ClassPrivateProperty;exports.classPrivateMethod=exports.ClassPrivateMethod=
ClassPrivateMethod;exports.import=exports.Import=Import;exports.decorator=exports.Decorator=Decorator;exports.doExpression=exports.DoExpression=DoExpression;exports.exportDefaultSpecifier=exports.ExportDefaultSpecifier=ExportDefaultSpecifier;exports.exportNamespaceSpecifier=exports.ExportNamespaceSpecifier=ExportNamespaceSpecifier;exports.privateName=exports.PrivateName=PrivateName;exports.bigIntLiteral=exports.BigIntLiteral=BigIntLiteral;exports.tSParameterProperty=exports.tsParameterProperty=exports.TSParameterProperty=
TSParameterProperty;exports.tSDeclareFunction=exports.tsDeclareFunction=exports.TSDeclareFunction=TSDeclareFunction;exports.tSDeclareMethod=exports.tsDeclareMethod=exports.TSDeclareMethod=TSDeclareMethod;exports.tSQualifiedName=exports.tsQualifiedName=exports.TSQualifiedName=TSQualifiedName;exports.tSCallSignatureDeclaration=exports.tsCallSignatureDeclaration=exports.TSCallSignatureDeclaration=TSCallSignatureDeclaration;exports.tSConstructSignatureDeclaration=exports.tsConstructSignatureDeclaration=
exports.TSConstructSignatureDeclaration=TSConstructSignatureDeclaration;exports.tSPropertySignature=exports.tsPropertySignature=exports.TSPropertySignature=TSPropertySignature;exports.tSMethodSignature=exports.tsMethodSignature=exports.TSMethodSignature=TSMethodSignature;exports.tSIndexSignature=exports.tsIndexSignature=exports.TSIndexSignature=TSIndexSignature;exports.tSAnyKeyword=exports.tsAnyKeyword=exports.TSAnyKeyword=TSAnyKeyword;exports.tSUnknownKeyword=exports.tsUnknownKeyword=exports.TSUnknownKeyword=
TSUnknownKeyword;exports.tSNumberKeyword=exports.tsNumberKeyword=exports.TSNumberKeyword=TSNumberKeyword;exports.tSObjectKeyword=exports.tsObjectKeyword=exports.TSObjectKeyword=TSObjectKeyword;exports.tSBooleanKeyword=exports.tsBooleanKeyword=exports.TSBooleanKeyword=TSBooleanKeyword;exports.tSStringKeyword=exports.tsStringKeyword=exports.TSStringKeyword=TSStringKeyword;exports.tSSymbolKeyword=exports.tsSymbolKeyword=exports.TSSymbolKeyword=TSSymbolKeyword;exports.tSVoidKeyword=exports.tsVoidKeyword=
exports.TSVoidKeyword=TSVoidKeyword;exports.tSUndefinedKeyword=exports.tsUndefinedKeyword=exports.TSUndefinedKeyword=TSUndefinedKeyword;exports.tSNullKeyword=exports.tsNullKeyword=exports.TSNullKeyword=TSNullKeyword;exports.tSNeverKeyword=exports.tsNeverKeyword=exports.TSNeverKeyword=TSNeverKeyword;exports.tSThisType=exports.tsThisType=exports.TSThisType=TSThisType;exports.tSFunctionType=exports.tsFunctionType=exports.TSFunctionType=TSFunctionType;exports.tSConstructorType=exports.tsConstructorType=
exports.TSConstructorType=TSConstructorType;exports.tSTypeReference=exports.tsTypeReference=exports.TSTypeReference=TSTypeReference;exports.tSTypePredicate=exports.tsTypePredicate=exports.TSTypePredicate=TSTypePredicate;exports.tSTypeQuery=exports.tsTypeQuery=exports.TSTypeQuery=TSTypeQuery;exports.tSTypeLiteral=exports.tsTypeLiteral=exports.TSTypeLiteral=TSTypeLiteral;exports.tSArrayType=exports.tsArrayType=exports.TSArrayType=TSArrayType;exports.tSTupleType=exports.tsTupleType=exports.TSTupleType=
TSTupleType;exports.tSOptionalType=exports.tsOptionalType=exports.TSOptionalType=TSOptionalType;exports.tSRestType=exports.tsRestType=exports.TSRestType=TSRestType;exports.tSUnionType=exports.tsUnionType=exports.TSUnionType=TSUnionType;exports.tSIntersectionType=exports.tsIntersectionType=exports.TSIntersectionType=TSIntersectionType;exports.tSConditionalType=exports.tsConditionalType=exports.TSConditionalType=TSConditionalType;exports.tSInferType=exports.tsInferType=exports.TSInferType=TSInferType;
exports.tSParenthesizedType=exports.tsParenthesizedType=exports.TSParenthesizedType=TSParenthesizedType;exports.tSTypeOperator=exports.tsTypeOperator=exports.TSTypeOperator=TSTypeOperator;exports.tSIndexedAccessType=exports.tsIndexedAccessType=exports.TSIndexedAccessType=TSIndexedAccessType;exports.tSMappedType=exports.tsMappedType=exports.TSMappedType=TSMappedType;exports.tSLiteralType=exports.tsLiteralType=exports.TSLiteralType=TSLiteralType;exports.tSExpressionWithTypeArguments=exports.tsExpressionWithTypeArguments=
exports.TSExpressionWithTypeArguments=TSExpressionWithTypeArguments;exports.tSInterfaceDeclaration=exports.tsInterfaceDeclaration=exports.TSInterfaceDeclaration=TSInterfaceDeclaration;exports.tSInterfaceBody=exports.tsInterfaceBody=exports.TSInterfaceBody=TSInterfaceBody;exports.tSTypeAliasDeclaration=exports.tsTypeAliasDeclaration=exports.TSTypeAliasDeclaration=TSTypeAliasDeclaration;exports.tSAsExpression=exports.tsAsExpression=exports.TSAsExpression=TSAsExpression;exports.tSTypeAssertion=exports.tsTypeAssertion=
exports.TSTypeAssertion=TSTypeAssertion;exports.tSEnumDeclaration=exports.tsEnumDeclaration=exports.TSEnumDeclaration=TSEnumDeclaration;exports.tSEnumMember=exports.tsEnumMember=exports.TSEnumMember=TSEnumMember;exports.tSModuleDeclaration=exports.tsModuleDeclaration=exports.TSModuleDeclaration=TSModuleDeclaration;exports.tSModuleBlock=exports.tsModuleBlock=exports.TSModuleBlock=TSModuleBlock;exports.tSImportType=exports.tsImportType=exports.TSImportType=TSImportType;exports.tSImportEqualsDeclaration=
exports.tsImportEqualsDeclaration=exports.TSImportEqualsDeclaration=TSImportEqualsDeclaration;exports.tSExternalModuleReference=exports.tsExternalModuleReference=exports.TSExternalModuleReference=TSExternalModuleReference;exports.tSNonNullExpression=exports.tsNonNullExpression=exports.TSNonNullExpression=TSNonNullExpression;exports.tSExportAssignment=exports.tsExportAssignment=exports.TSExportAssignment=TSExportAssignment;exports.tSNamespaceExportDeclaration=exports.tsNamespaceExportDeclaration=exports.TSNamespaceExportDeclaration=
TSNamespaceExportDeclaration;exports.tSTypeAnnotation=exports.tsTypeAnnotation=exports.TSTypeAnnotation=TSTypeAnnotation;exports.tSTypeParameterInstantiation=exports.tsTypeParameterInstantiation=exports.TSTypeParameterInstantiation=TSTypeParameterInstantiation;exports.tSTypeParameterDeclaration=exports.tsTypeParameterDeclaration=exports.TSTypeParameterDeclaration=TSTypeParameterDeclaration;exports.tSTypeParameter=exports.tsTypeParameter=exports.TSTypeParameter=TSTypeParameter;exports.numberLiteral=
exports.NumberLiteral=NumberLiteral;exports.regexLiteral=exports.RegexLiteral=RegexLiteral;exports.restProperty=exports.RestProperty=RestProperty;exports.spreadProperty=exports.SpreadProperty=SpreadProperty;var _builder=_interopRequireDefault(__webpack_require__(31));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ArrayExpression(...args){return(0,_builder.default)("ArrayExpression",...args)}function AssignmentExpression(...args){return(0,_builder.default)("AssignmentExpression",
...args)}function BinaryExpression(...args){return(0,_builder.default)("BinaryExpression",...args)}function InterpreterDirective(...args){return(0,_builder.default)("InterpreterDirective",...args)}function Directive(...args){return(0,_builder.default)("Directive",...args)}function DirectiveLiteral(...args){return(0,_builder.default)("DirectiveLiteral",...args)}function BlockStatement(...args){return(0,_builder.default)("BlockStatement",...args)}function BreakStatement(...args){return(0,_builder.default)("BreakStatement",
...args)}function CallExpression(...args){return(0,_builder.default)("CallExpression",...args)}function CatchClause(...args){return(0,_builder.default)("CatchClause",...args)}function ConditionalExpression(...args){return(0,_builder.default)("ConditionalExpression",...args)}function ContinueStatement(...args){return(0,_builder.default)("ContinueStatement",...args)}function DebuggerStatement(...args){return(0,_builder.default)("DebuggerStatement",...args)}function DoWhileStatement(...args){return(0,
_builder.default)("DoWhileStatement",...args)}function EmptyStatement(...args){return(0,_builder.default)("EmptyStatement",...args)}function ExpressionStatement(...args){return(0,_builder.default)("ExpressionStatement",...args)}function File(...args){return(0,_builder.default)("File",...args)}function ForInStatement(...args){return(0,_builder.default)("ForInStatement",...args)}function ForStatement(...args){return(0,_builder.default)("ForStatement",...args)}function FunctionDeclaration(...args){return(0,
_builder.default)("FunctionDeclaration",...args)}function FunctionExpression(...args){return(0,_builder.default)("FunctionExpression",...args)}function Identifier(...args){return(0,_builder.default)("Identifier",...args)}function IfStatement(...args){return(0,_builder.default)("IfStatement",...args)}function LabeledStatement(...args){return(0,_builder.default)("LabeledStatement",...args)}function StringLiteral(...args){return(0,_builder.default)("StringLiteral",...args)}function NumericLiteral(...args){return(0,
_builder.default)("NumericLiteral",...args)}function NullLiteral(...args){return(0,_builder.default)("NullLiteral",...args)}function BooleanLiteral(...args){return(0,_builder.default)("BooleanLiteral",...args)}function RegExpLiteral(...args){return(0,_builder.default)("RegExpLiteral",...args)}function LogicalExpression(...args){return(0,_builder.default)("LogicalExpression",...args)}function MemberExpression(...args){return(0,_builder.default)("MemberExpression",...args)}function NewExpression(...args){return(0,
_builder.default)("NewExpression",...args)}function Program(...args){return(0,_builder.default)("Program",...args)}function ObjectExpression(...args){return(0,_builder.default)("ObjectExpression",...args)}function ObjectMethod(...args){return(0,_builder.default)("ObjectMethod",...args)}function ObjectProperty(...args){return(0,_builder.default)("ObjectProperty",...args)}function RestElement(...args){return(0,_builder.default)("RestElement",...args)}function ReturnStatement(...args){return(0,_builder.default)("ReturnStatement",
...args)}function SequenceExpression(...args){return(0,_builder.default)("SequenceExpression",...args)}function SwitchCase(...args){return(0,_builder.default)("SwitchCase",...args)}function SwitchStatement(...args){return(0,_builder.default)("SwitchStatement",...args)}function ThisExpression(...args){return(0,_builder.default)("ThisExpression",...args)}function ThrowStatement(...args){return(0,_builder.default)("ThrowStatement",...args)}function TryStatement(...args){return(0,_builder.default)("TryStatement",
...args)}function UnaryExpression(...args){return(0,_builder.default)("UnaryExpression",...args)}function UpdateExpression(...args){return(0,_builder.default)("UpdateExpression",...args)}function VariableDeclaration(...args){return(0,_builder.default)("VariableDeclaration",...args)}function VariableDeclarator(...args){return(0,_builder.default)("VariableDeclarator",...args)}function WhileStatement(...args){return(0,_builder.default)("WhileStatement",...args)}function WithStatement(...args){return(0,
_builder.default)("WithStatement",...args)}function AssignmentPattern(...args){return(0,_builder.default)("AssignmentPattern",...args)}function ArrayPattern(...args){return(0,_builder.default)("ArrayPattern",...args)}function ArrowFunctionExpression(...args){return(0,_builder.default)("ArrowFunctionExpression",...args)}function ClassBody(...args){return(0,_builder.default)("ClassBody",...args)}function ClassDeclaration(...args){return(0,_builder.default)("ClassDeclaration",...args)}function ClassExpression(...args){return(0,
_builder.default)("ClassExpression",...args)}function ExportAllDeclaration(...args){return(0,_builder.default)("ExportAllDeclaration",...args)}function ExportDefaultDeclaration(...args){return(0,_builder.default)("ExportDefaultDeclaration",...args)}function ExportNamedDeclaration(...args){return(0,_builder.default)("ExportNamedDeclaration",...args)}function ExportSpecifier(...args){return(0,_builder.default)("ExportSpecifier",...args)}function ForOfStatement(...args){return(0,_builder.default)("ForOfStatement",
...args)}function ImportDeclaration(...args){return(0,_builder.default)("ImportDeclaration",...args)}function ImportDefaultSpecifier(...args){return(0,_builder.default)("ImportDefaultSpecifier",...args)}function ImportNamespaceSpecifier(...args){return(0,_builder.default)("ImportNamespaceSpecifier",...args)}function ImportSpecifier(...args){return(0,_builder.default)("ImportSpecifier",...args)}function MetaProperty(...args){return(0,_builder.default)("MetaProperty",...args)}function ClassMethod(...args){return(0,
_builder.default)("ClassMethod",...args)}function ObjectPattern(...args){return(0,_builder.default)("ObjectPattern",...args)}function SpreadElement(...args){return(0,_builder.default)("SpreadElement",...args)}function Super(...args){return(0,_builder.default)("Super",...args)}function TaggedTemplateExpression(...args){return(0,_builder.default)("TaggedTemplateExpression",...args)}function TemplateElement(...args){return(0,_builder.default)("TemplateElement",...args)}function TemplateLiteral(...args){return(0,
_builder.default)("TemplateLiteral",...args)}function YieldExpression(...args){return(0,_builder.default)("YieldExpression",...args)}function AnyTypeAnnotation(...args){return(0,_builder.default)("AnyTypeAnnotation",...args)}function ArrayTypeAnnotation(...args){return(0,_builder.default)("ArrayTypeAnnotation",...args)}function BooleanTypeAnnotation(...args){return(0,_builder.default)("BooleanTypeAnnotation",...args)}function BooleanLiteralTypeAnnotation(...args){return(0,_builder.default)("BooleanLiteralTypeAnnotation",
...args)}function NullLiteralTypeAnnotation(...args){return(0,_builder.default)("NullLiteralTypeAnnotation",...args)}function ClassImplements(...args){return(0,_builder.default)("ClassImplements",...args)}function DeclareClass(...args){return(0,_builder.default)("DeclareClass",...args)}function DeclareFunction(...args){return(0,_builder.default)("DeclareFunction",...args)}function DeclareInterface(...args){return(0,_builder.default)("DeclareInterface",...args)}function DeclareModule(...args){return(0,
_builder.default)("DeclareModule",...args)}function DeclareModuleExports(...args){return(0,_builder.default)("DeclareModuleExports",...args)}function DeclareTypeAlias(...args){return(0,_builder.default)("DeclareTypeAlias",...args)}function DeclareOpaqueType(...args){return(0,_builder.default)("DeclareOpaqueType",...args)}function DeclareVariable(...args){return(0,_builder.default)("DeclareVariable",...args)}function DeclareExportDeclaration(...args){return(0,_builder.default)("DeclareExportDeclaration",
...args)}function DeclareExportAllDeclaration(...args){return(0,_builder.default)("DeclareExportAllDeclaration",...args)}function DeclaredPredicate(...args){return(0,_builder.default)("DeclaredPredicate",...args)}function ExistsTypeAnnotation(...args){return(0,_builder.default)("ExistsTypeAnnotation",...args)}function FunctionTypeAnnotation(...args){return(0,_builder.default)("FunctionTypeAnnotation",...args)}function FunctionTypeParam(...args){return(0,_builder.default)("FunctionTypeParam",...args)}
function GenericTypeAnnotation(...args){return(0,_builder.default)("GenericTypeAnnotation",...args)}function InferredPredicate(...args){return(0,_builder.default)("InferredPredicate",...args)}function InterfaceExtends(...args){return(0,_builder.default)("InterfaceExtends",...args)}function InterfaceDeclaration(...args){return(0,_builder.default)("InterfaceDeclaration",...args)}function InterfaceTypeAnnotation(...args){return(0,_builder.default)("InterfaceTypeAnnotation",...args)}function IntersectionTypeAnnotation(...args){return(0,
_builder.default)("IntersectionTypeAnnotation",...args)}function MixedTypeAnnotation(...args){return(0,_builder.default)("MixedTypeAnnotation",...args)}function EmptyTypeAnnotation(...args){return(0,_builder.default)("EmptyTypeAnnotation",...args)}function NullableTypeAnnotation(...args){return(0,_builder.default)("NullableTypeAnnotation",...args)}function NumberLiteralTypeAnnotation(...args){return(0,_builder.default)("NumberLiteralTypeAnnotation",...args)}function NumberTypeAnnotation(...args){return(0,
_builder.default)("NumberTypeAnnotation",...args)}function ObjectTypeAnnotation(...args){return(0,_builder.default)("ObjectTypeAnnotation",...args)}function ObjectTypeInternalSlot(...args){return(0,_builder.default)("ObjectTypeInternalSlot",...args)}function ObjectTypeCallProperty(...args){return(0,_builder.default)("ObjectTypeCallProperty",...args)}function ObjectTypeIndexer(...args){return(0,_builder.default)("ObjectTypeIndexer",...args)}function ObjectTypeProperty(...args){return(0,_builder.default)("ObjectTypeProperty",
...args)}function ObjectTypeSpreadProperty(...args){return(0,_builder.default)("ObjectTypeSpreadProperty",...args)}function OpaqueType(...args){return(0,_builder.default)("OpaqueType",...args)}function QualifiedTypeIdentifier(...args){return(0,_builder.default)("QualifiedTypeIdentifier",...args)}function StringLiteralTypeAnnotation(...args){return(0,_builder.default)("StringLiteralTypeAnnotation",...args)}function StringTypeAnnotation(...args){return(0,_builder.default)("StringTypeAnnotation",...args)}
function ThisTypeAnnotation(...args){return(0,_builder.default)("ThisTypeAnnotation",...args)}function TupleTypeAnnotation(...args){return(0,_builder.default)("TupleTypeAnnotation",...args)}function TypeofTypeAnnotation(...args){return(0,_builder.default)("TypeofTypeAnnotation",...args)}function TypeAlias(...args){return(0,_builder.default)("TypeAlias",...args)}function TypeAnnotation(...args){return(0,_builder.default)("TypeAnnotation",...args)}function TypeCastExpression(...args){return(0,_builder.default)("TypeCastExpression",
...args)}function TypeParameter(...args){return(0,_builder.default)("TypeParameter",...args)}function TypeParameterDeclaration(...args){return(0,_builder.default)("TypeParameterDeclaration",...args)}function TypeParameterInstantiation(...args){return(0,_builder.default)("TypeParameterInstantiation",...args)}function UnionTypeAnnotation(...args){return(0,_builder.default)("UnionTypeAnnotation",...args)}function Variance(...args){return(0,_builder.default)("Variance",...args)}function VoidTypeAnnotation(...args){return(0,
_builder.default)("VoidTypeAnnotation",...args)}function JSXAttribute(...args){return(0,_builder.default)("JSXAttribute",...args)}function JSXClosingElement(...args){return(0,_builder.default)("JSXClosingElement",...args)}function JSXElement(...args){return(0,_builder.default)("JSXElement",...args)}function JSXEmptyExpression(...args){return(0,_builder.default)("JSXEmptyExpression",...args)}function JSXExpressionContainer(...args){return(0,_builder.default)("JSXExpressionContainer",...args)}function JSXSpreadChild(...args){return(0,
_builder.default)("JSXSpreadChild",...args)}function JSXIdentifier(...args){return(0,_builder.default)("JSXIdentifier",...args)}function JSXMemberExpression(...args){return(0,_builder.default)("JSXMemberExpression",...args)}function JSXNamespacedName(...args){return(0,_builder.default)("JSXNamespacedName",...args)}function JSXOpeningElement(...args){return(0,_builder.default)("JSXOpeningElement",...args)}function JSXSpreadAttribute(...args){return(0,_builder.default)("JSXSpreadAttribute",...args)}
function JSXText(...args){return(0,_builder.default)("JSXText",...args)}function JSXFragment(...args){return(0,_builder.default)("JSXFragment",...args)}function JSXOpeningFragment(...args){return(0,_builder.default)("JSXOpeningFragment",...args)}function JSXClosingFragment(...args){return(0,_builder.default)("JSXClosingFragment",...args)}function Noop(...args){return(0,_builder.default)("Noop",...args)}function ParenthesizedExpression(...args){return(0,_builder.default)("ParenthesizedExpression",
...args)}function AwaitExpression(...args){return(0,_builder.default)("AwaitExpression",...args)}function BindExpression(...args){return(0,_builder.default)("BindExpression",...args)}function ClassProperty(...args){return(0,_builder.default)("ClassProperty",...args)}function OptionalMemberExpression(...args){return(0,_builder.default)("OptionalMemberExpression",...args)}function PipelineTopicExpression(...args){return(0,_builder.default)("PipelineTopicExpression",...args)}function PipelineBareFunction(...args){return(0,
_builder.default)("PipelineBareFunction",...args)}function PipelinePrimaryTopicReference(...args){return(0,_builder.default)("PipelinePrimaryTopicReference",...args)}function OptionalCallExpression(...args){return(0,_builder.default)("OptionalCallExpression",...args)}function ClassPrivateProperty(...args){return(0,_builder.default)("ClassPrivateProperty",...args)}function ClassPrivateMethod(...args){return(0,_builder.default)("ClassPrivateMethod",...args)}function Import(...args){return(0,_builder.default)("Import",
...args)}function Decorator(...args){return(0,_builder.default)("Decorator",...args)}function DoExpression(...args){return(0,_builder.default)("DoExpression",...args)}function ExportDefaultSpecifier(...args){return(0,_builder.default)("ExportDefaultSpecifier",...args)}function ExportNamespaceSpecifier(...args){return(0,_builder.default)("ExportNamespaceSpecifier",...args)}function PrivateName(...args){return(0,_builder.default)("PrivateName",...args)}function BigIntLiteral(...args){return(0,_builder.default)("BigIntLiteral",
...args)}function TSParameterProperty(...args){return(0,_builder.default)("TSParameterProperty",...args)}function TSDeclareFunction(...args){return(0,_builder.default)("TSDeclareFunction",...args)}function TSDeclareMethod(...args){return(0,_builder.default)("TSDeclareMethod",...args)}function TSQualifiedName(...args){return(0,_builder.default)("TSQualifiedName",...args)}function TSCallSignatureDeclaration(...args){return(0,_builder.default)("TSCallSignatureDeclaration",...args)}function TSConstructSignatureDeclaration(...args){return(0,
_builder.default)("TSConstructSignatureDeclaration",...args)}function TSPropertySignature(...args){return(0,_builder.default)("TSPropertySignature",...args)}function TSMethodSignature(...args){return(0,_builder.default)("TSMethodSignature",...args)}function TSIndexSignature(...args){return(0,_builder.default)("TSIndexSignature",...args)}function TSAnyKeyword(...args){return(0,_builder.default)("TSAnyKeyword",...args)}function TSUnknownKeyword(...args){return(0,_builder.default)("TSUnknownKeyword",
...args)}function TSNumberKeyword(...args){return(0,_builder.default)("TSNumberKeyword",...args)}function TSObjectKeyword(...args){return(0,_builder.default)("TSObjectKeyword",...args)}function TSBooleanKeyword(...args){return(0,_builder.default)("TSBooleanKeyword",...args)}function TSStringKeyword(...args){return(0,_builder.default)("TSStringKeyword",...args)}function TSSymbolKeyword(...args){return(0,_builder.default)("TSSymbolKeyword",...args)}function TSVoidKeyword(...args){return(0,_builder.default)("TSVoidKeyword",
...args)}function TSUndefinedKeyword(...args){return(0,_builder.default)("TSUndefinedKeyword",...args)}function TSNullKeyword(...args){return(0,_builder.default)("TSNullKeyword",...args)}function TSNeverKeyword(...args){return(0,_builder.default)("TSNeverKeyword",...args)}function TSThisType(...args){return(0,_builder.default)("TSThisType",...args)}function TSFunctionType(...args){return(0,_builder.default)("TSFunctionType",...args)}function TSConstructorType(...args){return(0,_builder.default)("TSConstructorType",
...args)}function TSTypeReference(...args){return(0,_builder.default)("TSTypeReference",...args)}function TSTypePredicate(...args){return(0,_builder.default)("TSTypePredicate",...args)}function TSTypeQuery(...args){return(0,_builder.default)("TSTypeQuery",...args)}function TSTypeLiteral(...args){return(0,_builder.default)("TSTypeLiteral",...args)}function TSArrayType(...args){return(0,_builder.default)("TSArrayType",...args)}function TSTupleType(...args){return(0,_builder.default)("TSTupleType",...args)}
function TSOptionalType(...args){return(0,_builder.default)("TSOptionalType",...args)}function TSRestType(...args){return(0,_builder.default)("TSRestType",...args)}function TSUnionType(...args){return(0,_builder.default)("TSUnionType",...args)}function TSIntersectionType(...args){return(0,_builder.default)("TSIntersectionType",...args)}function TSConditionalType(...args){return(0,_builder.default)("TSConditionalType",...args)}function TSInferType(...args){return(0,_builder.default)("TSInferType",
...args)}function TSParenthesizedType(...args){return(0,_builder.default)("TSParenthesizedType",...args)}function TSTypeOperator(...args){return(0,_builder.default)("TSTypeOperator",...args)}function TSIndexedAccessType(...args){return(0,_builder.default)("TSIndexedAccessType",...args)}function TSMappedType(...args){return(0,_builder.default)("TSMappedType",...args)}function TSLiteralType(...args){return(0,_builder.default)("TSLiteralType",...args)}function TSExpressionWithTypeArguments(...args){return(0,
_builder.default)("TSExpressionWithTypeArguments",...args)}function TSInterfaceDeclaration(...args){return(0,_builder.default)("TSInterfaceDeclaration",...args)}function TSInterfaceBody(...args){return(0,_builder.default)("TSInterfaceBody",...args)}function TSTypeAliasDeclaration(...args){return(0,_builder.default)("TSTypeAliasDeclaration",...args)}function TSAsExpression(...args){return(0,_builder.default)("TSAsExpression",...args)}function TSTypeAssertion(...args){return(0,_builder.default)("TSTypeAssertion",
...args)}function TSEnumDeclaration(...args){return(0,_builder.default)("TSEnumDeclaration",...args)}function TSEnumMember(...args){return(0,_builder.default)("TSEnumMember",...args)}function TSModuleDeclaration(...args){return(0,_builder.default)("TSModuleDeclaration",...args)}function TSModuleBlock(...args){return(0,_builder.default)("TSModuleBlock",...args)}function TSImportType(...args){return(0,_builder.default)("TSImportType",...args)}function TSImportEqualsDeclaration(...args){return(0,_builder.default)("TSImportEqualsDeclaration",
...args)}function TSExternalModuleReference(...args){return(0,_builder.default)("TSExternalModuleReference",...args)}function TSNonNullExpression(...args){return(0,_builder.default)("TSNonNullExpression",...args)}function TSExportAssignment(...args){return(0,_builder.default)("TSExportAssignment",...args)}function TSNamespaceExportDeclaration(...args){return(0,_builder.default)("TSNamespaceExportDeclaration",...args)}function TSTypeAnnotation(...args){return(0,_builder.default)("TSTypeAnnotation",
...args)}function TSTypeParameterInstantiation(...args){return(0,_builder.default)("TSTypeParameterInstantiation",...args)}function TSTypeParameterDeclaration(...args){return(0,_builder.default)("TSTypeParameterDeclaration",...args)}function TSTypeParameter(...args){return(0,_builder.default)("TSTypeParameter",...args)}function NumberLiteral(...args){console.trace("The node type NumberLiteral has been renamed to NumericLiteral");return NumberLiteral("NumberLiteral",...args)}function RegexLiteral(...args){console.trace("The node type RegexLiteral has been renamed to RegExpLiteral");
return RegexLiteral("RegexLiteral",...args)}function RestProperty(...args){console.trace("The node type RestProperty has been renamed to RestElement");return RestProperty("RestProperty",...args)}function SpreadProperty(...args){console.trace("The node type SpreadProperty has been renamed to SpreadElement");return SpreadProperty("SpreadProperty",...args)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=builder;function _clone(){const data=
_interopRequireDefault(__webpack_require__(32));_clone=function(){return data};return data}var _definitions=__webpack_require__(141);var _validate=_interopRequireDefault(__webpack_require__(159));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function builder(type,...args){const keys=_definitions.BUILDER_KEYS[type];const countArgs=args.length;if(countArgs>keys.length)throw new Error(`${type}: Too many arguments passed. Received ${countArgs} but can receive no more than ${keys.length}`);
const node={type};let i=0;keys.forEach((key)=>{const field=_definitions.NODE_FIELDS[type][key];let arg;if(i<countArgs)arg=args[i];if(arg===undefined)arg=(0,_clone().default)(field.default);node[key]=arg;i++});for(const key in node)(0,_validate.default)(node,key,node[key]);return node}},function(module,exports,__webpack_require__){var baseClone=__webpack_require__(33);var CLONE_SYMBOLS_FLAG=4;function clone(value){return baseClone(value,CLONE_SYMBOLS_FLAG)}module.exports=clone},function(module,exports,
__webpack_require__){var Stack=__webpack_require__(34),arrayEach=__webpack_require__(78),assignValue=__webpack_require__(79),baseAssign=__webpack_require__(82),baseAssignIn=__webpack_require__(105),cloneBuffer=__webpack_require__(109),copyArray=__webpack_require__(110),copySymbols=__webpack_require__(111),copySymbolsIn=__webpack_require__(115),getAllKeys=__webpack_require__(119),getAllKeysIn=__webpack_require__(121),getTag=__webpack_require__(122),initCloneArray=__webpack_require__(127),initCloneByTag=
__webpack_require__(128),initCloneObject=__webpack_require__(135),isArray=__webpack_require__(90),isBuffer=__webpack_require__(91),isMap=__webpack_require__(137),isObject=__webpack_require__(58),isSet=__webpack_require__(139),keys=__webpack_require__(84);var CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4;var argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",genTag="[object GeneratorFunction]",
mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]",weakMapTag="[object WeakMap]";var arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",
uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]";var cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=
cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=true;cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=false;function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=bitmask&CLONE_DEEP_FLAG,isFlat=bitmask&CLONE_FLAT_FLAG,isFull=bitmask&CLONE_SYMBOLS_FLAG;if(customizer)result=object?customizer(value,key,object,stack):customizer(value);if(result!==undefined)return result;if(!isObject(value))return value;
var isArr=isArray(value);if(isArr){result=initCloneArray(value);if(!isDeep)return copyArray(value,result)}else{var tag=getTag(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer(value))return cloneBuffer(value,isDeep);if(tag==objectTag||tag==argsTag||isFunc&&!object){result=isFlat||isFunc?{}:initCloneObject(value);if(!isDeep)return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value))}else{if(!cloneableTags[tag])return object?value:{};result=initCloneByTag(value,
tag,isDeep)}}stack||(stack=new Stack);var stacked=stack.get(value);if(stacked)return stacked;stack.set(value,result);if(isSet(value)){value.forEach(function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack))});return result}if(isMap(value)){value.forEach(function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack))});return result}var keysFunc=isFull?isFlat?getAllKeysIn:getAllKeys:isFlat?keysIn:keys;var props=isArr?undefined:keysFunc(value);
arrayEach(props||value,function(subValue,key){if(props){key=subValue;subValue=value[key]}assignValue(result,key,baseClone(subValue,bitmask,customizer,key,value,stack))});return result}module.exports=baseClone},function(module,exports,__webpack_require__){var ListCache=__webpack_require__(35),stackClear=__webpack_require__(43),stackDelete=__webpack_require__(44),stackGet=__webpack_require__(45),stackHas=__webpack_require__(46),stackSet=__webpack_require__(47);function Stack(entries){var data=this.__data__=
new ListCache(entries);this.size=data.size}Stack.prototype.clear=stackClear;Stack.prototype["delete"]=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;module.exports=Stack},function(module,exports,__webpack_require__){var listCacheClear=__webpack_require__(36),listCacheDelete=__webpack_require__(37),listCacheGet=__webpack_require__(40),listCacheHas=__webpack_require__(41),listCacheSet=__webpack_require__(42);function ListCache(entries){var index=-1,
length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;module.exports=ListCache},function(module,exports){function listCacheClear(){this.__data__=[];this.size=0}module.exports=listCacheClear},function(module,exports,__webpack_require__){var assocIndexOf=
__webpack_require__(38);var arrayProto=Array.prototype;var splice=arrayProto.splice;function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0)return false;var lastIndex=data.length-1;if(index==lastIndex)data.pop();else splice.call(data,index,1);--this.size;return true}module.exports=listCacheDelete},function(module,exports,__webpack_require__){var eq=__webpack_require__(39);function assocIndexOf(array,key){var length=array.length;while(length--)if(eq(array[length][0],
key))return length;return-1}module.exports=assocIndexOf},function(module,exports){function eq(value,other){return value===other||value!==value&&other!==other}module.exports=eq},function(module,exports,__webpack_require__){var assocIndexOf=__webpack_require__(38);function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined:data[index][1]}module.exports=listCacheGet},function(module,exports,__webpack_require__){var assocIndexOf=__webpack_require__(38);function listCacheHas(key){return assocIndexOf(this.__data__,
key)>-1}module.exports=listCacheHas},function(module,exports,__webpack_require__){var assocIndexOf=__webpack_require__(38);function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value])}else data[index][1]=value;return this}module.exports=listCacheSet},function(module,exports,__webpack_require__){var ListCache=__webpack_require__(35);function stackClear(){this.__data__=new ListCache;this.size=0}module.exports=stackClear},function(module,
exports){function stackDelete(key){var data=this.__data__,result=data["delete"](key);this.size=data.size;return result}module.exports=stackDelete},function(module,exports){function stackGet(key){return this.__data__.get(key)}module.exports=stackGet},function(module,exports){function stackHas(key){return this.__data__.has(key)}module.exports=stackHas},function(module,exports,__webpack_require__){var ListCache=__webpack_require__(35),Map=__webpack_require__(48),MapCache=__webpack_require__(63);var LARGE_ARRAY_SIZE=
200;function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this}data=this.__data__=new MapCache(pairs)}data.set(key,value);this.size=data.size;return this}module.exports=stackSet},function(module,exports,__webpack_require__){var getNative=__webpack_require__(49),root=__webpack_require__(54);var Map=getNative(root,"Map");module.exports=Map},function(module,
exports,__webpack_require__){var baseIsNative=__webpack_require__(50),getValue=__webpack_require__(62);function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined}module.exports=getNative},function(module,exports,__webpack_require__){var isFunction=__webpack_require__(51),isMasked=__webpack_require__(59),isObject=__webpack_require__(58),toSource=__webpack_require__(61);var reRegExpChar=/[\\^$.*+?()[\]{}|]/g;var reIsHostCtor=/^\[object .+?Constructor\]$/;
var funcProto=Function.prototype,objectProto=Object.prototype;var funcToString=funcProto.toString;var hasOwnProperty=objectProto.hasOwnProperty;var reIsNative=RegExp("^"+funcToString.call(hasOwnProperty).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative(value){if(!isObject(value)||isMasked(value))return false;var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value))}module.exports=baseIsNative},
function(module,exports,__webpack_require__){var baseGetTag=__webpack_require__(52),isObject=__webpack_require__(58);var asyncTag="[object AsyncFunction]",funcTag="[object Function]",genTag="[object GeneratorFunction]",proxyTag="[object Proxy]";function isFunction(value){if(!isObject(value))return false;var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag}module.exports=isFunction},function(module,exports,__webpack_require__){var Symbol=__webpack_require__(53),
getRawTag=__webpack_require__(56),objectToString=__webpack_require__(57);var nullTag="[object Null]",undefinedTag="[object Undefined]";var symToStringTag=Symbol?Symbol.toStringTag:undefined;function baseGetTag(value){if(value==null)return value===undefined?undefinedTag:nullTag;return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}module.exports=baseGetTag},function(module,exports,__webpack_require__){var root=__webpack_require__(54);var Symbol=root.Symbol;module.exports=
Symbol},function(module,exports,__webpack_require__){var freeGlobal=__webpack_require__(55);var freeSelf=typeof self=="object"&&self&&self.Object===Object&&self;var root=freeGlobal||freeSelf||Function("return this")();module.exports=root},function(module,exports){var freeGlobal=typeof global=="object"&&global&&global.Object===Object&&global;module.exports=freeGlobal},function(module,exports,__webpack_require__){var Symbol=__webpack_require__(53);var objectProto=Object.prototype;var hasOwnProperty=
objectProto.hasOwnProperty;var nativeObjectToString=objectProto.toString;var symToStringTag=Symbol?Symbol.toStringTag:undefined;function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=undefined;var unmasked=true}catch(e){}var result=nativeObjectToString.call(value);if(unmasked)if(isOwn)value[symToStringTag]=tag;else delete value[symToStringTag];return result}module.exports=getRawTag},function(module,exports){var objectProto=
Object.prototype;var nativeObjectToString=objectProto.toString;function objectToString(value){return nativeObjectToString.call(value)}module.exports=objectToString},function(module,exports){function isObject(value){var type=typeof value;return value!=null&&(type=="object"||type=="function")}module.exports=isObject},function(module,exports,__webpack_require__){var coreJsData=__webpack_require__(60);var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||
"");return uid?"Symbol(src)_1."+uid:""}();function isMasked(func){return!!maskSrcKey&&maskSrcKey in func}module.exports=isMasked},function(module,exports,__webpack_require__){var root=__webpack_require__(54);var coreJsData=root["__core-js_shared__"];module.exports=coreJsData},function(module,exports){var funcProto=Function.prototype;var funcToString=funcProto.toString;function toSource(func){if(func!=null){try{return funcToString.call(func)}catch(e){}try{return func+""}catch(e){}}return""}module.exports=
toSource},function(module,exports){function getValue(object,key){return object==null?undefined:object[key]}module.exports=getValue},function(module,exports,__webpack_require__){var mapCacheClear=__webpack_require__(64),mapCacheDelete=__webpack_require__(72),mapCacheGet=__webpack_require__(75),mapCacheHas=__webpack_require__(76),mapCacheSet=__webpack_require__(77);function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];
this.set(entry[0],entry[1])}}MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;module.exports=MapCache},function(module,exports,__webpack_require__){var Hash=__webpack_require__(65),ListCache=__webpack_require__(35),Map=__webpack_require__(48);function mapCacheClear(){this.size=0;this.__data__={"hash":new Hash,"map":new (Map||ListCache),"string":new Hash}}module.exports=
mapCacheClear},function(module,exports,__webpack_require__){var hashClear=__webpack_require__(66),hashDelete=__webpack_require__(68),hashGet=__webpack_require__(69),hashHas=__webpack_require__(70),hashSet=__webpack_require__(71);function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}Hash.prototype.clear=hashClear;Hash.prototype["delete"]=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=
hashHas;Hash.prototype.set=hashSet;module.exports=Hash},function(module,exports,__webpack_require__){var nativeCreate=__webpack_require__(67);function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0}module.exports=hashClear},function(module,exports,__webpack_require__){var getNative=__webpack_require__(49);var nativeCreate=getNative(Object,"create");module.exports=nativeCreate},function(module,exports){function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];
this.size-=result?1:0;return result}module.exports=hashDelete},function(module,exports,__webpack_require__){var nativeCreate=__webpack_require__(67);var HASH_UNDEFINED="__lodash_hash_undefined__";var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined:result}return hasOwnProperty.call(data,key)?data[key]:undefined}module.exports=hashGet},function(module,
exports,__webpack_require__){var nativeCreate=__webpack_require__(67);var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined:hasOwnProperty.call(data,key)}module.exports=hashHas},function(module,exports,__webpack_require__){var nativeCreate=__webpack_require__(67);var HASH_UNDEFINED="__lodash_hash_undefined__";function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:
1;data[key]=nativeCreate&&value===undefined?HASH_UNDEFINED:value;return this}module.exports=hashSet},function(module,exports,__webpack_require__){var getMapData=__webpack_require__(73);function mapCacheDelete(key){var result=getMapData(this,key)["delete"](key);this.size-=result?1:0;return result}module.exports=mapCacheDelete},function(module,exports,__webpack_require__){var isKeyable=__webpack_require__(74);function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key==
"string"?"string":"hash"]:data.map}module.exports=getMapData},function(module,exports){function isKeyable(value){var type=typeof value;return type=="string"||type=="number"||type=="symbol"||type=="boolean"?value!=="__proto__":value===null}module.exports=isKeyable},function(module,exports,__webpack_require__){var getMapData=__webpack_require__(73);function mapCacheGet(key){return getMapData(this,key).get(key)}module.exports=mapCacheGet},function(module,exports,__webpack_require__){var getMapData=__webpack_require__(73);
function mapCacheHas(key){return getMapData(this,key).has(key)}module.exports=mapCacheHas},function(module,exports,__webpack_require__){var getMapData=__webpack_require__(73);function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this}module.exports=mapCacheSet},function(module,exports){function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length)if(iteratee(array[index],index,
array)===false)break;return array}module.exports=arrayEach},function(module,exports,__webpack_require__){var baseAssignValue=__webpack_require__(80),eq=__webpack_require__(39);var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty.call(object,key)&&eq(objValue,value))||value===undefined&&!(key in object))baseAssignValue(object,key,value)}module.exports=assignValue},function(module,exports,__webpack_require__){var defineProperty=
__webpack_require__(81);function baseAssignValue(object,key,value){if(key=="__proto__"&&defineProperty)defineProperty(object,key,{"configurable":true,"enumerable":true,"value":value,"writable":true});else object[key]=value}module.exports=baseAssignValue},function(module,exports,__webpack_require__){var getNative=__webpack_require__(49);var defineProperty=function(){try{var func=getNative(Object,"defineProperty");func({},"",{});return func}catch(e){}}();module.exports=defineProperty},function(module,
exports,__webpack_require__){var copyObject=__webpack_require__(83),keys=__webpack_require__(84);function baseAssign(object,source){return object&&copyObject(source,keys(source),object)}module.exports=baseAssign},function(module,exports,__webpack_require__){var assignValue=__webpack_require__(79),baseAssignValue=__webpack_require__(80);function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index];
var newValue=customizer?customizer(object[key],source[key],key,object,source):undefined;if(newValue===undefined)newValue=source[key];if(isNew)baseAssignValue(object,key,newValue);else assignValue(object,key,newValue)}return object}module.exports=copyObject},function(module,exports,__webpack_require__){var arrayLikeKeys=__webpack_require__(85),baseKeys=__webpack_require__(100),isArrayLike=__webpack_require__(104);function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object)}
module.exports=keys},function(module,exports,__webpack_require__){var baseTimes=__webpack_require__(86),isArguments=__webpack_require__(87),isArray=__webpack_require__(90),isBuffer=__webpack_require__(91),isIndex=__webpack_require__(94),isTypedArray=__webpack_require__(95);var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&
!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value)if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(key=="length"||isBuff&&(key=="offset"||key=="parent")||isType&&(key=="buffer"||key=="byteLength"||key=="byteOffset")||isIndex(key,length))))result.push(key);return result}module.exports=arrayLikeKeys},function(module,exports){function baseTimes(n,iteratee){var index=
-1,result=Array(n);while(++index<n)result[index]=iteratee(index);return result}module.exports=baseTimes},function(module,exports,__webpack_require__){var baseIsArguments=__webpack_require__(88),isObjectLike=__webpack_require__(89);var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;var propertyIsEnumerable=objectProto.propertyIsEnumerable;var isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,
"callee")&&!propertyIsEnumerable.call(value,"callee")};module.exports=isArguments},function(module,exports,__webpack_require__){var baseGetTag=__webpack_require__(52),isObjectLike=__webpack_require__(89);var argsTag="[object Arguments]";function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag}module.exports=baseIsArguments},function(module,exports){function isObjectLike(value){return value!=null&&typeof value=="object"}module.exports=isObjectLike},function(module,exports){var isArray=
Array.isArray;module.exports=isArray},function(module,exports,__webpack_require__){(function(module){var root=__webpack_require__(54),stubFalse=__webpack_require__(93);var freeExports=true&&exports&&!exports.nodeType&&exports;var freeModule=freeExports&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports=freeModule&&freeModule.exports===freeExports;var Buffer=moduleExports?root.Buffer:undefined;var nativeIsBuffer=Buffer?Buffer.isBuffer:undefined;var isBuffer=nativeIsBuffer||
stubFalse;module.exports=isBuffer}).call(this,__webpack_require__(92)(module))},function(module,exports){module.exports=function(module){if(!module.webpackPolyfill){module.deprecate=function(){};module.paths=[];if(!module.children)module.children=[];Object.defineProperty(module,"loaded",{enumerable:true,get:function(){return module.l}});Object.defineProperty(module,"id",{enumerable:true,get:function(){return module.i}});module.webpackPolyfill=1}return module}},function(module,exports){function stubFalse(){return false}
module.exports=stubFalse},function(module,exports){var MAX_SAFE_INTEGER=9007199254740991;var reIsUint=/^(?:0|[1-9]\d*)$/;function isIndex(value,length){var type=typeof value;length=length==null?MAX_SAFE_INTEGER:length;return!!length&&(type=="number"||type!="symbol"&&reIsUint.test(value))&&(value>-1&&value%1==0&&value<length)}module.exports=isIndex},function(module,exports,__webpack_require__){var baseIsTypedArray=__webpack_require__(96),baseUnary=__webpack_require__(98),nodeUtil=__webpack_require__(99);
var nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;module.exports=isTypedArray},function(module,exports,__webpack_require__){var baseGetTag=__webpack_require__(52),isLength=__webpack_require__(97),isObjectLike=__webpack_require__(89);var argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",mapTag="[object Map]",
numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",weakMapTag="[object WeakMap]";var arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",
uint32Tag="[object Uint32Array]";var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=
typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)]}module.exports=baseIsTypedArray},function(module,exports){var MAX_SAFE_INTEGER=9007199254740991;function isLength(value){return typeof value=="number"&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER}
module.exports=isLength},function(module,exports){function baseUnary(func){return function(value){return func(value)}}module.exports=baseUnary},function(module,exports,__webpack_require__){(function(module){var freeGlobal=__webpack_require__(55);var freeExports=true&&exports&&!exports.nodeType&&exports;var freeModule=freeExports&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports=freeModule&&freeModule.exports===freeExports;var freeProcess=moduleExports&&freeGlobal.process;
var nodeUtil=function(){try{var types=freeModule&&freeModule.require&&freeModule.require("util").types;if(types)return types;return freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}();module.exports=nodeUtil}).call(this,__webpack_require__(92)(module))},function(module,exports,__webpack_require__){var isPrototype=__webpack_require__(101),nativeKeys=__webpack_require__(102);var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function baseKeys(object){if(!isPrototype(object))return nativeKeys(object);
var result=[];for(var key in Object(object))if(hasOwnProperty.call(object,key)&&key!="constructor")result.push(key);return result}module.exports=baseKeys},function(module,exports){var objectProto=Object.prototype;function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=="function"&&Ctor.prototype||objectProto;return value===proto}module.exports=isPrototype},function(module,exports,__webpack_require__){var overArg=__webpack_require__(103);var nativeKeys=overArg(Object.keys,Object);
module.exports=nativeKeys},function(module,exports){function overArg(func,transform){return function(arg){return func(transform(arg))}}module.exports=overArg},function(module,exports,__webpack_require__){var isFunction=__webpack_require__(51),isLength=__webpack_require__(97);function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value)}module.exports=isArrayLike},function(module,exports,__webpack_require__){var copyObject=__webpack_require__(83),keysIn=__webpack_require__(106);
function baseAssignIn(object,source){return object&&copyObject(source,keysIn(source),object)}module.exports=baseAssignIn},function(module,exports,__webpack_require__){var arrayLikeKeys=__webpack_require__(85),baseKeysIn=__webpack_require__(107),isArrayLike=__webpack_require__(104);function keysIn(object){return isArrayLike(object)?arrayLikeKeys(object,true):baseKeysIn(object)}module.exports=keysIn},function(module,exports,__webpack_require__){var isObject=__webpack_require__(58),isPrototype=__webpack_require__(101),
nativeKeysIn=__webpack_require__(108);var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function baseKeysIn(object){if(!isObject(object))return nativeKeysIn(object);var isProto=isPrototype(object),result=[];for(var key in object)if(!(key=="constructor"&&(isProto||!hasOwnProperty.call(object,key))))result.push(key);return result}module.exports=baseKeysIn},function(module,exports){function nativeKeysIn(object){var result=[];if(object!=null)for(var key in Object(object))result.push(key);
return result}module.exports=nativeKeysIn},function(module,exports,__webpack_require__){(function(module){var root=__webpack_require__(54);var freeExports=true&&exports&&!exports.nodeType&&exports;var freeModule=freeExports&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports=freeModule&&freeModule.exports===freeExports;var Buffer=moduleExports?root.Buffer:undefined,allocUnsafe=Buffer?Buffer.allocUnsafe:undefined;function cloneBuffer(buffer,isDeep){if(isDeep)return buffer.slice();
var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);buffer.copy(result);return result}module.exports=cloneBuffer}).call(this,__webpack_require__(92)(module))},function(module,exports){function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length)array[index]=source[index];return array}module.exports=copyArray},function(module,exports,__webpack_require__){var copyObject=__webpack_require__(83),getSymbols=
__webpack_require__(112);function copySymbols(source,object){return copyObject(source,getSymbols(source),object)}module.exports=copySymbols},function(module,exports,__webpack_require__){var arrayFilter=__webpack_require__(113),stubArray=__webpack_require__(114);var objectProto=Object.prototype;var propertyIsEnumerable=objectProto.propertyIsEnumerable;var nativeGetSymbols=Object.getOwnPropertySymbols;var getSymbols=!nativeGetSymbols?stubArray:function(object){if(object==null)return[];object=Object(object);
return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol)})};module.exports=getSymbols},function(module,exports){function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array))result[resIndex++]=value}return result}module.exports=arrayFilter},function(module,exports){function stubArray(){return[]}module.exports=stubArray},function(module,
exports,__webpack_require__){var copyObject=__webpack_require__(83),getSymbolsIn=__webpack_require__(116);function copySymbolsIn(source,object){return copyObject(source,getSymbolsIn(source),object)}module.exports=copySymbolsIn},function(module,exports,__webpack_require__){var arrayPush=__webpack_require__(117),getPrototype=__webpack_require__(118),getSymbols=__webpack_require__(112),stubArray=__webpack_require__(114);var nativeGetSymbols=Object.getOwnPropertySymbols;var getSymbolsIn=!nativeGetSymbols?
stubArray:function(object){var result=[];while(object){arrayPush(result,getSymbols(object));object=getPrototype(object)}return result};module.exports=getSymbolsIn},function(module,exports){function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length)array[offset+index]=values[index];return array}module.exports=arrayPush},function(module,exports,__webpack_require__){var overArg=__webpack_require__(103);var getPrototype=overArg(Object.getPrototypeOf,Object);
module.exports=getPrototype},function(module,exports,__webpack_require__){var baseGetAllKeys=__webpack_require__(120),getSymbols=__webpack_require__(112),keys=__webpack_require__(84);function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols)}module.exports=getAllKeys},function(module,exports,__webpack_require__){var arrayPush=__webpack_require__(117),isArray=__webpack_require__(90);function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?
result:arrayPush(result,symbolsFunc(object))}module.exports=baseGetAllKeys},function(module,exports,__webpack_require__){var baseGetAllKeys=__webpack_require__(120),getSymbolsIn=__webpack_require__(116),keysIn=__webpack_require__(106);function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn)}module.exports=getAllKeysIn},function(module,exports,__webpack_require__){var DataView=__webpack_require__(123),Map=__webpack_require__(48),Promise=__webpack_require__(124),Set=__webpack_require__(125),
WeakMap=__webpack_require__(126),baseGetTag=__webpack_require__(52),toSource=__webpack_require__(61);var mapTag="[object Map]",objectTag="[object Object]",promiseTag="[object Promise]",setTag="[object Set]",weakMapTag="[object WeakMap]";var dataViewTag="[object DataView]";var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);var getTag=baseGetTag;if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=
dataViewTag||Map&&getTag(new Map)!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set)!=setTag||WeakMap&&getTag(new WeakMap)!=weakMapTag)getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:undefined,ctorString=Ctor?toSource(Ctor):"";if(ctorString)switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag}return result};
module.exports=getTag},function(module,exports,__webpack_require__){var getNative=__webpack_require__(49),root=__webpack_require__(54);var DataView=getNative(root,"DataView");module.exports=DataView},function(module,exports,__webpack_require__){var getNative=__webpack_require__(49),root=__webpack_require__(54);var Promise=getNative(root,"Promise");module.exports=Promise},function(module,exports,__webpack_require__){var getNative=__webpack_require__(49),root=__webpack_require__(54);var Set=getNative(root,
"Set");module.exports=Set},function(module,exports,__webpack_require__){var getNative=__webpack_require__(49),root=__webpack_require__(54);var WeakMap=getNative(root,"WeakMap");module.exports=WeakMap},function(module,exports){var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function initCloneArray(array){var length=array.length,result=new array.constructor(length);if(length&&typeof array[0]=="string"&&hasOwnProperty.call(array,"index")){result.index=array.index;result.input=
array.input}return result}module.exports=initCloneArray},function(module,exports,__webpack_require__){var cloneArrayBuffer=__webpack_require__(129),cloneDataView=__webpack_require__(131),cloneRegExp=__webpack_require__(132),cloneSymbol=__webpack_require__(133),cloneTypedArray=__webpack_require__(134);var boolTag="[object Boolean]",dateTag="[object Date]",mapTag="[object Map]",numberTag="[object Number]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]";
var arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]";function initCloneByTag(object,tag,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag:return cloneArrayBuffer(object);
case boolTag:case dateTag:return new Ctor(+object);case dataViewTag:return cloneDataView(object,isDeep);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:return cloneTypedArray(object,isDeep);case mapTag:return new Ctor;case numberTag:case stringTag:return new Ctor(object);case regexpTag:return cloneRegExp(object);case setTag:return new Ctor;case symbolTag:return cloneSymbol(object)}}module.exports=initCloneByTag},
function(module,exports,__webpack_require__){var Uint8Array=__webpack_require__(130);function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);(new Uint8Array(result)).set(new Uint8Array(arrayBuffer));return result}module.exports=cloneArrayBuffer},function(module,exports,__webpack_require__){var root=__webpack_require__(54);var Uint8Array=root.Uint8Array;module.exports=Uint8Array},function(module,exports,__webpack_require__){var cloneArrayBuffer=__webpack_require__(129);
function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength)}module.exports=cloneDataView},function(module,exports){var reFlags=/\w*$/;function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result}module.exports=cloneRegExp},function(module,exports,__webpack_require__){var Symbol=__webpack_require__(53);
var symbolProto=Symbol?Symbol.prototype:undefined,symbolValueOf=symbolProto?symbolProto.valueOf:undefined;function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{}}module.exports=cloneSymbol},function(module,exports,__webpack_require__){var cloneArrayBuffer=__webpack_require__(129);function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length)}
module.exports=cloneTypedArray},function(module,exports,__webpack_require__){var baseCreate=__webpack_require__(136),getPrototype=__webpack_require__(118),isPrototype=__webpack_require__(101);function initCloneObject(object){return typeof object.constructor=="function"&&!isPrototype(object)?baseCreate(getPrototype(object)):{}}module.exports=initCloneObject},function(module,exports,__webpack_require__){var isObject=__webpack_require__(58);var objectCreate=Object.create;var baseCreate=function(){function object(){}
return function(proto){if(!isObject(proto))return{};if(objectCreate)return objectCreate(proto);object.prototype=proto;var result=new object;object.prototype=undefined;return result}}();module.exports=baseCreate},function(module,exports,__webpack_require__){var baseIsMap=__webpack_require__(138),baseUnary=__webpack_require__(98),nodeUtil=__webpack_require__(99);var nodeIsMap=nodeUtil&&nodeUtil.isMap;var isMap=nodeIsMap?baseUnary(nodeIsMap):baseIsMap;module.exports=isMap},function(module,exports,__webpack_require__){var getTag=
__webpack_require__(122),isObjectLike=__webpack_require__(89);var mapTag="[object Map]";function baseIsMap(value){return isObjectLike(value)&&getTag(value)==mapTag}module.exports=baseIsMap},function(module,exports,__webpack_require__){var baseIsSet=__webpack_require__(140),baseUnary=__webpack_require__(98),nodeUtil=__webpack_require__(99);var nodeIsSet=nodeUtil&&nodeUtil.isSet;var isSet=nodeIsSet?baseUnary(nodeIsSet):baseIsSet;module.exports=isSet},function(module,exports,__webpack_require__){var getTag=
__webpack_require__(122),isObjectLike=__webpack_require__(89);var setTag="[object Set]";function baseIsSet(value){return isObjectLike(value)&&getTag(value)==setTag}module.exports=baseIsSet},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"VISITOR_KEYS",{enumerable:true,get:function(){return _utils.VISITOR_KEYS}});Object.defineProperty(exports,"ALIAS_KEYS",{enumerable:true,get:function(){return _utils.ALIAS_KEYS}});
Object.defineProperty(exports,"FLIPPED_ALIAS_KEYS",{enumerable:true,get:function(){return _utils.FLIPPED_ALIAS_KEYS}});Object.defineProperty(exports,"NODE_FIELDS",{enumerable:true,get:function(){return _utils.NODE_FIELDS}});Object.defineProperty(exports,"BUILDER_KEYS",{enumerable:true,get:function(){return _utils.BUILDER_KEYS}});Object.defineProperty(exports,"DEPRECATED_KEYS",{enumerable:true,get:function(){return _utils.DEPRECATED_KEYS}});exports.TYPES=void 0;function _toFastProperties(){const data=
_interopRequireDefault(__webpack_require__(142));_toFastProperties=function(){return data};return data}__webpack_require__(143);__webpack_require__(153);__webpack_require__(154);__webpack_require__(155);__webpack_require__(156);__webpack_require__(157);__webpack_require__(158);var _utils=__webpack_require__(150);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(0,_toFastProperties().default)(_utils.VISITOR_KEYS);(0,_toFastProperties().default)(_utils.ALIAS_KEYS);(0,
_toFastProperties().default)(_utils.FLIPPED_ALIAS_KEYS);(0,_toFastProperties().default)(_utils.NODE_FIELDS);(0,_toFastProperties().default)(_utils.BUILDER_KEYS);(0,_toFastProperties().default)(_utils.DEPRECATED_KEYS);const TYPES=Object.keys(_utils.VISITOR_KEYS).concat(Object.keys(_utils.FLIPPED_ALIAS_KEYS)).concat(Object.keys(_utils.DEPRECATED_KEYS));exports.TYPES=TYPES},function(module,exports,__webpack_require__){let fastProto=null;function FastObject(o){if(fastProto!==null&&typeof fastProto.property){const result=
fastProto;fastProto=FastObject.prototype=null;return result}fastProto=FastObject.prototype=o==null?Object.create(null):o;return new FastObject}FastObject();module.exports=function toFastproperties(o){return FastObject(o)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.patternLikeCommon=exports.functionDeclarationCommon=exports.functionTypeAnnotationCommon=exports.functionCommon=void 0;var _isValidIdentifier=_interopRequireDefault(__webpack_require__(144));
var _constants=__webpack_require__(149);var _utils=_interopRequireWildcard(__webpack_require__(150));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(0,_utils.default)("ArrayExpression",{fields:{elements:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeOrValueType)("null","Expression","SpreadElement"))),default:[]}},visitor:["elements"],aliases:["Expression"]});(0,_utils.default)("AssignmentExpression",{fields:{operator:{validate:(0,_utils.assertValueType)("string")},left:{validate:(0,_utils.assertNodeType)("LVal")},
right:{validate:(0,_utils.assertNodeType)("Expression")}},builder:["operator","left","right"],visitor:["left","right"],aliases:["Expression"]});(0,_utils.default)("BinaryExpression",{builder:["operator","left","right"],fields:{operator:{validate:(0,_utils.assertOneOf)(..._constants.BINARY_OPERATORS)},left:{validate:(0,_utils.assertNodeType)("Expression")},right:{validate:(0,_utils.assertNodeType)("Expression")}},visitor:["left","right"],aliases:["Binary","Expression"]});(0,_utils.default)("InterpreterDirective",
{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}}});(0,_utils.default)("Directive",{visitor:["value"],fields:{value:{validate:(0,_utils.assertNodeType)("DirectiveLiteral")}}});(0,_utils.default)("DirectiveLiteral",{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}}});(0,_utils.default)("BlockStatement",{builder:["body","directives"],visitor:["directives","body"],fields:{directives:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),
(0,_utils.assertEach)((0,_utils.assertNodeType)("Directive"))),default:[]},body:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Statement")))}},aliases:["Scopable","BlockParent","Block","Statement"]});(0,_utils.default)("BreakStatement",{visitor:["label"],fields:{label:{validate:(0,_utils.assertNodeType)("Identifier"),optional:true}},aliases:["Statement","Terminatorless","CompletionStatement"]});(0,_utils.default)("CallExpression",{visitor:["callee",
"arguments","typeParameters","typeArguments"],builder:["callee","arguments"],aliases:["Expression"],fields:{callee:{validate:(0,_utils.assertNodeType)("Expression")},arguments:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Expression","SpreadElement","JSXNamespacedName")))},optional:{validate:(0,_utils.assertOneOf)(true,false),optional:true},typeArguments:{validate:(0,_utils.assertNodeType)("TypeParameterInstantiation"),optional:true},
typeParameters:{validate:(0,_utils.assertNodeType)("TSTypeParameterInstantiation"),optional:true}}});(0,_utils.default)("CatchClause",{visitor:["param","body"],fields:{param:{validate:(0,_utils.assertNodeType)("Identifier"),optional:true},body:{validate:(0,_utils.assertNodeType)("BlockStatement")}},aliases:["Scopable","BlockParent"]});(0,_utils.default)("ConditionalExpression",{visitor:["test","consequent","alternate"],fields:{test:{validate:(0,_utils.assertNodeType)("Expression")},consequent:{validate:(0,
_utils.assertNodeType)("Expression")},alternate:{validate:(0,_utils.assertNodeType)("Expression")}},aliases:["Expression","Conditional"]});(0,_utils.default)("ContinueStatement",{visitor:["label"],fields:{label:{validate:(0,_utils.assertNodeType)("Identifier"),optional:true}},aliases:["Statement","Terminatorless","CompletionStatement"]});(0,_utils.default)("DebuggerStatement",{aliases:["Statement"]});(0,_utils.default)("DoWhileStatement",{visitor:["test","body"],fields:{test:{validate:(0,_utils.assertNodeType)("Expression")},
body:{validate:(0,_utils.assertNodeType)("Statement")}},aliases:["Statement","BlockParent","Loop","While","Scopable"]});(0,_utils.default)("EmptyStatement",{aliases:["Statement"]});(0,_utils.default)("ExpressionStatement",{visitor:["expression"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression")}},aliases:["Statement","ExpressionWrapper"]});(0,_utils.default)("File",{builder:["program","comments","tokens"],visitor:["program"],fields:{program:{validate:(0,_utils.assertNodeType)("Program")}}});
(0,_utils.default)("ForInStatement",{visitor:["left","right","body"],aliases:["Scopable","Statement","For","BlockParent","Loop","ForXStatement"],fields:{left:{validate:(0,_utils.assertNodeType)("VariableDeclaration","LVal")},right:{validate:(0,_utils.assertNodeType)("Expression")},body:{validate:(0,_utils.assertNodeType)("Statement")}}});(0,_utils.default)("ForStatement",{visitor:["init","test","update","body"],aliases:["Scopable","Statement","For","BlockParent","Loop"],fields:{init:{validate:(0,
_utils.assertNodeType)("VariableDeclaration","Expression"),optional:true},test:{validate:(0,_utils.assertNodeType)("Expression"),optional:true},update:{validate:(0,_utils.assertNodeType)("Expression"),optional:true},body:{validate:(0,_utils.assertNodeType)("Statement")}}});const functionCommon={params:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Identifier","Pattern","RestElement","TSParameterProperty")))},generator:{default:false,
validate:(0,_utils.assertValueType)("boolean")},async:{validate:(0,_utils.assertValueType)("boolean"),default:false}};exports.functionCommon=functionCommon;const functionTypeAnnotationCommon={returnType:{validate:(0,_utils.assertNodeType)("TypeAnnotation","TSTypeAnnotation","Noop"),optional:true},typeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterDeclaration","TSTypeParameterDeclaration","Noop"),optional:true}};exports.functionTypeAnnotationCommon=functionTypeAnnotationCommon;const functionDeclarationCommon=
Object.assign({},functionCommon,{declare:{validate:(0,_utils.assertValueType)("boolean"),optional:true},id:{validate:(0,_utils.assertNodeType)("Identifier"),optional:true}});exports.functionDeclarationCommon=functionDeclarationCommon;(0,_utils.default)("FunctionDeclaration",{builder:["id","params","body","generator","async"],visitor:["id","params","body","returnType","typeParameters"],fields:Object.assign({},functionDeclarationCommon,functionTypeAnnotationCommon,{body:{validate:(0,_utils.assertNodeType)("BlockStatement")}}),
aliases:["Scopable","Function","BlockParent","FunctionParent","Statement","Pureish","Declaration"]});(0,_utils.default)("FunctionExpression",{inherits:"FunctionDeclaration",aliases:["Scopable","Function","BlockParent","FunctionParent","Expression","Pureish"],fields:Object.assign({},functionCommon,functionTypeAnnotationCommon,{id:{validate:(0,_utils.assertNodeType)("Identifier"),optional:true},body:{validate:(0,_utils.assertNodeType)("BlockStatement")}})});const patternLikeCommon={typeAnnotation:{validate:(0,
_utils.assertNodeType)("TypeAnnotation","TSTypeAnnotation","Noop"),optional:true},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator")))}};exports.patternLikeCommon=patternLikeCommon;(0,_utils.default)("Identifier",{builder:["name"],visitor:["typeAnnotation","decorators"],aliases:["Expression","PatternLike","LVal","TSEntityName"],fields:Object.assign({},patternLikeCommon,{name:{validate:(0,_utils.chain)(function(node,
key,val){if(!(0,_isValidIdentifier.default)(val));},(0,_utils.assertValueType)("string"))},optional:{validate:(0,_utils.assertValueType)("boolean"),optional:true}})});(0,_utils.default)("IfStatement",{visitor:["test","consequent","alternate"],aliases:["Statement","Conditional"],fields:{test:{validate:(0,_utils.assertNodeType)("Expression")},consequent:{validate:(0,_utils.assertNodeType)("Statement")},alternate:{optional:true,validate:(0,_utils.assertNodeType)("Statement")}}});(0,_utils.default)("LabeledStatement",
{visitor:["label","body"],aliases:["Statement"],fields:{label:{validate:(0,_utils.assertNodeType)("Identifier")},body:{validate:(0,_utils.assertNodeType)("Statement")}}});(0,_utils.default)("StringLiteral",{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}},aliases:["Expression","Pureish","Literal","Immutable"]});(0,_utils.default)("NumericLiteral",{builder:["value"],deprecatedAlias:"NumberLiteral",fields:{value:{validate:(0,_utils.assertValueType)("number")}},aliases:["Expression",
"Pureish","Literal","Immutable"]});(0,_utils.default)("NullLiteral",{aliases:["Expression","Pureish","Literal","Immutable"]});(0,_utils.default)("BooleanLiteral",{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("boolean")}},aliases:["Expression","Pureish","Literal","Immutable"]});(0,_utils.default)("RegExpLiteral",{builder:["pattern","flags"],deprecatedAlias:"RegexLiteral",aliases:["Expression","Literal"],fields:{pattern:{validate:(0,_utils.assertValueType)("string")},flags:{validate:(0,
_utils.assertValueType)("string"),default:""}}});(0,_utils.default)("LogicalExpression",{builder:["operator","left","right"],visitor:["left","right"],aliases:["Binary","Expression"],fields:{operator:{validate:(0,_utils.assertOneOf)(..._constants.LOGICAL_OPERATORS)},left:{validate:(0,_utils.assertNodeType)("Expression")},right:{validate:(0,_utils.assertNodeType)("Expression")}}});(0,_utils.default)("MemberExpression",{builder:["object","property","computed","optional"],visitor:["object","property"],
aliases:["Expression","LVal"],fields:{object:{validate:(0,_utils.assertNodeType)("Expression")},property:{validate:function(){const normal=(0,_utils.assertNodeType)("Identifier","PrivateName");const computed=(0,_utils.assertNodeType)("Expression");return function(node,key,val){const validator=node.computed?computed:normal;validator(node,key,val)}}()},computed:{default:false},optional:{validate:(0,_utils.assertOneOf)(true,false),optional:true}}});(0,_utils.default)("NewExpression",{inherits:"CallExpression"});
(0,_utils.default)("Program",{visitor:["directives","body"],builder:["body","directives","sourceType","interpreter"],fields:{sourceFile:{validate:(0,_utils.assertValueType)("string")},sourceType:{validate:(0,_utils.assertOneOf)("script","module"),default:"script"},interpreter:{validate:(0,_utils.assertNodeType)("InterpreterDirective"),default:null,optional:true},directives:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Directive"))),
default:[]},body:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Statement")))}},aliases:["Scopable","BlockParent","Block"]});(0,_utils.default)("ObjectExpression",{visitor:["properties"],aliases:["Expression"],fields:{properties:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ObjectMethod","ObjectProperty","SpreadElement")))}}});(0,_utils.default)("ObjectMethod",{builder:["kind",
"key","params","body","computed"],fields:Object.assign({},functionCommon,functionTypeAnnotationCommon,{kind:{validate:(0,_utils.chain)((0,_utils.assertValueType)("string"),(0,_utils.assertOneOf)("method","get","set")),default:"method"},computed:{validate:(0,_utils.assertValueType)("boolean"),default:false},key:{validate:function(){const normal=(0,_utils.assertNodeType)("Identifier","StringLiteral","NumericLiteral");const computed=(0,_utils.assertNodeType)("Expression");return function(node,key,val){const validator=
node.computed?computed:normal;validator(node,key,val)}}()},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator")))},body:{validate:(0,_utils.assertNodeType)("BlockStatement")}}),visitor:["key","params","body","decorators","returnType","typeParameters"],aliases:["UserWhitespacable","Function","Scopable","BlockParent","FunctionParent","Method","ObjectMember"]});(0,_utils.default)("ObjectProperty",{builder:["key","value",
"computed","shorthand","decorators"],fields:{computed:{validate:(0,_utils.assertValueType)("boolean"),default:false},key:{validate:function(){const normal=(0,_utils.assertNodeType)("Identifier","StringLiteral","NumericLiteral");const computed=(0,_utils.assertNodeType)("Expression");return function(node,key,val){const validator=node.computed?computed:normal;validator(node,key,val)}}()},value:{validate:(0,_utils.assertNodeType)("Expression","PatternLike")},shorthand:{validate:(0,_utils.assertValueType)("boolean"),
default:false},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:true}},visitor:["key","value","decorators"],aliases:["UserWhitespacable","Property","ObjectMember"]});(0,_utils.default)("RestElement",{visitor:["argument","typeAnnotation"],builder:["argument"],aliases:["LVal","PatternLike"],deprecatedAlias:"RestProperty",fields:Object.assign({},patternLikeCommon,{argument:{validate:(0,_utils.assertNodeType)("LVal")}})});
(0,_utils.default)("ReturnStatement",{visitor:["argument"],aliases:["Statement","Terminatorless","CompletionStatement"],fields:{argument:{validate:(0,_utils.assertNodeType)("Expression"),optional:true}}});(0,_utils.default)("SequenceExpression",{visitor:["expressions"],fields:{expressions:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Expression")))}},aliases:["Expression"]});(0,_utils.default)("SwitchCase",{visitor:["test","consequent"],
fields:{test:{validate:(0,_utils.assertNodeType)("Expression"),optional:true},consequent:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Statement")))}}});(0,_utils.default)("SwitchStatement",{visitor:["discriminant","cases"],aliases:["Statement","BlockParent","Scopable"],fields:{discriminant:{validate:(0,_utils.assertNodeType)("Expression")},cases:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,
_utils.assertNodeType)("SwitchCase")))}}});(0,_utils.default)("ThisExpression",{aliases:["Expression"]});(0,_utils.default)("ThrowStatement",{visitor:["argument"],aliases:["Statement","Terminatorless","CompletionStatement"],fields:{argument:{validate:(0,_utils.assertNodeType)("Expression")}}});(0,_utils.default)("TryStatement",{visitor:["block","handler","finalizer"],aliases:["Statement"],fields:{block:{validate:(0,_utils.assertNodeType)("BlockStatement")},handler:{optional:true,validate:(0,_utils.assertNodeType)("CatchClause")},
finalizer:{optional:true,validate:(0,_utils.assertNodeType)("BlockStatement")}}});(0,_utils.default)("UnaryExpression",{builder:["operator","argument","prefix"],fields:{prefix:{default:true},argument:{validate:(0,_utils.assertNodeType)("Expression")},operator:{validate:(0,_utils.assertOneOf)(..._constants.UNARY_OPERATORS)}},visitor:["argument"],aliases:["UnaryLike","Expression"]});(0,_utils.default)("UpdateExpression",{builder:["operator","argument","prefix"],fields:{prefix:{default:false},argument:{validate:(0,
_utils.assertNodeType)("Expression")},operator:{validate:(0,_utils.assertOneOf)(..._constants.UPDATE_OPERATORS)}},visitor:["argument"],aliases:["Expression"]});(0,_utils.default)("VariableDeclaration",{builder:["kind","declarations"],visitor:["declarations"],aliases:["Statement","Declaration"],fields:{declare:{validate:(0,_utils.assertValueType)("boolean"),optional:true},kind:{validate:(0,_utils.chain)((0,_utils.assertValueType)("string"),(0,_utils.assertOneOf)("var","let","const"))},declarations:{validate:(0,
_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("VariableDeclarator")))}}});(0,_utils.default)("VariableDeclarator",{visitor:["id","init"],fields:{id:{validate:(0,_utils.assertNodeType)("LVal")},definite:{optional:true,validate:(0,_utils.assertValueType)("boolean")},init:{optional:true,validate:(0,_utils.assertNodeType)("Expression")}}});(0,_utils.default)("WhileStatement",{visitor:["test","body"],aliases:["Statement","BlockParent","Loop","While",
"Scopable"],fields:{test:{validate:(0,_utils.assertNodeType)("Expression")},body:{validate:(0,_utils.assertNodeType)("BlockStatement","Statement")}}});(0,_utils.default)("WithStatement",{visitor:["object","body"],aliases:["Statement"],fields:{object:{validate:(0,_utils.assertNodeType)("Expression")},body:{validate:(0,_utils.assertNodeType)("BlockStatement","Statement")}}})},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isValidIdentifier;
function _esutils(){const data=_interopRequireDefault(__webpack_require__(145));_esutils=function(){return data};return data}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function isValidIdentifier(name){if(typeof name!=="string"||_esutils().default.keyword.isReservedWordES6(name,true))return false;else if(name==="await")return false;else return _esutils().default.keyword.isIdentifierNameES6(name)}},function(module,exports,__webpack_require__){(function(){exports.ast=
__webpack_require__(146);exports.code=__webpack_require__(147);exports.keyword=__webpack_require__(148)})()},function(module,exports){(function(){function isExpression(node){if(node==null)return false;switch(node.type){case "ArrayExpression":case "AssignmentExpression":case "BinaryExpression":case "CallExpression":case "ConditionalExpression":case "FunctionExpression":case "Identifier":case "Literal":case "LogicalExpression":case "MemberExpression":case "NewExpression":case "ObjectExpression":case "SequenceExpression":case "ThisExpression":case "UnaryExpression":case "UpdateExpression":return true}return false}
function isIterationStatement(node){if(node==null)return false;switch(node.type){case "DoWhileStatement":case "ForInStatement":case "ForStatement":case "WhileStatement":return true}return false}function isStatement(node){if(node==null)return false;switch(node.type){case "BlockStatement":case "BreakStatement":case "ContinueStatement":case "DebuggerStatement":case "DoWhileStatement":case "EmptyStatement":case "ExpressionStatement":case "ForInStatement":case "ForStatement":case "IfStatement":case "LabeledStatement":case "ReturnStatement":case "SwitchStatement":case "ThrowStatement":case "TryStatement":case "VariableDeclaration":case "WhileStatement":case "WithStatement":return true}return false}
function isSourceElement(node){return isStatement(node)||node!=null&&node.type==="FunctionDeclaration"}function trailingStatement(node){switch(node.type){case "IfStatement":if(node.alternate!=null)return node.alternate;return node.consequent;case "LabeledStatement":case "ForStatement":case "ForInStatement":case "WhileStatement":case "WithStatement":return node.body}return null}function isProblematicIfStatement(node){var current;if(node.type!=="IfStatement")return false;if(node.alternate==null)return false;
current=node.consequent;do{if(current.type==="IfStatement")if(current.alternate==null)return true;current=trailingStatement(current)}while(current);return false}module.exports={isExpression:isExpression,isStatement:isStatement,isIterationStatement:isIterationStatement,isSourceElement:isSourceElement,isProblematicIfStatement:isProblematicIfStatement,trailingStatement:trailingStatement}})()},function(module,exports){(function(){var ES6Regex,ES5Regex,NON_ASCII_WHITESPACES,IDENTIFIER_START,IDENTIFIER_PART,
ch;ES5Regex={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/};
ES6Regex={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/};
function isDecimalDigit(ch){return 48<=ch&&ch<=57}function isHexDigit(ch){return 48<=ch&&ch<=57||97<=ch&&ch<=102||65<=ch&&ch<=70}function isOctalDigit(ch){return ch>=48&&ch<=55}NON_ASCII_WHITESPACES=[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279];function isWhiteSpace(ch){return ch===32||ch===9||ch===11||ch===12||ch===160||ch>=5760&&NON_ASCII_WHITESPACES.indexOf(ch)>=0}function isLineTerminator(ch){return ch===10||ch===13||ch===8232||ch===8233}function fromCodePoint(cp){if(cp<=
65535)return String.fromCharCode(cp);var cu1=String.fromCharCode(Math.floor((cp-65536)/1024)+55296);var cu2=String.fromCharCode((cp-65536)%1024+56320);return cu1+cu2}IDENTIFIER_START=new Array(128);for(ch=0;ch<128;++ch)IDENTIFIER_START[ch]=ch>=97&&ch<=122||ch>=65&&ch<=90||ch===36||ch===95;IDENTIFIER_PART=new Array(128);for(ch=0;ch<128;++ch)IDENTIFIER_PART[ch]=ch>=97&&ch<=122||ch>=65&&ch<=90||ch>=48&&ch<=57||ch===36||ch===95;function isIdentifierStartES5(ch){return ch<128?IDENTIFIER_START[ch]:ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch))}
function isIdentifierPartES5(ch){return ch<128?IDENTIFIER_PART[ch]:ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch))}function isIdentifierStartES6(ch){return ch<128?IDENTIFIER_START[ch]:ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch))}function isIdentifierPartES6(ch){return ch<128?IDENTIFIER_PART[ch]:ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch))}module.exports={isDecimalDigit:isDecimalDigit,isHexDigit:isHexDigit,isOctalDigit:isOctalDigit,isWhiteSpace:isWhiteSpace,isLineTerminator:isLineTerminator,
isIdentifierStartES5:isIdentifierStartES5,isIdentifierPartES5:isIdentifierPartES5,isIdentifierStartES6:isIdentifierStartES6,isIdentifierPartES6:isIdentifierPartES6}})()},function(module,exports,__webpack_require__){(function(){var code=__webpack_require__(147);function isStrictModeReservedWordES6(id){switch(id){case "implements":case "interface":case "package":case "private":case "protected":case "public":case "static":case "let":return true;default:return false}}function isKeywordES5(id,strict){if(!strict&&
id==="yield")return false;return isKeywordES6(id,strict)}function isKeywordES6(id,strict){if(strict&&isStrictModeReservedWordES6(id))return true;switch(id.length){case 2:return id==="if"||id==="in"||id==="do";case 3:return id==="var"||id==="for"||id==="new"||id==="try";case 4:return id==="this"||id==="else"||id==="case"||id==="void"||id==="with"||id==="enum";case 5:return id==="while"||id==="break"||id==="catch"||id==="throw"||id==="const"||id==="yield"||id==="class"||id==="super";case 6:return id===
"return"||id==="typeof"||id==="delete"||id==="switch"||id==="export"||id==="import";case 7:return id==="default"||id==="finally"||id==="extends";case 8:return id==="function"||id==="continue"||id==="debugger";case 10:return id==="instanceof";default:return false}}function isReservedWordES5(id,strict){return id==="null"||id==="true"||id==="false"||isKeywordES5(id,strict)}function isReservedWordES6(id,strict){return id==="null"||id==="true"||id==="false"||isKeywordES6(id,strict)}function isRestrictedWord(id){return id===
"eval"||id==="arguments"}function isIdentifierNameES5(id){var i,iz,ch;if(id.length===0)return false;ch=id.charCodeAt(0);if(!code.isIdentifierStartES5(ch))return false;for(i=1,iz=id.length;i<iz;++i){ch=id.charCodeAt(i);if(!code.isIdentifierPartES5(ch))return false}return true}function decodeUtf16(lead,trail){return(lead-55296)*1024+(trail-56320)+65536}function isIdentifierNameES6(id){var i,iz,ch,lowCh,check;if(id.length===0)return false;check=code.isIdentifierStartES6;for(i=0,iz=id.length;i<iz;++i){ch=
id.charCodeAt(i);if(55296<=ch&&ch<=56319){++i;if(i>=iz)return false;lowCh=id.charCodeAt(i);if(!(56320<=lowCh&&lowCh<=57343))return false;ch=decodeUtf16(ch,lowCh)}if(!check(ch))return false;check=code.isIdentifierPartES6}return true}function isIdentifierES5(id,strict){return isIdentifierNameES5(id)&&!isReservedWordES5(id,strict)}function isIdentifierES6(id,strict){return isIdentifierNameES6(id)&&!isReservedWordES6(id,strict)}module.exports={isKeywordES5:isKeywordES5,isKeywordES6:isKeywordES6,isReservedWordES5:isReservedWordES5,
isReservedWordES6:isReservedWordES6,isRestrictedWord:isRestrictedWord,isIdentifierNameES5:isIdentifierNameES5,isIdentifierNameES6:isIdentifierNameES6,isIdentifierES5:isIdentifierES5,isIdentifierES6:isIdentifierES6}})()},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.NOT_LOCAL_BINDING=exports.BLOCK_SCOPED_SYMBOL=exports.INHERIT_KEYS=exports.UNARY_OPERATORS=exports.STRING_UNARY_OPERATORS=exports.NUMBER_UNARY_OPERATORS=exports.BOOLEAN_UNARY_OPERATORS=
exports.BINARY_OPERATORS=exports.NUMBER_BINARY_OPERATORS=exports.BOOLEAN_BINARY_OPERATORS=exports.COMPARISON_BINARY_OPERATORS=exports.EQUALITY_BINARY_OPERATORS=exports.BOOLEAN_NUMBER_BINARY_OPERATORS=exports.UPDATE_OPERATORS=exports.LOGICAL_OPERATORS=exports.COMMENT_KEYS=exports.FOR_INIT_KEYS=exports.FLATTENABLE_KEYS=exports.STATEMENT_OR_BLOCK_KEYS=void 0;const STATEMENT_OR_BLOCK_KEYS=["consequent","body","alternate"];exports.STATEMENT_OR_BLOCK_KEYS=STATEMENT_OR_BLOCK_KEYS;const FLATTENABLE_KEYS=
["body","expressions"];exports.FLATTENABLE_KEYS=FLATTENABLE_KEYS;const FOR_INIT_KEYS=["left","init"];exports.FOR_INIT_KEYS=FOR_INIT_KEYS;const COMMENT_KEYS=["leadingComments","trailingComments","innerComments"];exports.COMMENT_KEYS=COMMENT_KEYS;const LOGICAL_OPERATORS=["||","&&","??"];exports.LOGICAL_OPERATORS=LOGICAL_OPERATORS;const UPDATE_OPERATORS=["++","--"];exports.UPDATE_OPERATORS=UPDATE_OPERATORS;const BOOLEAN_NUMBER_BINARY_OPERATORS=[">","<",">=","<="];exports.BOOLEAN_NUMBER_BINARY_OPERATORS=
BOOLEAN_NUMBER_BINARY_OPERATORS;const EQUALITY_BINARY_OPERATORS=["==","===","!=","!=="];exports.EQUALITY_BINARY_OPERATORS=EQUALITY_BINARY_OPERATORS;const COMPARISON_BINARY_OPERATORS=[...EQUALITY_BINARY_OPERATORS,"in","instanceof"];exports.COMPARISON_BINARY_OPERATORS=COMPARISON_BINARY_OPERATORS;const BOOLEAN_BINARY_OPERATORS=[...COMPARISON_BINARY_OPERATORS,...BOOLEAN_NUMBER_BINARY_OPERATORS];exports.BOOLEAN_BINARY_OPERATORS=BOOLEAN_BINARY_OPERATORS;const NUMBER_BINARY_OPERATORS=["-","/","%","*","**",
"&","|",">>",">>>","<<","^"];exports.NUMBER_BINARY_OPERATORS=NUMBER_BINARY_OPERATORS;const BINARY_OPERATORS=["+",...NUMBER_BINARY_OPERATORS,...BOOLEAN_BINARY_OPERATORS];exports.BINARY_OPERATORS=BINARY_OPERATORS;const BOOLEAN_UNARY_OPERATORS=["delete","!"];exports.BOOLEAN_UNARY_OPERATORS=BOOLEAN_UNARY_OPERATORS;const NUMBER_UNARY_OPERATORS=["+","-","~"];exports.NUMBER_UNARY_OPERATORS=NUMBER_UNARY_OPERATORS;const STRING_UNARY_OPERATORS=["typeof"];exports.STRING_UNARY_OPERATORS=STRING_UNARY_OPERATORS;
const UNARY_OPERATORS=["void","throw",...BOOLEAN_UNARY_OPERATORS,...NUMBER_UNARY_OPERATORS,...STRING_UNARY_OPERATORS];exports.UNARY_OPERATORS=UNARY_OPERATORS;const INHERIT_KEYS={optional:["typeAnnotation","typeParameters","returnType"],force:["start","loc","end"]};exports.INHERIT_KEYS=INHERIT_KEYS;const BLOCK_SCOPED_SYMBOL=Symbol.for("var used to be block scoped");exports.BLOCK_SCOPED_SYMBOL=BLOCK_SCOPED_SYMBOL;const NOT_LOCAL_BINDING=Symbol.for("should not be considered a local binding");exports.NOT_LOCAL_BINDING=
NOT_LOCAL_BINDING},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.validate=validate;exports.typeIs=typeIs;exports.validateType=validateType;exports.validateOptional=validateOptional;exports.validateOptionalType=validateOptionalType;exports.arrayOf=arrayOf;exports.arrayOfType=arrayOfType;exports.validateArrayOfType=validateArrayOfType;exports.assertEach=assertEach;exports.assertOneOf=assertOneOf;exports.assertNodeType=assertNodeType;exports.assertNodeOrValueType=
assertNodeOrValueType;exports.assertValueType=assertValueType;exports.chain=chain;exports.default=defineType;exports.DEPRECATED_KEYS=exports.BUILDER_KEYS=exports.NODE_FIELDS=exports.FLIPPED_ALIAS_KEYS=exports.ALIAS_KEYS=exports.VISITOR_KEYS=void 0;var _is=_interopRequireDefault(__webpack_require__(151));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const VISITOR_KEYS={};exports.VISITOR_KEYS=VISITOR_KEYS;const ALIAS_KEYS={};exports.ALIAS_KEYS=ALIAS_KEYS;const FLIPPED_ALIAS_KEYS=
{};exports.FLIPPED_ALIAS_KEYS=FLIPPED_ALIAS_KEYS;const NODE_FIELDS={};exports.NODE_FIELDS=NODE_FIELDS;const BUILDER_KEYS={};exports.BUILDER_KEYS=BUILDER_KEYS;const DEPRECATED_KEYS={};exports.DEPRECATED_KEYS=DEPRECATED_KEYS;function getType(val){if(Array.isArray(val))return"array";else if(val===null)return"null";else if(val===undefined)return"undefined";else return typeof val}function validate(validate){return{validate}}function typeIs(typeName){return typeof typeName==="string"?assertNodeType(typeName):
assertNodeType(...typeName)}function validateType(typeName){return validate(typeIs(typeName))}function validateOptional(validate){return{validate,optional:true}}function validateOptionalType(typeName){return{validate:typeIs(typeName),optional:true}}function arrayOf(elementType){return chain(assertValueType("array"),assertEach(elementType))}function arrayOfType(typeName){return arrayOf(typeIs(typeName))}function validateArrayOfType(typeName){return validate(arrayOfType(typeName))}function assertEach(callback){function validator(node,
key,val){if(!Array.isArray(val))return;for(let i=0;i<val.length;i++)callback(node,`${key}[${i}]`,val[i])}validator.each=callback;return validator}function assertOneOf(...values){function validate(node,key,val){if(values.indexOf(val)<0)throw new TypeError(`Property ${key} expected value to be one of ${JSON.stringify(values)} but got ${JSON.stringify(val)}`);}validate.oneOf=values;return validate}function assertNodeType(...types){function validate(node,key,val){let valid=false;for(const type of types)if((0,
_is.default)(type,val)){valid=true;break}if(!valid)throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} `+`but instead got ${JSON.stringify(val&&val.type)}`);}validate.oneOfNodeTypes=types;return validate}function assertNodeOrValueType(...types){function validate(node,key,val){let valid=false;for(const type of types)if(getType(val)===type||(0,_is.default)(type,val)){valid=true;break}if(!valid)throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} `+
`but instead got ${JSON.stringify(val&&val.type)}`);}validate.oneOfNodeOrValueTypes=types;return validate}function assertValueType(type){function validate(node,key,val){const valid=getType(val)===type;if(!valid)throw new TypeError(`Property ${key} expected type of ${type} but got ${getType(val)}`);}validate.type=type;return validate}function chain(...fns){function validate(...args){for(const fn of fns)fn(...args)}validate.chainOf=fns;return validate}function defineType(type,opts={}){const inherits=
opts.inherits&&store[opts.inherits]||{};const fields=opts.fields||inherits.fields||{};const visitor=opts.visitor||inherits.visitor||[];const aliases=opts.aliases||inherits.aliases||[];const builder=opts.builder||inherits.builder||opts.visitor||[];if(opts.deprecatedAlias)DEPRECATED_KEYS[opts.deprecatedAlias]=type;for(const key of visitor.concat(builder))fields[key]=fields[key]||{};for(const key in fields){const field=fields[key];if(builder.indexOf(key)===-1)field.optional=true;if(field.default===undefined)field.default=
null;else if(!field.validate)field.validate=assertValueType(getType(field.default))}VISITOR_KEYS[type]=opts.visitor=visitor;BUILDER_KEYS[type]=opts.builder=builder;NODE_FIELDS[type]=opts.fields=fields;ALIAS_KEYS[type]=opts.aliases=aliases;aliases.forEach((alias)=>{FLIPPED_ALIAS_KEYS[alias]=FLIPPED_ALIAS_KEYS[alias]||[];FLIPPED_ALIAS_KEYS[alias].push(type)});store[type]=opts}const store={}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=
is;var _shallowEqual=_interopRequireDefault(__webpack_require__(26));var _isType=_interopRequireDefault(__webpack_require__(152));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function is(type,node,opts){if(!node)return false;const matches=(0,_isType.default)(node.type,type);if(!matches)return false;if(typeof opts==="undefined")return true;else return(0,_shallowEqual.default)(node,opts)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=isType;var _definitions=__webpack_require__(141);function isType(nodeType,targetType){if(nodeType===targetType)return true;if(_definitions.ALIAS_KEYS[targetType])return false;const aliases=_definitions.FLIPPED_ALIAS_KEYS[targetType];if(aliases){if(aliases[0]===nodeType)return true;for(const alias of aliases)if(nodeType===alias)return true}return false}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});
exports.classMethodOrDeclareMethodCommon=exports.classMethodOrPropertyCommon=void 0;var _utils=_interopRequireWildcard(__webpack_require__(150));var _core=__webpack_require__(143);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,
key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}(0,_utils.default)("AssignmentPattern",{visitor:["left","right","decorators"],builder:["left","right"],aliases:["Pattern","PatternLike","LVal"],fields:Object.assign({},_core.patternLikeCommon,{left:{validate:(0,_utils.assertNodeType)("Identifier","ObjectPattern","ArrayPattern")},right:{validate:(0,_utils.assertNodeType)("Expression")},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,
_utils.assertNodeType)("Decorator")))}})});(0,_utils.default)("ArrayPattern",{visitor:["elements","typeAnnotation"],builder:["elements"],aliases:["Pattern","PatternLike","LVal"],fields:Object.assign({},_core.patternLikeCommon,{elements:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("PatternLike")))},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator")))}})});
(0,_utils.default)("ArrowFunctionExpression",{builder:["params","body","async"],visitor:["params","body","returnType","typeParameters"],aliases:["Scopable","Function","BlockParent","FunctionParent","Expression","Pureish"],fields:Object.assign({},_core.functionCommon,_core.functionTypeAnnotationCommon,{expression:{validate:(0,_utils.assertValueType)("boolean")},body:{validate:(0,_utils.assertNodeType)("BlockStatement","Expression")}})});(0,_utils.default)("ClassBody",{visitor:["body"],fields:{body:{validate:(0,
_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ClassMethod","ClassPrivateMethod","ClassProperty","ClassPrivateProperty","TSDeclareMethod","TSIndexSignature")))}}});const classCommon={typeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterDeclaration","TSTypeParameterDeclaration","Noop"),optional:true},body:{validate:(0,_utils.assertNodeType)("ClassBody")},superClass:{optional:true,validate:(0,_utils.assertNodeType)("Expression")},superTypeParameters:{validate:(0,
_utils.assertNodeType)("TypeParameterInstantiation","TSTypeParameterInstantiation"),optional:true},implements:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("TSExpressionWithTypeArguments","ClassImplements"))),optional:true}};(0,_utils.default)("ClassDeclaration",{builder:["id","superClass","body","decorators"],visitor:["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],aliases:["Scopable",
"Class","Statement","Declaration","Pureish"],fields:Object.assign({},classCommon,{declare:{validate:(0,_utils.assertValueType)("boolean"),optional:true},abstract:{validate:(0,_utils.assertValueType)("boolean"),optional:true},id:{validate:(0,_utils.assertNodeType)("Identifier"),optional:true},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:true}})});(0,_utils.default)("ClassExpression",{inherits:"ClassDeclaration",
aliases:["Scopable","Class","Expression","Pureish"],fields:Object.assign({},classCommon,{id:{optional:true,validate:(0,_utils.assertNodeType)("Identifier")},body:{validate:(0,_utils.assertNodeType)("ClassBody")},superClass:{optional:true,validate:(0,_utils.assertNodeType)("Expression")},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:true}})});(0,_utils.default)("ExportAllDeclaration",{visitor:["source"],
aliases:["Statement","Declaration","ModuleDeclaration","ExportDeclaration"],fields:{source:{validate:(0,_utils.assertNodeType)("StringLiteral")}}});(0,_utils.default)("ExportDefaultDeclaration",{visitor:["declaration"],aliases:["Statement","Declaration","ModuleDeclaration","ExportDeclaration"],fields:{declaration:{validate:(0,_utils.assertNodeType)("FunctionDeclaration","TSDeclareFunction","ClassDeclaration","Expression")}}});(0,_utils.default)("ExportNamedDeclaration",{visitor:["declaration","specifiers",
"source"],aliases:["Statement","Declaration","ModuleDeclaration","ExportDeclaration"],fields:{declaration:{validate:(0,_utils.assertNodeType)("Declaration"),optional:true},specifiers:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ExportSpecifier","ExportDefaultSpecifier","ExportNamespaceSpecifier")))},source:{validate:(0,_utils.assertNodeType)("StringLiteral"),optional:true}}});(0,_utils.default)("ExportSpecifier",{visitor:["local",
"exported"],aliases:["ModuleSpecifier"],fields:{local:{validate:(0,_utils.assertNodeType)("Identifier")},exported:{validate:(0,_utils.assertNodeType)("Identifier")}}});(0,_utils.default)("ForOfStatement",{visitor:["left","right","body"],aliases:["Scopable","Statement","For","BlockParent","Loop","ForXStatement"],fields:{left:{validate:(0,_utils.assertNodeType)("VariableDeclaration","LVal")},right:{validate:(0,_utils.assertNodeType)("Expression")},body:{validate:(0,_utils.assertNodeType)("Statement")},
await:{default:false,validate:(0,_utils.assertValueType)("boolean")}}});(0,_utils.default)("ImportDeclaration",{visitor:["specifiers","source"],aliases:["Statement","Declaration","ModuleDeclaration"],fields:{specifiers:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier")))},source:{validate:(0,_utils.assertNodeType)("StringLiteral")},importKind:{validate:(0,_utils.assertOneOf)("type",
"typeof","value"),optional:true}}});(0,_utils.default)("ImportDefaultSpecifier",{visitor:["local"],aliases:["ModuleSpecifier"],fields:{local:{validate:(0,_utils.assertNodeType)("Identifier")}}});(0,_utils.default)("ImportNamespaceSpecifier",{visitor:["local"],aliases:["ModuleSpecifier"],fields:{local:{validate:(0,_utils.assertNodeType)("Identifier")}}});(0,_utils.default)("ImportSpecifier",{visitor:["local","imported"],aliases:["ModuleSpecifier"],fields:{local:{validate:(0,_utils.assertNodeType)("Identifier")},
imported:{validate:(0,_utils.assertNodeType)("Identifier")},importKind:{validate:(0,_utils.assertOneOf)("type","typeof"),optional:true}}});(0,_utils.default)("MetaProperty",{visitor:["meta","property"],aliases:["Expression"],fields:{meta:{validate:(0,_utils.assertNodeType)("Identifier")},property:{validate:(0,_utils.assertNodeType)("Identifier")}}});const classMethodOrPropertyCommon={abstract:{validate:(0,_utils.assertValueType)("boolean"),optional:true},accessibility:{validate:(0,_utils.chain)((0,
_utils.assertValueType)("string"),(0,_utils.assertOneOf)("public","private","protected")),optional:true},static:{validate:(0,_utils.assertValueType)("boolean"),optional:true},computed:{default:false,validate:(0,_utils.assertValueType)("boolean")},optional:{validate:(0,_utils.assertValueType)("boolean"),optional:true},key:{validate:(0,_utils.chain)(function(){const normal=(0,_utils.assertNodeType)("Identifier","StringLiteral","NumericLiteral");const computed=(0,_utils.assertNodeType)("Expression");
return function(node,key,val){const validator=node.computed?computed:normal;validator(node,key,val)}}(),(0,_utils.assertNodeType)("Identifier","StringLiteral","NumericLiteral","Expression"))}};exports.classMethodOrPropertyCommon=classMethodOrPropertyCommon;const classMethodOrDeclareMethodCommon=Object.assign({},_core.functionCommon,classMethodOrPropertyCommon,{kind:{validate:(0,_utils.chain)((0,_utils.assertValueType)("string"),(0,_utils.assertOneOf)("get","set","method","constructor")),default:"method"},
access:{validate:(0,_utils.chain)((0,_utils.assertValueType)("string"),(0,_utils.assertOneOf)("public","private","protected")),optional:true},decorators:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:true}});exports.classMethodOrDeclareMethodCommon=classMethodOrDeclareMethodCommon;(0,_utils.default)("ClassMethod",{aliases:["Function","Scopable","BlockParent","FunctionParent","Method"],builder:["kind","key","params",
"body","computed","static"],visitor:["key","params","body","decorators","returnType","typeParameters"],fields:Object.assign({},classMethodOrDeclareMethodCommon,_core.functionTypeAnnotationCommon,{body:{validate:(0,_utils.assertNodeType)("BlockStatement")}})});(0,_utils.default)("ObjectPattern",{visitor:["properties","typeAnnotation","decorators"],builder:["properties"],aliases:["Pattern","PatternLike","LVal"],fields:Object.assign({},_core.patternLikeCommon,{properties:{validate:(0,_utils.chain)((0,
_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("RestElement","ObjectProperty")))}})});(0,_utils.default)("SpreadElement",{visitor:["argument"],aliases:["UnaryLike"],deprecatedAlias:"SpreadProperty",fields:{argument:{validate:(0,_utils.assertNodeType)("Expression")}}});(0,_utils.default)("Super",{aliases:["Expression"]});(0,_utils.default)("TaggedTemplateExpression",{visitor:["tag","quasi"],aliases:["Expression"],fields:{tag:{validate:(0,_utils.assertNodeType)("Expression")},
quasi:{validate:(0,_utils.assertNodeType)("TemplateLiteral")},typeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterInstantiation","TSTypeParameterInstantiation"),optional:true}}});(0,_utils.default)("TemplateElement",{builder:["value","tail"],fields:{value:{},tail:{validate:(0,_utils.assertValueType)("boolean"),default:false}}});(0,_utils.default)("TemplateLiteral",{visitor:["quasis","expressions"],aliases:["Expression","Literal"],fields:{quasis:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),
(0,_utils.assertEach)((0,_utils.assertNodeType)("TemplateElement")))},expressions:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Expression")))}}});(0,_utils.default)("YieldExpression",{builder:["argument","delegate"],visitor:["argument"],aliases:["Expression","Terminatorless"],fields:{delegate:{validate:(0,_utils.assertValueType)("boolean"),default:false},argument:{optional:true,validate:(0,_utils.assertNodeType)("Expression")}}})},
function(module,exports,__webpack_require__){var _utils=_interopRequireWildcard(__webpack_require__(150));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}
const defineInterfaceishType=(name,typeParameterType="TypeParameterDeclaration")=>{(0,_utils.default)(name,{builder:["id","typeParameters","extends","body"],visitor:["id","typeParameters","extends","mixins","implements","body"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)(typeParameterType),extends:(0,_utils.validateOptional)((0,_utils.arrayOfType)("InterfaceExtends")),mixins:(0,_utils.validateOptional)((0,
_utils.arrayOfType)("InterfaceExtends")),implements:(0,_utils.validateOptional)((0,_utils.arrayOfType)("ClassImplements")),body:(0,_utils.validateType)("ObjectTypeAnnotation")}})};(0,_utils.default)("AnyTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]});(0,_utils.default)("ArrayTypeAnnotation",{visitor:["elementType"],aliases:["Flow","FlowType"],fields:{elementType:(0,_utils.validateType)("FlowType")}});(0,_utils.default)("BooleanTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]});
(0,_utils.default)("BooleanLiteralTypeAnnotation",{builder:["value"],aliases:["Flow","FlowType"],fields:{value:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}});(0,_utils.default)("NullLiteralTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]});(0,_utils.default)("ClassImplements",{visitor:["id","typeParameters"],aliases:["Flow"],fields:{id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TypeParameterInstantiation")}});defineInterfaceishType("DeclareClass");
(0,_utils.default)("DeclareFunction",{visitor:["id"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),predicate:(0,_utils.validateOptionalType)("DeclaredPredicate")}});defineInterfaceishType("DeclareInterface");(0,_utils.default)("DeclareModule",{builder:["id","body","kind"],visitor:["id","body"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)(["Identifier","StringLiteral"]),body:(0,_utils.validateType)("BlockStatement"),
kind:(0,_utils.validateOptional)((0,_utils.assertOneOf)("CommonJS","ES"))}});(0,_utils.default)("DeclareModuleExports",{visitor:["typeAnnotation"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{typeAnnotation:(0,_utils.validateType)("TypeAnnotation")}});(0,_utils.default)("DeclareTypeAlias",{visitor:["id","typeParameters","right"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),
right:(0,_utils.validateType)("FlowType")}});(0,_utils.default)("DeclareOpaqueType",{visitor:["id","typeParameters","supertype"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),supertype:(0,_utils.validateOptionalType)("FlowType")}});(0,_utils.default)("DeclareVariable",{visitor:["id"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier")}});
(0,_utils.default)("DeclareExportDeclaration",{visitor:["declaration","specifiers","source"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{declaration:(0,_utils.validateOptionalType)("Flow"),specifiers:(0,_utils.validateOptional)((0,_utils.arrayOfType)(["ExportSpecifier","ExportNamespaceSpecifier"])),source:(0,_utils.validateOptionalType)("StringLiteral"),default:(0,_utils.validateOptional)((0,_utils.assertValueType)("boolean"))}});(0,_utils.default)("DeclareExportAllDeclaration",
{visitor:["source"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{source:(0,_utils.validateType)("StringLiteral"),exportKind:(0,_utils.validateOptional)((0,_utils.assertOneOf)(["type","value"]))}});(0,_utils.default)("DeclaredPredicate",{visitor:["value"],aliases:["Flow","FlowPredicate"],fields:{value:(0,_utils.validateType)("Flow")}});(0,_utils.default)("ExistsTypeAnnotation",{aliases:["Flow","FlowType"]});(0,_utils.default)("FunctionTypeAnnotation",{visitor:["typeParameters",
"params","rest","returnType"],aliases:["Flow","FlowType"],fields:{typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),params:(0,_utils.validate)((0,_utils.arrayOfType)("FunctionTypeParam")),rest:(0,_utils.validateOptionalType)("FunctionTypeParam"),returnType:(0,_utils.validateType)("FlowType")}});(0,_utils.default)("FunctionTypeParam",{visitor:["name","typeAnnotation"],aliases:["Flow"],fields:{name:(0,_utils.validateOptionalType)("Identifier"),typeAnnotation:(0,_utils.validateType)("FlowType"),
optional:(0,_utils.validateOptional)((0,_utils.assertValueType)("boolean"))}});(0,_utils.default)("GenericTypeAnnotation",{visitor:["id","typeParameters"],aliases:["Flow","FlowType"],fields:{id:(0,_utils.validateType)(["Identifier","QualifiedTypeIdentifier"]),typeParameters:(0,_utils.validateOptionalType)("TypeParameterInstantiation")}});(0,_utils.default)("InferredPredicate",{aliases:["Flow","FlowPredicate"]});(0,_utils.default)("InterfaceExtends",{visitor:["id","typeParameters"],aliases:["Flow"],
fields:{id:(0,_utils.validateType)(["Identifier","QualifiedTypeIdentifier"]),typeParameters:(0,_utils.validateOptionalType)("TypeParameterInstantiation")}});defineInterfaceishType("InterfaceDeclaration");(0,_utils.default)("InterfaceTypeAnnotation",{visitor:["extends","body"],aliases:["Flow","FlowType"],fields:{extends:(0,_utils.validateOptional)((0,_utils.arrayOfType)("InterfaceExtends")),body:(0,_utils.validateType)("ObjectTypeAnnotation")}});(0,_utils.default)("IntersectionTypeAnnotation",{visitor:["types"],
aliases:["Flow","FlowType"],fields:{types:(0,_utils.validate)((0,_utils.arrayOfType)("FlowType"))}});(0,_utils.default)("MixedTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]});(0,_utils.default)("EmptyTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]});(0,_utils.default)("NullableTypeAnnotation",{visitor:["typeAnnotation"],aliases:["Flow","FlowType"],fields:{typeAnnotation:(0,_utils.validateType)("FlowType")}});(0,_utils.default)("NumberLiteralTypeAnnotation",{builder:["value"],
aliases:["Flow","FlowType"],fields:{value:(0,_utils.validate)((0,_utils.assertValueType)("number"))}});(0,_utils.default)("NumberTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]});(0,_utils.default)("ObjectTypeAnnotation",{visitor:["properties","indexers","callProperties","internalSlots"],aliases:["Flow","FlowType"],builder:["properties","indexers","callProperties","internalSlots","exact"],fields:{properties:(0,_utils.validate)((0,_utils.arrayOfType)(["ObjectTypeProperty","ObjectTypeSpreadProperty"])),
indexers:(0,_utils.validateOptional)((0,_utils.arrayOfType)("ObjectTypeIndexer")),callProperties:(0,_utils.validateOptional)((0,_utils.arrayOfType)("ObjectTypeCallProperty")),internalSlots:(0,_utils.validateOptional)((0,_utils.arrayOfType)("ObjectTypeInternalSlot")),exact:{validate:(0,_utils.assertValueType)("boolean"),default:false},inexact:(0,_utils.validateOptional)((0,_utils.assertValueType)("boolean"))}});(0,_utils.default)("ObjectTypeInternalSlot",{visitor:["id","value","optional","static",
"method"],aliases:["Flow","UserWhitespacable"],fields:{id:(0,_utils.validateType)("Identifier"),value:(0,_utils.validateType)("FlowType"),optional:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),static:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),method:(0,_utils.validate)((0,_utils.assertValueType)("boolean"))}});(0,_utils.default)("ObjectTypeCallProperty",{visitor:["value"],aliases:["Flow","UserWhitespacable"],fields:{value:(0,_utils.validateType)("FlowType"),static:(0,
_utils.validate)((0,_utils.assertValueType)("boolean"))}});(0,_utils.default)("ObjectTypeIndexer",{visitor:["id","key","value","variance"],aliases:["Flow","UserWhitespacable"],fields:{id:(0,_utils.validateOptionalType)("Identifier"),key:(0,_utils.validateType)("FlowType"),value:(0,_utils.validateType)("FlowType"),static:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),variance:(0,_utils.validateOptionalType)("Variance")}});(0,_utils.default)("ObjectTypeProperty",{visitor:["key","value",
"variance"],aliases:["Flow","UserWhitespacable"],fields:{key:(0,_utils.validateType)(["Identifier","StringLiteral"]),value:(0,_utils.validateType)("FlowType"),kind:(0,_utils.validate)((0,_utils.assertOneOf)("init","get","set")),static:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),proto:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),optional:(0,_utils.validate)((0,_utils.assertValueType)("boolean")),variance:(0,_utils.validateOptionalType)("Variance")}});(0,_utils.default)("ObjectTypeSpreadProperty",
{visitor:["argument"],aliases:["Flow","UserWhitespacable"],fields:{argument:(0,_utils.validateType)("FlowType")}});(0,_utils.default)("OpaqueType",{visitor:["id","typeParameters","supertype","impltype"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),supertype:(0,_utils.validateOptionalType)("FlowType"),impltype:(0,_utils.validateType)("FlowType")}});(0,_utils.default)("QualifiedTypeIdentifier",
{visitor:["id","qualification"],aliases:["Flow"],fields:{id:(0,_utils.validateType)("Identifier"),qualification:(0,_utils.validateType)(["Identifier","QualifiedTypeIdentifier"])}});(0,_utils.default)("StringLiteralTypeAnnotation",{builder:["value"],aliases:["Flow","FlowType"],fields:{value:(0,_utils.validate)((0,_utils.assertValueType)("string"))}});(0,_utils.default)("StringTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]});(0,_utils.default)("ThisTypeAnnotation",{aliases:["Flow",
"FlowType","FlowBaseAnnotation"]});(0,_utils.default)("TupleTypeAnnotation",{visitor:["types"],aliases:["Flow","FlowType"],fields:{types:(0,_utils.validate)((0,_utils.arrayOfType)("FlowType"))}});(0,_utils.default)("TypeofTypeAnnotation",{visitor:["argument"],aliases:["Flow","FlowType"],fields:{argument:(0,_utils.validateType)("FlowType")}});(0,_utils.default)("TypeAlias",{visitor:["id","typeParameters","right"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:(0,_utils.validateType)("Identifier"),
typeParameters:(0,_utils.validateOptionalType)("TypeParameterDeclaration"),right:(0,_utils.validateType)("FlowType")}});(0,_utils.default)("TypeAnnotation",{aliases:["Flow"],visitor:["typeAnnotation"],fields:{typeAnnotation:(0,_utils.validateType)("FlowType")}});(0,_utils.default)("TypeCastExpression",{visitor:["expression","typeAnnotation"],aliases:["Flow","ExpressionWrapper","Expression"],fields:{expression:(0,_utils.validateType)("Expression"),typeAnnotation:(0,_utils.validateType)("TypeAnnotation")}});
(0,_utils.default)("TypeParameter",{aliases:["Flow"],visitor:["bound","default","variance"],fields:{name:(0,_utils.validate)((0,_utils.assertValueType)("string")),bound:(0,_utils.validateOptionalType)("TypeAnnotation"),default:(0,_utils.validateOptionalType)("FlowType"),variance:(0,_utils.validateOptionalType)("Variance")}});(0,_utils.default)("TypeParameterDeclaration",{aliases:["Flow"],visitor:["params"],fields:{params:(0,_utils.validate)((0,_utils.arrayOfType)("TypeParameter"))}});(0,_utils.default)("TypeParameterInstantiation",
{aliases:["Flow"],visitor:["params"],fields:{params:(0,_utils.validate)((0,_utils.arrayOfType)("FlowType"))}});(0,_utils.default)("UnionTypeAnnotation",{visitor:["types"],aliases:["Flow","FlowType"],fields:{types:(0,_utils.validate)((0,_utils.arrayOfType)("FlowType"))}});(0,_utils.default)("Variance",{aliases:["Flow"],builder:["kind"],fields:{kind:(0,_utils.validate)((0,_utils.assertOneOf)("minus","plus"))}});(0,_utils.default)("VoidTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]})},
function(module,exports,__webpack_require__){var _utils=_interopRequireWildcard(__webpack_require__(150));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}
(0,_utils.default)("JSXAttribute",{visitor:["name","value"],aliases:["JSX","Immutable"],fields:{name:{validate:(0,_utils.assertNodeType)("JSXIdentifier","JSXNamespacedName")},value:{optional:true,validate:(0,_utils.assertNodeType)("JSXElement","JSXFragment","StringLiteral","JSXExpressionContainer")}}});(0,_utils.default)("JSXClosingElement",{visitor:["name"],aliases:["JSX","Immutable"],fields:{name:{validate:(0,_utils.assertNodeType)("JSXIdentifier","JSXMemberExpression")}}});(0,_utils.default)("JSXElement",
{builder:["openingElement","closingElement","children","selfClosing"],visitor:["openingElement","children","closingElement"],aliases:["JSX","Immutable","Expression"],fields:{openingElement:{validate:(0,_utils.assertNodeType)("JSXOpeningElement")},closingElement:{optional:true,validate:(0,_utils.assertNodeType)("JSXClosingElement")},children:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("JSXText","JSXExpressionContainer","JSXSpreadChild",
"JSXElement","JSXFragment")))}}});(0,_utils.default)("JSXEmptyExpression",{aliases:["JSX"]});(0,_utils.default)("JSXExpressionContainer",{visitor:["expression"],aliases:["JSX","Immutable"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression","JSXEmptyExpression")}}});(0,_utils.default)("JSXSpreadChild",{visitor:["expression"],aliases:["JSX","Immutable"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression")}}});(0,_utils.default)("JSXIdentifier",{builder:["name"],aliases:["JSX"],
fields:{name:{validate:(0,_utils.assertValueType)("string")}}});(0,_utils.default)("JSXMemberExpression",{visitor:["object","property"],aliases:["JSX"],fields:{object:{validate:(0,_utils.assertNodeType)("JSXMemberExpression","JSXIdentifier")},property:{validate:(0,_utils.assertNodeType)("JSXIdentifier")}}});(0,_utils.default)("JSXNamespacedName",{visitor:["namespace","name"],aliases:["JSX"],fields:{namespace:{validate:(0,_utils.assertNodeType)("JSXIdentifier")},name:{validate:(0,_utils.assertNodeType)("JSXIdentifier")}}});
(0,_utils.default)("JSXOpeningElement",{builder:["name","attributes","selfClosing"],visitor:["name","attributes"],aliases:["JSX","Immutable"],fields:{name:{validate:(0,_utils.assertNodeType)("JSXIdentifier","JSXMemberExpression")},selfClosing:{default:false,validate:(0,_utils.assertValueType)("boolean")},attributes:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("JSXAttribute","JSXSpreadAttribute")))},typeParameters:{validate:(0,_utils.assertNodeType)("TypeParameterInstantiation",
"TSTypeParameterInstantiation"),optional:true}}});(0,_utils.default)("JSXSpreadAttribute",{visitor:["argument"],aliases:["JSX"],fields:{argument:{validate:(0,_utils.assertNodeType)("Expression")}}});(0,_utils.default)("JSXText",{aliases:["JSX","Immutable"],builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}}});(0,_utils.default)("JSXFragment",{builder:["openingFragment","closingFragment","children"],visitor:["openingFragment","children","closingFragment"],aliases:["JSX",
"Immutable","Expression"],fields:{openingFragment:{validate:(0,_utils.assertNodeType)("JSXOpeningFragment")},closingFragment:{validate:(0,_utils.assertNodeType)("JSXClosingFragment")},children:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("JSXText","JSXExpressionContainer","JSXSpreadChild","JSXElement","JSXFragment")))}}});(0,_utils.default)("JSXOpeningFragment",{aliases:["JSX","Immutable"]});(0,_utils.default)("JSXClosingFragment",
{aliases:["JSX","Immutable"]})},function(module,exports,__webpack_require__){var _utils=_interopRequireWildcard(__webpack_require__(150));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=
obj;return newObj}}(0,_utils.default)("Noop",{visitor:[]});(0,_utils.default)("ParenthesizedExpression",{visitor:["expression"],aliases:["Expression","ExpressionWrapper"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression")}}})},function(module,exports,__webpack_require__){var _utils=_interopRequireWildcard(__webpack_require__(150));var _es=__webpack_require__(153);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}(0,_utils.default)("AwaitExpression",{builder:["argument"],visitor:["argument"],aliases:["Expression","Terminatorless"],fields:{argument:{validate:(0,_utils.assertNodeType)("Expression")}}});(0,_utils.default)("BindExpression",{visitor:["object","callee"],aliases:["Expression"],
fields:{}});(0,_utils.default)("ClassProperty",{visitor:["key","value","typeAnnotation","decorators"],builder:["key","value","typeAnnotation","decorators","computed"],aliases:["Property"],fields:Object.assign({},_es.classMethodOrPropertyCommon,{value:{validate:(0,_utils.assertNodeType)("Expression"),optional:true},definite:{validate:(0,_utils.assertValueType)("boolean"),optional:true},typeAnnotation:{validate:(0,_utils.assertNodeType)("TypeAnnotation","TSTypeAnnotation","Noop"),optional:true},decorators:{validate:(0,
_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Decorator"))),optional:true},readonly:{validate:(0,_utils.assertValueType)("boolean"),optional:true}})});(0,_utils.default)("OptionalMemberExpression",{builder:["object","property","computed","optional"],visitor:["object","property"],aliases:["Expression"],fields:{object:{validate:(0,_utils.assertNodeType)("Expression")},property:{validate:function(){const normal=(0,_utils.assertNodeType)("Identifier");
const computed=(0,_utils.assertNodeType)("Expression");return function(node,key,val){const validator=node.computed?computed:normal;validator(node,key,val)}}()},computed:{default:false},optional:{validate:(0,_utils.assertValueType)("boolean")}}});(0,_utils.default)("PipelineTopicExpression",{builder:["expression"],visitor:["expression"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression")}}});(0,_utils.default)("PipelineBareFunction",{builder:["callee"],visitor:["callee"],fields:{callee:{validate:(0,
_utils.assertNodeType)("Expression")}}});(0,_utils.default)("PipelinePrimaryTopicReference",{aliases:["Expression"]});(0,_utils.default)("OptionalCallExpression",{visitor:["callee","arguments","typeParameters","typeArguments"],builder:["callee","arguments","optional"],aliases:["Expression"],fields:{callee:{validate:(0,_utils.assertNodeType)("Expression")},arguments:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("Expression","SpreadElement",
"JSXNamespacedName")))},optional:{validate:(0,_utils.assertValueType)("boolean")},typeArguments:{validate:(0,_utils.assertNodeType)("TypeParameterInstantiation"),optional:true},typeParameters:{validate:(0,_utils.assertNodeType)("TSTypeParameterInstantiation"),optional:true}}});(0,_utils.default)("ClassPrivateProperty",{visitor:["key","value"],builder:["key","value"],aliases:["Property","Private"],fields:{key:{validate:(0,_utils.assertNodeType)("PrivateName")},value:{validate:(0,_utils.assertNodeType)("Expression"),
optional:true}}});(0,_utils.default)("ClassPrivateMethod",{builder:["kind","key","params","body","static"],visitor:["key","params","body","decorators","returnType","typeParameters"],aliases:["Function","Scopable","BlockParent","FunctionParent","Method","Private"],fields:Object.assign({},_es.classMethodOrDeclareMethodCommon,{key:{validate:(0,_utils.assertNodeType)("PrivateName")},body:{validate:(0,_utils.assertNodeType)("BlockStatement")}})});(0,_utils.default)("Import",{aliases:["Expression"]});(0,
_utils.default)("Decorator",{visitor:["expression"],fields:{expression:{validate:(0,_utils.assertNodeType)("Expression")}}});(0,_utils.default)("DoExpression",{visitor:["body"],aliases:["Expression"],fields:{body:{validate:(0,_utils.assertNodeType)("BlockStatement")}}});(0,_utils.default)("ExportDefaultSpecifier",{visitor:["exported"],aliases:["ModuleSpecifier"],fields:{exported:{validate:(0,_utils.assertNodeType)("Identifier")}}});(0,_utils.default)("ExportNamespaceSpecifier",{visitor:["exported"],
aliases:["ModuleSpecifier"],fields:{exported:{validate:(0,_utils.assertNodeType)("Identifier")}}});(0,_utils.default)("PrivateName",{visitor:["id"],aliases:["Private"],fields:{id:{validate:(0,_utils.assertNodeType)("Identifier")}}});(0,_utils.default)("BigIntLiteral",{builder:["value"],fields:{value:{validate:(0,_utils.assertValueType)("string")}},aliases:["Expression","Pureish","Literal","Immutable"]})},function(module,exports,__webpack_require__){var _utils=_interopRequireWildcard(__webpack_require__(150));
var _core=__webpack_require__(143);var _es=__webpack_require__(153);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const bool=(0,_utils.assertValueType)("boolean");
const tSFunctionTypeAnnotationCommon={returnType:{validate:(0,_utils.assertNodeType)("TSTypeAnnotation","Noop"),optional:true},typeParameters:{validate:(0,_utils.assertNodeType)("TSTypeParameterDeclaration","Noop"),optional:true}};(0,_utils.default)("TSParameterProperty",{aliases:["LVal"],visitor:["parameter"],fields:{accessibility:{validate:(0,_utils.assertOneOf)("public","private","protected"),optional:true},readonly:{validate:(0,_utils.assertValueType)("boolean"),optional:true},parameter:{validate:(0,
_utils.assertNodeType)("Identifier","AssignmentPattern")}}});(0,_utils.default)("TSDeclareFunction",{aliases:["Statement","Declaration"],visitor:["id","typeParameters","params","returnType"],fields:Object.assign({},_core.functionDeclarationCommon,tSFunctionTypeAnnotationCommon)});(0,_utils.default)("TSDeclareMethod",{visitor:["decorators","key","typeParameters","params","returnType"],fields:Object.assign({},_es.classMethodOrDeclareMethodCommon,tSFunctionTypeAnnotationCommon)});(0,_utils.default)("TSQualifiedName",
{aliases:["TSEntityName"],visitor:["left","right"],fields:{left:(0,_utils.validateType)("TSEntityName"),right:(0,_utils.validateType)("Identifier")}});const signatureDeclarationCommon={typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterDeclaration"),parameters:(0,_utils.validateArrayOfType)(["Identifier","RestElement"]),typeAnnotation:(0,_utils.validateOptionalType)("TSTypeAnnotation")};const callConstructSignatureDeclaration={aliases:["TSTypeElement"],visitor:["typeParameters","parameters",
"typeAnnotation"],fields:signatureDeclarationCommon};(0,_utils.default)("TSCallSignatureDeclaration",callConstructSignatureDeclaration);(0,_utils.default)("TSConstructSignatureDeclaration",callConstructSignatureDeclaration);const namedTypeElementCommon={key:(0,_utils.validateType)("Expression"),computed:(0,_utils.validate)(bool),optional:(0,_utils.validateOptional)(bool)};(0,_utils.default)("TSPropertySignature",{aliases:["TSTypeElement"],visitor:["key","typeAnnotation","initializer"],fields:Object.assign({},
namedTypeElementCommon,{readonly:(0,_utils.validateOptional)(bool),typeAnnotation:(0,_utils.validateOptionalType)("TSTypeAnnotation"),initializer:(0,_utils.validateOptionalType)("Expression")})});(0,_utils.default)("TSMethodSignature",{aliases:["TSTypeElement"],visitor:["key","typeParameters","parameters","typeAnnotation"],fields:Object.assign({},signatureDeclarationCommon,namedTypeElementCommon)});(0,_utils.default)("TSIndexSignature",{aliases:["TSTypeElement"],visitor:["parameters","typeAnnotation"],
fields:{readonly:(0,_utils.validateOptional)(bool),parameters:(0,_utils.validateArrayOfType)("Identifier"),typeAnnotation:(0,_utils.validateOptionalType)("TSTypeAnnotation")}});const tsKeywordTypes=["TSAnyKeyword","TSUnknownKeyword","TSNumberKeyword","TSObjectKeyword","TSBooleanKeyword","TSStringKeyword","TSSymbolKeyword","TSVoidKeyword","TSUndefinedKeyword","TSNullKeyword","TSNeverKeyword"];for(const type of tsKeywordTypes)(0,_utils.default)(type,{aliases:["TSType"],visitor:[],fields:{}});(0,_utils.default)("TSThisType",
{aliases:["TSType"],visitor:[],fields:{}});const fnOrCtr={aliases:["TSType"],visitor:["typeParameters","typeAnnotation"],fields:signatureDeclarationCommon};(0,_utils.default)("TSFunctionType",fnOrCtr);(0,_utils.default)("TSConstructorType",fnOrCtr);(0,_utils.default)("TSTypeReference",{aliases:["TSType"],visitor:["typeName","typeParameters"],fields:{typeName:(0,_utils.validateType)("TSEntityName"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterInstantiation")}});(0,_utils.default)("TSTypePredicate",
{aliases:["TSType"],visitor:["parameterName","typeAnnotation"],fields:{parameterName:(0,_utils.validateType)(["Identifier","TSThisType"]),typeAnnotation:(0,_utils.validateType)("TSTypeAnnotation")}});(0,_utils.default)("TSTypeQuery",{aliases:["TSType"],visitor:["exprName"],fields:{exprName:(0,_utils.validateType)(["TSEntityName","TSImportType"])}});(0,_utils.default)("TSTypeLiteral",{aliases:["TSType"],visitor:["members"],fields:{members:(0,_utils.validateArrayOfType)("TSTypeElement")}});(0,_utils.default)("TSArrayType",
{aliases:["TSType"],visitor:["elementType"],fields:{elementType:(0,_utils.validateType)("TSType")}});(0,_utils.default)("TSTupleType",{aliases:["TSType"],visitor:["elementTypes"],fields:{elementTypes:(0,_utils.validateArrayOfType)("TSType")}});(0,_utils.default)("TSOptionalType",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{typeAnnotation:(0,_utils.validateType)("TSType")}});(0,_utils.default)("TSRestType",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{typeAnnotation:(0,_utils.validateType)("TSType")}});
const unionOrIntersection={aliases:["TSType"],visitor:["types"],fields:{types:(0,_utils.validateArrayOfType)("TSType")}};(0,_utils.default)("TSUnionType",unionOrIntersection);(0,_utils.default)("TSIntersectionType",unionOrIntersection);(0,_utils.default)("TSConditionalType",{aliases:["TSType"],visitor:["checkType","extendsType","trueType","falseType"],fields:{checkType:(0,_utils.validateType)("TSType"),extendsType:(0,_utils.validateType)("TSType"),trueType:(0,_utils.validateType)("TSType"),falseType:(0,
_utils.validateType)("TSType")}});(0,_utils.default)("TSInferType",{aliases:["TSType"],visitor:["typeParameter"],fields:{typeParameter:(0,_utils.validateType)("TSTypeParameter")}});(0,_utils.default)("TSParenthesizedType",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{typeAnnotation:(0,_utils.validateType)("TSType")}});(0,_utils.default)("TSTypeOperator",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{operator:(0,_utils.validate)((0,_utils.assertValueType)("string")),typeAnnotation:(0,
_utils.validateType)("TSType")}});(0,_utils.default)("TSIndexedAccessType",{aliases:["TSType"],visitor:["objectType","indexType"],fields:{objectType:(0,_utils.validateType)("TSType"),indexType:(0,_utils.validateType)("TSType")}});(0,_utils.default)("TSMappedType",{aliases:["TSType"],visitor:["typeParameter","typeAnnotation"],fields:{readonly:(0,_utils.validateOptional)(bool),typeParameter:(0,_utils.validateType)("TSTypeParameter"),optional:(0,_utils.validateOptional)(bool),typeAnnotation:(0,_utils.validateOptionalType)("TSType")}});
(0,_utils.default)("TSLiteralType",{aliases:["TSType"],visitor:["literal"],fields:{literal:(0,_utils.validateType)(["NumericLiteral","StringLiteral","BooleanLiteral"])}});(0,_utils.default)("TSExpressionWithTypeArguments",{aliases:["TSType"],visitor:["expression","typeParameters"],fields:{expression:(0,_utils.validateType)("TSEntityName"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterInstantiation")}});(0,_utils.default)("TSInterfaceDeclaration",{aliases:["Statement","Declaration"],
visitor:["id","typeParameters","extends","body"],fields:{declare:(0,_utils.validateOptional)(bool),id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterDeclaration"),extends:(0,_utils.validateOptional)((0,_utils.arrayOfType)("TSExpressionWithTypeArguments")),body:(0,_utils.validateType)("TSInterfaceBody")}});(0,_utils.default)("TSInterfaceBody",{visitor:["body"],fields:{body:(0,_utils.validateArrayOfType)("TSTypeElement")}});(0,_utils.default)("TSTypeAliasDeclaration",
{aliases:["Statement","Declaration"],visitor:["id","typeParameters","typeAnnotation"],fields:{declare:(0,_utils.validateOptional)(bool),id:(0,_utils.validateType)("Identifier"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterDeclaration"),typeAnnotation:(0,_utils.validateType)("TSType")}});(0,_utils.default)("TSAsExpression",{aliases:["Expression"],visitor:["expression","typeAnnotation"],fields:{expression:(0,_utils.validateType)("Expression"),typeAnnotation:(0,_utils.validateType)("TSType")}});
(0,_utils.default)("TSTypeAssertion",{aliases:["Expression"],visitor:["typeAnnotation","expression"],fields:{typeAnnotation:(0,_utils.validateType)("TSType"),expression:(0,_utils.validateType)("Expression")}});(0,_utils.default)("TSEnumDeclaration",{aliases:["Statement","Declaration"],visitor:["id","members"],fields:{declare:(0,_utils.validateOptional)(bool),const:(0,_utils.validateOptional)(bool),id:(0,_utils.validateType)("Identifier"),members:(0,_utils.validateArrayOfType)("TSEnumMember"),initializer:(0,
_utils.validateOptionalType)("Expression")}});(0,_utils.default)("TSEnumMember",{visitor:["id","initializer"],fields:{id:(0,_utils.validateType)(["Identifier","StringLiteral"]),initializer:(0,_utils.validateOptionalType)("Expression")}});(0,_utils.default)("TSModuleDeclaration",{aliases:["Statement","Declaration"],visitor:["id","body"],fields:{declare:(0,_utils.validateOptional)(bool),global:(0,_utils.validateOptional)(bool),id:(0,_utils.validateType)(["Identifier","StringLiteral"]),body:(0,_utils.validateType)(["TSModuleBlock",
"TSModuleDeclaration"])}});(0,_utils.default)("TSModuleBlock",{visitor:["body"],fields:{body:(0,_utils.validateArrayOfType)("Statement")}});(0,_utils.default)("TSImportType",{aliases:["TSType"],visitor:["argument","qualifier","typeParameters"],fields:{argument:(0,_utils.validateType)("StringLiteral"),qualifier:(0,_utils.validateOptionalType)("TSEntityName"),typeParameters:(0,_utils.validateOptionalType)("TSTypeParameterInstantiation")}});(0,_utils.default)("TSImportEqualsDeclaration",{aliases:["Statement"],
visitor:["id","moduleReference"],fields:{isExport:(0,_utils.validate)(bool),id:(0,_utils.validateType)("Identifier"),moduleReference:(0,_utils.validateType)(["TSEntityName","TSExternalModuleReference"])}});(0,_utils.default)("TSExternalModuleReference",{visitor:["expression"],fields:{expression:(0,_utils.validateType)("StringLiteral")}});(0,_utils.default)("TSNonNullExpression",{aliases:["Expression"],visitor:["expression"],fields:{expression:(0,_utils.validateType)("Expression")}});(0,_utils.default)("TSExportAssignment",
{aliases:["Statement"],visitor:["expression"],fields:{expression:(0,_utils.validateType)("Expression")}});(0,_utils.default)("TSNamespaceExportDeclaration",{aliases:["Statement"],visitor:["id"],fields:{id:(0,_utils.validateType)("Identifier")}});(0,_utils.default)("TSTypeAnnotation",{visitor:["typeAnnotation"],fields:{typeAnnotation:{validate:(0,_utils.assertNodeType)("TSType")}}});(0,_utils.default)("TSTypeParameterInstantiation",{visitor:["params"],fields:{params:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),
(0,_utils.assertEach)((0,_utils.assertNodeType)("TSType")))}}});(0,_utils.default)("TSTypeParameterDeclaration",{visitor:["params"],fields:{params:{validate:(0,_utils.chain)((0,_utils.assertValueType)("array"),(0,_utils.assertEach)((0,_utils.assertNodeType)("TSTypeParameter")))}}});(0,_utils.default)("TSTypeParameter",{visitor:["constraint","default"],fields:{name:{validate:(0,_utils.assertValueType)("string")},constraint:{validate:(0,_utils.assertNodeType)("TSType"),optional:true},default:{validate:(0,
_utils.assertNodeType)("TSType"),optional:true}}})},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=validate;var _definitions=__webpack_require__(141);function validate(node,key,val){if(!node)return;const fields=_definitions.NODE_FIELDS[node.type];if(!fields)return;const field=fields[key];if(!field||!field.validate)return;if(field.optional&&val==null)return;field.validate(node,key,val)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=assertNode;var _isNode=_interopRequireDefault(__webpack_require__(161));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function assertNode(node){if(!(0,_isNode.default)(node)){const type=node&&node.type||JSON.stringify(node);throw new TypeError(`Not a valid node of type "${type}"`);}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isNode;var _definitions=
__webpack_require__(141);function isNode(node){return!!(node&&_definitions.VISITOR_KEYS[node.type])}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.assertArrayExpression=assertArrayExpression;exports.assertAssignmentExpression=assertAssignmentExpression;exports.assertBinaryExpression=assertBinaryExpression;exports.assertInterpreterDirective=assertInterpreterDirective;exports.assertDirective=assertDirective;exports.assertDirectiveLiteral=
assertDirectiveLiteral;exports.assertBlockStatement=assertBlockStatement;exports.assertBreakStatement=assertBreakStatement;exports.assertCallExpression=assertCallExpression;exports.assertCatchClause=assertCatchClause;exports.assertConditionalExpression=assertConditionalExpression;exports.assertContinueStatement=assertContinueStatement;exports.assertDebuggerStatement=assertDebuggerStatement;exports.assertDoWhileStatement=assertDoWhileStatement;exports.assertEmptyStatement=assertEmptyStatement;exports.assertExpressionStatement=
assertExpressionStatement;exports.assertFile=assertFile;exports.assertForInStatement=assertForInStatement;exports.assertForStatement=assertForStatement;exports.assertFunctionDeclaration=assertFunctionDeclaration;exports.assertFunctionExpression=assertFunctionExpression;exports.assertIdentifier=assertIdentifier;exports.assertIfStatement=assertIfStatement;exports.assertLabeledStatement=assertLabeledStatement;exports.assertStringLiteral=assertStringLiteral;exports.assertNumericLiteral=assertNumericLiteral;
exports.assertNullLiteral=assertNullLiteral;exports.assertBooleanLiteral=assertBooleanLiteral;exports.assertRegExpLiteral=assertRegExpLiteral;exports.assertLogicalExpression=assertLogicalExpression;exports.assertMemberExpression=assertMemberExpression;exports.assertNewExpression=assertNewExpression;exports.assertProgram=assertProgram;exports.assertObjectExpression=assertObjectExpression;exports.assertObjectMethod=assertObjectMethod;exports.assertObjectProperty=assertObjectProperty;exports.assertRestElement=
assertRestElement;exports.assertReturnStatement=assertReturnStatement;exports.assertSequenceExpression=assertSequenceExpression;exports.assertSwitchCase=assertSwitchCase;exports.assertSwitchStatement=assertSwitchStatement;exports.assertThisExpression=assertThisExpression;exports.assertThrowStatement=assertThrowStatement;exports.assertTryStatement=assertTryStatement;exports.assertUnaryExpression=assertUnaryExpression;exports.assertUpdateExpression=assertUpdateExpression;exports.assertVariableDeclaration=
assertVariableDeclaration;exports.assertVariableDeclarator=assertVariableDeclarator;exports.assertWhileStatement=assertWhileStatement;exports.assertWithStatement=assertWithStatement;exports.assertAssignmentPattern=assertAssignmentPattern;exports.assertArrayPattern=assertArrayPattern;exports.assertArrowFunctionExpression=assertArrowFunctionExpression;exports.assertClassBody=assertClassBody;exports.assertClassDeclaration=assertClassDeclaration;exports.assertClassExpression=assertClassExpression;exports.assertExportAllDeclaration=
assertExportAllDeclaration;exports.assertExportDefaultDeclaration=assertExportDefaultDeclaration;exports.assertExportNamedDeclaration=assertExportNamedDeclaration;exports.assertExportSpecifier=assertExportSpecifier;exports.assertForOfStatement=assertForOfStatement;exports.assertImportDeclaration=assertImportDeclaration;exports.assertImportDefaultSpecifier=assertImportDefaultSpecifier;exports.assertImportNamespaceSpecifier=assertImportNamespaceSpecifier;exports.assertImportSpecifier=assertImportSpecifier;
exports.assertMetaProperty=assertMetaProperty;exports.assertClassMethod=assertClassMethod;exports.assertObjectPattern=assertObjectPattern;exports.assertSpreadElement=assertSpreadElement;exports.assertSuper=assertSuper;exports.assertTaggedTemplateExpression=assertTaggedTemplateExpression;exports.assertTemplateElement=assertTemplateElement;exports.assertTemplateLiteral=assertTemplateLiteral;exports.assertYieldExpression=assertYieldExpression;exports.assertAnyTypeAnnotation=assertAnyTypeAnnotation;exports.assertArrayTypeAnnotation=
assertArrayTypeAnnotation;exports.assertBooleanTypeAnnotation=assertBooleanTypeAnnotation;exports.assertBooleanLiteralTypeAnnotation=assertBooleanLiteralTypeAnnotation;exports.assertNullLiteralTypeAnnotation=assertNullLiteralTypeAnnotation;exports.assertClassImplements=assertClassImplements;exports.assertDeclareClass=assertDeclareClass;exports.assertDeclareFunction=assertDeclareFunction;exports.assertDeclareInterface=assertDeclareInterface;exports.assertDeclareModule=assertDeclareModule;exports.assertDeclareModuleExports=
assertDeclareModuleExports;exports.assertDeclareTypeAlias=assertDeclareTypeAlias;exports.assertDeclareOpaqueType=assertDeclareOpaqueType;exports.assertDeclareVariable=assertDeclareVariable;exports.assertDeclareExportDeclaration=assertDeclareExportDeclaration;exports.assertDeclareExportAllDeclaration=assertDeclareExportAllDeclaration;exports.assertDeclaredPredicate=assertDeclaredPredicate;exports.assertExistsTypeAnnotation=assertExistsTypeAnnotation;exports.assertFunctionTypeAnnotation=assertFunctionTypeAnnotation;
exports.assertFunctionTypeParam=assertFunctionTypeParam;exports.assertGenericTypeAnnotation=assertGenericTypeAnnotation;exports.assertInferredPredicate=assertInferredPredicate;exports.assertInterfaceExtends=assertInterfaceExtends;exports.assertInterfaceDeclaration=assertInterfaceDeclaration;exports.assertInterfaceTypeAnnotation=assertInterfaceTypeAnnotation;exports.assertIntersectionTypeAnnotation=assertIntersectionTypeAnnotation;exports.assertMixedTypeAnnotation=assertMixedTypeAnnotation;exports.assertEmptyTypeAnnotation=
assertEmptyTypeAnnotation;exports.assertNullableTypeAnnotation=assertNullableTypeAnnotation;exports.assertNumberLiteralTypeAnnotation=assertNumberLiteralTypeAnnotation;exports.assertNumberTypeAnnotation=assertNumberTypeAnnotation;exports.assertObjectTypeAnnotation=assertObjectTypeAnnotation;exports.assertObjectTypeInternalSlot=assertObjectTypeInternalSlot;exports.assertObjectTypeCallProperty=assertObjectTypeCallProperty;exports.assertObjectTypeIndexer=assertObjectTypeIndexer;exports.assertObjectTypeProperty=
assertObjectTypeProperty;exports.assertObjectTypeSpreadProperty=assertObjectTypeSpreadProperty;exports.assertOpaqueType=assertOpaqueType;exports.assertQualifiedTypeIdentifier=assertQualifiedTypeIdentifier;exports.assertStringLiteralTypeAnnotation=assertStringLiteralTypeAnnotation;exports.assertStringTypeAnnotation=assertStringTypeAnnotation;exports.assertThisTypeAnnotation=assertThisTypeAnnotation;exports.assertTupleTypeAnnotation=assertTupleTypeAnnotation;exports.assertTypeofTypeAnnotation=assertTypeofTypeAnnotation;
exports.assertTypeAlias=assertTypeAlias;exports.assertTypeAnnotation=assertTypeAnnotation;exports.assertTypeCastExpression=assertTypeCastExpression;exports.assertTypeParameter=assertTypeParameter;exports.assertTypeParameterDeclaration=assertTypeParameterDeclaration;exports.assertTypeParameterInstantiation=assertTypeParameterInstantiation;exports.assertUnionTypeAnnotation=assertUnionTypeAnnotation;exports.assertVariance=assertVariance;exports.assertVoidTypeAnnotation=assertVoidTypeAnnotation;exports.assertJSXAttribute=
assertJSXAttribute;exports.assertJSXClosingElement=assertJSXClosingElement;exports.assertJSXElement=assertJSXElement;exports.assertJSXEmptyExpression=assertJSXEmptyExpression;exports.assertJSXExpressionContainer=assertJSXExpressionContainer;exports.assertJSXSpreadChild=assertJSXSpreadChild;exports.assertJSXIdentifier=assertJSXIdentifier;exports.assertJSXMemberExpression=assertJSXMemberExpression;exports.assertJSXNamespacedName=assertJSXNamespacedName;exports.assertJSXOpeningElement=assertJSXOpeningElement;
exports.assertJSXSpreadAttribute=assertJSXSpreadAttribute;exports.assertJSXText=assertJSXText;exports.assertJSXFragment=assertJSXFragment;exports.assertJSXOpeningFragment=assertJSXOpeningFragment;exports.assertJSXClosingFragment=assertJSXClosingFragment;exports.assertNoop=assertNoop;exports.assertParenthesizedExpression=assertParenthesizedExpression;exports.assertAwaitExpression=assertAwaitExpression;exports.assertBindExpression=assertBindExpression;exports.assertClassProperty=assertClassProperty;
exports.assertOptionalMemberExpression=assertOptionalMemberExpression;exports.assertPipelineTopicExpression=assertPipelineTopicExpression;exports.assertPipelineBareFunction=assertPipelineBareFunction;exports.assertPipelinePrimaryTopicReference=assertPipelinePrimaryTopicReference;exports.assertOptionalCallExpression=assertOptionalCallExpression;exports.assertClassPrivateProperty=assertClassPrivateProperty;exports.assertClassPrivateMethod=assertClassPrivateMethod;exports.assertImport=assertImport;exports.assertDecorator=
assertDecorator;exports.assertDoExpression=assertDoExpression;exports.assertExportDefaultSpecifier=assertExportDefaultSpecifier;exports.assertExportNamespaceSpecifier=assertExportNamespaceSpecifier;exports.assertPrivateName=assertPrivateName;exports.assertBigIntLiteral=assertBigIntLiteral;exports.assertTSParameterProperty=assertTSParameterProperty;exports.assertTSDeclareFunction=assertTSDeclareFunction;exports.assertTSDeclareMethod=assertTSDeclareMethod;exports.assertTSQualifiedName=assertTSQualifiedName;
exports.assertTSCallSignatureDeclaration=assertTSCallSignatureDeclaration;exports.assertTSConstructSignatureDeclaration=assertTSConstructSignatureDeclaration;exports.assertTSPropertySignature=assertTSPropertySignature;exports.assertTSMethodSignature=assertTSMethodSignature;exports.assertTSIndexSignature=assertTSIndexSignature;exports.assertTSAnyKeyword=assertTSAnyKeyword;exports.assertTSUnknownKeyword=assertTSUnknownKeyword;exports.assertTSNumberKeyword=assertTSNumberKeyword;exports.assertTSObjectKeyword=
assertTSObjectKeyword;exports.assertTSBooleanKeyword=assertTSBooleanKeyword;exports.assertTSStringKeyword=assertTSStringKeyword;exports.assertTSSymbolKeyword=assertTSSymbolKeyword;exports.assertTSVoidKeyword=assertTSVoidKeyword;exports.assertTSUndefinedKeyword=assertTSUndefinedKeyword;exports.assertTSNullKeyword=assertTSNullKeyword;exports.assertTSNeverKeyword=assertTSNeverKeyword;exports.assertTSThisType=assertTSThisType;exports.assertTSFunctionType=assertTSFunctionType;exports.assertTSConstructorType=
assertTSConstructorType;exports.assertTSTypeReference=assertTSTypeReference;exports.assertTSTypePredicate=assertTSTypePredicate;exports.assertTSTypeQuery=assertTSTypeQuery;exports.assertTSTypeLiteral=assertTSTypeLiteral;exports.assertTSArrayType=assertTSArrayType;exports.assertTSTupleType=assertTSTupleType;exports.assertTSOptionalType=assertTSOptionalType;exports.assertTSRestType=assertTSRestType;exports.assertTSUnionType=assertTSUnionType;exports.assertTSIntersectionType=assertTSIntersectionType;
exports.assertTSConditionalType=assertTSConditionalType;exports.assertTSInferType=assertTSInferType;exports.assertTSParenthesizedType=assertTSParenthesizedType;exports.assertTSTypeOperator=assertTSTypeOperator;exports.assertTSIndexedAccessType=assertTSIndexedAccessType;exports.assertTSMappedType=assertTSMappedType;exports.assertTSLiteralType=assertTSLiteralType;exports.assertTSExpressionWithTypeArguments=assertTSExpressionWithTypeArguments;exports.assertTSInterfaceDeclaration=assertTSInterfaceDeclaration;
exports.assertTSInterfaceBody=assertTSInterfaceBody;exports.assertTSTypeAliasDeclaration=assertTSTypeAliasDeclaration;exports.assertTSAsExpression=assertTSAsExpression;exports.assertTSTypeAssertion=assertTSTypeAssertion;exports.assertTSEnumDeclaration=assertTSEnumDeclaration;exports.assertTSEnumMember=assertTSEnumMember;exports.assertTSModuleDeclaration=assertTSModuleDeclaration;exports.assertTSModuleBlock=assertTSModuleBlock;exports.assertTSImportType=assertTSImportType;exports.assertTSImportEqualsDeclaration=
assertTSImportEqualsDeclaration;exports.assertTSExternalModuleReference=assertTSExternalModuleReference;exports.assertTSNonNullExpression=assertTSNonNullExpression;exports.assertTSExportAssignment=assertTSExportAssignment;exports.assertTSNamespaceExportDeclaration=assertTSNamespaceExportDeclaration;exports.assertTSTypeAnnotation=assertTSTypeAnnotation;exports.assertTSTypeParameterInstantiation=assertTSTypeParameterInstantiation;exports.assertTSTypeParameterDeclaration=assertTSTypeParameterDeclaration;
exports.assertTSTypeParameter=assertTSTypeParameter;exports.assertExpression=assertExpression;exports.assertBinary=assertBinary;exports.assertScopable=assertScopable;exports.assertBlockParent=assertBlockParent;exports.assertBlock=assertBlock;exports.assertStatement=assertStatement;exports.assertTerminatorless=assertTerminatorless;exports.assertCompletionStatement=assertCompletionStatement;exports.assertConditional=assertConditional;exports.assertLoop=assertLoop;exports.assertWhile=assertWhile;exports.assertExpressionWrapper=
assertExpressionWrapper;exports.assertFor=assertFor;exports.assertForXStatement=assertForXStatement;exports.assertFunction=assertFunction;exports.assertFunctionParent=assertFunctionParent;exports.assertPureish=assertPureish;exports.assertDeclaration=assertDeclaration;exports.assertPatternLike=assertPatternLike;exports.assertLVal=assertLVal;exports.assertTSEntityName=assertTSEntityName;exports.assertLiteral=assertLiteral;exports.assertImmutable=assertImmutable;exports.assertUserWhitespacable=assertUserWhitespacable;
exports.assertMethod=assertMethod;exports.assertObjectMember=assertObjectMember;exports.assertProperty=assertProperty;exports.assertUnaryLike=assertUnaryLike;exports.assertPattern=assertPattern;exports.assertClass=assertClass;exports.assertModuleDeclaration=assertModuleDeclaration;exports.assertExportDeclaration=assertExportDeclaration;exports.assertModuleSpecifier=assertModuleSpecifier;exports.assertFlow=assertFlow;exports.assertFlowType=assertFlowType;exports.assertFlowBaseAnnotation=assertFlowBaseAnnotation;
exports.assertFlowDeclaration=assertFlowDeclaration;exports.assertFlowPredicate=assertFlowPredicate;exports.assertJSX=assertJSX;exports.assertPrivate=assertPrivate;exports.assertTSTypeElement=assertTSTypeElement;exports.assertTSType=assertTSType;exports.assertNumberLiteral=assertNumberLiteral;exports.assertRegexLiteral=assertRegexLiteral;exports.assertRestProperty=assertRestProperty;exports.assertSpreadProperty=assertSpreadProperty;var _is=_interopRequireDefault(__webpack_require__(151));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function assert(type,node,opts){if(!(0,_is.default)(type,node,opts))throw new Error(`Expected type "${type}" with option ${JSON.stringify(opts)}, but instead got "${node.type}".`);}function assertArrayExpression(node,opts={}){assert("ArrayExpression",node,opts)}function assertAssignmentExpression(node,opts={}){assert("AssignmentExpression",node,opts)}function assertBinaryExpression(node,opts={}){assert("BinaryExpression",node,opts)}function assertInterpreterDirective(node,
opts={}){assert("InterpreterDirective",node,opts)}function assertDirective(node,opts={}){assert("Directive",node,opts)}function assertDirectiveLiteral(node,opts={}){assert("DirectiveLiteral",node,opts)}function assertBlockStatement(node,opts={}){assert("BlockStatement",node,opts)}function assertBreakStatement(node,opts={}){assert("BreakStatement",node,opts)}function assertCallExpression(node,opts={}){assert("CallExpression",node,opts)}function assertCatchClause(node,opts={}){assert("CatchClause",
node,opts)}function assertConditionalExpression(node,opts={}){assert("ConditionalExpression",node,opts)}function assertContinueStatement(node,opts={}){assert("ContinueStatement",node,opts)}function assertDebuggerStatement(node,opts={}){assert("DebuggerStatement",node,opts)}function assertDoWhileStatement(node,opts={}){assert("DoWhileStatement",node,opts)}function assertEmptyStatement(node,opts={}){assert("EmptyStatement",node,opts)}function assertExpressionStatement(node,opts={}){assert("ExpressionStatement",
node,opts)}function assertFile(node,opts={}){assert("File",node,opts)}function assertForInStatement(node,opts={}){assert("ForInStatement",node,opts)}function assertForStatement(node,opts={}){assert("ForStatement",node,opts)}function assertFunctionDeclaration(node,opts={}){assert("FunctionDeclaration",node,opts)}function assertFunctionExpression(node,opts={}){assert("FunctionExpression",node,opts)}function assertIdentifier(node,opts={}){assert("Identifier",node,opts)}function assertIfStatement(node,
opts={}){assert("IfStatement",node,opts)}function assertLabeledStatement(node,opts={}){assert("LabeledStatement",node,opts)}function assertStringLiteral(node,opts={}){assert("StringLiteral",node,opts)}function assertNumericLiteral(node,opts={}){assert("NumericLiteral",node,opts)}function assertNullLiteral(node,opts={}){assert("NullLiteral",node,opts)}function assertBooleanLiteral(node,opts={}){assert("BooleanLiteral",node,opts)}function assertRegExpLiteral(node,opts={}){assert("RegExpLiteral",node,
opts)}function assertLogicalExpression(node,opts={}){assert("LogicalExpression",node,opts)}function assertMemberExpression(node,opts={}){assert("MemberExpression",node,opts)}function assertNewExpression(node,opts={}){assert("NewExpression",node,opts)}function assertProgram(node,opts={}){assert("Program",node,opts)}function assertObjectExpression(node,opts={}){assert("ObjectExpression",node,opts)}function assertObjectMethod(node,opts={}){assert("ObjectMethod",node,opts)}function assertObjectProperty(node,
opts={}){assert("ObjectProperty",node,opts)}function assertRestElement(node,opts={}){assert("RestElement",node,opts)}function assertReturnStatement(node,opts={}){assert("ReturnStatement",node,opts)}function assertSequenceExpression(node,opts={}){assert("SequenceExpression",node,opts)}function assertSwitchCase(node,opts={}){assert("SwitchCase",node,opts)}function assertSwitchStatement(node,opts={}){assert("SwitchStatement",node,opts)}function assertThisExpression(node,opts={}){assert("ThisExpression",
node,opts)}function assertThrowStatement(node,opts={}){assert("ThrowStatement",node,opts)}function assertTryStatement(node,opts={}){assert("TryStatement",node,opts)}function assertUnaryExpression(node,opts={}){assert("UnaryExpression",node,opts)}function assertUpdateExpression(node,opts={}){assert("UpdateExpression",node,opts)}function assertVariableDeclaration(node,opts={}){assert("VariableDeclaration",node,opts)}function assertVariableDeclarator(node,opts={}){assert("VariableDeclarator",node,opts)}
function assertWhileStatement(node,opts={}){assert("WhileStatement",node,opts)}function assertWithStatement(node,opts={}){assert("WithStatement",node,opts)}function assertAssignmentPattern(node,opts={}){assert("AssignmentPattern",node,opts)}function assertArrayPattern(node,opts={}){assert("ArrayPattern",node,opts)}function assertArrowFunctionExpression(node,opts={}){assert("ArrowFunctionExpression",node,opts)}function assertClassBody(node,opts={}){assert("ClassBody",node,opts)}function assertClassDeclaration(node,
opts={}){assert("ClassDeclaration",node,opts)}function assertClassExpression(node,opts={}){assert("ClassExpression",node,opts)}function assertExportAllDeclaration(node,opts={}){assert("ExportAllDeclaration",node,opts)}function assertExportDefaultDeclaration(node,opts={}){assert("ExportDefaultDeclaration",node,opts)}function assertExportNamedDeclaration(node,opts={}){assert("ExportNamedDeclaration",node,opts)}function assertExportSpecifier(node,opts={}){assert("ExportSpecifier",node,opts)}function assertForOfStatement(node,
opts={}){assert("ForOfStatement",node,opts)}function assertImportDeclaration(node,opts={}){assert("ImportDeclaration",node,opts)}function assertImportDefaultSpecifier(node,opts={}){assert("ImportDefaultSpecifier",node,opts)}function assertImportNamespaceSpecifier(node,opts={}){assert("ImportNamespaceSpecifier",node,opts)}function assertImportSpecifier(node,opts={}){assert("ImportSpecifier",node,opts)}function assertMetaProperty(node,opts={}){assert("MetaProperty",node,opts)}function assertClassMethod(node,
opts={}){assert("ClassMethod",node,opts)}function assertObjectPattern(node,opts={}){assert("ObjectPattern",node,opts)}function assertSpreadElement(node,opts={}){assert("SpreadElement",node,opts)}function assertSuper(node,opts={}){assert("Super",node,opts)}function assertTaggedTemplateExpression(node,opts={}){assert("TaggedTemplateExpression",node,opts)}function assertTemplateElement(node,opts={}){assert("TemplateElement",node,opts)}function assertTemplateLiteral(node,opts={}){assert("TemplateLiteral",
node,opts)}function assertYieldExpression(node,opts={}){assert("YieldExpression",node,opts)}function assertAnyTypeAnnotation(node,opts={}){assert("AnyTypeAnnotation",node,opts)}function assertArrayTypeAnnotation(node,opts={}){assert("ArrayTypeAnnotation",node,opts)}function assertBooleanTypeAnnotation(node,opts={}){assert("BooleanTypeAnnotation",node,opts)}function assertBooleanLiteralTypeAnnotation(node,opts={}){assert("BooleanLiteralTypeAnnotation",node,opts)}function assertNullLiteralTypeAnnotation(node,
opts={}){assert("NullLiteralTypeAnnotation",node,opts)}function assertClassImplements(node,opts={}){assert("ClassImplements",node,opts)}function assertDeclareClass(node,opts={}){assert("DeclareClass",node,opts)}function assertDeclareFunction(node,opts={}){assert("DeclareFunction",node,opts)}function assertDeclareInterface(node,opts={}){assert("DeclareInterface",node,opts)}function assertDeclareModule(node,opts={}){assert("DeclareModule",node,opts)}function assertDeclareModuleExports(node,opts={}){assert("DeclareModuleExports",
node,opts)}function assertDeclareTypeAlias(node,opts={}){assert("DeclareTypeAlias",node,opts)}function assertDeclareOpaqueType(node,opts={}){assert("DeclareOpaqueType",node,opts)}function assertDeclareVariable(node,opts={}){assert("DeclareVariable",node,opts)}function assertDeclareExportDeclaration(node,opts={}){assert("DeclareExportDeclaration",node,opts)}function assertDeclareExportAllDeclaration(node,opts={}){assert("DeclareExportAllDeclaration",node,opts)}function assertDeclaredPredicate(node,
opts={}){assert("DeclaredPredicate",node,opts)}function assertExistsTypeAnnotation(node,opts={}){assert("ExistsTypeAnnotation",node,opts)}function assertFunctionTypeAnnotation(node,opts={}){assert("FunctionTypeAnnotation",node,opts)}function assertFunctionTypeParam(node,opts={}){assert("FunctionTypeParam",node,opts)}function assertGenericTypeAnnotation(node,opts={}){assert("GenericTypeAnnotation",node,opts)}function assertInferredPredicate(node,opts={}){assert("InferredPredicate",node,opts)}function assertInterfaceExtends(node,
opts={}){assert("InterfaceExtends",node,opts)}function assertInterfaceDeclaration(node,opts={}){assert("InterfaceDeclaration",node,opts)}function assertInterfaceTypeAnnotation(node,opts={}){assert("InterfaceTypeAnnotation",node,opts)}function assertIntersectionTypeAnnotation(node,opts={}){assert("IntersectionTypeAnnotation",node,opts)}function assertMixedTypeAnnotation(node,opts={}){assert("MixedTypeAnnotation",node,opts)}function assertEmptyTypeAnnotation(node,opts={}){assert("EmptyTypeAnnotation",
node,opts)}function assertNullableTypeAnnotation(node,opts={}){assert("NullableTypeAnnotation",node,opts)}function assertNumberLiteralTypeAnnotation(node,opts={}){assert("NumberLiteralTypeAnnotation",node,opts)}function assertNumberTypeAnnotation(node,opts={}){assert("NumberTypeAnnotation",node,opts)}function assertObjectTypeAnnotation(node,opts={}){assert("ObjectTypeAnnotation",node,opts)}function assertObjectTypeInternalSlot(node,opts={}){assert("ObjectTypeInternalSlot",node,opts)}function assertObjectTypeCallProperty(node,
opts={}){assert("ObjectTypeCallProperty",node,opts)}function assertObjectTypeIndexer(node,opts={}){assert("ObjectTypeIndexer",node,opts)}function assertObjectTypeProperty(node,opts={}){assert("ObjectTypeProperty",node,opts)}function assertObjectTypeSpreadProperty(node,opts={}){assert("ObjectTypeSpreadProperty",node,opts)}function assertOpaqueType(node,opts={}){assert("OpaqueType",node,opts)}function assertQualifiedTypeIdentifier(node,opts={}){assert("QualifiedTypeIdentifier",node,opts)}function assertStringLiteralTypeAnnotation(node,
opts={}){assert("StringLiteralTypeAnnotation",node,opts)}function assertStringTypeAnnotation(node,opts={}){assert("StringTypeAnnotation",node,opts)}function assertThisTypeAnnotation(node,opts={}){assert("ThisTypeAnnotation",node,opts)}function assertTupleTypeAnnotation(node,opts={}){assert("TupleTypeAnnotation",node,opts)}function assertTypeofTypeAnnotation(node,opts={}){assert("TypeofTypeAnnotation",node,opts)}function assertTypeAlias(node,opts={}){assert("TypeAlias",node,opts)}function assertTypeAnnotation(node,
opts={}){assert("TypeAnnotation",node,opts)}function assertTypeCastExpression(node,opts={}){assert("TypeCastExpression",node,opts)}function assertTypeParameter(node,opts={}){assert("TypeParameter",node,opts)}function assertTypeParameterDeclaration(node,opts={}){assert("TypeParameterDeclaration",node,opts)}function assertTypeParameterInstantiation(node,opts={}){assert("TypeParameterInstantiation",node,opts)}function assertUnionTypeAnnotation(node,opts={}){assert("UnionTypeAnnotation",node,opts)}function assertVariance(node,
opts={}){assert("Variance",node,opts)}function assertVoidTypeAnnotation(node,opts={}){assert("VoidTypeAnnotation",node,opts)}function assertJSXAttribute(node,opts={}){assert("JSXAttribute",node,opts)}function assertJSXClosingElement(node,opts={}){assert("JSXClosingElement",node,opts)}function assertJSXElement(node,opts={}){assert("JSXElement",node,opts)}function assertJSXEmptyExpression(node,opts={}){assert("JSXEmptyExpression",node,opts)}function assertJSXExpressionContainer(node,opts={}){assert("JSXExpressionContainer",
node,opts)}function assertJSXSpreadChild(node,opts={}){assert("JSXSpreadChild",node,opts)}function assertJSXIdentifier(node,opts={}){assert("JSXIdentifier",node,opts)}function assertJSXMemberExpression(node,opts={}){assert("JSXMemberExpression",node,opts)}function assertJSXNamespacedName(node,opts={}){assert("JSXNamespacedName",node,opts)}function assertJSXOpeningElement(node,opts={}){assert("JSXOpeningElement",node,opts)}function assertJSXSpreadAttribute(node,opts={}){assert("JSXSpreadAttribute",
node,opts)}function assertJSXText(node,opts={}){assert("JSXText",node,opts)}function assertJSXFragment(node,opts={}){assert("JSXFragment",node,opts)}function assertJSXOpeningFragment(node,opts={}){assert("JSXOpeningFragment",node,opts)}function assertJSXClosingFragment(node,opts={}){assert("JSXClosingFragment",node,opts)}function assertNoop(node,opts={}){assert("Noop",node,opts)}function assertParenthesizedExpression(node,opts={}){assert("ParenthesizedExpression",node,opts)}function assertAwaitExpression(node,
opts={}){assert("AwaitExpression",node,opts)}function assertBindExpression(node,opts={}){assert("BindExpression",node,opts)}function assertClassProperty(node,opts={}){assert("ClassProperty",node,opts)}function assertOptionalMemberExpression(node,opts={}){assert("OptionalMemberExpression",node,opts)}function assertPipelineTopicExpression(node,opts={}){assert("PipelineTopicExpression",node,opts)}function assertPipelineBareFunction(node,opts={}){assert("PipelineBareFunction",node,opts)}function assertPipelinePrimaryTopicReference(node,
opts={}){assert("PipelinePrimaryTopicReference",node,opts)}function assertOptionalCallExpression(node,opts={}){assert("OptionalCallExpression",node,opts)}function assertClassPrivateProperty(node,opts={}){assert("ClassPrivateProperty",node,opts)}function assertClassPrivateMethod(node,opts={}){assert("ClassPrivateMethod",node,opts)}function assertImport(node,opts={}){assert("Import",node,opts)}function assertDecorator(node,opts={}){assert("Decorator",node,opts)}function assertDoExpression(node,opts=
{}){assert("DoExpression",node,opts)}function assertExportDefaultSpecifier(node,opts={}){assert("ExportDefaultSpecifier",node,opts)}function assertExportNamespaceSpecifier(node,opts={}){assert("ExportNamespaceSpecifier",node,opts)}function assertPrivateName(node,opts={}){assert("PrivateName",node,opts)}function assertBigIntLiteral(node,opts={}){assert("BigIntLiteral",node,opts)}function assertTSParameterProperty(node,opts={}){assert("TSParameterProperty",node,opts)}function assertTSDeclareFunction(node,
opts={}){assert("TSDeclareFunction",node,opts)}function assertTSDeclareMethod(node,opts={}){assert("TSDeclareMethod",node,opts)}function assertTSQualifiedName(node,opts={}){assert("TSQualifiedName",node,opts)}function assertTSCallSignatureDeclaration(node,opts={}){assert("TSCallSignatureDeclaration",node,opts)}function assertTSConstructSignatureDeclaration(node,opts={}){assert("TSConstructSignatureDeclaration",node,opts)}function assertTSPropertySignature(node,opts={}){assert("TSPropertySignature",
node,opts)}function assertTSMethodSignature(node,opts={}){assert("TSMethodSignature",node,opts)}function assertTSIndexSignature(node,opts={}){assert("TSIndexSignature",node,opts)}function assertTSAnyKeyword(node,opts={}){assert("TSAnyKeyword",node,opts)}function assertTSUnknownKeyword(node,opts={}){assert("TSUnknownKeyword",node,opts)}function assertTSNumberKeyword(node,opts={}){assert("TSNumberKeyword",node,opts)}function assertTSObjectKeyword(node,opts={}){assert("TSObjectKeyword",node,opts)}function assertTSBooleanKeyword(node,
opts={}){assert("TSBooleanKeyword",node,opts)}function assertTSStringKeyword(node,opts={}){assert("TSStringKeyword",node,opts)}function assertTSSymbolKeyword(node,opts={}){assert("TSSymbolKeyword",node,opts)}function assertTSVoidKeyword(node,opts={}){assert("TSVoidKeyword",node,opts)}function assertTSUndefinedKeyword(node,opts={}){assert("TSUndefinedKeyword",node,opts)}function assertTSNullKeyword(node,opts={}){assert("TSNullKeyword",node,opts)}function assertTSNeverKeyword(node,opts={}){assert("TSNeverKeyword",
node,opts)}function assertTSThisType(node,opts={}){assert("TSThisType",node,opts)}function assertTSFunctionType(node,opts={}){assert("TSFunctionType",node,opts)}function assertTSConstructorType(node,opts={}){assert("TSConstructorType",node,opts)}function assertTSTypeReference(node,opts={}){assert("TSTypeReference",node,opts)}function assertTSTypePredicate(node,opts={}){assert("TSTypePredicate",node,opts)}function assertTSTypeQuery(node,opts={}){assert("TSTypeQuery",node,opts)}function assertTSTypeLiteral(node,
opts={}){assert("TSTypeLiteral",node,opts)}function assertTSArrayType(node,opts={}){assert("TSArrayType",node,opts)}function assertTSTupleType(node,opts={}){assert("TSTupleType",node,opts)}function assertTSOptionalType(node,opts={}){assert("TSOptionalType",node,opts)}function assertTSRestType(node,opts={}){assert("TSRestType",node,opts)}function assertTSUnionType(node,opts={}){assert("TSUnionType",node,opts)}function assertTSIntersectionType(node,opts={}){assert("TSIntersectionType",node,opts)}function assertTSConditionalType(node,
opts={}){assert("TSConditionalType",node,opts)}function assertTSInferType(node,opts={}){assert("TSInferType",node,opts)}function assertTSParenthesizedType(node,opts={}){assert("TSParenthesizedType",node,opts)}function assertTSTypeOperator(node,opts={}){assert("TSTypeOperator",node,opts)}function assertTSIndexedAccessType(node,opts={}){assert("TSIndexedAccessType",node,opts)}function assertTSMappedType(node,opts={}){assert("TSMappedType",node,opts)}function assertTSLiteralType(node,opts={}){assert("TSLiteralType",
node,opts)}function assertTSExpressionWithTypeArguments(node,opts={}){assert("TSExpressionWithTypeArguments",node,opts)}function assertTSInterfaceDeclaration(node,opts={}){assert("TSInterfaceDeclaration",node,opts)}function assertTSInterfaceBody(node,opts={}){assert("TSInterfaceBody",node,opts)}function assertTSTypeAliasDeclaration(node,opts={}){assert("TSTypeAliasDeclaration",node,opts)}function assertTSAsExpression(node,opts={}){assert("TSAsExpression",node,opts)}function assertTSTypeAssertion(node,
opts={}){assert("TSTypeAssertion",node,opts)}function assertTSEnumDeclaration(node,opts={}){assert("TSEnumDeclaration",node,opts)}function assertTSEnumMember(node,opts={}){assert("TSEnumMember",node,opts)}function assertTSModuleDeclaration(node,opts={}){assert("TSModuleDeclaration",node,opts)}function assertTSModuleBlock(node,opts={}){assert("TSModuleBlock",node,opts)}function assertTSImportType(node,opts={}){assert("TSImportType",node,opts)}function assertTSImportEqualsDeclaration(node,opts={}){assert("TSImportEqualsDeclaration",
node,opts)}function assertTSExternalModuleReference(node,opts={}){assert("TSExternalModuleReference",node,opts)}function assertTSNonNullExpression(node,opts={}){assert("TSNonNullExpression",node,opts)}function assertTSExportAssignment(node,opts={}){assert("TSExportAssignment",node,opts)}function assertTSNamespaceExportDeclaration(node,opts={}){assert("TSNamespaceExportDeclaration",node,opts)}function assertTSTypeAnnotation(node,opts={}){assert("TSTypeAnnotation",node,opts)}function assertTSTypeParameterInstantiation(node,
opts={}){assert("TSTypeParameterInstantiation",node,opts)}function assertTSTypeParameterDeclaration(node,opts={}){assert("TSTypeParameterDeclaration",node,opts)}function assertTSTypeParameter(node,opts={}){assert("TSTypeParameter",node,opts)}function assertExpression(node,opts={}){assert("Expression",node,opts)}function assertBinary(node,opts={}){assert("Binary",node,opts)}function assertScopable(node,opts={}){assert("Scopable",node,opts)}function assertBlockParent(node,opts={}){assert("BlockParent",
node,opts)}function assertBlock(node,opts={}){assert("Block",node,opts)}function assertStatement(node,opts={}){assert("Statement",node,opts)}function assertTerminatorless(node,opts={}){assert("Terminatorless",node,opts)}function assertCompletionStatement(node,opts={}){assert("CompletionStatement",node,opts)}function assertConditional(node,opts={}){assert("Conditional",node,opts)}function assertLoop(node,opts={}){assert("Loop",node,opts)}function assertWhile(node,opts={}){assert("While",node,opts)}
function assertExpressionWrapper(node,opts={}){assert("ExpressionWrapper",node,opts)}function assertFor(node,opts={}){assert("For",node,opts)}function assertForXStatement(node,opts={}){assert("ForXStatement",node,opts)}function assertFunction(node,opts={}){assert("Function",node,opts)}function assertFunctionParent(node,opts={}){assert("FunctionParent",node,opts)}function assertPureish(node,opts={}){assert("Pureish",node,opts)}function assertDeclaration(node,opts={}){assert("Declaration",node,opts)}
function assertPatternLike(node,opts={}){assert("PatternLike",node,opts)}function assertLVal(node,opts={}){assert("LVal",node,opts)}function assertTSEntityName(node,opts={}){assert("TSEntityName",node,opts)}function assertLiteral(node,opts={}){assert("Literal",node,opts)}function assertImmutable(node,opts={}){assert("Immutable",node,opts)}function assertUserWhitespacable(node,opts={}){assert("UserWhitespacable",node,opts)}function assertMethod(node,opts={}){assert("Method",node,opts)}function assertObjectMember(node,
opts={}){assert("ObjectMember",node,opts)}function assertProperty(node,opts={}){assert("Property",node,opts)}function assertUnaryLike(node,opts={}){assert("UnaryLike",node,opts)}function assertPattern(node,opts={}){assert("Pattern",node,opts)}function assertClass(node,opts={}){assert("Class",node,opts)}function assertModuleDeclaration(node,opts={}){assert("ModuleDeclaration",node,opts)}function assertExportDeclaration(node,opts={}){assert("ExportDeclaration",node,opts)}function assertModuleSpecifier(node,
opts={}){assert("ModuleSpecifier",node,opts)}function assertFlow(node,opts={}){assert("Flow",node,opts)}function assertFlowType(node,opts={}){assert("FlowType",node,opts)}function assertFlowBaseAnnotation(node,opts={}){assert("FlowBaseAnnotation",node,opts)}function assertFlowDeclaration(node,opts={}){assert("FlowDeclaration",node,opts)}function assertFlowPredicate(node,opts={}){assert("FlowPredicate",node,opts)}function assertJSX(node,opts={}){assert("JSX",node,opts)}function assertPrivate(node,
opts={}){assert("Private",node,opts)}function assertTSTypeElement(node,opts={}){assert("TSTypeElement",node,opts)}function assertTSType(node,opts={}){assert("TSType",node,opts)}function assertNumberLiteral(node,opts){console.trace("The node type NumberLiteral has been renamed to NumericLiteral");assert("NumberLiteral",node,opts)}function assertRegexLiteral(node,opts){console.trace("The node type RegexLiteral has been renamed to RegExpLiteral");assert("RegexLiteral",node,opts)}function assertRestProperty(node,
opts){console.trace("The node type RestProperty has been renamed to RestElement");assert("RestProperty",node,opts)}function assertSpreadProperty(node,opts){console.trace("The node type SpreadProperty has been renamed to SpreadElement");assert("SpreadProperty",node,opts)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=createTypeAnnotationBasedOnTypeof;var _generated=__webpack_require__(30);function createTypeAnnotationBasedOnTypeof(type){if(type===
"string")return(0,_generated.stringTypeAnnotation)();else if(type==="number")return(0,_generated.numberTypeAnnotation)();else if(type==="undefined")return(0,_generated.voidTypeAnnotation)();else if(type==="boolean")return(0,_generated.booleanTypeAnnotation)();else if(type==="function")return(0,_generated.genericTypeAnnotation)((0,_generated.identifier)("Function"));else if(type==="object")return(0,_generated.genericTypeAnnotation)((0,_generated.identifier)("Object"));else if(type==="symbol")return(0,
_generated.genericTypeAnnotation)((0,_generated.identifier)("Symbol"));else throw new Error("Invalid typeof value");}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=createUnionTypeAnnotation;var _generated=__webpack_require__(30);var _removeTypeDuplicates=_interopRequireDefault(__webpack_require__(165));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function createUnionTypeAnnotation(types){const flattened=
(0,_removeTypeDuplicates.default)(types);if(flattened.length===1)return flattened[0];else return(0,_generated.unionTypeAnnotation)(flattened)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=removeTypeDuplicates;var _generated=__webpack_require__(25);function removeTypeDuplicates(nodes){const generics={};const bases={};const typeGroups=[];const types=[];for(let i=0;i<nodes.length;i++){const node=nodes[i];if(!node)continue;if(types.indexOf(node)>=
0)continue;if((0,_generated.isAnyTypeAnnotation)(node))return[node];if((0,_generated.isFlowBaseAnnotation)(node)){bases[node.type]=node;continue}if((0,_generated.isUnionTypeAnnotation)(node)){if(typeGroups.indexOf(node.types)<0){nodes=nodes.concat(node.types);typeGroups.push(node.types)}continue}if((0,_generated.isGenericTypeAnnotation)(node)){const name=node.id.name;if(generics[name]){let existing=generics[name];if(existing.typeParameters){if(node.typeParameters)existing.typeParameters.params=removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params))}else existing=
node.typeParameters}else generics[name]=node;continue}types.push(node)}for(const type in bases)types.push(bases[type]);for(const name in generics)types.push(generics[name]);return types}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=cloneNode;var _definitions=__webpack_require__(141);const has=Function.call.bind(Object.prototype.hasOwnProperty);function cloneIfNode(obj,deep){if(obj&&typeof obj.type==="string"&&obj.type!=="CommentLine"&&
obj.type!=="CommentBlock")return cloneNode(obj,deep);return obj}function cloneIfNodeOrArray(obj,deep){if(Array.isArray(obj))return obj.map((node)=>cloneIfNode(node,deep));return cloneIfNode(obj,deep)}function cloneNode(node,deep=true){if(!node)return node;const {type}=node;const newNode={type};if(type==="Identifier"){newNode.name=node.name;if(has(node,"optional")&&typeof node.optional==="boolean")newNode.optional=node.optional;if(has(node,"typeAnnotation"))newNode.typeAnnotation=deep?cloneIfNodeOrArray(node.typeAnnotation,
true):node.typeAnnotation}else if(!has(_definitions.NODE_FIELDS,type))throw new Error(`Unknown node type: "${type}"`);else for(const field of Object.keys(_definitions.NODE_FIELDS[type]))if(has(node,field))newNode[field]=deep?cloneIfNodeOrArray(node[field],true):node[field];if(has(node,"loc"))newNode.loc=node.loc;if(has(node,"leadingComments"))newNode.leadingComments=node.leadingComments;if(has(node,"innerComments"))newNode.innerComments=node.innerCmments;if(has(node,"trailingComments"))newNode.trailingComments=
node.trailingComments;if(has(node,"extra"))newNode.extra=Object.assign({},node.extra);return newNode}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=clone;var _cloneNode=_interopRequireDefault(__webpack_require__(166));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function clone(node){return(0,_cloneNode.default)(node,false)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=cloneDeep;var _cloneNode=_interopRequireDefault(__webpack_require__(166));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function cloneDeep(node){return(0,_cloneNode.default)(node)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=cloneWithoutLoc;var _clone=_interopRequireDefault(__webpack_require__(167));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function cloneWithoutLoc(node){const newNode=(0,_clone.default)(node);newNode.loc=null;return newNode}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=addComment;var _addComments=_interopRequireDefault(__webpack_require__(171));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function addComment(node,type,content,line){return(0,_addComments.default)(node,type,[{type:line?
"CommentLine":"CommentBlock",value:content}])}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=addComments;function addComments(node,type,comments){if(!comments||!node)return node;const key=`${type}Comments`;if(node[key])if(type==="leading")node[key]=comments.concat(node[key]);else node[key]=node[key].concat(comments);else node[key]=comments;return node}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=inheritInnerComments;var _inherit=_interopRequireDefault(__webpack_require__(173));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function inheritInnerComments(child,parent){(0,_inherit.default)("innerComments",child,parent)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=inherit;function _uniq(){const data=_interopRequireDefault(__webpack_require__(174));
_uniq=function(){return data};return data}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function inherit(key,child,parent){if(child&&parent)child[key]=(0,_uniq().default)([].concat(child[key],parent[key]).filter(Boolean))}},function(module,exports,__webpack_require__){var baseUniq=__webpack_require__(175);function uniq(array){return array&&array.length?baseUniq(array):[]}module.exports=uniq},function(module,exports,__webpack_require__){var SetCache=__webpack_require__(176),
arrayIncludes=__webpack_require__(179),arrayIncludesWith=__webpack_require__(184),cacheHas=__webpack_require__(185),createSet=__webpack_require__(186),setToArray=__webpack_require__(188);var LARGE_ARRAY_SIZE=200;function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet(array);if(set)return setToArray(set);
isCommon=false;includes=cacheHas;seen=new SetCache}else seen=iteratee?[]:result;outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--)if(seen[seenIndex]===computed)continue outer;if(iteratee)seen.push(computed);result.push(value)}else if(!includes(seen,computed,comparator)){if(seen!==result)seen.push(computed);result.push(value)}}return result}module.exports=
baseUniq},function(module,exports,__webpack_require__){var MapCache=__webpack_require__(63),setCacheAdd=__webpack_require__(177),setCacheHas=__webpack_require__(178);function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache;while(++index<length)this.add(values[index])}SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;module.exports=SetCache},function(module,exports){var HASH_UNDEFINED="__lodash_hash_undefined__";
function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this}module.exports=setCacheAdd},function(module,exports){function setCacheHas(value){return this.__data__.has(value)}module.exports=setCacheHas},function(module,exports,__webpack_require__){var baseIndexOf=__webpack_require__(180);function arrayIncludes(array,value){var length=array==null?0:array.length;return!!length&&baseIndexOf(array,value,0)>-1}module.exports=arrayIncludes},function(module,exports,__webpack_require__){var baseFindIndex=
__webpack_require__(181),baseIsNaN=__webpack_require__(182),strictIndexOf=__webpack_require__(183);function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex)}module.exports=baseIndexOf},function(module,exports){function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length)if(predicate(array[index],index,array))return index;
return-1}module.exports=baseFindIndex},function(module,exports){function baseIsNaN(value){return value!==value}module.exports=baseIsNaN},function(module,exports){function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length)if(array[index]===value)return index;return-1}module.exports=strictIndexOf},function(module,exports){function arrayIncludesWith(array,value,comparator){var index=-1,length=array==null?0:array.length;while(++index<length)if(comparator(value,
array[index]))return true;return false}module.exports=arrayIncludesWith},function(module,exports){function cacheHas(cache,key){return cache.has(key)}module.exports=cacheHas},function(module,exports,__webpack_require__){var Set=__webpack_require__(125),noop=__webpack_require__(187),setToArray=__webpack_require__(188);var INFINITY=1/0;var createSet=!(Set&&1/setToArray(new Set([,-0]))[1]==INFINITY)?noop:function(values){return new Set(values)};module.exports=createSet},function(module,exports){function noop(){}
module.exports=noop},function(module,exports){function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value});return result}module.exports=setToArray},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=inheritLeadingComments;var _inherit=_interopRequireDefault(__webpack_require__(173));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function inheritLeadingComments(child,
parent){(0,_inherit.default)("leadingComments",child,parent)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=inheritsComments;var _inheritTrailingComments=_interopRequireDefault(__webpack_require__(191));var _inheritLeadingComments=_interopRequireDefault(__webpack_require__(189));var _inheritInnerComments=_interopRequireDefault(__webpack_require__(172));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
function inheritsComments(child,parent){(0,_inheritTrailingComments.default)(child,parent);(0,_inheritLeadingComments.default)(child,parent);(0,_inheritInnerComments.default)(child,parent);return child}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=inheritTrailingComments;var _inherit=_interopRequireDefault(__webpack_require__(173));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function inheritTrailingComments(child,
parent){(0,_inherit.default)("trailingComments",child,parent)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=removeComments;var _constants=__webpack_require__(149);function removeComments(node){_constants.COMMENT_KEYS.forEach((key)=>{node[key]=null});return node}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.TSTYPE_TYPES=exports.TSTYPEELEMENT_TYPES=exports.PRIVATE_TYPES=
exports.JSX_TYPES=exports.FLOWPREDICATE_TYPES=exports.FLOWDECLARATION_TYPES=exports.FLOWBASEANNOTATION_TYPES=exports.FLOWTYPE_TYPES=exports.FLOW_TYPES=exports.MODULESPECIFIER_TYPES=exports.EXPORTDECLARATION_TYPES=exports.MODULEDECLARATION_TYPES=exports.CLASS_TYPES=exports.PATTERN_TYPES=exports.UNARYLIKE_TYPES=exports.PROPERTY_TYPES=exports.OBJECTMEMBER_TYPES=exports.METHOD_TYPES=exports.USERWHITESPACABLE_TYPES=exports.IMMUTABLE_TYPES=exports.LITERAL_TYPES=exports.TSENTITYNAME_TYPES=exports.LVAL_TYPES=
exports.PATTERNLIKE_TYPES=exports.DECLARATION_TYPES=exports.PUREISH_TYPES=exports.FUNCTIONPARENT_TYPES=exports.FUNCTION_TYPES=exports.FORXSTATEMENT_TYPES=exports.FOR_TYPES=exports.EXPRESSIONWRAPPER_TYPES=exports.WHILE_TYPES=exports.LOOP_TYPES=exports.CONDITIONAL_TYPES=exports.COMPLETIONSTATEMENT_TYPES=exports.TERMINATORLESS_TYPES=exports.STATEMENT_TYPES=exports.BLOCK_TYPES=exports.BLOCKPARENT_TYPES=exports.SCOPABLE_TYPES=exports.BINARY_TYPES=exports.EXPRESSION_TYPES=void 0;var _definitions=__webpack_require__(141);
const EXPRESSION_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Expression"];exports.EXPRESSION_TYPES=EXPRESSION_TYPES;const BINARY_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Binary"];exports.BINARY_TYPES=BINARY_TYPES;const SCOPABLE_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Scopable"];exports.SCOPABLE_TYPES=SCOPABLE_TYPES;const BLOCKPARENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS["BlockParent"];exports.BLOCKPARENT_TYPES=BLOCKPARENT_TYPES;const BLOCK_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Block"];exports.BLOCK_TYPES=
BLOCK_TYPES;const STATEMENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Statement"];exports.STATEMENT_TYPES=STATEMENT_TYPES;const TERMINATORLESS_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Terminatorless"];exports.TERMINATORLESS_TYPES=TERMINATORLESS_TYPES;const COMPLETIONSTATEMENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS["CompletionStatement"];exports.COMPLETIONSTATEMENT_TYPES=COMPLETIONSTATEMENT_TYPES;const CONDITIONAL_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Conditional"];exports.CONDITIONAL_TYPES=CONDITIONAL_TYPES;
const LOOP_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Loop"];exports.LOOP_TYPES=LOOP_TYPES;const WHILE_TYPES=_definitions.FLIPPED_ALIAS_KEYS["While"];exports.WHILE_TYPES=WHILE_TYPES;const EXPRESSIONWRAPPER_TYPES=_definitions.FLIPPED_ALIAS_KEYS["ExpressionWrapper"];exports.EXPRESSIONWRAPPER_TYPES=EXPRESSIONWRAPPER_TYPES;const FOR_TYPES=_definitions.FLIPPED_ALIAS_KEYS["For"];exports.FOR_TYPES=FOR_TYPES;const FORXSTATEMENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS["ForXStatement"];exports.FORXSTATEMENT_TYPES=
FORXSTATEMENT_TYPES;const FUNCTION_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Function"];exports.FUNCTION_TYPES=FUNCTION_TYPES;const FUNCTIONPARENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS["FunctionParent"];exports.FUNCTIONPARENT_TYPES=FUNCTIONPARENT_TYPES;const PUREISH_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Pureish"];exports.PUREISH_TYPES=PUREISH_TYPES;const DECLARATION_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Declaration"];exports.DECLARATION_TYPES=DECLARATION_TYPES;const PATTERNLIKE_TYPES=_definitions.FLIPPED_ALIAS_KEYS["PatternLike"];
exports.PATTERNLIKE_TYPES=PATTERNLIKE_TYPES;const LVAL_TYPES=_definitions.FLIPPED_ALIAS_KEYS["LVal"];exports.LVAL_TYPES=LVAL_TYPES;const TSENTITYNAME_TYPES=_definitions.FLIPPED_ALIAS_KEYS["TSEntityName"];exports.TSENTITYNAME_TYPES=TSENTITYNAME_TYPES;const LITERAL_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Literal"];exports.LITERAL_TYPES=LITERAL_TYPES;const IMMUTABLE_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Immutable"];exports.IMMUTABLE_TYPES=IMMUTABLE_TYPES;const USERWHITESPACABLE_TYPES=_definitions.FLIPPED_ALIAS_KEYS["UserWhitespacable"];
exports.USERWHITESPACABLE_TYPES=USERWHITESPACABLE_TYPES;const METHOD_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Method"];exports.METHOD_TYPES=METHOD_TYPES;const OBJECTMEMBER_TYPES=_definitions.FLIPPED_ALIAS_KEYS["ObjectMember"];exports.OBJECTMEMBER_TYPES=OBJECTMEMBER_TYPES;const PROPERTY_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Property"];exports.PROPERTY_TYPES=PROPERTY_TYPES;const UNARYLIKE_TYPES=_definitions.FLIPPED_ALIAS_KEYS["UnaryLike"];exports.UNARYLIKE_TYPES=UNARYLIKE_TYPES;const PATTERN_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Pattern"];
exports.PATTERN_TYPES=PATTERN_TYPES;const CLASS_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Class"];exports.CLASS_TYPES=CLASS_TYPES;const MODULEDECLARATION_TYPES=_definitions.FLIPPED_ALIAS_KEYS["ModuleDeclaration"];exports.MODULEDECLARATION_TYPES=MODULEDECLARATION_TYPES;const EXPORTDECLARATION_TYPES=_definitions.FLIPPED_ALIAS_KEYS["ExportDeclaration"];exports.EXPORTDECLARATION_TYPES=EXPORTDECLARATION_TYPES;const MODULESPECIFIER_TYPES=_definitions.FLIPPED_ALIAS_KEYS["ModuleSpecifier"];exports.MODULESPECIFIER_TYPES=
MODULESPECIFIER_TYPES;const FLOW_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Flow"];exports.FLOW_TYPES=FLOW_TYPES;const FLOWTYPE_TYPES=_definitions.FLIPPED_ALIAS_KEYS["FlowType"];exports.FLOWTYPE_TYPES=FLOWTYPE_TYPES;const FLOWBASEANNOTATION_TYPES=_definitions.FLIPPED_ALIAS_KEYS["FlowBaseAnnotation"];exports.FLOWBASEANNOTATION_TYPES=FLOWBASEANNOTATION_TYPES;const FLOWDECLARATION_TYPES=_definitions.FLIPPED_ALIAS_KEYS["FlowDeclaration"];exports.FLOWDECLARATION_TYPES=FLOWDECLARATION_TYPES;const FLOWPREDICATE_TYPES=
_definitions.FLIPPED_ALIAS_KEYS["FlowPredicate"];exports.FLOWPREDICATE_TYPES=FLOWPREDICATE_TYPES;const JSX_TYPES=_definitions.FLIPPED_ALIAS_KEYS["JSX"];exports.JSX_TYPES=JSX_TYPES;const PRIVATE_TYPES=_definitions.FLIPPED_ALIAS_KEYS["Private"];exports.PRIVATE_TYPES=PRIVATE_TYPES;const TSTYPEELEMENT_TYPES=_definitions.FLIPPED_ALIAS_KEYS["TSTypeElement"];exports.TSTYPEELEMENT_TYPES=TSTYPEELEMENT_TYPES;const TSTYPE_TYPES=_definitions.FLIPPED_ALIAS_KEYS["TSType"];exports.TSTYPE_TYPES=TSTYPE_TYPES},function(module,
exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=ensureBlock;var _toBlock=_interopRequireDefault(__webpack_require__(195));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ensureBlock(node,key="body"){return node[key]=(0,_toBlock.default)(node[key],node)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=toBlock;var _generated=__webpack_require__(25);
var _generated2=__webpack_require__(30);function toBlock(node,parent){if((0,_generated.isBlockStatement)(node))return node;let blockNodes=[];if((0,_generated.isEmptyStatement)(node))blockNodes=[];else{if(!(0,_generated.isStatement)(node))if((0,_generated.isFunction)(parent))node=(0,_generated2.returnStatement)(node);else node=(0,_generated2.expressionStatement)(node);blockNodes=[node]}return(0,_generated2.blockStatement)(blockNodes)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=toBindingIdentifierName;var _toIdentifier=_interopRequireDefault(__webpack_require__(197));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function toBindingIdentifierName(name){name=(0,_toIdentifier.default)(name);if(name==="eval"||name==="arguments")name="_"+name;return name}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=toIdentifier;var _isValidIdentifier=
_interopRequireDefault(__webpack_require__(144));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function toIdentifier(name){name=name+"";name=name.replace(/[^a-zA-Z0-9$_]/g,"-");name=name.replace(/^[-0-9]+/,"");name=name.replace(/[-\s]+(.)?/g,function(match,c){return c?c.toUpperCase():""});if(!(0,_isValidIdentifier.default)(name))name=`_${name}`;return name||"_"}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});
exports.default=toComputedKey;var _generated=__webpack_require__(25);var _generated2=__webpack_require__(30);function toComputedKey(node,key=node.key||node.property){if(!node.computed&&(0,_generated.isIdentifier)(key))key=(0,_generated2.stringLiteral)(key.name);return key}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=toExpression;var _generated=__webpack_require__(25);function toExpression(node){if((0,_generated.isExpressionStatement)(node))node=
node.expression;if((0,_generated.isExpression)(node))return node;if((0,_generated.isClass)(node))node.type="ClassExpression";else if((0,_generated.isFunction)(node))node.type="FunctionExpression";if(!(0,_generated.isExpression)(node))throw new Error(`cannot turn ${node.type} to an expression`);return node}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=toKeyAlias;var _generated=__webpack_require__(25);var _cloneNode=_interopRequireDefault(__webpack_require__(166));
var _removePropertiesDeep=_interopRequireDefault(__webpack_require__(201));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function toKeyAlias(node,key=node.key){let alias;if(node.kind==="method")return toKeyAlias.increment()+"";else if((0,_generated.isIdentifier)(key))alias=key.name;else if((0,_generated.isStringLiteral)(key))alias=JSON.stringify(key.value);else alias=JSON.stringify((0,_removePropertiesDeep.default)((0,_cloneNode.default)(key)));if(node.computed)alias=
`[${alias}]`;if(node.static)alias=`static:${alias}`;return alias}toKeyAlias.uid=0;toKeyAlias.increment=function(){if(toKeyAlias.uid>=Number.MAX_SAFE_INTEGER)return toKeyAlias.uid=0;else return toKeyAlias.uid++}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=removePropertiesDeep;var _traverseFast=_interopRequireDefault(__webpack_require__(202));var _removeProperties=_interopRequireDefault(__webpack_require__(203));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function removePropertiesDeep(tree,opts){(0,_traverseFast.default)(tree,_removeProperties.default,opts);return tree}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=traverseFast;var _definitions=__webpack_require__(141);function traverseFast(node,enter,opts){if(!node)return;const keys=_definitions.VISITOR_KEYS[node.type];if(!keys)return;opts=opts||{};enter(node,opts);for(const key of keys){const subNode=
node[key];if(Array.isArray(subNode))for(const node of subNode)traverseFast(node,enter,opts);else traverseFast(subNode,enter,opts)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=removeProperties;var _constants=__webpack_require__(149);const CLEAR_KEYS=["tokens","start","end","loc","raw","rawValue"];const CLEAR_KEYS_PLUS_COMMENTS=_constants.COMMENT_KEYS.concat(["comments"]).concat(CLEAR_KEYS);function removeProperties(node,opts=
{}){const map=opts.preserveComments?CLEAR_KEYS:CLEAR_KEYS_PLUS_COMMENTS;for(const key of map)if(node[key]!=null)node[key]=undefined;for(const key in node)if(key[0]==="_"&&node[key]!=null)node[key]=undefined;const symbols=Object.getOwnPropertySymbols(node);for(const sym of symbols)node[sym]=null}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=toSequenceExpression;var _gatherSequenceExpressions=_interopRequireDefault(__webpack_require__(205));
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function toSequenceExpression(nodes,scope){if(!nodes||!nodes.length)return;const declars=[];const result=(0,_gatherSequenceExpressions.default)(nodes,scope,declars);if(!result)return;for(const declar of declars)scope.push(declar);return result}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=gatherSequenceExpressions;var _getBindingIdentifiers=_interopRequireDefault(__webpack_require__(206));
var _generated=__webpack_require__(25);var _generated2=__webpack_require__(30);var _cloneNode=_interopRequireDefault(__webpack_require__(166));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function gatherSequenceExpressions(nodes,scope,declars){const exprs=[];let ensureLastUndefined=true;for(const node of nodes){ensureLastUndefined=false;if((0,_generated.isExpression)(node))exprs.push(node);else if((0,_generated.isExpressionStatement)(node))exprs.push(node.expression);
else if((0,_generated.isVariableDeclaration)(node)){if(node.kind!=="var")return;for(const declar of node.declarations){const bindings=(0,_getBindingIdentifiers.default)(declar);for(const key in bindings)declars.push({kind:node.kind,id:(0,_cloneNode.default)(bindings[key])});if(declar.init)exprs.push((0,_generated2.assignmentExpression)("=",declar.id,declar.init))}ensureLastUndefined=true}else if((0,_generated.isIfStatement)(node)){const consequent=node.consequent?gatherSequenceExpressions([node.consequent],
scope,declars):scope.buildUndefinedNode();const alternate=node.alternate?gatherSequenceExpressions([node.alternate],scope,declars):scope.buildUndefinedNode();if(!consequent||!alternate)return;exprs.push((0,_generated2.conditionalExpression)(node.test,consequent,alternate))}else if((0,_generated.isBlockStatement)(node)){const body=gatherSequenceExpressions(node.body,scope,declars);if(!body)return;exprs.push(body)}else if((0,_generated.isEmptyStatement)(node))ensureLastUndefined=true;else return}if(ensureLastUndefined)exprs.push(scope.buildUndefinedNode());
if(exprs.length===1)return exprs[0];else return(0,_generated2.sequenceExpression)(exprs)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=getBindingIdentifiers;var _generated=__webpack_require__(25);function getBindingIdentifiers(node,duplicates,outerOnly){let search=[].concat(node);const ids=Object.create(null);while(search.length){const id=search.shift();if(!id)continue;const keys=getBindingIdentifiers.keys[id.type];if((0,_generated.isIdentifier)(id)){if(duplicates){const _ids=
ids[id.name]=ids[id.name]||[];_ids.push(id)}else ids[id.name]=id;continue}if((0,_generated.isExportDeclaration)(id)){if((0,_generated.isDeclaration)(id.declaration))search.push(id.declaration);continue}if(outerOnly){if((0,_generated.isFunctionDeclaration)(id)){search.push(id.id);continue}if((0,_generated.isFunctionExpression)(id))continue}if(keys)for(let i=0;i<keys.length;i++){const key=keys[i];if(id[key])search=search.concat(id[key])}}return ids}getBindingIdentifiers.keys={DeclareClass:["id"],DeclareFunction:["id"],
DeclareModule:["id"],DeclareVariable:["id"],DeclareInterface:["id"],DeclareTypeAlias:["id"],DeclareOpaqueType:["id"],InterfaceDeclaration:["id"],TypeAlias:["id"],OpaqueType:["id"],CatchClause:["param"],LabeledStatement:["label"],UnaryExpression:["argument"],AssignmentExpression:["left"],ImportSpecifier:["local"],ImportNamespaceSpecifier:["local"],ImportDefaultSpecifier:["local"],ImportDeclaration:["specifiers"],ExportSpecifier:["exported"],ExportNamespaceSpecifier:["exported"],ExportDefaultSpecifier:["exported"],
FunctionDeclaration:["id","params"],FunctionExpression:["id","params"],ArrowFunctionExpression:["params"],ObjectMethod:["params"],ClassMethod:["params"],ForInStatement:["left"],ForOfStatement:["left"],ClassDeclaration:["id"],ClassExpression:["id"],RestElement:["argument"],UpdateExpression:["argument"],ObjectProperty:["value"],AssignmentPattern:["left"],ArrayPattern:["elements"],ObjectPattern:["properties"],VariableDeclaration:["declarations"],VariableDeclarator:["id"]}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=toStatement;var _generated=__webpack_require__(25);var _generated2=__webpack_require__(30);function toStatement(node,ignore){if((0,_generated.isStatement)(node))return node;let mustHaveId=false;let newType;if((0,_generated.isClass)(node)){mustHaveId=true;newType="ClassDeclaration"}else if((0,_generated.isFunction)(node)){mustHaveId=true;newType="FunctionDeclaration"}else if((0,_generated.isAssignmentExpression)(node))return(0,_generated2.expressionStatement)(node);
if(mustHaveId&&!node.id)newType=false;if(!newType)if(ignore)return false;else throw new Error(`cannot turn ${node.type} to a statement`);node.type=newType;return node}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=valueToNode;function _isPlainObject(){const data=_interopRequireDefault(__webpack_require__(209));_isPlainObject=function(){return data};return data}function _isRegExp(){const data=_interopRequireDefault(__webpack_require__(210));
_isRegExp=function(){return data};return data}var _isValidIdentifier=_interopRequireDefault(__webpack_require__(144));var _generated=__webpack_require__(30);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function valueToNode(value){if(value===undefined)return(0,_generated.identifier)("undefined");if(value===true||value===false)return(0,_generated.booleanLiteral)(value);if(value===null)return(0,_generated.nullLiteral)();if(typeof value==="string")return(0,_generated.stringLiteral)(value);
if(typeof value==="number"){let result;if(Number.isFinite(value))result=(0,_generated.numericLiteral)(Math.abs(value));else{let numerator;if(Number.isNaN(value))numerator=(0,_generated.numericLiteral)(0);else numerator=(0,_generated.numericLiteral)(1);result=(0,_generated.binaryExpression)("/",numerator,(0,_generated.numericLiteral)(0))}if(value<0||Object.is(value,-0))result=(0,_generated.unaryExpression)("-",result);return result}if((0,_isRegExp().default)(value)){const pattern=value.source;const flags=
value.toString().match(/\/([a-z]+|)$/)[1];return(0,_generated.regExpLiteral)(pattern,flags)}if(Array.isArray(value))return(0,_generated.arrayExpression)(value.map(valueToNode));if((0,_isPlainObject().default)(value)){const props=[];for(const key in value){let nodeKey;if((0,_isValidIdentifier.default)(key))nodeKey=(0,_generated.identifier)(key);else nodeKey=(0,_generated.stringLiteral)(key);props.push((0,_generated.objectProperty)(nodeKey,valueToNode(value[key])))}return(0,_generated.objectExpression)(props)}throw new Error("don't know how to turn this value into a node");
}},function(module,exports,__webpack_require__){var baseGetTag=__webpack_require__(52),getPrototype=__webpack_require__(118),isObjectLike=__webpack_require__(89);var objectTag="[object Object]";var funcProto=Function.prototype,objectProto=Object.prototype;var funcToString=funcProto.toString;var hasOwnProperty=objectProto.hasOwnProperty;var objectCtorString=funcToString.call(Object);function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!=objectTag)return false;var proto=getPrototype(value);
if(proto===null)return true;var Ctor=hasOwnProperty.call(proto,"constructor")&&proto.constructor;return typeof Ctor=="function"&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString}module.exports=isPlainObject},function(module,exports,__webpack_require__){var baseIsRegExp=__webpack_require__(211),baseUnary=__webpack_require__(98),nodeUtil=__webpack_require__(99);var nodeIsRegExp=nodeUtil&&nodeUtil.isRegExp;var isRegExp=nodeIsRegExp?baseUnary(nodeIsRegExp):baseIsRegExp;module.exports=isRegExp},
function(module,exports,__webpack_require__){var baseGetTag=__webpack_require__(52),isObjectLike=__webpack_require__(89);var regexpTag="[object RegExp]";function baseIsRegExp(value){return isObjectLike(value)&&baseGetTag(value)==regexpTag}module.exports=baseIsRegExp},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=appendToMemberExpression;var _generated=__webpack_require__(30);function appendToMemberExpression(member,append,computed=
false){member.object=(0,_generated.memberExpression)(member.object,member.property,member.computed);member.property=append;member.computed=!!computed;return member}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=inherits;var _constants=__webpack_require__(149);var _inheritsComments=_interopRequireDefault(__webpack_require__(190));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function inherits(child,
parent){if(!child||!parent)return child;for(const key of _constants.INHERIT_KEYS.optional)if(child[key]==null)child[key]=parent[key];for(const key in parent)if(key[0]==="_"&&key!=="__clone")child[key]=parent[key];for(const key of _constants.INHERIT_KEYS.force)child[key]=parent[key];(0,_inheritsComments.default)(child,parent);return child}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=prependToMemberExpression;var _generated=
__webpack_require__(30);function prependToMemberExpression(member,prepend){member.object=(0,_generated.memberExpression)(prepend,member.object);return member}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=getOuterBindingIdentifiers;var _getBindingIdentifiers=_interopRequireDefault(__webpack_require__(206));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function getOuterBindingIdentifiers(node,
duplicates){return(0,_getBindingIdentifiers.default)(node,duplicates,true)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=traverse;var _definitions=__webpack_require__(141);function traverse(node,handlers,state){if(typeof handlers==="function")handlers={enter:handlers};const {enter,exit}=handlers;traverseSimpleImpl(node,enter,exit,state,[])}function traverseSimpleImpl(node,enter,exit,state,ancestors){const keys=_definitions.VISITOR_KEYS[node.type];
if(!keys)return;if(enter)enter(node,ancestors,state);for(const key of keys){const subNode=node[key];if(Array.isArray(subNode))for(let i=0;i<subNode.length;i++){const child=subNode[i];if(!child)continue;ancestors.push({node,key,index:i});traverseSimpleImpl(child,enter,exit,state,ancestors);ancestors.pop()}else if(subNode){ancestors.push({node,key});traverseSimpleImpl(subNode,enter,exit,state,ancestors);ancestors.pop()}}if(exit)exit(node,ancestors,state)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=isBinding;var _getBindingIdentifiers=_interopRequireDefault(__webpack_require__(206));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function isBinding(node,parent){const keys=_getBindingIdentifiers.default.keys[parent.type];if(keys)for(let i=0;i<keys.length;i++){const key=keys[i];const val=parent[key];if(Array.isArray(val)){if(val.indexOf(node)>=0)return true}else if(val===node)return true}return false}},function(module,
exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isBlockScoped;var _generated=__webpack_require__(25);var _isLet=_interopRequireDefault(__webpack_require__(219));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function isBlockScoped(node){return(0,_generated.isFunctionDeclaration)(node)||(0,_generated.isClassDeclaration)(node)||(0,_isLet.default)(node)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=isLet;var _generated=__webpack_require__(25);var _constants=__webpack_require__(149);function isLet(node){return(0,_generated.isVariableDeclaration)(node)&&(node.kind!=="var"||node[_constants.BLOCK_SCOPED_SYMBOL])}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isImmutable;var _isType=_interopRequireDefault(__webpack_require__(152));var _generated=__webpack_require__(25);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function isImmutable(node){if((0,_isType.default)(node.type,"Immutable"))return true;if((0,_generated.isIdentifier)(node))if(node.name==="undefined")return true;else return false;return false}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isNodesEquivalent;var _definitions=__webpack_require__(141);function isNodesEquivalent(a,b){if(typeof a!=="object"||typeof b!=="object"||a==null||b==null)return a===
b;if(a.type!==b.type)return false;const fields=Object.keys(_definitions.NODE_FIELDS[a.type]||a.type);const visitorKeys=_definitions.VISITOR_KEYS[a.type];for(const field of fields){if(typeof a[field]!==typeof b[field])return false;if(Array.isArray(a[field])){if(!Array.isArray(b[field]))return false;if(a[field].length!==b[field].length)return false;for(let i=0;i<a[field].length;i++)if(!isNodesEquivalent(a[field][i],b[field][i]))return false;continue}if(typeof a[field]==="object"&&(!visitorKeys||!visitorKeys.includes(field))){for(const key in a[field])if(a[field][key]!==
b[field][key])return false;continue}if(!isNodesEquivalent(a[field],b[field]))return false}return true}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isReferenced;function isReferenced(node,parent){switch(parent.type){case "MemberExpression":case "JSXMemberExpression":case "OptionalMemberExpression":if(parent.property===node)return!!parent.computed;return parent.object===node;case "VariableDeclarator":return parent.init===node;
case "ArrowFunctionExpression":return parent.body===node;case "ExportSpecifier":if(parent.source)return false;return parent.local===node;case "ObjectProperty":case "ClassProperty":case "ClassPrivateProperty":case "ClassMethod":case "ClassPrivateMethod":case "ObjectMethod":if(parent.key===node)return!!parent.computed;return parent.value===node;case "ClassDeclaration":case "ClassExpression":return parent.superClass===node;case "AssignmentExpression":return parent.right===node;case "AssignmentPattern":return parent.right===
node;case "LabeledStatement":return false;case "CatchClause":return false;case "RestElement":return false;case "BreakStatement":case "ContinueStatement":return false;case "FunctionDeclaration":case "FunctionExpression":return false;case "ExportNamespaceSpecifier":case "ExportDefaultSpecifier":return false;case "ImportDefaultSpecifier":case "ImportNamespaceSpecifier":case "ImportSpecifier":return false;case "JSXAttribute":return false;case "ObjectPattern":case "ArrayPattern":return false;case "MetaProperty":return false;
case "ObjectTypeProperty":return parent.key!==node}return true}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isScope;var _generated=__webpack_require__(25);function isScope(node,parent){if((0,_generated.isBlockStatement)(node)&&(0,_generated.isFunction)(parent,{body:node}))return false;if((0,_generated.isBlockStatement)(node)&&(0,_generated.isCatchClause)(parent,{body:node}))return false;return(0,_generated.isScopable)(node)}
},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isSpecifierDefault;var _generated=__webpack_require__(25);function isSpecifierDefault(specifier){return(0,_generated.isImportDefaultSpecifier)(specifier)||(0,_generated.isIdentifier)(specifier.imported||specifier.exported,{name:"default"})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isValidES3Identifier;
var _isValidIdentifier=_interopRequireDefault(__webpack_require__(144));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const RESERVED_WORDS_ES3_ONLY=new Set(["abstract","boolean","byte","char","double","enum","final","float","goto","implements","int","interface","long","native","package","private","protected","public","short","static","synchronized","throws","transient","volatile"]);function isValidES3Identifier(name){return(0,_isValidIdentifier.default)(name)&&
!RESERVED_WORDS_ES3_ONLY.has(name)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isVar;var _generated=__webpack_require__(25);var _constants=__webpack_require__(149);function isVar(node){return(0,_generated.isVariableDeclaration)(node,{kind:"var"})&&!node[_constants.BLOCK_SCOPED_SYMBOL]}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _invariant=
_interopRequireDefault(__webpack_require__(9));var _completions=__webpack_require__(18);var _index=__webpack_require__(10);var _construct=__webpack_require__(228);var _traverseFast=_interopRequireDefault(__webpack_require__(279));var _parser=__webpack_require__(247);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,code,filename,sourceType="script",startLine=1){try{let plugins=["objectRestSpread"];if(realm.react.enabled)plugins.push("jsx");if(realm.stripFlow)plugins.push("flow");
let ast=(0,_parser.parse)(code,{filename,sourceType,startLine,plugins});(0,_traverseFast.default)(ast,(node)=>{(0,_invariant.default)(node.loc);node.loc.source=filename;return false});return ast}catch(e){if(e instanceof SyntaxError){let referenceErrors=["Invalid left-hand side in postfix operation","Invalid left-hand side in prefix operation","Invalid left-hand side in assignment expression"];let error;if(referenceErrors.some((msg)=>e.message.indexOf(msg)>=0))error=(0,_construct.Construct)(realm,
realm.intrinsics.ReferenceError,[new _index.StringValue(realm,e.message)]);else error=(0,_construct.Construct)(realm,realm.intrinsics.SyntaxError,[new _index.StringValue(realm,e.message)]);error=error.throwIfNotConcreteObject();(0,_invariant.default)(error.$ErrorData);error.$ErrorData.locationData={filename:filename,sourceCode:code,loc:e.loc,stackDecorated:false};throw new _completions.ThrowCompletion(error,e.loc);}else throw e;}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.MakeConstructor=MakeConstructor;exports.Construct=Construct;exports.SpeciesConstructor=SpeciesConstructor;exports.MakeClassConstructor=MakeClassConstructor;exports.ConstructorMethod=ConstructorMethod;exports.NonConstructorMethodDefinitions=NonConstructorMethodDefinitions;var _index=__webpack_require__(10);var _is=__webpack_require__(229);var _get=__webpack_require__(230);var _has=__webpack_require__(269);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));
var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function MakeConstructor(realm,F,_writablePrototype,_prototype){let writablePrototype=_writablePrototype;let prototype=_prototype;(0,_invariant.default)(F instanceof _index.ECMAScriptSourceFunctionValue,"expected function value");(0,_invariant.default)(F.$Construct!==undefined,"expected construct internal method");(0,_invariant.default)(F.getExtensible(),"expected extensible object that doesn't have prototype own property");
if(writablePrototype===null||writablePrototype===undefined)writablePrototype=true;if(!prototype){prototype=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);prototype.originalConstructor=F;_singletons.Properties.DefinePropertyOrThrow(realm,prototype,"constructor",new _descriptors.PropertyDescriptor({value:F,writable:writablePrototype,enumerable:false,configurable:true}))}_singletons.Properties.DefinePropertyOrThrow(realm,F,"prototype",new _descriptors.PropertyDescriptor({value:prototype,
writable:writablePrototype,enumerable:false,configurable:false}));return realm.intrinsics.undefined}function Construct(realm,F,_argumentsList,_newTarget){let argumentsList=_argumentsList;let newTarget=_newTarget;if(!newTarget)newTarget=F;if(!argumentsList)argumentsList=[];(0,_invariant.default)((0,_is.IsConstructor)(realm,F),"expected constructor");(0,_invariant.default)((0,_is.IsConstructor)(realm,newTarget),"expected constructor");(0,_invariant.default)(F.$Construct!==undefined,"no construct method on realm value");
return F.$Construct(argumentsList,newTarget)}function SpeciesConstructor(realm,O,defaultConstructor){(0,_invariant.default)(O instanceof _index.ObjectValue,"Type(O) is Object");let C=(0,_get.Get)(realm,O,"constructor");if(C instanceof _index.UndefinedValue)return defaultConstructor;if(C.mightNotBeObject()){if(C.mightBeObject())C.throwIfNotConcrete();throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(C) is not an object");}(0,_invariant.default)(C instanceof _index.ObjectValue||
C instanceof _index.AbstractObjectValue);let S=(0,_get.Get)(realm,C,realm.intrinsics.SymbolSpecies);if((0,_has.HasSomeCompatibleType)(S,_index.UndefinedValue,_index.NullValue))return defaultConstructor;if((0,_is.IsConstructor)(realm,S)){(0,_invariant.default)(S instanceof _index.ObjectValue);return S}throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Throw a TypeError exception");}function MakeClassConstructor(realm,F){(0,_invariant.default)(F instanceof _index.ECMAScriptSourceFunctionValue,
"expected function value");(0,_invariant.default)(F.$FunctionKind==="normal");F.$FunctionKind="classConstructor";return realm.intrinsics.undefined}function ConstructorMethod(realm,ClassElementList){let ClassElement;if(ClassElementList.length===1){ClassElement=ClassElementList[0];if((0,_is.IsStatic)(ClassElement))return realm.intrinsics.empty;if(ClassElement.key.name!=="constructor")return realm.intrinsics.empty;return ClassElement}else{let head=ConstructorMethod(realm,ClassElementList.slice(0,-1));
if(!(head instanceof _index.EmptyValue))return head;ClassElement=ClassElementList[ClassElementList.length-1];if((0,_is.IsStatic)(ClassElement))return realm.intrinsics.empty;if(ClassElement.key.name!=="constructor")return realm.intrinsics.empty;return ClassElement}}function NonConstructorMethodDefinitions(realm,ClassElementList){let ClassElement;if(ClassElementList.length===1){ClassElement=ClassElementList[0];if(!(0,_is.IsStatic)(ClassElement)&&ClassElement.key.name==="constructor")return[];return[ClassElement]}else{ClassElement=
ClassElementList[ClassElementList.length-1];let list=NonConstructorMethodDefinitions(realm,ClassElementList.slice(0,-1));if(!(0,_is.IsStatic)(ClassElement)&&ClassElement.key.name==="constructor")return list;list.push(ClassElement);return list}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.IsConcatSpreadable=IsConcatSpreadable;exports.IsGenericDescriptor=IsGenericDescriptor;exports.IsAccessorDescriptor=IsAccessorDescriptor;exports.IsDataDescriptor=
IsDataDescriptor;exports.OrdinaryIsExtensible=OrdinaryIsExtensible;exports.IsExtensible=IsExtensible;exports.IsCallable=IsCallable;exports.IsConstructor=IsConstructor;exports.IsInteger=IsInteger;exports.IsPropertyKey=IsPropertyKey;exports.IsArray=IsArray;exports.IsInTailPosition=IsInTailPosition;exports.IsRegExp=IsRegExp;exports.IsIdentifierRef=IsIdentifierRef;exports.IsFunctionDefinition=IsFunctionDefinition;exports.IsAnonymousFunctionDefinition=IsAnonymousFunctionDefinition;exports.IsArrayIndex=
IsArrayIndex;exports.IsPromise=IsPromise;exports.IsDetachedBuffer=IsDetachedBuffer;exports.IsIntrospectionError=IsIntrospectionError;exports.IsStatic=IsStatic;var _errors=__webpack_require__(3);var _get=__webpack_require__(230);var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _has=__webpack_require__(269);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?
obj:{default:obj}}function IsConcatSpreadable(realm,_O){let O=_O;if(!O.mightBeObject())return false;O=O.throwIfNotObject();let spreadable=(0,_get.Get)(realm,O,realm.intrinsics.SymbolIsConcatSpreadable);if(!spreadable.mightBeUndefined())return _singletons.To.ToBooleanPartial(realm,spreadable);spreadable.throwIfNotConcrete();return IsArray(realm,O)}function IsGenericDescriptorInternal(realm,Desc){if(!Desc)return false;if(!IsAccessorDescriptor(realm,Desc)&&!IsDataDescriptor(realm,Desc))return true;return false}
function IsAccessorDescriptorInternal(realm,Desc){if(!Desc)return false;Desc=Desc.throwIfNotConcrete(realm);if(Desc.get===undefined&&Desc.set===undefined)return false;return true}function IsDataDescriptorInternal(realm,Desc){if(!Desc)return false;Desc=Desc.throwIfNotConcrete(realm);if(Desc.value===undefined&&Desc.writable===undefined)return false;return true}function IsGenericDescriptor(realm,Desc){return IsGenericDescriptorInternal(realm,Desc)&&Desc instanceof _descriptors.PropertyDescriptor}function IsAccessorDescriptor(realm,
Desc){return IsAccessorDescriptorInternal(realm,Desc)&&Desc instanceof _descriptors.PropertyDescriptor}function IsDataDescriptor(realm,Desc){return IsDataDescriptorInternal(realm,Desc)&&Desc instanceof _descriptors.PropertyDescriptor}function OrdinaryIsExtensible(realm,O){return O.getExtensible()}function IsExtensible(realm,O){return O.$IsExtensible()}function IsCallable(realm,_func){let func=_func;if(!func.mightBeObject())return false;if((0,_has.HasCompatibleType)(func,_index.FunctionValue))return true;
if(func.isSimpleObject())return false;if(func instanceof _index.AbstractObjectValue&&!func.values.isTop()){let result;for(let element of func.values.getElements()){let isCallable=IsCallable(realm,element);if(result===undefined)result=isCallable;else if(result!==isCallable)func.throwIfNotConcreteObject()}if(result!==undefined)return result}func=func.throwIfNotConcreteObject();if(func.$Call)return true;return false}function IsConstructor(realm,_argument){let argument=_argument;if(!argument.mightBeObject())return false;
argument=argument.throwIfNotConcreteObject();if(argument.$Construct)return true;return false}function IsInteger(realm,argument){(0,_invariant.default)(typeof argument==="number","Type(argument) is not number");if(isNaN(argument)||argument===+Infinity||argument===-Infinity)return false;if(Math.floor(Math.abs(argument))!==Math.abs(argument))return false;return true}function IsPropertyKey(realm,arg){if(typeof arg==="string")return true;if(arg instanceof _index.StringValue)return true;if(arg instanceof
_index.SymbolValue)return true;if(arg instanceof _index.AbstractValue){_index.AbstractValue.reportIntrospectionError(arg);throw new _errors.FatalError;}return false}function IsArray(realm,argument){if(!argument.mightBeObject())return false;if(argument instanceof _index.ArrayValue||argument===realm.intrinsics.ArrayPrototype)return true;if(argument instanceof _index.ProxyValue){if(!argument.$ProxyHandler||argument.$ProxyHandler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
let target=argument.$ProxyTarget;return IsArray(realm,target)}if(argument instanceof _index.AbstractValue&&!argument.isSimpleObject())argument.throwIfNotConcrete();return false}function IsInTailPosition(realm,node){return false}function IsRegExp(realm,_argument){let argument=_argument;if(!argument.mightBeObject())return false;argument=argument.throwIfNotObject();let isRegExp=(0,_get.Get)(realm,argument,realm.intrinsics.SymbolMatch);if(isRegExp!==undefined)return _singletons.To.ToBooleanPartial(realm,
isRegExp)===true;if(argument.$RegExpMatcher!==undefined)return true;return false}function IsIdentifierRef(realm,node){switch(node.type){case "Identifier":return true;case "MemberExpression":return false;default:throw Error("Unexpected AST form : "+node.type);}}function IsFunctionDefinition(realm,node){switch(node.type){case "ThisExpression":case "Identifier":case "StringLiteral":case "NumericLiteral":case "BooleanLiteral":case "NullLiteral":case "RegExpLiteral":case "ArrayExpression":case "ObjectExpression":case "TemplateLiteral":case "ConditionalExpression":return false;
case "UpdateExpression":return false;case "BinaryExpression":case "LogicalExpression":return false;case "MemberExpression":case "CallExpression":case "NewExpression":case "MetaProperty":case "TaggedTemplateExpression":return false;case "UnaryExpression":return false;case "AssignmentExpression":return false;case "SequenceExpression":return false;case "ArrowFunctionExpression":case "FunctionExpression":return true;case "ClassExpression":return true;case "JSXElement":return false;default:throw Error("Unexpected AST form : "+
node.type);}}function IsAnonymousFunctionDefinition(realm,node){if(!IsFunctionDefinition(realm,node))return false;let hasName=(0,_has.HasName)(realm,node);if(hasName===true)return false;return true}function IsArrayIndex(realm,P){let key;if(typeof P==="string")key=P;else if(P instanceof _index.StringValue)key=P.value;else return false;let i=_singletons.To.ToUint32(realm,new _index.StringValue(realm,key));return i!==Math.pow(2,32)-1&&_singletons.To.ToString(realm,new _index.NumberValue(realm,i))===
key}function IsPromise(realm,_x){let x=_x;if(!x.mightBeObject())return false;x=x.throwIfNotConcreteObject();if(x.$PromiseState===undefined)return false;return true}function IsDetachedBuffer(realm,arrayBuffer){(0,_invariant.default)(arrayBuffer instanceof _index.ObjectValue&&"$ArrayBufferData"in arrayBuffer);if(arrayBuffer.$ArrayBufferData===null)return true;return false}function IsIntrospectionError(realm,_value){let value=_value;if(!value.mightBeObject())return false;value=value.throwIfNotConcreteObject();
return value.$GetPrototypeOf()===realm.intrinsics.__IntrospectionErrorPrototype}function IsStatic(classElement){return classElement.static}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.GetFunctionRealm=GetFunctionRealm;exports.OrdinaryGet=OrdinaryGet;exports.OrdinaryGetPartial=OrdinaryGetPartial;exports.GetGlobalObject=GetGlobalObject;exports.GetSubstitution=GetSubstitution;exports.GetMethod=GetMethod;exports.GetPrototypeFromConstructor=
GetPrototypeFromConstructor;exports.Get=Get;exports.GetV=GetV;exports.GetThisValue=GetThisValue;exports.GetNewTarget=GetNewTarget;exports.GetTemplateObject=GetTemplateObject;exports.GetFromArrayWithWidenedNumericProperty=GetFromArrayWithWidenedNumericProperty;var _errors=__webpack_require__(3);var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _environment=__webpack_require__(20);var _integrity=__webpack_require__(231);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);
var _invariant=_interopRequireDefault(__webpack_require__(9));var _generator=__webpack_require__(237);var _descriptors=__webpack_require__(268);var _is=__webpack_require__(229);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function GetFunctionRealm(realm,obj){(0,_invariant.default)((0,_index2.IsCallable)(realm,obj),"expected callable object");if(obj instanceof _index.ProxyValue){if(obj.$ProxyHandler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"proxy handler is null");(0,_invariant.default)(obj.$ProxyTarget instanceof _index.ObjectValue);let proxyTarget=obj.$ProxyTarget;return GetFunctionRealm(realm,proxyTarget)}if(obj.$Realm)return obj.$Realm;if(obj instanceof _index.BoundFunctionValue){let target=obj.$BoundTargetFunction;return GetFunctionRealm(realm,target)}return realm}function OrdinaryGet(realm,O,P,Receiver,dataOnly){let prop=O.unknownProperty;if(prop!==undefined&&prop.descriptor!==undefined&&O.$GetOwnProperty(P)===undefined){let desc=
prop.descriptor;(0,_invariant.default)(desc instanceof _descriptors.PropertyDescriptor,"unknown properties are only created with Set and have equal descriptors");let val=desc.value;(0,_invariant.default)(val instanceof _index.AbstractValue);let propValue;if(P instanceof _index.StringValue)propValue=P;else if(typeof P==="string")propValue=new _index.StringValue(realm,P);if(val.kind==="widened numeric property"){(0,_invariant.default)(O instanceof _index.ArrayValue&&_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O));
let propName;if(P instanceof _index.StringValue)propName=P.value;else propName=P;(0,_invariant.default)(Receiver instanceof _index.ObjectValue||Receiver instanceof _index.AbstractObjectValue);if((0,_is.IsArrayIndex)(realm,P)){(0,_invariant.default)(val.args.length===1);let aliasSet=val.args[0];(0,_invariant.default)(aliasSet instanceof _index.AbstractValue&&aliasSet.kind==="mayAliasSet");for(let object of aliasSet.args){(0,_invariant.default)(object instanceof _index.ObjectValue);(0,_invariant.default)(realm.createdObjectsTrackedForLeaks!==
undefined);(0,_invariant.default)(realm.createdObjectsTrackedForLeaks.has(object));_singletons.Leak.value(realm,object)}}return GetFromArrayWithWidenedNumericProperty(realm,Receiver,propName)}else if(!propValue){_index.AbstractValue.reportIntrospectionError(val,"abstract computed property name");throw new _errors.FatalError;}return specializeJoin(realm,val,propValue)}(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,P),"expected property key");let desc=O.$GetOwnProperty(P);if(desc===undefined||
!(desc instanceof _descriptors.AbstractJoinedDescriptor))return OrdinaryGetHelper();let joinCondition=desc.joinCondition;let descriptor1=desc.descriptor1;let descriptor2=desc.descriptor2;joinCondition=realm.simplifyAndRefineAbstractCondition(joinCondition);if(!joinCondition.mightNotBeTrue()){desc=descriptor1;return OrdinaryGetHelper()}if(!joinCondition.mightNotBeFalse()){desc=desc.descriptor2;return OrdinaryGetHelper()}(0,_invariant.default)(joinCondition instanceof _index.AbstractValue);let result1,
generator1,modifiedBindings1,modifiedProperties1,createdObjects1;try{desc=descriptor1;({result:result1,generator:generator1,modifiedBindings:modifiedBindings1,modifiedProperties:modifiedProperties1,createdObjects:createdObjects1}=_singletons.Path.withCondition(joinCondition,()=>{return desc!==undefined?realm.evaluateForEffects(()=>OrdinaryGetHelper(),undefined,"OrdinaryGet/1"):(0,_realm.construct_empty_effects)(realm)}))}catch(e){if(e instanceof _errors.InfeasiblePathError){desc=descriptor2;return OrdinaryGetHelper()}else throw e;
}let result2,generator2,modifiedBindings2,modifiedProperties2,createdObjects2;try{desc=descriptor2;({result:result2,generator:generator2,modifiedBindings:modifiedBindings2,modifiedProperties:modifiedProperties2,createdObjects:createdObjects2}=_singletons.Path.withInverseCondition(joinCondition,()=>{return desc!==undefined?realm.evaluateForEffects(()=>OrdinaryGetHelper(),undefined,"OrdinaryGet/2"):(0,_realm.construct_empty_effects)(realm)}))}catch(e){if(e instanceof _errors.InfeasiblePathError){desc=
descriptor1;return OrdinaryGetHelper()}else throw e;}let joinedEffects=_singletons.Join.joinEffects(joinCondition,new _realm.Effects(result1,generator1,modifiedBindings1,modifiedProperties1,createdObjects1),new _realm.Effects(result2,generator2,modifiedBindings2,modifiedProperties2,createdObjects2));realm.applyEffects(joinedEffects);return realm.returnOrThrowCompletion(joinedEffects.result);function OrdinaryGetHelper(){let descValue=!desc?realm.intrinsics.undefined:desc.value===undefined?realm.intrinsics.undefined:
desc.value;(0,_invariant.default)(descValue instanceof _index.Value);if(!desc||descValue.mightHaveBeenDeleted()){let parent=O.$GetPrototypeOf();if(parent instanceof _index.NullValue)return descValue;if(descValue.mightHaveBeenDeleted()&&descValue instanceof _index.AbstractValue){let parentVal=OrdinaryGet(realm,parent.throwIfNotConcreteObject(),P,descValue,true);if(parentVal instanceof _index.UndefinedValue)return descValue;let cond=_index.AbstractValue.createFromBinaryOp(realm,"!==",descValue,realm.intrinsics.empty);
return _index.AbstractValue.createFromConditionalOp(realm,cond,descValue,parentVal)}(0,_invariant.default)(!desc||descValue instanceof _index.EmptyValue);return parent.$Get(P,Receiver)}if((0,_index2.IsDataDescriptor)(realm,desc))return descValue;if(dataOnly){(0,_invariant.default)(descValue instanceof _index.AbstractValue);_index.AbstractValue.reportIntrospectionError(descValue);throw new _errors.FatalError;}(0,_invariant.default)((0,_index2.IsAccessorDescriptor)(realm,desc),"expected accessor descriptor");
let getter=desc.get;if(!getter||getter instanceof _index.UndefinedValue)return realm.intrinsics.undefined;return(0,_index2.Call)(realm,getter,Receiver)}}function isWidenedValue(v){if(!(v instanceof _index.AbstractValue))return false;if(v.kind==="widened"||v.kind==="widened property")return true;for(let a of v.args)if(isWidenedValue(a))return true;return false}const lengthTemplateSrc="(A).length";function specializeJoin(realm,absVal,propName){if(absVal.kind==="widened property"){let ob=absVal.args[0];
if(propName instanceof _index.StringValue){let pName=propName.value;let pNumber=+pName;if(pName===pNumber+"")propName=new _index.NumberValue(realm,pNumber)}return _index.AbstractValue.createTemporalFromBuildFunction(realm,absVal.getType(),[ob,propName],(0,_generator.createOperationDescriptor)("OBJECT_GET_PARTIAL"),{skipInvariant:true,isPure:true})}(0,_invariant.default)(absVal.args.length===3&&absVal.kind==="conditional");let generic_cond=absVal.args[0];(0,_invariant.default)(generic_cond instanceof
_index.AbstractValue);let cond=specializeCond(realm,generic_cond,propName);let arg1=absVal.args[1];if(arg1 instanceof _index.AbstractValue&&arg1.args.length===3)arg1=specializeJoin(realm,arg1,propName);let arg2=absVal.args[2];if(arg2 instanceof _index.AbstractValue)if(arg2.kind==="template for prototype member expression"){let ob=arg2.args[0];arg2=_index.AbstractValue.createTemporalFromBuildFunction(realm,absVal.getType(),[ob,propName],(0,_generator.createOperationDescriptor)("OBJECT_GET_PARTIAL"),
{skipInvariant:true,isPure:true})}else if(arg2.args.length===3)arg2=specializeJoin(realm,arg2,propName);return _index.AbstractValue.createFromConditionalOp(realm,cond,arg1,arg2,absVal.expressionLocation)}function specializeCond(realm,absVal,propName){if(absVal.kind==="template for property name condition")return _index.AbstractValue.createFromBinaryOp(realm,"===",absVal.args[0],propName);return absVal}function OrdinaryGetPartial(realm,O,P,Receiver){if(Receiver instanceof _index.AbstractValue&&Receiver.getType()===
_index.StringValue&&P==="length"){let absVal=_index.AbstractValue.createFromTemplate(realm,lengthTemplateSrc,_index.NumberValue,[Receiver]);return _index.AbstractValue.convertToTemporalIfArgsAreTemporal(realm,absVal,[Receiver])}if(!(P instanceof _index.AbstractValue))return O.$Get(P,Receiver);if(P.mightNotBeString()&&P.mightNotBeNumber()&&!P.isSimpleObject())if(realm.isInPureScope())_singletons.Leak.value(realm,P);else{let error=new _errors.CompilerDiagnostic("property key might not have a well behaved toString or be a symbol",
realm.currentLocation,"PP0002","RecoverableError");if(realm.handleError(error)!=="Recover")throw new _errors.FatalError;}if(!O.isSimpleObject()||O.mightBeLeakedObject())if(realm.isInPureScope()){_singletons.Leak.value(realm,Receiver);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,[Receiver,P],(0,_generator.createOperationDescriptor)("OBJECT_GET_PARTIAL"),{skipInvariant:true,isPure:true})}else{let error=new _errors.CompilerDiagnostic("unknown property access might need to invoke a getter",
realm.currentLocation,"PP0030","RecoverableError");if(realm.handleError(error)!=="Recover")throw new _errors.FatalError;}P=_singletons.To.ToStringAbstract(realm,P);let result;if(O.isPartialObject()){if(isWidenedValue(P))return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,[O,P],(0,_generator.createOperationDescriptor)("OBJECT_GET_PARTIAL"),{skipInvariant:true,isPure:true});result=_index.AbstractValue.createFromType(realm,_index.Value,"sentinel member expression",[O,P])}else if(O.$Prototype===
realm.intrinsics.null)result=realm.intrinsics.undefined;else result=_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,[O.$Prototype,P],(0,_generator.createOperationDescriptor)("OBJECT_GET_PARTIAL"),{skipInvariant:true,isPure:true});let prop=O.unknownProperty;if(prop!==undefined){let desc=prop.descriptor;if(desc!==undefined){(0,_invariant.default)(desc instanceof _descriptors.PropertyDescriptor,"unknown properties are only created with Set and have equal descriptors");let val=
desc.value;(0,_invariant.default)(val instanceof _index.AbstractValue);if(val.kind==="widened numeric property"){(0,_invariant.default)(O instanceof _index.ArrayValue&&_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O));(0,_invariant.default)(Receiver instanceof _index.ObjectValue||Receiver instanceof _index.AbstractObjectValue);return GetFromArrayWithWidenedNumericProperty(realm,Receiver,P instanceof _index.StringValue?P.value:P)}result=specializeJoin(realm,val,P)}}for(let [key,propertyBinding]of O.properties){let desc=
propertyBinding.descriptor;if(desc===undefined)continue;desc=desc.throwIfNotConcrete(realm);(0,_invariant.default)(desc.value!==undefined);let val=desc.value;(0,_invariant.default)(val instanceof _index.Value);let cond=_index.AbstractValue.createFromBinaryOp(realm,"===",P,new _index.StringValue(realm,key),undefined,"check for known property");result=_index.AbstractValue.createFromConditionalOp(realm,cond,val,result)}return result}function GetGlobalObject(realm){let ctx=realm.getRunningContext();let currentRealm=
ctx.realm;return currentRealm.$GlobalObject}function GetSubstitution(realm,matched,str,position,captures,replacement){(0,_invariant.default)(typeof matched==="string","expected matched to be a stirng");let matchLength=matched.length;(0,_invariant.default)(typeof str==="string","expected matched to be a stirng");let stringLength=str.length;(0,_invariant.default)(position>=0,"expected position to be a nonegative integer");(0,_invariant.default)(position<=stringLength,"expected position to be less than string length");
(0,_invariant.default)(Array.isArray(captures),"expected captures to be an array");(0,_invariant.default)(typeof replacement==="string","expected replacement to be a stirng");let tailPos=position+matchLength;let m=captures.length;let result="";for(let i=0;i<replacement.length;++i){let ch=replacement.charAt(i);if(ch!=="$"||i+1>=replacement.length){result+=ch;continue}let peek=replacement.charAt(i+1);if(peek==="&")result+=matched;else if(peek==="$")result+="$";else if(peek==="`")result+=str.substr(0,
position);else if(peek==="'")result+=str.substr(tailPos);else if(peek>="0"&&peek<="9"){let idx=peek.charCodeAt(0)-"0".charCodeAt(0);if(i+2<replacement.length){let peek2=replacement.charAt(i+2);if(peek2>="0"&&peek2<="9"){let newIdx=idx*10+(peek2.charCodeAt(0)-"0".charCodeAt(0));if(newIdx<=m){idx=newIdx;i+=1}}}if(idx>0&&idx<=m)result+=captures[idx-1]||"";else result+="$"+idx}else result+="$"+peek;i+=1}return result}function GetMethod(realm,V,P){(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,
P),"expected property key");let func=GetV(realm,V,P);if((0,_index2.HasSomeCompatibleType)(func,_index.NullValue,_index.UndefinedValue))return realm.intrinsics.undefined;if(!(0,_index2.IsCallable)(realm,func))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not callable");return func}function GetPrototypeFromConstructor(realm,constructor,intrinsicDefaultProto){(0,_invariant.default)(realm.intrinsics[intrinsicDefaultProto],"not a valid proto ref");(0,_invariant.default)((0,_index2.IsCallable)(realm,
constructor)===true,"expected constructor to be callable");let proto=Get(realm,constructor,new _index.StringValue(realm,"prototype"));if(!(proto instanceof _index.ObjectValue)&&!(proto instanceof _index.AbstractObjectValue)){realm=GetFunctionRealm(realm,constructor);proto=realm.intrinsics[intrinsicDefaultProto]}return proto}function Get(realm,O,P){(0,_invariant.default)(O instanceof _index.ObjectValue||O instanceof _index.AbstractObjectValue,"Not an object value");(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,
P),"Not a valid property key");return O.$Get(P,O)}function GetV(realm,V,P){(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,P),"Not a valid property key");let O=_singletons.To.ToObject(realm,V);return O.$Get(P,V)}function GetThisValue(realm,V){(0,_invariant.default)(_singletons.Environment.IsPropertyReference(realm,V),"expected property reference");if(_singletons.Environment.IsSuperReference(realm,V)){(0,_invariant.default)(V.thisValue!==undefined);return V.thisValue}let result=_singletons.Environment.GetBase(realm,
V);(0,_invariant.default)(result instanceof _index.Value);return result}function GetNewTarget(realm){let envRec=_singletons.Environment.GetThisEnvironment(realm);if(!("$NewTarget"in envRec))throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,"new.target not allowed here");return envRec.$NewTarget||realm.intrinsics.undefined}function GetTemplateObject(realm,templateLiteral){let rawStrings=templateLiteral.quasis.map((quasi)=>quasi.value.raw);realm;let templateRegistry=realm.$TemplateMap;
for(let e of templateRegistry){let same;if(e.$Strings.length===rawStrings.length){same=true;for(let i=0;i<rawStrings.length;++i)if(e.$Strings[i]!==rawStrings[i]){same=false;break}}else same=false;if(same)return e.$Array}let cookedStrings=templateLiteral.quasis.map((quasi)=>quasi.value.cooked);let count=cookedStrings.length;let template=_singletons.Create.ArrayCreate(realm,count);let rawObj=_singletons.Create.ArrayCreate(realm,count);let index=0;while(index<count){let prop=_singletons.To.ToString(realm,
new _index.NumberValue(realm,index));let cookedValue=new _index.StringValue(realm,cookedStrings[index]);template.$DefineOwnProperty(prop,new _descriptors.PropertyDescriptor({value:cookedValue,writable:false,enumerable:true,configurable:false}));let rawValue=new _index.StringValue(realm,rawStrings[index]);rawObj.$DefineOwnProperty(prop,new _descriptors.PropertyDescriptor({value:rawValue,writable:false,enumerable:true,configurable:false}));index=index+1}(0,_integrity.SetIntegrityLevel)(realm,rawObj,
"frozen");template.$DefineOwnProperty("raw",new _descriptors.PropertyDescriptor({value:rawObj,writable:false,enumerable:false,configurable:false}));(0,_integrity.SetIntegrityLevel)(realm,template,"frozen");templateRegistry.push({$Strings:rawStrings,$Array:template});return template}function GetFromArrayWithWidenedNumericProperty(realm,arr,P){let proto=arr.$GetPrototypeOf();(0,_invariant.default)(proto instanceof _index.ObjectValue&&proto===realm.intrinsics.ArrayPrototype);if(typeof P==="string"){if(P===
"length")return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.NumberValue,[arr],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_LENGTH"),{skipInvariant:true,isPure:true});let prototypeBinding=proto.properties.get(P);if(prototypeBinding!==undefined){let descriptor=prototypeBinding.descriptor;if(descriptor instanceof _descriptors.PropertyDescriptor&&descriptor.value instanceof _index.NativeFunctionValue)return descriptor.value}}let prop=typeof P==="string"?new _index.StringValue(realm,
P):P;return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,[arr,prop],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_GET_PARTIAL"),{skipInvariant:true,isPure:true})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.OrdinaryPreventExtensions=OrdinaryPreventExtensions;exports.SetIntegrityLevel=SetIntegrityLevel;exports.TestIntegrityLevel=TestIntegrityLevel;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);
var _singletons=__webpack_require__(236);var _errors=__webpack_require__(3);var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function OrdinaryPreventExtensions(realm,O){if(O.mightBeLeakedObject()&&O.getExtensible())throw new _errors.FatalError;O.setExtensible(false);return true}function SetIntegrityLevel(realm,O,level){(0,_invariant.default)(O instanceof _index.ObjectValue,
"expected an object");(0,_invariant.default)(level==="sealed"||level==="frozen","invalid level");let status=O.$PreventExtensions();if(status===false)return false;let keys=O.$OwnPropertyKeys();if(level==="sealed")for(let k of keys)_singletons.Properties.DefinePropertyOrThrow(realm,O,k,new _descriptors.PropertyDescriptor({configurable:false}));else if(level==="frozen")for(let k of keys){let currentDesc=O.$GetOwnProperty(k);if(currentDesc){_singletons.Properties.ThrowIfMightHaveBeenDeleted(currentDesc);
let desc;if((0,_index2.IsAccessorDescriptor)(realm,currentDesc))desc=new _descriptors.PropertyDescriptor({configurable:false});else desc=new _descriptors.PropertyDescriptor({configurable:false,writable:false});_singletons.Properties.DefinePropertyOrThrow(realm,O,k,desc)}}return true}function TestIntegrityLevel(realm,O,level){(0,_invariant.default)(O instanceof _index.ObjectValue,"expected an object");(0,_invariant.default)(level==="sealed"||level==="frozen","invalid level");let status=(0,_index2.IsExtensible)(realm,
O);if(status===true)return false;let keys=O.$OwnPropertyKeys();for(let k of keys){let currentDesc=O.$GetOwnProperty(k);if(currentDesc){_singletons.Properties.ThrowIfMightHaveBeenDeleted(currentDesc);currentDesc=currentDesc.throwIfNotConcrete(realm);if(currentDesc.configurable===true)return false;if(level==="frozen"&&(0,_index2.IsDataDescriptor)(realm,currentDesc)===true)if(currentDesc.writable===true)return false}}return true}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});var _abstract=__webpack_require__(233);Object.keys(_abstract).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _abstract[key]}})});var _call=__webpack_require__(234);Object.keys(_call).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _call[key]}})});var _construct=__webpack_require__(228);
Object.keys(_construct).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _construct[key]}})});var _date=__webpack_require__(270);Object.keys(_date).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _date[key]}})});var _get=__webpack_require__(230);Object.keys(_get).forEach(function(key){if(key==="default"||key==="__esModule")return;
Object.defineProperty(exports,key,{enumerable:true,get:function(){return _get[key]}})});var _has=__webpack_require__(269);Object.keys(_has).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _has[key]}})});var _hash=__webpack_require__(271);Object.keys(_hash).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _hash[key]}})});
var _integrity=__webpack_require__(231);Object.keys(_integrity).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _integrity[key]}})});var _is=__webpack_require__(229);Object.keys(_is).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _is[key]}})});var _iterator=__webpack_require__(272);Object.keys(_iterator).forEach(function(key){if(key===
"default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _iterator[key]}})});var _own=__webpack_require__(273);Object.keys(_own).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _own[key]}})});var _destructuring=__webpack_require__(274);Object.keys(_destructuring).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,
key,{enumerable:true,get:function(){return _destructuring[key]}})});var _regexp=__webpack_require__(276);Object.keys(_regexp).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _regexp[key]}})});var _promise=__webpack_require__(277);Object.keys(_promise).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _promise[key]}})});
var _arraybuffer=__webpack_require__(278);Object.keys(_arraybuffer).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _arraybuffer[key]}})})},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.SplitMatch=SplitMatch;exports.RequireObjectCoercible=RequireObjectCoercible;exports.HasSameType=HasSameType;exports.AbstractRelationalComparison=AbstractRelationalComparison;
exports.AbstractEqualityComparison=AbstractEqualityComparison;exports.StrictEqualityComparison=StrictEqualityComparison;exports.StrictEqualityComparisonPartial=StrictEqualityComparisonPartial;exports.SameValueZero=SameValueZero;exports.SameValueZeroPartial=SameValueZeroPartial;exports.SameValue=SameValue;exports.SameValuePartial=SameValuePartial;exports.SameValueNonNumber=SameValueNonNumber;exports.SamePropertyKey=SamePropertyKey;exports.Add=Add;exports.InstanceofOperator=InstanceofOperator;exports.OrdinaryHasInstance=
OrdinaryHasInstance;exports.Type=Type;exports.SymbolDescriptiveString=SymbolDescriptiveString;exports.UpdateEmpty=UpdateEmpty;exports.URIUnescaped=exports.URIMark=exports.DecimalDigit=exports.URIAlpha=exports.URIReserved=void 0;var _errors=__webpack_require__(3);var _index=__webpack_require__(10);var _call=__webpack_require__(234);var _is=__webpack_require__(229);var _completions=__webpack_require__(18);var _get=__webpack_require__(230);var _has=__webpack_require__(269);var _singletons=__webpack_require__(236);
var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const URIReserved=";/?:@&=+$,";exports.URIReserved=URIReserved;const URIAlpha="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";exports.URIAlpha=URIAlpha;const DecimalDigit="0123456789";exports.DecimalDigit=DecimalDigit;const URIMark="-_.!~*'()";exports.URIMark=URIMark;const URIUnescaped=URIAlpha+DecimalDigit+URIMark;exports.URIUnescaped=URIUnescaped;
function SplitMatch(realm,S,q,R){(0,_invariant.default)(typeof R==="string","expected a string");let r=R.length;let s=S.length;if(q+r>s)return false;for(let i=0;i<r;i++)if(S[q+i]!==R[i])return false;return q+r}function RequireObjectCoercible(realm,arg,argLoc){if(!arg.mightNotBeNull()||!arg.mightNotBeUndefined())throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"null or undefined");if(arg instanceof _index.AbstractValue&&(arg.mightBeNull()||arg.mightBeUndefined())){if(realm.isInPureScope())return arg;
if(argLoc){let error=new _errors.CompilerDiagnostic(`member expression object ${_index.AbstractValue.describe(arg)} is unknown`,argLoc,"PP0012","FatalError");realm.handleError(error);throw new _errors.FatalError;}arg.throwIfNotConcrete()}return arg}function HasSameType(x,y){const xType=x.getType();const yType=y.getType();return xType===yType||(xType===_index.IntegralValue||xType===_index.NumberValue)&&(yType===_index.IntegralValue||yType===_index.NumberValue)}function AbstractRelationalComparison(realm,
x,y,LeftFirst,op){let px,py;if(LeftFirst){px=_singletons.To.ToPrimitiveOrAbstract(realm,x,"number");py=_singletons.To.ToPrimitiveOrAbstract(realm,y,"number")}else{py=_singletons.To.ToPrimitiveOrAbstract(realm,y,"number");px=_singletons.To.ToPrimitiveOrAbstract(realm,x,"number")}if(px instanceof _index.AbstractValue||py instanceof _index.AbstractValue){let res;if(LeftFirst)res=_index.AbstractValue.createFromBinaryOp(realm,op,px,py);else res=_index.AbstractValue.createFromBinaryOp(realm,op,py,px);(0,
_invariant.default)(res instanceof _index.BooleanValue||res instanceof _index.UndefinedValue||res instanceof _index.AbstractValue);return res}if(px instanceof _index.StringValue&&py instanceof _index.StringValue){if(px.value.startsWith(py.value))return realm.intrinsics.false;if(py.value.startsWith(px.value))return realm.intrinsics.true;let k=0;while(px.value.charCodeAt(k)===py.value.charCodeAt(k))k+=1;let m=px.value.charCodeAt(k);let n=py.value.charCodeAt(k);return m<n?realm.intrinsics.true:realm.intrinsics.false}else{let nx=
_singletons.To.ToNumber(realm,px);let ny=_singletons.To.ToNumber(realm,py);if(isNaN(nx))return realm.intrinsics.undefined;if(isNaN(ny))return realm.intrinsics.undefined;if(Object.is(nx,ny))return realm.intrinsics.false;if(Object.is(nx,+0)&&Object.is(ny,-0))return realm.intrinsics.false;if(Object.is(nx,-0)&&Object.is(ny,+0))return realm.intrinsics.false;if(nx<ny)return realm.intrinsics.true;else return realm.intrinsics.false}}function AbstractEqualityComparison(realm,x,y,op){if(HasSameType(x,y)){const strictResult=
StrictEqualityComparison(realm,x,y);return new _index.BooleanValue(realm,op==="=="?strictResult:!strictResult)}if(x instanceof _index.NullValue&&y instanceof _index.UndefinedValue)return new _index.BooleanValue(realm,op==="==");if(x instanceof _index.UndefinedValue&&y instanceof _index.NullValue)return new _index.BooleanValue(realm,op==="==");if(x instanceof _index.NumberValue&&y instanceof _index.StringValue)return AbstractEqualityComparison(realm,x,new _index.NumberValue(realm,_singletons.To.ToNumber(realm,
y)),op);if(x instanceof _index.StringValue&&y instanceof _index.NumberValue)return AbstractEqualityComparison(realm,new _index.NumberValue(realm,_singletons.To.ToNumber(realm,x)),y,op);if(x instanceof _index.BooleanValue)return AbstractEqualityComparison(realm,new _index.NumberValue(realm,_singletons.To.ToNumber(realm,x)),y,op);if(y instanceof _index.BooleanValue)return AbstractEqualityComparison(realm,x,new _index.NumberValue(realm,_singletons.To.ToNumber(realm,y)),op);if((x instanceof _index.StringValue||
x instanceof _index.NumberValue||x instanceof _index.SymbolValue)&&y instanceof _index.ObjectValue){const py=_singletons.To.ToPrimitiveOrAbstract(realm,y);if(py instanceof _index.AbstractValue){let res=_index.AbstractValue.createFromBinaryOp(realm,"==",x,py);(0,_invariant.default)(res instanceof _index.BooleanValue||res instanceof _index.AbstractValue);return res}return AbstractEqualityComparison(realm,x,py,op)}if(x instanceof _index.ObjectValue&&(y instanceof _index.StringValue||y instanceof _index.NumberValue||
y instanceof _index.SymbolValue)){const px=_singletons.To.ToPrimitiveOrAbstract(realm,x);if(px instanceof _index.AbstractValue){let res=_index.AbstractValue.createFromBinaryOp(realm,"==",px,y);(0,_invariant.default)(res instanceof _index.BooleanValue||res instanceof _index.AbstractValue);return res}return AbstractEqualityComparison(realm,px,y,op)}return new _index.BooleanValue(realm,op!=="==")}function StrictEqualityComparison(realm,x,y){if(!HasSameType(x,y))return false;if(x instanceof _index.NumberValue&&
y instanceof _index.NumberValue){if(isNaN(x.value))return false;if(isNaN(y.value))return false;if(x.value===y.value)return true;return false}return SameValueNonNumber(realm,x,y)}function StrictEqualityComparisonPartial(realm,x,y){return StrictEqualityComparison(realm,x.throwIfNotConcrete(),y.throwIfNotConcrete())}function SameValueZero(realm,x,y){if(!HasSameType(x,y))return false;if(x instanceof _index.NumberValue){(0,_invariant.default)(y instanceof _index.NumberValue);if(isNaN(x.value)&&isNaN(y.value))return true;
if(Object.is(x.value,+0)&&Object.is(y.value,-0))return true;if(Object.is(x.value,-0)&&Object.is(y.value,+0))return true;if(x.value===y.value)return true;return false}return SameValueNonNumber(realm,x,y)}function SameValueZeroPartial(realm,x,y){return SameValueZero(realm,x.throwIfNotConcrete(),y.throwIfNotConcrete())}function SameValue(realm,x,y){if(!HasSameType(x,y))return false;if(x instanceof _index.NumberValue&&y instanceof _index.NumberValue){if(isNaN(x.value)&&isNaN(y.value))return true;if(Object.is(x.value,
+0)&&Object.is(y.value,-0))return false;if(Object.is(x.value,-0)&&Object.is(y.value,+0))return false;if(x.value===y.value)return true;return false}return SameValueNonNumber(realm,x,y)}function SameValuePartial(realm,x,y){return SameValue(realm,x.throwIfNotConcrete(),y.throwIfNotConcrete())}function SameValueNonNumber(realm,x,y){(0,_invariant.default)(!(x instanceof _index.NumberValue),"numbers not allowed");(0,_invariant.default)(x.getType()===y.getType(),"must be same type");if(x instanceof _index.UndefinedValue)return true;
if(x instanceof _index.NullValue)return true;if(x instanceof _index.StringValue&&y instanceof _index.StringValue)return x.value===y.value;if(x instanceof _index.BooleanValue&&y instanceof _index.BooleanValue)return x.value===y.value;if(x instanceof _index.SymbolValue)return x===y;return x===y}function SamePropertyKey(realm,x,y){if(typeof x==="string"&&typeof y==="string")return x===y;if(x instanceof _index.StringValue&&y instanceof _index.StringValue)return x.value===y.value;if(x instanceof _index.SymbolValue&&
y instanceof _index.SymbolValue)return x===y;return false}function Add(realm,a,b,subtract=false){if(isNaN(a)||isNaN(b))return realm.intrinsics.NaN;let anum=a;let bnum=b;if(subtract)bnum=-bnum;return _index.IntegralValue.createFromNumberValue(realm,anum+bnum)}function InstanceofOperator(realm,O,C){if(!C.mightBeObject())throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Expecting a function in instanceof check");let instOfHandler=(0,_get.GetMethod)(realm,C,realm.intrinsics.SymbolHasInstance);
if(!(instOfHandler instanceof _index.UndefinedValue))return _singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,instOfHandler,C,[O]));if((0,_is.IsCallable)(realm,C)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Expecting a function in instanceof check");return OrdinaryHasInstance(realm,C,O)}function OrdinaryHasInstance(realm,C,O){if((0,_is.IsCallable)(realm,C)===false)return false;(0,_invariant.default)(C instanceof _index.ObjectValue);if(C instanceof _index.BoundFunctionValue){let BC=
C.$BoundTargetFunction;return InstanceofOperator(realm,O,BC)}O=O.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))return false;let P=(0,_get.Get)(realm,C,"prototype").throwIfNotConcrete();if(!(P instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(P) is not Object");while(true){O=O.$GetPrototypeOf();if(O instanceof _index.NullValue)return false;if(SameValuePartial(realm,P,O)===true)return true}return false}function Type(realm,val){if(val instanceof
_index.UndefinedValue)return"Undefined";else if(val instanceof _index.NullValue)return"Null";else if((0,_has.HasCompatibleType)(val,_index.BooleanValue))return"Boolean";else if((0,_has.HasCompatibleType)(val,_index.StringValue))return"String";else if((0,_has.HasCompatibleType)(val,_index.SymbolValue))return"Symbol";else if((0,_has.HasCompatibleType)(val,_index.IntegralValue))return"Number";else if((0,_has.HasCompatibleType)(val,_index.NumberValue))return"Number";else if(!val.mightNotBeObject())return"Object";
else{(0,_invariant.default)(val instanceof _index.AbstractValue);_index.AbstractValue.reportIntrospectionError(val);throw new _errors.FatalError;}}function SymbolDescriptiveString(realm,sym){(0,_invariant.default)(sym instanceof _index.SymbolValue,"expected symbol");let desc=sym.$Description;if(!desc)desc="";else desc=desc.throwIfNotConcreteString().value;(0,_invariant.default)(typeof desc==="string","expected string");return`Symbol(${desc})`}function UpdateEmpty(realm,completionRecord,value){if(completionRecord instanceof
_completions.ReturnCompletion||completionRecord instanceof _completions.ThrowCompletion)(0,_invariant.default)(completionRecord.value,"expected completion record to have a value");if(completionRecord instanceof _index.EmptyValue)return value;if(completionRecord instanceof _index.Value||completionRecord.value&&!(completionRecord.value instanceof _index.EmptyValue))return completionRecord;completionRecord.value=value;return completionRecord}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.ArgumentListEvaluation=ArgumentListEvaluation;exports.Invoke=Invoke;exports.EvaluateCall=EvaluateCall;exports.PrepareForOrdinaryCall=PrepareForOrdinaryCall;exports.OrdinaryCallBindThis=OrdinaryCallBindThis;exports.OrdinaryCallEvaluateBody=OrdinaryCallEvaluateBody;exports.EvaluateDirectCall=EvaluateDirectCall;exports.EvaluateDirectCallWithArgList=EvaluateDirectCallWithArgList;exports.PrepareForTailCall=PrepareForTailCall;exports.Call=Call;var _environment=__webpack_require__(20);
var _errors=__webpack_require__(3);var _realm=__webpack_require__(7);var _Value=_interopRequireDefault(__webpack_require__(11));var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _generator=__webpack_require__(235);var _completions=__webpack_require__(18);var _get=__webpack_require__(230);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _generator2=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function ArgumentListEvaluation(realm,strictCode,env,argNodes){if(Array.isArray(argNodes)){let args=[];for(let node_ of argNodes)if(node_.type==="SpreadElement"){let node=node_;let list=args;let spreadRef=env.evaluate(node.argument,strictCode);let spreadObj=_singletons.Environment.GetValue(realm,spreadRef);let iterator=(0,_index2.GetIterator)(realm,spreadObj);while(true){let next=(0,_index2.IteratorStep)(realm,iterator);if(!next)break;let nextArg=(0,_index2.IteratorValue)(realm,
next);list.push(nextArg)}}else{let ref=env.evaluate(node_,strictCode);let expr=_singletons.Environment.GetValue(realm,ref);args.push(expr)}return args}else{let node=argNodes;if(node.expressions.length===0){let templateLiteral=node;let siteObj=(0,_get.GetTemplateObject)(realm,templateLiteral);return[siteObj]}else{let templateLiteral=node;let siteObj=(0,_get.GetTemplateObject)(realm,templateLiteral);let firstSubRef=env.evaluate(node.expressions[0],strictCode);let firstSub=_singletons.Environment.GetValue(realm,
firstSubRef);let restSub=node.expressions.slice(1,node.expressions.length).map((expr)=>{return _singletons.Environment.GetValue(realm,env.evaluate(expr,strictCode))});(0,_invariant.default)(restSub.constructor===Array,"restSub is a List");return[siteObj,firstSub,...restSub]}}}function Invoke(realm,V,P,argumentsList){(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,P),"expected property key");if(!argumentsList)argumentsList=[];let func=(0,_get.GetV)(realm,V,P);return Call(realm,func,V,argumentsList)}
function EvaluateCall(realm,strictCode,env,ref,args){let thisValue;let func=_singletons.Environment.GetValue(realm,ref);if(ref instanceof _environment.Reference)if(_singletons.Environment.IsPropertyReference(realm,ref))thisValue=(0,_get.GetThisValue)(realm,ref);else{let refEnv=_singletons.Environment.GetBase(realm,ref);(0,_invariant.default)(refEnv instanceof _environment.EnvironmentRecord);thisValue=refEnv.WithBaseObject()}else thisValue=realm.intrinsics.undefined;return EvaluateDirectCall(realm,
strictCode,env,ref,func,thisValue,args)}function PrepareForOrdinaryCall(realm,F,newTarget){(0,_invariant.default)(newTarget===undefined||newTarget instanceof _index.ObjectValue,"expected undefined or object value for new target");let callerContext=realm.getRunningContext();let calleeContext=realm.createExecutionContext();calleeContext.setFunction(F);calleeContext.setCaller(realm.getRunningContext());let calleeRealm=realm;calleeContext.realm=calleeRealm;calleeContext.ScriptOrModule=F.$ScriptOrModule;
let localEnv=_singletons.Environment.NewFunctionEnvironment(realm,F,newTarget);calleeContext.lexicalEnvironment=localEnv;calleeContext.variableEnvironment=localEnv;callerContext.suspend();try{realm.pushContext(calleeContext)}catch(error){realm.onDestroyScope(localEnv);throw error;}return calleeContext}function OrdinaryCallBindThis(realm,F,calleeContext,thisArgument){let thisMode=F.$ThisMode;if(thisMode==="lexical")return realm.intrinsics.undefined;let calleeRealm=F.$Realm;let localEnv=calleeContext.lexicalEnvironment;
let thisValue;if(thisMode==="strict")thisValue=thisArgument;else if((0,_index2.HasSomeCompatibleType)(thisArgument,_index.NullValue,_index.UndefinedValue)){let globalEnv=realm.$GlobalEnv;let globalEnvRec=globalEnv.environmentRecord;(0,_invariant.default)(globalEnvRec instanceof _environment.GlobalEnvironmentRecord);thisValue=globalEnvRec.$GlobalThisValue}else thisValue=_singletons.To.ToObject(calleeRealm,thisArgument);(0,_invariant.default)(localEnv!==undefined);let envRec=localEnv.environmentRecord;
return envRec.BindThisValue(thisValue)}function callNativeFunctionValue(realm,f,argumentsList){let env=realm.getRunningContext().lexicalEnvironment;let context=env.environmentRecord.GetThisBinding();const functionCall=(contextVal,inConditional)=>{try{(0,_invariant.default)(contextVal instanceof _index.AbstractObjectValue||contextVal instanceof _index.ObjectValue||contextVal instanceof _index.NullValue||contextVal instanceof _index.UndefinedValue||(0,_environment.mightBecomeAnObject)(contextVal));
let completion=f.callCallback(contextVal,argumentsList,env.environmentRecord.$NewTarget);return inConditional?completion.value:completion}catch(err){if(err instanceof _completions.AbruptCompletion)return inConditional?err.value:err;else if(err instanceof Error)throw err;else throw new _errors.FatalError(err);}};const wrapInReturnCompletion=(contextVal)=>new _completions.ReturnCompletion(contextVal,realm.currentLocation);if(context instanceof _index.AbstractObjectValue&&context.kind==="conditional"){let [condValue,
consequentVal,alternateVal]=context.args;(0,_invariant.default)(condValue instanceof _index.AbstractValue);return wrapInReturnCompletion(realm.evaluateWithAbstractConditional(condValue,()=>{return realm.evaluateForEffects(()=>functionCall(consequentVal,true),null,"callNativeFunctionValue consequent")},()=>{return realm.evaluateForEffects(()=>functionCall(alternateVal,true),null,"callNativeFunctionValue alternate")}))}let c=functionCall(context,false);if(c instanceof _completions.AbruptCompletion)return c;
return undefined}function OrdinaryCallEvaluateBody(realm,f,argumentsList){if(f instanceof _index.NativeFunctionValue)return callNativeFunctionValue(realm,f,argumentsList);else{(0,_invariant.default)(f instanceof _index.ECMAScriptSourceFunctionValue);let F=f;if(F.$FunctionKind==="generator"){_singletons.Functions.FunctionDeclarationInstantiation(realm,F,argumentsList);let G=_singletons.Create.OrdinaryCreateFromConstructor(realm,F,"GeneratorPrototype",{$GeneratorState:undefined,$GeneratorContext:undefined});
let code=F.$ECMAScriptCode;(0,_invariant.default)(code!==undefined);(0,_generator.GeneratorStart)(realm,G,code);return new _completions.ReturnCompletion(G,realm.currentLocation)}else{const abstractRecursionSummarization=false;if(!realm.useAbstractInterpretation||realm.pathConditions.isEmpty()||!abstractRecursionSummarization)return normalCall();let savedIsSelfRecursive=F.isSelfRecursive;try{F.isSelfRecursive=false;let effects=realm.evaluateForEffects(guardedCall,undefined,"OrdinaryCallEvaluateBody");
if(F.isSelfRecursive){_index.AbstractValue.reportIntrospectionError(F,"call to function that calls itself");throw new _errors.FatalError;}else{realm.applyEffects(effects);let c=effects.result;return processResult(()=>{if(c instanceof _completions.AbruptCompletion||c instanceof _completions.JoinedNormalAndAbruptCompletions)return c;return undefined})}}finally{F.isSelfRecursive=savedIsSelfRecursive}function guardedCall(){let currentLocation=realm.currentLocation;if(F.activeArguments!==undefined&&F.activeArguments.has(currentLocation)){let [previousPathLength,
previousArguments]=F.activeArguments.get(currentLocation);if(realm.pathConditions.getLength()>previousPathLength){(0,_invariant.default)(previousArguments!==undefined);F.isSelfRecursive=true;let widenedArgumentsList=_singletons.Widen.widenValues(realm,previousArguments,argumentsList);if(_singletons.Widen.containsArraysOfValue(realm,previousArguments,widenedArgumentsList))return realm.intrinsics.undefined;else argumentsList=widenedArgumentsList}}try{if(F.activeArguments===undefined)F.activeArguments=
new Map;F.activeArguments.set(currentLocation,[realm.pathConditions.getLength(),argumentsList]);return normalCall()||realm.intrinsics.undefined}finally{F.activeArguments.delete(currentLocation)}}function normalCall(){_singletons.Functions.FunctionDeclarationInstantiation(realm,F,argumentsList);let code=F.$ECMAScriptCode;(0,_invariant.default)(code!==undefined);let context=realm.getRunningContext();return processResult(()=>{let c=context.lexicalEnvironment.evaluateCompletionDeref(code,F.$Strict);if(c instanceof
_completions.AbruptCompletion||c instanceof _completions.JoinedNormalAndAbruptCompletions)return c;return undefined})}function processResult(getCompletion){let priorSavedCompletion=realm.savedCompletion;realm.savedCompletion=undefined;let c;try{c=getCompletion()}catch(e){(0,_invariant.default)(!(e instanceof _completions.AbruptCompletion));throw e;}c=_singletons.Functions.incorporateSavedCompletion(realm,c);realm.savedCompletion=priorSavedCompletion;if(c===undefined)return undefined;if(c instanceof
_completions.ThrowCompletion||c instanceof _completions.ReturnCompletion)return c;(0,_invariant.default)(c instanceof _completions.JoinedAbruptCompletions||c instanceof _completions.JoinedNormalAndAbruptCompletions);let rc=c;_completions.Completion.makeAllNormalCompletionsResultInUndefined(c);c=_completions.Completion.normalizeSelectedCompletions((r)=>r instanceof _completions.ReturnCompletion,c);(0,_invariant.default)(c.containsSelectedCompletion((r)=>r instanceof _completions.NormalCompletion));
let rv=_singletons.Join.joinValuesOfSelectedCompletions((r)=>r instanceof _completions.NormalCompletion,c);if(c.containsSelectedCompletion((r)=>r instanceof _completions.ThrowCompletion)){realm.composeWithSavedCompletion(c);if(rv instanceof _index.AbstractValue)rv=realm.simplifyAndRefineAbstractValue(rv)}rc=new _completions.ReturnCompletion(rv);return rc}}}}function EvaluateDirectCall(realm,strictCode,env,ref,func,thisValue,args,tailPosition){let argList=ArgumentListEvaluation(realm,strictCode,env,
args);return EvaluateDirectCallWithArgList(realm,strictCode,env,ref,func,thisValue,argList,tailPosition)}function EvaluateDirectCallWithArgList(realm,strictCode,env,ref,func,thisValue,argList,tailPosition){if(func instanceof _index.AbstractObjectValue&&_Value.default.isTypeCompatibleWith(func.getType(),_index.FunctionValue))return _index.AbstractValue.createTemporalFromBuildFunction(realm,func.functionResultType||_Value.default,[func].concat(argList),(0,_generator2.createOperationDescriptor)("DIRECT_CALL_WITH_ARG_LIST"));
func=func.throwIfNotConcrete();if(!(func instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not an object");if(!(0,_index2.IsCallable)(realm,func))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not callable");if(tailPosition===true)PrepareForTailCall(realm);let result=Call(realm,func,thisValue,argList);(0,_invariant.default)(result instanceof _Value.default,"expected language value type");return result}function PrepareForTailCall(realm){let leafContext=
realm.getRunningContext();leafContext.suspend();realm.onDestroyScope(leafContext.lexicalEnvironment);realm.popContext(leafContext)}function Call(realm,F,V,argsList){argsList=argsList||[];if((0,_index2.IsCallable)(realm,F)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not callable");if(F instanceof _index.AbstractValue&&_Value.default.isTypeCompatibleWith(F.getType(),_index.FunctionValue)){_singletons.Leak.value(realm,V);for(let arg of argsList)_singletons.Leak.value(realm,
arg);if(V===realm.intrinsics.undefined){let fullArgs=[F].concat(argsList);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_Value.default,fullArgs,(0,_generator2.createOperationDescriptor)("CALL_ABSTRACT_FUNC"))}else{let fullArgs=[F,V].concat(argsList);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_Value.default,fullArgs,(0,_generator2.createOperationDescriptor)("CALL_ABSTRACT_FUNC_THIS"))}}(0,_invariant.default)(F instanceof _index.ObjectValue);(0,_invariant.default)(F.$Call,
"no call method on this value");return F.$Call(V,argsList)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.GeneratorStart=GeneratorStart;exports.GeneratorValidate=GeneratorValidate;exports.GeneratorResume=GeneratorResume;exports.GeneratorResumeAbrupt=GeneratorResumeAbrupt;exports.GeneratorYield=GeneratorYield;var _completions=__webpack_require__(18);var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=
_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function GeneratorStart(realm,generator,generatorBody){(0,_invariant.default)(realm.isNewObject(generator));(0,_invariant.default)(generator instanceof _index.ObjectValue&&generator.$GeneratorState===undefined,"The value of generator.[[GeneratorState]] is undefined");let genContext=realm.getRunningContext();generator.$GeneratorContext=genContext;generator.$GeneratorState=
"suspendedStart";return realm.intrinsics.undefined}function GeneratorValidate(realm,generator){if(!(generator instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,"Type(generator) is not Object");if(!("$GeneratorState"in generator))throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,"Type(generator) is not Object");(0,_invariant.default)("$GeneratorContext"in generator);let state=generator.$GeneratorState;if(state==="executing")throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,
"Type(generator) is not Object");return state}function GeneratorResume(realm,generator,value){let state=GeneratorValidate(realm,generator);(0,_invariant.default)(generator instanceof _index.ObjectValue);if(state==="completed")return _singletons.Create.CreateIterResultObject(realm,realm.intrinsics.undefined,true);(0,_invariant.default)(state==="suspendedStart"||state==="suspendedYield","state is either 'suspendedStart' or 'suspendedYield'");let genContext=generator.$GeneratorContext;(0,_invariant.default)(genContext);
let methodContext=realm.getRunningContext();methodContext.suspend();_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,generator,"$GeneratorState").$GeneratorState="executing";realm.pushContext(genContext);let result=genContext.resume();(0,_invariant.default)(realm.getRunningContext()===methodContext);return result}function GeneratorResumeAbrupt(realm,generator,abruptCompletion){return realm.intrinsics.undefined}function GeneratorYield(realm,iterNextObj){return realm.intrinsics.undefined}
},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.setCreate=setCreate;exports.setEnvironment=setEnvironment;exports.setFunctions=setFunctions;exports.setLeak=setLeak;exports.setMaterialize=setMaterialize;exports.setJoin=setJoin;exports.setPath=setPath;exports.setPathConditions=setPathConditions;exports.setProperties=setProperties;exports.setTo=setTo;exports.setWiden=setWiden;exports.setConcretize=setConcretize;exports.setUtils=setUtils;
exports.setDebugReproManager=setDebugReproManager;exports.DebugReproManager=exports.Utils=exports.concretize=exports.Widen=exports.To=exports.Properties=exports.createPathConditions=exports.Path=exports.Join=exports.Materialize=exports.Leak=exports.Functions=exports.Environment=exports.Create=void 0;let Create=null;exports.Create=Create;let Environment=null;exports.Environment=Environment;let Functions=null;exports.Functions=Functions;let Leak=null;exports.Leak=Leak;let Materialize=null;exports.Materialize=
Materialize;let Join=null;exports.Join=Join;let Path=null;exports.Path=Path;let createPathConditions=null;exports.createPathConditions=createPathConditions;let Properties=null;exports.Properties=Properties;let To=null;exports.To=To;let Widen=null;exports.Widen=Widen;let concretize=null;exports.concretize=concretize;let Utils=null;exports.Utils=Utils;let DebugReproManager=null;exports.DebugReproManager=DebugReproManager;function setCreate(singleton){exports.Create=Create=singleton}function setEnvironment(singleton){exports.Environment=
Environment=singleton}function setFunctions(singleton){exports.Functions=Functions=singleton}function setLeak(singleton){exports.Leak=Leak=singleton}function setMaterialize(singleton){exports.Materialize=Materialize=singleton}function setJoin(singleton){exports.Join=Join=singleton}function setPath(singleton){exports.Path=Path=singleton}function setPathConditions(f){exports.createPathConditions=createPathConditions=f}function setProperties(singleton){exports.Properties=Properties=singleton}function setTo(singleton){exports.To=
To=singleton}function setWiden(singleton){exports.Widen=Widen=singleton}function setConcretize(singleton){exports.concretize=concretize=singleton}function setUtils(singleton){exports.Utils=Utils=singleton}function setDebugReproManager(singleton){exports.DebugReproManager=DebugReproManager=singleton}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.createOperationDescriptor=createOperationDescriptor;exports.attemptToMergeEquivalentObjectAssigns=
attemptToMergeEquivalentObjectAssigns;exports.Generator=exports.TemporalObjectAssignEntry=exports.TemporalOperationEntry=exports.GeneratorEntry=void 0;var _index=__webpack_require__(10);var _errors=__webpack_require__(3);var _index2=__webpack_require__(15);var _invariant=_interopRequireDefault(__webpack_require__(9));var _completions=__webpack_require__(18);var _singletons=__webpack_require__(236);var _PreludeGenerator=__webpack_require__(238);var _descriptors=__webpack_require__(268);var _environment=
__webpack_require__(20);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function")ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}));ownKeys.forEach(function(key){_defineProperty(target,
key,source[key])})}return target}function _defineProperty(obj,key,value){if(key in obj)Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});else obj[key]=value;return obj}function createOperationDescriptor(type,data={}){return{data,type}}class GeneratorEntry{constructor(realm){this.index=realm.temporalEntryCounter++}print(printer){(0,_invariant.default)(false,"GeneratorEntry is an abstract base class")}visit(callbacks,containingGenerator){(0,_invariant.default)(false,
"GeneratorEntry is an abstract base class")}serialize(context){(0,_invariant.default)(false,"GeneratorEntry is an abstract base class")}getDependencies(){(0,_invariant.default)(false,"GeneratorEntry is an abstract base class")}notEqualToAndDoesNotHappenBefore(entry){return this.index>entry.index}notEqualToAndDoesNotHappenAfter(entry){return this.index<entry.index}}exports.GeneratorEntry=GeneratorEntry;class TemporalOperationEntry extends GeneratorEntry{constructor(realm,args){super(realm);Object.assign(this,
args);if(this.mutatesOnly!==undefined){(0,_invariant.default)(!this.isPure);for(let arg of this.mutatesOnly)(0,_invariant.default)(this.args.includes(arg))}(0,_invariant.default)(this.operationDescriptor!==undefined)}print(printer){const operationDescriptor=this.operationDescriptor;printer.printGeneratorEntry(this.declared,operationDescriptor.type,this.args,this.operationDescriptor.data,{isPure:!!this.isPure,mutatesOnly:this.mutatesOnly})}toDisplayJson(depth){if(depth<=0)return`TemporalOperation${this.index}`;
let obj=_objectSpread({type:"TemporalOperation"},this);delete obj.operationDescriptor;return _singletons.Utils.verboseToDisplayJson(obj,depth)}visit(callbacks,containingGenerator){let omit=this.isPure&&this.declared&&callbacks.canOmit(this.declared);if(!omit&&this.declared&&this.mutatesOnly!==undefined){omit=true;for(let arg of this.mutatesOnly)if(!callbacks.canOmit(arg))omit=false}if(omit){callbacks.recordDelayedEntry(containingGenerator,this);return false}else{if(this.declared)callbacks.recordDeclaration(this.declared);
for(let i=0,n=this.args.length;i<n;i++){let originalArg=this.args[i];let visitedArg=callbacks.visitEquivalentValue(originalArg);this.args[i]=visitedArg;if(i===0)switch(this.operationDescriptor.type){case "CALL_BAILOUT":if(originalArg===this.operationDescriptor.data.thisArg)this.operationDescriptor.data.thisArg=visitedArg;break;case "CONDITIONAL_THROW":this.operationDescriptor.data.value=visitedArg;break;default:break}else if(i===1)switch(this.operationDescriptor.type){case "EMIT_PROPERTY_ASSIGNMENT":case "LOGICAL_PROPERTY_ASSIGNMENT":this.operationDescriptor.data.value=
visitedArg;break;case "CONDITIONAL_PROPERTY_ASSIGNMENT":if(originalArg===this.operationDescriptor.data.value)this.operationDescriptor.data.value=visitedArg;break;case "DEFINE_PROPERTY":(0,_invariant.default)(visitedArg instanceof _index.ObjectValue);this.operationDescriptor.data.object=visitedArg;break;default:break}}let dependencies=this.getDependencies();if(dependencies!==undefined)for(let dependency of dependencies)callbacks.visitGenerator(dependency,containingGenerator);return true}}serialize(context){let omit=
this.isPure&&this.declared&&context.canOmit(this.declared);if(!omit&&this.declared&&this.mutatesOnly!==undefined){omit=true;for(let arg of this.mutatesOnly)if(!context.canOmit(arg))omit=false}if(!omit){let nodes=this.args.map((boundArg,i)=>context.serializeValue(boundArg));let valuesToProcess=new Set;let declaredId=this.declared!==undefined?this.declared.intrinsicName:undefined;let node=context.serializeOperationDescriptor(this.operationDescriptor,nodes,context,valuesToProcess,declaredId);if(node.type===
"BlockStatement"){let block=node;let statements=block.body;if(statements.length===0)return;if(statements.length===1)node=statements[0]}let declared=this.declared;if(declared!==undefined&&context.options.debugScopes)context.emit(context.serializeDebugScopeComment(declared));context.emit(node);context.processValues(valuesToProcess);if(this.declared!==undefined)context.declare(this.declared)}}getDependencies(){const operationDescriptor=this.operationDescriptor;switch(operationDescriptor.type){case "DO_WHILE":let generator=
operationDescriptor.data.generator;(0,_invariant.default)(generator!==undefined);return[generator];case "JOIN_GENERATORS":let generators=operationDescriptor.data.generators;(0,_invariant.default)(generators!==undefined);return generators;default:return undefined}}}exports.TemporalOperationEntry=TemporalOperationEntry;class TemporalObjectAssignEntry extends TemporalOperationEntry{visit(callbacks,containingGenerator){let declared=this.declared;if(!(declared instanceof _index.AbstractObjectValue||declared instanceof
_index.ObjectValue))return false;let realm=declared.$Realm;let result=attemptToMergeEquivalentObjectAssigns(realm,callbacks,this);if(result instanceof TemporalObjectAssignEntry){let nextResult=result;while(nextResult instanceof TemporalObjectAssignEntry){nextResult=attemptToMergeEquivalentObjectAssigns(realm,callbacks,result);if(nextResult instanceof TemporalObjectAssignEntry)result=nextResult}this.args=result.args}else if(result==="POSSIBLE_OPTIMIZATION"){callbacks.recordDelayedEntry(containingGenerator,
this);return false}return super.visit(callbacks,containingGenerator)}}exports.TemporalObjectAssignEntry=TemporalObjectAssignEntry;class ModifiedPropertyEntry extends GeneratorEntry{constructor(realm,args){super(realm);Object.assign(this,args)}print(printer){printer.printGeneratorEntry(undefined,"MODIFIED_PROPERTY",[],{descriptor:this.newDescriptor,propertyBinding:this.propertyBinding},{isPure:false,mutatesOnly:undefined})}toDisplayString(){let propertyKey=this.propertyBinding.key;let propertyKeyString=
propertyKey instanceof _index.Value?propertyKey.toDisplayString():propertyKey;(0,_invariant.default)(propertyKeyString!==undefined);return`[ModifiedProperty ${propertyKeyString}]`}serialize(context){let desc=this.propertyBinding.descriptor;(0,_invariant.default)(desc===this.newDescriptor);context.emitPropertyModification(this.propertyBinding)}visit(context,containingGenerator){(0,_invariant.default)(containingGenerator===this.containingGenerator,"This entry requires effects to be applied and may not be moved");
let desc=this.propertyBinding.descriptor;(0,_invariant.default)(desc===this.newDescriptor);context.visitModifiedProperty(this.propertyBinding);return true}getDependencies(){return undefined}}class ModifiedBindingEntry extends GeneratorEntry{constructor(realm,args){super(realm);Object.assign(this,args)}print(printer){printer.printGeneratorEntry(undefined,"MODIFIED_BINDING",[],{binding:this.modifiedBinding,value:this.modifiedBinding.value},{isPure:false,mutatesOnly:undefined})}toDisplayString(){return`[ModifiedBinding ${this.modifiedBinding.name}]`}serialize(context){context.emitBindingModification(this.modifiedBinding)}visit(context,
containingGenerator){(0,_invariant.default)(containingGenerator===this.containingGenerator,"This entry requires effects to be applied and may not be moved");context.visitModifiedBinding(this.modifiedBinding);return true}getDependencies(){return undefined}}class ReturnValueEntry extends GeneratorEntry{constructor(realm,generator,returnValue){super(realm);this.returnValue=returnValue.promoteEmptyToUndefined();this.containingGenerator=generator}print(printer){printer.printGeneratorEntry(undefined,"RETURN",
[this.returnValue],{},{isPure:false,mutatesOnly:undefined})}toDisplayString(){return`[Return ${this.returnValue.toDisplayString()}]`}visit(context,containingGenerator){(0,_invariant.default)(containingGenerator===this.containingGenerator,"This entry requires effects to be applied and may not be moved");this.returnValue=context.visitEquivalentValue(this.returnValue);return true}serialize(context){context.emit(context.serializeReturnValue(this.returnValue))}getDependencies(){return undefined}}class BindingAssignmentEntry extends GeneratorEntry{constructor(realm,
binding,value){super(realm);this.binding=binding;this.value=value}print(printer){printer.printGeneratorEntry(undefined,"BINDING_ASSIGNMENT",[this.value],{binding:this.binding},{isPure:false,mutatesOnly:undefined})}toDisplayString(){return`[BindingAssignment ${this.binding.name} = ${this.value.toDisplayString()}]`}serialize(context){context.emit(context.serializeBindingAssignment(this.binding,this.value))}visit(context,containingGenerator){this.value=context.visitBindingAssignment(this.binding,this.value);
return true}getDependencies(){return undefined}}class Generator{constructor(realm,name,pathConditions,effects){(0,_invariant.default)(realm.useAbstractInterpretation);let realmPreludeGenerator=realm.preludeGenerator;(0,_invariant.default)(realmPreludeGenerator);this.preludeGenerator=realmPreludeGenerator;this.realm=realm;this._entries=[];this.id=realm.nextGeneratorId++;this._name=name;this.effectsToApply=effects;this.pathConditions=pathConditions}print(printer){for(let entry of this._entries)entry.print(printer)}toDisplayString(){return _singletons.Utils.jsonToDisplayString(this,
2)}toDisplayJson(depth){if(depth<=0)return`Generator${this.id}-${this._name}`;return _singletons.Utils.verboseToDisplayJson(this,depth)}static _generatorOfEffects(realm,name,additionalFunctionEffects,optimizedFunction,preEvaluationComponentToWriteEffectFunction,effects){let {result,generator,modifiedBindings,modifiedProperties,createdObjects}=effects;let output=new Generator(realm,name,generator.pathConditions,effects);output.appendGenerator(generator,generator._name);for(let propertyBinding of modifiedProperties.keys()){let object=
propertyBinding.object;(0,_invariant.default)(object.isValid());if(createdObjects.has(object))continue;if(_index.ObjectValue.refuseSerializationOnPropertyBinding(propertyBinding))continue;if(object.isIntrinsic())continue;output.emitPropertyModification(propertyBinding)}for(let [modifiedBinding,previousValue]of modifiedBindings.entries()){let cannonicalize=(functionValue)=>preEvaluationComponentToWriteEffectFunction.get(functionValue)||functionValue;let optimizedFunctionValue=optimizedFunction;(0,
_invariant.default)(optimizedFunctionValue);(0,_invariant.default)(cannonicalize(optimizedFunctionValue)===optimizedFunctionValue,"These values should be canonical already");let valueOrParentEqualsFunction=(functionValue)=>{let canonicalOptimizedFunction=cannonicalize(functionValue);if(canonicalOptimizedFunction===optimizedFunctionValue)return true;let additionalEffects=additionalFunctionEffects.get(canonicalOptimizedFunction);(0,_invariant.default)(additionalEffects!==undefined);let parent=additionalEffects.parentAdditionalFunction;
if(parent!==undefined)return valueOrParentEqualsFunction(parent);return false};let environment=modifiedBinding.environment;if(environment instanceof _environment.FunctionEnvironmentRecord&&environment.$FunctionObject===optimizedFunctionValue)continue;let creatingOptimizedFunction=environment.creatingOptimizedFunction;if(creatingOptimizedFunction&&valueOrParentEqualsFunction(creatingOptimizedFunction))continue;if(modifiedBinding.value||previousValue.value)output.emitBindingModification(modifiedBinding)}if(result instanceof
_index.UndefinedValue)return output;if(result instanceof _completions.SimpleNormalCompletion)output.emitReturnValue(result.value);else if(result instanceof _completions.ThrowCompletion)output.emitThrow(result.value);else if(result instanceof _completions.JoinedNormalAndAbruptCompletions){let selector=(c)=>c instanceof _completions.ThrowCompletion&&c.value!==realm.intrinsics.__bottomValue&&!(c.value instanceof _index.EmptyValue);output.emitConditionalThrow(_singletons.Join.joinValuesOfSelectedCompletions(selector,
result,true));output.emitReturnValue(result.value)}else(0,_invariant.default)(false);return output}static fromEffects(effects,realm,name,additionalFunctionEffects,preEvaluationComponentToWriteEffectFunction,optimizedFunction){return realm.withEffectsAppliedInGlobalEnv(this._generatorOfEffects.bind(this,realm,name,additionalFunctionEffects,optimizedFunction,preEvaluationComponentToWriteEffectFunction),effects)}emitPropertyModification(propertyBinding){(0,_invariant.default)(this.effectsToApply!==undefined);
let desc=propertyBinding.descriptor;if(desc!==undefined&&desc instanceof _descriptors.PropertyDescriptor){let value=desc.value;if(value instanceof _index.AbstractValue)if(value.kind==="conditional"){let [c,x,y]=value.args;if(c instanceof _index.AbstractValue&&c.kind==="template for property name condition"){let ydesc=new _descriptors.PropertyDescriptor(Object.assign({},desc,{value:y}));let yprop=Object.assign({},propertyBinding,{descriptor:ydesc});this.emitPropertyModification(yprop);let xdesc=new _descriptors.PropertyDescriptor(Object.assign({},
desc,{value:x}));let key=c.args[0];(0,_invariant.default)(key instanceof _index.AbstractValue);let xprop=Object.assign({},propertyBinding,{key,descriptor:xdesc});this.emitPropertyModification(xprop);return}}else if(value.kind==="template for prototype member expression")return}this._entries.push(new ModifiedPropertyEntry(this.realm,{propertyBinding,newDescriptor:desc,containingGenerator:this}))}emitBindingModification(modifiedBinding){(0,_invariant.default)(this.effectsToApply!==undefined);this._entries.push(new ModifiedBindingEntry(this.realm,
{modifiedBinding,containingGenerator:this}))}emitReturnValue(result){this._entries.push(new ReturnValueEntry(this.realm,this,result))}getName(){return`${this._name}(#${this.id})`}empty(){return this._entries.length===0}emitGlobalDeclaration(key,value){this.preludeGenerator.declaredGlobals.add(key);if(!(value instanceof _index.UndefinedValue))this.emitGlobalAssignment(key,value)}emitGlobalAssignment(key,value){this._addEntry({args:[value,new _index.StringValue(this.realm,key)],operationDescriptor:createOperationDescriptor("GLOBAL_ASSIGNMENT")})}emitConcreteModel(key,
value){this._addEntry({args:[(0,_singletons.concretize)(this.realm,value),new _index.StringValue(this.realm,key)],operationDescriptor:createOperationDescriptor("CONCRETE_MODEL")})}emitGlobalDelete(key){this._addEntry({args:[new _index.StringValue(this.realm,key)],operationDescriptor:createOperationDescriptor("GLOBAL_DELETE")})}emitBindingAssignment(binding,value){this._entries.push(new BindingAssignmentEntry(this.realm,binding,value))}emitPropertyAssignment(object,key,value){if(object instanceof _index.ObjectValue&&
object.refuseSerialization)return;if(typeof key==="string")key=new _index.StringValue(this.realm,key);this._addEntry({args:[object,value,key],operationDescriptor:createOperationDescriptor("EMIT_PROPERTY_ASSIGNMENT",{value})})}emitDefineProperty(object,key,desc,isDescChanged=true){if(object.refuseSerialization)return;if(desc.enumerable&&desc.configurable&&desc.writable&&desc.value&&!isDescChanged){let descValue=desc.value;(0,_invariant.default)(descValue instanceof _index.Value);this.emitPropertyAssignment(object,
key,descValue)}else{desc=new _descriptors.PropertyDescriptor(desc);let descValue=desc.value||object.$Realm.intrinsics.undefined;(0,_invariant.default)(descValue instanceof _index.Value);this._addEntry({args:[new _index.StringValue(this.realm,key),object,descValue,desc.get||object.$Realm.intrinsics.undefined,desc.set||object.$Realm.intrinsics.undefined],operationDescriptor:createOperationDescriptor("DEFINE_PROPERTY",{object,descriptor:desc})})}}emitPropertyDelete(object,key){if(object.refuseSerialization)return;
this._addEntry({args:[object,new _index.StringValue(this.realm,key)],operationDescriptor:createOperationDescriptor("PROPERTY_DELETE")})}emitCall(callFunctionRef,args){this._addEntry({args,operationDescriptor:createOperationDescriptor("EMIT_CALL",{callFunctionRef})})}emitConsoleLog(method,args){this._addEntry({args:[new _index.StringValue(this.realm,method),...args.map((v)=>typeof v==="string"?new _index.StringValue(this.realm,v):v)],operationDescriptor:createOperationDescriptor("CONSOLE_LOG")})}emitDoWhileStatement(test,
body){this._addEntry({args:[],operationDescriptor:createOperationDescriptor("DO_WHILE",{generator:body,value:test})})}emitConditionalThrow(value){if(value instanceof _index.EmptyValue)return;this._issueThrowCompilerDiagnostic(value);this._addEntry({args:[value],operationDescriptor:createOperationDescriptor("CONDITIONAL_THROW",{value})})}_issueThrowCompilerDiagnostic(value){let message="Program may terminate with exception";if(value instanceof _index.ObjectValue){let object=value;let objectMessage=
this.realm.evaluateWithUndo(()=>object._SafeGetDataPropertyValue("message"));if(objectMessage instanceof _index.StringValue)message+=`: ${objectMessage.value}`;const objectStack=this.realm.evaluateWithUndo(()=>object._SafeGetDataPropertyValue("stack"));if(objectStack instanceof _index.StringValue)message+=`
  ${objectStack.value}`}const diagnostic=new _errors.CompilerDiagnostic(message,value.expressionLocation,"PP0023","Warning");this.realm.handleError(diagnostic)}emitThrow(value){this._issueThrowCompilerDiagnostic(value);this.emitStatement([value],createOperationDescriptor("THROW"))}emitFullInvariant(object,key,value){if(object.refuseSerialization)return;if(value instanceof _index.AbstractValue){let isTop=false;let concreteComparisons=[];let typeComparisons=new Set;function populateComparisonsLists(absValue){if(absValue.kind===
"abstractConcreteUnion")for(let nestedValue of absValue.args)if(nestedValue instanceof _index.ConcreteValue)concreteComparisons.push(nestedValue);else{(0,_invariant.default)(nestedValue instanceof _index.AbstractValue);populateComparisonsLists(nestedValue)}else if(absValue.getType()===_index.Value)isTop=true;else typeComparisons.add(absValue.getType())}populateComparisonsLists(value);if(isTop)return;else this._emitInvariant([new _index.StringValue(this.realm,key),value,value],createOperationDescriptor("FULL_INVARIANT_ABSTRACT",
{concreteComparisons,typeComparisons}),createOperationDescriptor("INVARIANT_APPEND"))}else if(value instanceof _index.FunctionValue)this._emitInvariant([new _index.StringValue(this.realm,key),object,value,object],createOperationDescriptor("FULL_INVARIANT_FUNCTION"),createOperationDescriptor("INVARIANT_APPEND"));else this._emitInvariant([new _index.StringValue(this.realm,key),object,value,object],createOperationDescriptor("FULL_INVARIANT"),createOperationDescriptor("INVARIANT_APPEND"))}emitPropertyInvariant(object,
key,state){if(object.refuseSerialization)return;this._emitInvariant([new _index.StringValue(this.realm,key),object,object],createOperationDescriptor("PROPERTY_INVARIANT",{state}),createOperationDescriptor("INVARIANT_APPEND"))}_emitInvariant(args,violationConditionOperationDescriptor,appendLastToInvariantOperationDescriptor){(0,_invariant.default)(this.realm.invariantLevel>0);let invariantOperationDescriptor=createOperationDescriptor("INVARIANT",{appendLastToInvariantOperationDescriptor,violationConditionOperationDescriptor});
this._addEntry({args,operationDescriptor:invariantOperationDescriptor})}emitCallAndCaptureResult(types,values,callFunctionRef,args,kind){return this.deriveAbstract(types,values,args,createOperationDescriptor("EMIT_CALL_AND_CAPTURE_RESULT",{callFunctionRef}),{kind})}emitStatement(args,operationDescriptor){(0,_invariant.default)(typeof operationDescriptor!=="function");this._addEntry({args,operationDescriptor})}emitVoidExpression(types,values,args,operationDescriptor){this._addEntry({args,operationDescriptor});
return this.realm.intrinsics.undefined}emitForInStatement(o,lh,sourceObject,targetObject,boundName){this._addEntry({args:[o,targetObject,sourceObject,targetObject,sourceObject],operationDescriptor:createOperationDescriptor("FOR_IN",{boundName,lh})})}deriveConcreteObject(buildValue,args,operationDescriptor,optionalArgs){let id=this.preludeGenerator.nameGenerator.generate("derived");let value=buildValue(id);value.intrinsicNameGenerated=true;value.isScopedTemplate=true;(0,_invariant.default)(value.intrinsicName===
id);this._addDerivedEntry({isPure:optionalArgs?optionalArgs.isPure:undefined,declared:value,args,operationDescriptor});return value}deriveAbstract(types,values,args,operationDescriptor,optionalArgs){let id=this.preludeGenerator.nameGenerator.generate("derived");let options={};if(optionalArgs&&optionalArgs.kind!==undefined)options.kind=optionalArgs.kind;if(optionalArgs&&optionalArgs.shape!==undefined)options.shape=optionalArgs.shape;let Constructor=_index.Value.isTypeCompatibleWith(types.getType(),
_index.ObjectValue)?_index.AbstractObjectValue:_index.AbstractValue;let res=new Constructor(this.realm,types,values,0x629fa01b936e0+this.realm.derivedIds.size,[],createOperationDescriptor("IDENTIFIER",{id}),options);res.intrinsicName=id;this._addDerivedEntry({isPure:optionalArgs?optionalArgs.isPure:undefined,declared:res,args,operationDescriptor,mutatesOnly:optionalArgs?optionalArgs.mutatesOnly:undefined});let type=types.getType();if(optionalArgs&&optionalArgs.skipInvariant)return res;let typeofString;
if(type instanceof _index.FunctionValue)typeofString="function";else if(type===_index.UndefinedValue)(0,_invariant.default)(false);else if(type===_index.NullValue)(0,_invariant.default)(false);else if(type===_index.StringValue)typeofString="string";else if(type===_index.BooleanValue)typeofString="boolean";else if(type===_index.NumberValue)typeofString="number";else if(type===_index.IntegralValue)typeofString="number";else if(type===_index.SymbolValue)typeofString="symbol";else if(type===_index.ObjectValue)typeofString=
"object";if(typeofString!==undefined&&this.realm.invariantLevel>=1)this._emitInvariant([new _index.StringValue(this.realm,typeofString),res,res],createOperationDescriptor("DERIVED_ABSTRACT_INVARIANT"),createOperationDescriptor("SINGLE_ARG"));return res}visit(callbacks){let visitFn=()=>{for(let entry of this._entries)entry.visit(callbacks,this);return null};if(this.effectsToApply)this.realm.withEffectsAppliedInGlobalEnv(visitFn,this.effectsToApply);else visitFn()}serialize(context){let serializeFn=
()=>{context.initGenerator(this);for(let entry of this._entries)entry.serialize(context);context.finalizeGenerator(this);return null};if(this.effectsToApply)this.realm.withEffectsAppliedInGlobalEnv(serializeFn,this.effectsToApply);else serializeFn()}getDependencies(){let res=[];for(let entry of this._entries){let dependencies=entry.getDependencies();if(dependencies!==undefined)res.push(...dependencies)}return res}_addEntry(entryArgs){let entry;let operationDescriptor=entryArgs.operationDescriptor;
if(operationDescriptor&&operationDescriptor.type==="OBJECT_ASSIGN")entry=new TemporalObjectAssignEntry(this.realm,entryArgs);else entry=new TemporalOperationEntry(this.realm,entryArgs);this.realm.saveTemporalGeneratorEntryArgs(entry);this._entries.push(entry);return entry}_addDerivedEntry(entryArgs){let declared=entryArgs.declared;(0,_invariant.default)(declared!==undefined);let id=declared.intrinsicName;(0,_invariant.default)(id!==undefined);let entry=this._addEntry(entryArgs);this.realm.derivedIds.set(id,
entry)}appendGenerator(other,leadingComment){(0,_invariant.default)(other!==this);(0,_invariant.default)(other.realm===this.realm);(0,_invariant.default)(other.preludeGenerator===this.preludeGenerator);(0,_invariant.default)(other.effectsToApply===undefined);if(other.empty())return;this._entries.push(...other._entries)}joinGenerators(joinCondition,generator1,generator2){(0,_invariant.default)(generator1!==this&&generator2!==this&&generator1!==generator2);if(generator1.empty()&&generator2.empty())return;
let generators=[generator1,generator2];this._addEntry({args:[joinCondition],operationDescriptor:createOperationDescriptor("JOIN_GENERATORS",{generators})})}}exports.Generator=Generator;function attemptToMergeEquivalentObjectAssigns(realm,callbacks,temporalOperationEntry){let args=temporalOperationEntry.args;if(args.length<2)return"NO_OPTIMIZATION";let to=args[0];loopThroughArgs:for(let i=1;i<args.length;i++){let possibleOtherObjectAssignTo=args[i];if(!callbacks.canOmit(possibleOtherObjectAssignTo))continue;
if(possibleOtherObjectAssignTo instanceof _index.AbstractObjectValue){let otherTemporalOperationEntry=realm.getTemporalOperationEntryFromDerivedValue(possibleOtherObjectAssignTo);if(!(otherTemporalOperationEntry instanceof TemporalObjectAssignEntry))continue;let otherArgs=otherTemporalOperationEntry.args;if(otherArgs.length<1)continue;let otherArgsToUse=[];for(let x=1;x<otherArgs.length;x++){let arg=otherArgs[x];if(arg instanceof _index.ObjectValue&&arg.mightBeLeakedObject())continue loopThroughArgs;
if(arg instanceof _index.ObjectValue||arg instanceof _index.AbstractValue){let temporalGeneratorEntries=realm.getTemporalGeneratorEntriesReferencingArg(arg);if(temporalGeneratorEntries!==undefined)for(let temporalGeneratorEntry of temporalGeneratorEntries){if(temporalGeneratorEntry instanceof TemporalObjectAssignEntry)continue;if(temporalGeneratorEntry.notEqualToAndDoesNotHappenBefore(otherTemporalOperationEntry)&&temporalGeneratorEntry.notEqualToAndDoesNotHappenAfter(temporalOperationEntry))continue loopThroughArgs}}otherArgsToUse.push(arg)}if(!callbacks.canOmit(to)){let prefixArgs=
args.slice(1,i-1);let suffixArgs=args.slice(i+1);let newArgs=[to,...prefixArgs,...otherArgsToUse,...suffixArgs];let newTemporalObjectAssignEntryArgs=Object.assign({},temporalOperationEntry,{args:newArgs});return new TemporalObjectAssignEntry(realm,newTemporalObjectAssignEntryArgs)}return"POSSIBLE_OPTIMIZATION"}}return"NO_OPTIMIZATION"}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.PreludeGenerator=exports.DisablePlaceholderSuffix=exports.Placeholders=
void 0;var t=_interopRequireWildcard(__webpack_require__(21));var _babelhelpers=__webpack_require__(239);var _NameGenerator=__webpack_require__(240);var _template=_interopRequireDefault(__webpack_require__(241));var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const Placeholders="ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");exports.Placeholders=Placeholders;const placeholderDefaultWhiteList=new Set(["global"]);const placeholderWhitelist=new Set([...placeholderDefaultWhiteList,...Placeholders]);const DisablePlaceholderSuffix="// disable placeholders";
exports.DisablePlaceholderSuffix=DisablePlaceholderSuffix;class PreludeGenerator{constructor(debugNames,uniqueSuffix){this.prelude=[];this.memoizedRefs=new Map;this.nameGenerator=new _NameGenerator.NameGenerator(new Set,!!debugNames,uniqueSuffix||"","_$");this.usesThis=false;this.declaredGlobals=new Set;this.nextInvariantId=0;this._expressionTemplates=new Map}createNameGenerator(prefix){return new _NameGenerator.NameGenerator(this.nameGenerator.forbiddenNames,this.nameGenerator.debugNames,this.nameGenerator.uniqueSuffix,
prefix)}convertStringToMember(str){return str.split(".").map((name)=>{if(name==="global")return this.memoizeReference(name);else if(name==="this")return t.thisExpression();else return t.identifier(name)}).reduce((obj,prop)=>t.memberExpression(obj,prop))}globalReference(key,globalScope=false){if(globalScope&&t.isValidIdentifier(key))return t.identifier(key);return(0,_babelhelpers.memberExpressionHelper)(this.memoizeReference("global"),key)}memoizeReference(key){let ref=this.memoizedRefs.get(key);if(ref)return ref;
let init;if(key.includes("(")||key.includes("["))init=t.identifier(key);else if(key==="global"){this.usesThis=true;init=t.thisExpression()}else{let i=key.lastIndexOf(".");if(i===-1)init=t.memberExpression(this.memoizeReference("global"),t.identifier(key));else init=t.memberExpression(this.memoizeReference(key.substr(0,i)),t.identifier(key.substr(i+1)))}ref=t.identifier(this.nameGenerator.generate(key));this.prelude.push(t.variableDeclaration("var",[t.variableDeclarator(ref,init)]));this.memoizedRefs.set(key,
ref);return ref}buildExpression(code,templateArguments){let disablePlaceholders=false;const key=code;let template=this._expressionTemplates.get(key);if(template===undefined){if(code.endsWith(DisablePlaceholderSuffix)){code=code.substring(0,code.length-DisablePlaceholderSuffix.length);disablePlaceholders=true}template=(0,_template.default)(code,{placeholderPattern:false,placeholderWhitelist:disablePlaceholders?placeholderDefaultWhiteList:placeholderWhitelist});this._expressionTemplates.set(key,template)}if(code.includes("global"))templateArguments=
Object.assign({global:this.memoizeReference("global")},templateArguments);let result=template(templateArguments).expression;(0,_invariant.default)(result!==undefined,"Code does not represent an expression: "+code);return result}}exports.PreludeGenerator=PreludeGenerator},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.getAsPropertyNameExpression=getAsPropertyNameExpression;exports.memberExpressionHelper=memberExpressionHelper;exports.optionalStringOfLocation=
optionalStringOfLocation;exports.stringOfLocation=stringOfLocation;exports.protoExpression=exports.constructorExpression=exports.emptyExpression=exports.nullExpression=exports.voidExpression=void 0;var t=_interopRequireWildcard(__webpack_require__(21));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const voidExpression=t.unaryExpression("void",t.numericLiteral(0),true);exports.voidExpression=voidExpression;const nullExpression=t.nullLiteral();exports.nullExpression=nullExpression;const emptyExpression=t.identifier("__empty");exports.emptyExpression=emptyExpression;const constructorExpression=t.identifier("__constructor");exports.constructorExpression=constructorExpression;
const protoExpression=t.identifier("__proto__");exports.protoExpression=protoExpression;function getAsPropertyNameExpression(key,canBeIdentifier=true){let index=Number.parseInt(key,10);if(index>=0&&index.toString()===key)return t.numericLiteral(index);if(canBeIdentifier){let keyIsAscii=/^[\u0000-\u007f]*$/.test(key);if(t.isValidIdentifier(key)&&keyIsAscii)return t.identifier(key)}return t.stringLiteral(key)}function memberExpressionHelper(object,property){let propertyExpression;let computed;if(typeof property===
"string"){propertyExpression=getAsPropertyNameExpression(property);computed=!t.isIdentifier(propertyExpression)}else if(t.isStringLiteral(property)){propertyExpression=getAsPropertyNameExpression(property.value);computed=!t.isIdentifier(propertyExpression)}else{propertyExpression=property;computed=true}return t.memberExpression(object,propertyExpression,computed)}function optionalStringOfLocation(location){return location?` at location ${stringOfLocation(location)}`:""}function stringOfLocation(location){return`${location.source||
"(unknown source file)"}[${location.start.line}:${location.start.column}]`}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.NameGenerator=void 0;var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function escapeInvalidIdentifierCharacters(s){let res="";for(let c of s)if(c>="0"&&c<="9"||c>="a"&&c<="z"||c>="A"&&c<="Z")res+=c;else res+="_"+c.charCodeAt(0);
return res}const base62characters="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";function base62encode(n){(0,_invariant.default)((n|0)===n&&n>=0);if(n===0)return"0";let s="";while(n>0){let f=n%base62characters.length;s=base62characters[f]+s;n=(n-f)/base62characters.length}return s}class NameGenerator{constructor(forbiddenNames,debugNames,uniqueSuffix,prefix){this.prefix=prefix;this.uidCounter=0;this.debugNames=debugNames;this.forbiddenNames=forbiddenNames;this.uniqueSuffix=uniqueSuffix}generate(debugSuffix){let id;
do{id=this.prefix+base62encode(this.uidCounter++);if(this.uniqueSuffix.length>0)id+=this.uniqueSuffix;if(this.debugNames)if(debugSuffix)id+="_"+escapeInvalidIdentifierCharacters(debugSuffix);else id+="_"}while(this.forbiddenNames.has(id));return id}}exports.NameGenerator=NameGenerator},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.program=exports.expression=exports.statements=exports.statement=exports.smart=void 0;var formatters=
_interopRequireWildcard(__webpack_require__(242));var _builder=_interopRequireDefault(__webpack_require__(243));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,
key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const smart=(0,_builder.default)(formatters.smart);exports.smart=smart;const statement=(0,_builder.default)(formatters.statement);exports.statement=statement;const statements=(0,_builder.default)(formatters.statements);exports.statements=statements;const expression=(0,_builder.default)(formatters.expression);exports.expression=expression;const program=(0,_builder.default)(formatters.program);exports.program=program;var _default=
Object.assign(smart.bind(undefined),{smart,statement,statements,expression,program,ast:smart.ast});exports.default=_default},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.program=exports.expression=exports.statement=exports.statements=exports.smart=void 0;function makeStatementFormatter(fn){return{code:(str)=>`/* @babel/template */;\n${str}`,validate:()=>{},unwrap:(ast)=>{return fn(ast.program.body.slice(1))}}}const smart=makeStatementFormatter((body)=>
{if(body.length>1)return body;else return body[0]});exports.smart=smart;const statements=makeStatementFormatter((body)=>body);exports.statements=statements;const statement=makeStatementFormatter((body)=>{if(body.length===0)throw new Error("Found nothing to return.");if(body.length>1)throw new Error("Found multiple statements but wanted one");return body[0]});exports.statement=statement;const expression={code:(str)=>`(\n${str}\n)`,validate:({program})=>{if(program.body.length>1)throw new Error("Found multiple statements but wanted one");
const expression=program.body[0].expression;if(expression.start===0)throw new Error("Parse result included parens.");},unwrap:(ast)=>ast.program.body[0].expression};exports.expression=expression;const program={code:(str)=>str,validate:()=>{},unwrap:(ast)=>ast.program};exports.program=program},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=createTemplateBuilder;var _options=__webpack_require__(244);var _string=_interopRequireDefault(__webpack_require__(245));
var _literal=_interopRequireDefault(__webpack_require__(267));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const NO_PLACEHOLDER=(0,_options.validate)({placeholderPattern:false});function createTemplateBuilder(formatter,defaultOpts){const templateFnCache=new WeakMap;const templateAstCache=new WeakMap;const cachedOpts=defaultOpts||(0,_options.validate)(null);return Object.assign((tpl,...args)=>{if(typeof tpl==="string"){if(args.length>1)throw new Error("Unexpected extra params.");
return extendedTrace((0,_string.default)(formatter,tpl,(0,_options.merge)(cachedOpts,(0,_options.validate)(args[0]))))}else if(Array.isArray(tpl)){let builder=templateFnCache.get(tpl);if(!builder){builder=(0,_literal.default)(formatter,tpl,cachedOpts);templateFnCache.set(tpl,builder)}return extendedTrace(builder(args))}else if(typeof tpl==="object"&&tpl){if(args.length>0)throw new Error("Unexpected extra params.");return createTemplateBuilder(formatter,(0,_options.merge)(cachedOpts,(0,_options.validate)(tpl)))}throw new Error(`Unexpected template param ${typeof tpl}`);
},{ast:(tpl,...args)=>{if(typeof tpl==="string"){if(args.length>1)throw new Error("Unexpected extra params.");return(0,_string.default)(formatter,tpl,(0,_options.merge)((0,_options.merge)(cachedOpts,(0,_options.validate)(args[0])),NO_PLACEHOLDER))()}else if(Array.isArray(tpl)){let builder=templateAstCache.get(tpl);if(!builder){builder=(0,_literal.default)(formatter,tpl,(0,_options.merge)(cachedOpts,NO_PLACEHOLDER));templateAstCache.set(tpl,builder)}return builder(args)()}throw new Error(`Unexpected template param ${typeof tpl}`);
}})}function extendedTrace(fn){let rootStack="";try{throw new Error;}catch(error){if(error.stack)rootStack=error.stack.split("\n").slice(3).join("\n")}return(arg)=>{try{return fn(arg)}catch(err){err.stack+=`\n    =============\n${rootStack}`;throw err;}}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.merge=merge;exports.validate=validate;exports.normalizeReplacements=normalizeReplacements;function _objectWithoutPropertiesLoose(source,
excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function merge(a,b){const {placeholderWhitelist=a.placeholderWhitelist,placeholderPattern=a.placeholderPattern,preserveComments=a.preserveComments}=b;return{parser:Object.assign({},a.parser,b.parser),placeholderWhitelist,placeholderPattern,preserveComments}}function validate(opts){if(opts!=
null&&typeof opts!=="object")throw new Error("Unknown template options.");const _ref=opts||{},{placeholderWhitelist,placeholderPattern,preserveComments}=_ref,parser=_objectWithoutPropertiesLoose(_ref,["placeholderWhitelist","placeholderPattern","preserveComments"]);if(placeholderWhitelist!=null&&!(placeholderWhitelist instanceof Set))throw new Error("'.placeholderWhitelist' must be a Set, null, or undefined");if(placeholderPattern!=null&&!(placeholderPattern instanceof RegExp)&&placeholderPattern!==
false)throw new Error("'.placeholderPattern' must be a RegExp, false, null, or undefined");if(preserveComments!=null&&typeof preserveComments!=="boolean")throw new Error("'.preserveComments' must be a boolean, null, or undefined");return{parser,placeholderWhitelist:placeholderWhitelist||undefined,placeholderPattern:placeholderPattern==null?undefined:placeholderPattern,preserveComments:preserveComments==null?false:preserveComments}}function normalizeReplacements(replacements){if(Array.isArray(replacements))return replacements.reduce((acc,
replacement,i)=>{acc["$"+i]=replacement;return acc},{});else if(typeof replacements==="object"||replacements==null)return replacements||undefined;throw new Error("Template replacements must be an array, object, null, or undefined");}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=stringTemplate;var _options=__webpack_require__(244);var _parse=_interopRequireDefault(__webpack_require__(246));var _populate=_interopRequireDefault(__webpack_require__(266));
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function stringTemplate(formatter,code,opts){code=formatter.code(code);let metadata;return(arg)=>{const replacements=(0,_options.normalizeReplacements)(arg);if(!metadata)metadata=(0,_parse.default)(formatter,code,opts);return formatter.unwrap((0,_populate.default)(metadata,replacements))}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=parseAndBuildMetadata;
function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _parser(){const data=__webpack_require__(247);_parser=function(){return data};return data}function _codeFrame(){const data=__webpack_require__(248);_codeFrame=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&
Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const PATTERN=/^[_$A-Z0-9]+$/;function parseAndBuildMetadata(formatter,code,opts){const ast=parseWithCodeFrame(code,opts.parser);const {placeholderWhitelist,placeholderPattern=PATTERN,preserveComments}=opts;t().removePropertiesDeep(ast,{preserveComments});formatter.validate(ast);const placeholders=[];const placeholderNames=
new Set;t().traverse(ast,placeholderVisitorHandler,{placeholders,placeholderNames,placeholderWhitelist,placeholderPattern});return{ast,placeholders,placeholderNames}}function placeholderVisitorHandler(node,ancestors,state){let name;if(t().isIdentifier(node)||t().isJSXIdentifier(node))name=node.name;else if(t().isStringLiteral(node))name=node.value;else return;if((!state.placeholderPattern||!state.placeholderPattern.test(name))&&(!state.placeholderWhitelist||!state.placeholderWhitelist.has(name)))return;
ancestors=ancestors.slice();const {node:parent,key}=ancestors[ancestors.length-1];let type;if(t().isStringLiteral(node))type="string";else if(t().isNewExpression(parent)&&key==="arguments"||t().isCallExpression(parent)&&key==="arguments"||t().isFunction(parent)&&key==="params")type="param";else if(t().isExpressionStatement(parent)){type="statement";ancestors=ancestors.slice(0,-1)}else type="other";state.placeholders.push({name,type,resolve:(ast)=>resolveAncestors(ast,ancestors),isDuplicate:state.placeholderNames.has(name)});
state.placeholderNames.add(name)}function resolveAncestors(ast,ancestors){let parent=ast;for(let i=0;i<ancestors.length-1;i++){const {key,index}=ancestors[i];if(index===undefined)parent=parent[key];else parent=parent[key][index]}const {key,index}=ancestors[ancestors.length-1];return{parent,key,index}}function parseWithCodeFrame(code,parserOpts){parserOpts=Object.assign({allowReturnOutsideFunction:true,allowSuperOutsideMethod:true,sourceType:"module"},parserOpts);try{return(0,_parser().parse)(code,
parserOpts)}catch(err){const loc=err.loc;if(loc){err.message+="\n"+(0,_codeFrame().codeFrameColumns)(code,{start:loc});err.code="BABEL_TEMPLATE_PARSE_ERROR"}throw err;}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});const beforeExpr=true;const startsExpr=true;const isLoop=true;const isAssign=true;const prefix=true;const postfix=true;class TokenType{constructor(label,conf={}){this.label=label;this.keyword=conf.keyword;this.beforeExpr=!!conf.beforeExpr;
this.startsExpr=!!conf.startsExpr;this.rightAssociative=!!conf.rightAssociative;this.isLoop=!!conf.isLoop;this.isAssign=!!conf.isAssign;this.prefix=!!conf.prefix;this.postfix=!!conf.postfix;this.binop=conf.binop===0?0:conf.binop||null;this.updateContext=null}}function KeywordTokenType(keyword,options={}){return new TokenType(keyword,Object.assign({},options,{keyword}))}function BinopTokenType(name,binop){return new TokenType(name,{beforeExpr,binop})}const types={num:new TokenType("num",{startsExpr}),
bigint:new TokenType("bigint",{startsExpr}),regexp:new TokenType("regexp",{startsExpr}),string:new TokenType("string",{startsExpr}),name:new TokenType("name",{startsExpr}),eof:new TokenType("eof"),bracketL:new TokenType("[",{beforeExpr,startsExpr}),bracketR:new TokenType("]"),braceL:new TokenType("{",{beforeExpr,startsExpr}),braceBarL:new TokenType("{|",{beforeExpr,startsExpr}),braceR:new TokenType("}"),braceBarR:new TokenType("|}"),parenL:new TokenType("(",{beforeExpr,startsExpr}),parenR:new TokenType(")"),
comma:new TokenType(",",{beforeExpr}),semi:new TokenType(";",{beforeExpr}),colon:new TokenType(":",{beforeExpr}),doubleColon:new TokenType("::",{beforeExpr}),dot:new TokenType("."),question:new TokenType("?",{beforeExpr}),questionDot:new TokenType("?."),arrow:new TokenType("=>",{beforeExpr}),template:new TokenType("template"),ellipsis:new TokenType("...",{beforeExpr}),backQuote:new TokenType("`",{startsExpr}),dollarBraceL:new TokenType("${",{beforeExpr,startsExpr}),at:new TokenType("@"),hash:new TokenType("#",
{startsExpr}),interpreterDirective:new TokenType("#!..."),eq:new TokenType("=",{beforeExpr,isAssign}),assign:new TokenType("_=",{beforeExpr,isAssign}),incDec:new TokenType("++/--",{prefix,postfix,startsExpr}),bang:new TokenType("!",{beforeExpr,prefix,startsExpr}),tilde:new TokenType("~",{beforeExpr,prefix,startsExpr}),pipeline:BinopTokenType("|>",0),nullishCoalescing:BinopTokenType("??",1),logicalOR:BinopTokenType("||",1),logicalAND:BinopTokenType("&&",2),bitwiseOR:BinopTokenType("|",3),bitwiseXOR:BinopTokenType("^",
4),bitwiseAND:BinopTokenType("&",5),equality:BinopTokenType("==/!=",6),relational:BinopTokenType("</>",7),bitShift:BinopTokenType("<</>>",8),plusMin:new TokenType("+/-",{beforeExpr,binop:9,prefix,startsExpr}),modulo:BinopTokenType("%",10),star:BinopTokenType("*",10),slash:BinopTokenType("/",10),exponent:new TokenType("**",{beforeExpr,binop:11,rightAssociative:true})};function makeKeywordProps(name,conf){return{value:KeywordTokenType(name,conf),enumerable:true}}const keywords=Object.create(null,{break:makeKeywordProps("break"),
case:makeKeywordProps("case",{beforeExpr}),catch:makeKeywordProps("catch"),continue:makeKeywordProps("continue"),debugger:makeKeywordProps("debugger"),default:makeKeywordProps("default",{beforeExpr}),do:makeKeywordProps("do",{isLoop,beforeExpr}),else:makeKeywordProps("else",{beforeExpr}),finally:makeKeywordProps("finally"),for:makeKeywordProps("for",{isLoop}),function:makeKeywordProps("function",{startsExpr}),if:makeKeywordProps("if"),return:makeKeywordProps("return",{beforeExpr}),switch:makeKeywordProps("switch"),
throw:makeKeywordProps("throw",{beforeExpr,prefix,startsExpr}),try:makeKeywordProps("try"),var:makeKeywordProps("var"),const:makeKeywordProps("const"),while:makeKeywordProps("while",{isLoop}),with:makeKeywordProps("with"),new:makeKeywordProps("new",{beforeExpr,startsExpr}),this:makeKeywordProps("this",{startsExpr}),super:makeKeywordProps("super",{startsExpr}),class:makeKeywordProps("class",{startsExpr}),extends:makeKeywordProps("extends",{beforeExpr}),export:makeKeywordProps("export"),import:makeKeywordProps("import",
{startsExpr}),null:makeKeywordProps("null",{startsExpr}),true:makeKeywordProps("true",{startsExpr}),false:makeKeywordProps("false",{startsExpr}),in:makeKeywordProps("in",{beforeExpr,binop:7}),instanceof:makeKeywordProps("instanceof",{beforeExpr,binop:7}),typeof:makeKeywordProps("typeof",{beforeExpr,prefix,startsExpr}),void:makeKeywordProps("void",{beforeExpr,prefix,startsExpr}),delete:makeKeywordProps("delete",{beforeExpr,prefix,startsExpr})});Object.keys(keywords).forEach((name)=>{types["_"+name]=
keywords[name]});function isSimpleProperty(node){return node!=null&&node.type==="Property"&&node.kind==="init"&&node.method===false}var estree=(superClass)=>class extends superClass{estreeParseRegExpLiteral({pattern,flags}){let regex=null;try{regex=new RegExp(pattern,flags)}catch(e){}const node=this.estreeParseLiteral(regex);node.regex={pattern,flags};return node}estreeParseLiteral(value){return this.parseLiteral(value,"Literal")}directiveToStmt(directive){const directiveLiteral=directive.value;const stmt=
this.startNodeAt(directive.start,directive.loc.start);const expression=this.startNodeAt(directiveLiteral.start,directiveLiteral.loc.start);expression.value=directiveLiteral.value;expression.raw=directiveLiteral.extra.raw;stmt.expression=this.finishNodeAt(expression,"Literal",directiveLiteral.end,directiveLiteral.loc.end);stmt.directive=directiveLiteral.extra.raw.slice(1,-1);return this.finishNodeAt(stmt,"ExpressionStatement",directive.end,directive.loc.end)}initFunction(node,isAsync){super.initFunction(node,
isAsync);node.expression=false}checkDeclaration(node){if(isSimpleProperty(node))this.checkDeclaration(node.value);else super.checkDeclaration(node)}checkGetterSetterParams(method){const prop=method;const paramCount=prop.kind==="get"?0:1;const start=prop.start;if(prop.value.params.length!==paramCount)if(prop.kind==="get")this.raise(start,"getter must not have any formal parameters");else this.raise(start,"setter must have exactly one formal parameter");if(prop.kind==="set"&&prop.value.params[0].type===
"RestElement")this.raise(start,"setter function argument must not be a rest parameter")}checkLVal(expr,isBinding,checkClashes,contextDescription){switch(expr.type){case "ObjectPattern":expr.properties.forEach((prop)=>{this.checkLVal(prop.type==="Property"?prop.value:prop,isBinding,checkClashes,"object destructuring pattern")});break;default:super.checkLVal(expr,isBinding,checkClashes,contextDescription)}}checkPropClash(prop,propHash){if(prop.computed||!isSimpleProperty(prop))return;const key=prop.key;
const name=key.type==="Identifier"?key.name:String(key.value);if(name==="__proto__"){if(propHash.proto)this.raise(key.start,"Redefinition of __proto__ property");propHash.proto=true}}isStrictBody(node){const isBlockStatement=node.body.type==="BlockStatement";if(isBlockStatement&&node.body.body.length>0)for(let _i=0,_node$body$body=node.body.body;_i<_node$body$body.length;_i++){const directive=_node$body$body[_i];if(directive.type==="ExpressionStatement"&&directive.expression.type==="Literal"){if(directive.expression.value===
"use strict")return true}else break}return false}isValidDirective(stmt){return stmt.type==="ExpressionStatement"&&stmt.expression.type==="Literal"&&typeof stmt.expression.value==="string"&&(!stmt.expression.extra||!stmt.expression.extra.parenthesized)}stmtToDirective(stmt){const directive=super.stmtToDirective(stmt);const value=stmt.expression.value;directive.value.value=value;return directive}parseBlockBody(node,allowDirectives,topLevel,end){super.parseBlockBody(node,allowDirectives,topLevel,end);
const directiveStatements=node.directives.map((d)=>this.directiveToStmt(d));node.body=directiveStatements.concat(node.body);delete node.directives}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor){this.parseMethod(method,isGenerator,isAsync,isConstructor,"MethodDefinition");if(method.typeParameters){method.value.typeParameters=method.typeParameters;delete method.typeParameters}classBody.body.push(method)}parseExprAtom(refShorthandDefaultPos){switch(this.state.type){case types.regexp:return this.estreeParseRegExpLiteral(this.state.value);
case types.num:case types.string:return this.estreeParseLiteral(this.state.value);case types._null:return this.estreeParseLiteral(null);case types._true:return this.estreeParseLiteral(true);case types._false:return this.estreeParseLiteral(false);default:return super.parseExprAtom(refShorthandDefaultPos)}}parseLiteral(value,type,startPos,startLoc){const node=super.parseLiteral(value,type,startPos,startLoc);node.raw=node.extra.raw;delete node.extra;return node}parseFunctionBody(node,allowExpression){super.parseFunctionBody(node,
allowExpression);node.expression=node.body.type!=="BlockStatement"}parseMethod(node,isGenerator,isAsync,isConstructor,type){let funcNode=this.startNode();funcNode.kind=node.kind;funcNode=super.parseMethod(funcNode,isGenerator,isAsync,isConstructor,"FunctionExpression");delete funcNode.kind;node.value=funcNode;return this.finishNode(node,type)}parseObjectMethod(prop,isGenerator,isAsync,isPattern,containsEsc){const node=super.parseObjectMethod(prop,isGenerator,isAsync,isPattern,containsEsc);if(node){node.type=
"Property";if(node.kind==="method")node.kind="init";node.shorthand=false}return node}parseObjectProperty(prop,startPos,startLoc,isPattern,refShorthandDefaultPos){const node=super.parseObjectProperty(prop,startPos,startLoc,isPattern,refShorthandDefaultPos);if(node){node.kind="init";node.type="Property"}return node}toAssignable(node,isBinding,contextDescription){if(isSimpleProperty(node)){this.toAssignable(node.value,isBinding,contextDescription);return node}return super.toAssignable(node,isBinding,
contextDescription)}toAssignableObjectExpressionProp(prop,isBinding,isLast){if(prop.kind==="get"||prop.kind==="set")this.raise(prop.key.start,"Object pattern can't contain getter or setter");else if(prop.method)this.raise(prop.key.start,"Object pattern can't contain methods");else super.toAssignableObjectExpressionProp(prop,isBinding,isLast)}};const lineBreak=/\r\n?|[\n\u2028\u2029]/;const lineBreakG=new RegExp(lineBreak.source,"g");function isNewLine(code){switch(code){case 10:case 13:case 8232:case 8233:return true;
default:return false}}const skipWhiteSpace=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;function isWhitespace(code){switch(code){case 9:case 11:case 12:case 32:case 160:case 5760:case 8192:case 8193:case 8194:case 8195:case 8196:case 8197:case 8198:case 8199:case 8200:case 8201:case 8202:case 8239:case 8287:case 12288:case 65279:return true;default:return false}}class TokContext{constructor(token,isExpr,preserveSpace,override){this.token=token;this.isExpr=!!isExpr;this.preserveSpace=!!preserveSpace;this.override=
override}}const types$1={braceStatement:new TokContext("{",false),braceExpression:new TokContext("{",true),templateQuasi:new TokContext("${",false),parenStatement:new TokContext("(",false),parenExpression:new TokContext("(",true),template:new TokContext("`",true,true,(p)=>p.readTmplToken()),functionExpression:new TokContext("function",true),functionStatement:new TokContext("function",false)};types.parenR.updateContext=types.braceR.updateContext=function(){if(this.state.context.length===1){this.state.exprAllowed=
true;return}let out=this.state.context.pop();if(out===types$1.braceStatement&&this.curContext().token==="function")out=this.state.context.pop();this.state.exprAllowed=!out.isExpr};types.name.updateContext=function(prevType){let allowed=false;if(prevType!==types.dot)if(this.state.value==="of"&&!this.state.exprAllowed||this.state.value==="yield"&&this.state.inGenerator)allowed=true;this.state.exprAllowed=allowed;if(this.state.isIterator)this.state.isIterator=false};types.braceL.updateContext=function(prevType){this.state.context.push(this.braceIsBlock(prevType)?
types$1.braceStatement:types$1.braceExpression);this.state.exprAllowed=true};types.dollarBraceL.updateContext=function(){this.state.context.push(types$1.templateQuasi);this.state.exprAllowed=true};types.parenL.updateContext=function(prevType){const statementParens=prevType===types._if||prevType===types._for||prevType===types._with||prevType===types._while;this.state.context.push(statementParens?types$1.parenStatement:types$1.parenExpression);this.state.exprAllowed=true};types.incDec.updateContext=
function(){};types._function.updateContext=types._class.updateContext=function(prevType){if(prevType.beforeExpr&&prevType!==types.semi&&prevType!==types._else&&!(prevType===types._return&&lineBreak.test(this.state.input.slice(this.state.lastTokEnd,this.state.start)))&&!((prevType===types.colon||prevType===types.braceL)&&this.curContext()===types$1.b_stat))this.state.context.push(types$1.functionExpression);else this.state.context.push(types$1.functionStatement);this.state.exprAllowed=false};types.backQuote.updateContext=
function(){if(this.curContext()===types$1.template)this.state.context.pop();else this.state.context.push(types$1.template);this.state.exprAllowed=false};const reservedWords={strict:["implements","interface","let","package","private","protected","public","static","yield"],strictBind:["eval","arguments"]};const reservedWordsStrictSet=new Set(reservedWords.strict);const reservedWordsStrictBindSet=new Set(reservedWords.strict.concat(reservedWords.strictBind));const isReservedWord=(word,inModule)=>{return inModule&&
word==="await"||word==="enum"};function isStrictReservedWord(word,inModule){return isReservedWord(word,inModule)||reservedWordsStrictSet.has(word)}function isStrictBindReservedWord(word,inModule){return isReservedWord(word,inModule)||reservedWordsStrictBindSet.has(word)}const keywords$1=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","while","with","null","true","false","instanceof","typeof","void","delete",
"new","in","this","const","class","extends","export","import","super"]);function isKeyword(word){return keywords$1.has(word)}const keywordRelationalOperator=/^in(stanceof)?$/;let nonASCIIidentifierStartChars="\u00aa\u00b5\u00ba\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u08a0-\u08b4\u08b6-\u08bd\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fef\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7b9\ua7f7-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab65\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
let nonASCIIidentifierChars="\u200c\u200d\u00b7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08d3-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0eb9\u0ebb\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf2-\u1cf4\u1cf7-\u1cf9\u1dc0-\u1df9\u1dfb-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";
const nonASCIIidentifierStart=new RegExp("["+nonASCIIidentifierStartChars+"]");const nonASCIIidentifier=new RegExp("["+nonASCIIidentifierStartChars+nonASCIIidentifierChars+"]");nonASCIIidentifierStartChars=nonASCIIidentifierChars=null;const astralIdentifierStartCodes=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,
4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,
129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];const astralIdentifierCodes=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,
1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,
792487,239];function isInAstralSet(code,set){let pos=65536;for(let i=0,length=set.length;i<length;i+=2){pos+=set[i];if(pos>code)return false;pos+=set[i+1];if(pos>=code)return true}return false}function isIdentifierStart(code){if(code<65)return code===36;if(code<=90)return true;if(code<97)return code===95;if(code<=122)return true;if(code<=65535)return code>=170&&nonASCIIidentifierStart.test(String.fromCharCode(code));return isInAstralSet(code,astralIdentifierStartCodes)}function isIteratorStart(current,
next){return current===64&&next===64}function isIdentifierChar(code){if(code<48)return code===36;if(code<58)return true;if(code<65)return false;if(code<=90)return true;if(code<97)return code===95;if(code<=122)return true;if(code<=65535)return code>=170&&nonASCIIidentifier.test(String.fromCharCode(code));return isInAstralSet(code,astralIdentifierStartCodes)||isInAstralSet(code,astralIdentifierCodes)}const reservedTypes=["any","bool","boolean","empty","false","mixed","null","number","static","string",
"true","typeof","void","interface","extends","_"];function isEsModuleType(bodyElement){return bodyElement.type==="DeclareExportAllDeclaration"||bodyElement.type==="DeclareExportDeclaration"&&(!bodyElement.declaration||bodyElement.declaration.type!=="TypeAlias"&&bodyElement.declaration.type!=="InterfaceDeclaration")}function hasTypeImportKind(node){return node.importKind==="type"||node.importKind==="typeof"}function isMaybeDefaultImport(state){return(state.type===types.name||!!state.type.keyword)&&
state.value!=="from"}const exportSuggestions={const:"declare export var",let:"declare export var",type:"export type",interface:"export interface"};function partition(list,test){const list1=[];const list2=[];for(let i=0;i<list.length;i++)(test(list[i],i,list)?list1:list2).push(list[i]);return[list1,list2]}const FLOW_PRAGMA_REGEX=/\*?\s*@((?:no)?flow)\b/;var flow=(superClass)=>class extends superClass{constructor(options,input){super(options,input);this.flowPragma=undefined}shouldParseTypes(){return this.getPluginOption("flow",
"all")||this.flowPragma==="flow"}addComment(comment){if(this.flowPragma===undefined){const matches=FLOW_PRAGMA_REGEX.exec(comment.value);if(!matches)this.flowPragma=null;else if(matches[1]==="flow")this.flowPragma="flow";else if(matches[1]==="noflow")this.flowPragma="noflow";else throw new Error("Unexpected flow pragma");}return super.addComment(comment)}flowParseTypeInitialiser(tok){const oldInType=this.state.inType;this.state.inType=true;this.expect(tok||types.colon);const type=this.flowParseType();
this.state.inType=oldInType;return type}flowParsePredicate(){const node=this.startNode();const moduloLoc=this.state.startLoc;const moduloPos=this.state.start;this.expect(types.modulo);const checksLoc=this.state.startLoc;this.expectContextual("checks");if(moduloLoc.line!==checksLoc.line||moduloLoc.column!==checksLoc.column-1)this.raise(moduloPos,"Spaces between \u00b4%\u00b4 and \u00b4checks\u00b4 are not allowed here.");if(this.eat(types.parenL)){node.value=this.parseExpression();this.expect(types.parenR);
return this.finishNode(node,"DeclaredPredicate")}else return this.finishNode(node,"InferredPredicate")}flowParseTypeAndPredicateInitialiser(){const oldInType=this.state.inType;this.state.inType=true;this.expect(types.colon);let type=null;let predicate=null;if(this.match(types.modulo)){this.state.inType=oldInType;predicate=this.flowParsePredicate()}else{type=this.flowParseType();this.state.inType=oldInType;if(this.match(types.modulo))predicate=this.flowParsePredicate()}return[type,predicate]}flowParseDeclareClass(node){this.next();
this.flowParseInterfaceish(node,true);return this.finishNode(node,"DeclareClass")}flowParseDeclareFunction(node){this.next();const id=node.id=this.parseIdentifier();const typeNode=this.startNode();const typeContainer=this.startNode();if(this.isRelational("<"))typeNode.typeParameters=this.flowParseTypeParameterDeclaration();else typeNode.typeParameters=null;this.expect(types.parenL);const tmp=this.flowParseFunctionTypeParams();typeNode.params=tmp.params;typeNode.rest=tmp.rest;this.expect(types.parenR);
[typeNode.returnType,node.predicate]=this.flowParseTypeAndPredicateInitialiser();typeContainer.typeAnnotation=this.finishNode(typeNode,"FunctionTypeAnnotation");id.typeAnnotation=this.finishNode(typeContainer,"TypeAnnotation");this.finishNode(id,id.type);this.semicolon();return this.finishNode(node,"DeclareFunction")}flowParseDeclare(node,insideModule){if(this.match(types._class))return this.flowParseDeclareClass(node);else if(this.match(types._function))return this.flowParseDeclareFunction(node);
else if(this.match(types._var))return this.flowParseDeclareVariable(node);else if(this.isContextual("module"))if(this.lookahead().type===types.dot)return this.flowParseDeclareModuleExports(node);else{if(insideModule)this.unexpected(null,"`declare module` cannot be used inside another `declare module`");return this.flowParseDeclareModule(node)}else if(this.isContextual("type"))return this.flowParseDeclareTypeAlias(node);else if(this.isContextual("opaque"))return this.flowParseDeclareOpaqueType(node);
else if(this.isContextual("interface"))return this.flowParseDeclareInterface(node);else if(this.match(types._export))return this.flowParseDeclareExportDeclaration(node,insideModule);else throw this.unexpected();}flowParseDeclareVariable(node){this.next();node.id=this.flowParseTypeAnnotatableIdentifier(true);this.semicolon();return this.finishNode(node,"DeclareVariable")}flowParseDeclareModule(node){this.next();if(this.match(types.string))node.id=this.parseExprAtom();else node.id=this.parseIdentifier();
const bodyNode=node.body=this.startNode();const body=bodyNode.body=[];this.expect(types.braceL);while(!this.match(types.braceR)){let bodyNode=this.startNode();if(this.match(types._import)){const lookahead=this.lookahead();if(lookahead.value!=="type"&&lookahead.value!=="typeof")this.unexpected(null,"Imports within a `declare module` body must always be `import type` or `import typeof`");this.next();this.parseImport(bodyNode)}else{this.expectContextual("declare","Only declares and type imports are allowed inside declare module");
bodyNode=this.flowParseDeclare(bodyNode,true)}body.push(bodyNode)}this.expect(types.braceR);this.finishNode(bodyNode,"BlockStatement");let kind=null;let hasModuleExport=false;const errorMessage="Found both `declare module.exports` and `declare export` in the same module. "+"Modules can only have 1 since they are either an ES module or they are a CommonJS module";body.forEach((bodyElement)=>{if(isEsModuleType(bodyElement)){if(kind==="CommonJS")this.unexpected(bodyElement.start,errorMessage);kind="ES"}else if(bodyElement.type===
"DeclareModuleExports"){if(hasModuleExport)this.unexpected(bodyElement.start,"Duplicate `declare module.exports` statement");if(kind==="ES")this.unexpected(bodyElement.start,errorMessage);kind="CommonJS";hasModuleExport=true}});node.kind=kind||"CommonJS";return this.finishNode(node,"DeclareModule")}flowParseDeclareExportDeclaration(node,insideModule){this.expect(types._export);if(this.eat(types._default)){if(this.match(types._function)||this.match(types._class))node.declaration=this.flowParseDeclare(this.startNode());
else{node.declaration=this.flowParseType();this.semicolon()}node.default=true;return this.finishNode(node,"DeclareExportDeclaration")}else{if(this.match(types._const)||this.isLet()||(this.isContextual("type")||this.isContextual("interface"))&&!insideModule){const label=this.state.value;const suggestion=exportSuggestions[label];this.unexpected(this.state.start,`\`declare export ${label}\` is not supported. Use \`${suggestion}\` instead`)}if(this.match(types._var)||this.match(types._function)||this.match(types._class)||
this.isContextual("opaque")){node.declaration=this.flowParseDeclare(this.startNode());node.default=false;return this.finishNode(node,"DeclareExportDeclaration")}else if(this.match(types.star)||this.match(types.braceL)||this.isContextual("interface")||this.isContextual("type")||this.isContextual("opaque")){node=this.parseExport(node);if(node.type==="ExportNamedDeclaration"){node.type="ExportDeclaration";node.default=false;delete node.exportKind}node.type="Declare"+node.type;return node}}throw this.unexpected();
}flowParseDeclareModuleExports(node){this.expectContextual("module");this.expect(types.dot);this.expectContextual("exports");node.typeAnnotation=this.flowParseTypeAnnotation();this.semicolon();return this.finishNode(node,"DeclareModuleExports")}flowParseDeclareTypeAlias(node){this.next();this.flowParseTypeAlias(node);return this.finishNode(node,"DeclareTypeAlias")}flowParseDeclareOpaqueType(node){this.next();this.flowParseOpaqueType(node,true);return this.finishNode(node,"DeclareOpaqueType")}flowParseDeclareInterface(node){this.next();
this.flowParseInterfaceish(node);return this.finishNode(node,"DeclareInterface")}flowParseInterfaceish(node,isClass=false){node.id=this.flowParseRestrictedIdentifier(!isClass);if(this.isRelational("<"))node.typeParameters=this.flowParseTypeParameterDeclaration();else node.typeParameters=null;node.extends=[];node.implements=[];node.mixins=[];if(this.eat(types._extends)){do node.extends.push(this.flowParseInterfaceExtends());while(!isClass&&this.eat(types.comma))}if(this.isContextual("mixins")){this.next();
do node.mixins.push(this.flowParseInterfaceExtends());while(this.eat(types.comma))}if(this.isContextual("implements")){this.next();do node.implements.push(this.flowParseInterfaceExtends());while(this.eat(types.comma))}node.body=this.flowParseObjectType({allowStatic:isClass,allowExact:false,allowSpread:false,allowProto:isClass,allowInexact:false})}flowParseInterfaceExtends(){const node=this.startNode();node.id=this.flowParseQualifiedTypeIdentifier();if(this.isRelational("<"))node.typeParameters=this.flowParseTypeParameterInstantiation();
else node.typeParameters=null;return this.finishNode(node,"InterfaceExtends")}flowParseInterface(node){this.flowParseInterfaceish(node);return this.finishNode(node,"InterfaceDeclaration")}checkNotUnderscore(word){if(word==="_")throw this.unexpected(null,"`_` is only allowed as a type argument to call or new");}checkReservedType(word,startLoc){if(reservedTypes.indexOf(word)>-1)this.raise(startLoc,`Cannot overwrite reserved type ${word}`)}flowParseRestrictedIdentifier(liberal){this.checkReservedType(this.state.value,
this.state.start);return this.parseIdentifier(liberal)}flowParseTypeAlias(node){node.id=this.flowParseRestrictedIdentifier();if(this.isRelational("<"))node.typeParameters=this.flowParseTypeParameterDeclaration();else node.typeParameters=null;node.right=this.flowParseTypeInitialiser(types.eq);this.semicolon();return this.finishNode(node,"TypeAlias")}flowParseOpaqueType(node,declare){this.expectContextual("type");node.id=this.flowParseRestrictedIdentifier(true);if(this.isRelational("<"))node.typeParameters=
this.flowParseTypeParameterDeclaration();else node.typeParameters=null;node.supertype=null;if(this.match(types.colon))node.supertype=this.flowParseTypeInitialiser(types.colon);node.impltype=null;if(!declare)node.impltype=this.flowParseTypeInitialiser(types.eq);this.semicolon();return this.finishNode(node,"OpaqueType")}flowParseTypeParameter(allowDefault=true,requireDefault=false){if(!allowDefault&&requireDefault)throw new Error("Cannot disallow a default value (`allowDefault`) while also requiring it (`requireDefault`).");
const nodeStart=this.state.start;const node=this.startNode();const variance=this.flowParseVariance();const ident=this.flowParseTypeAnnotatableIdentifier();node.name=ident.name;node.variance=variance;node.bound=ident.typeAnnotation;if(this.match(types.eq))if(allowDefault){this.eat(types.eq);node.default=this.flowParseType()}else this.unexpected();else if(requireDefault)this.unexpected(nodeStart,"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.");
return this.finishNode(node,"TypeParameter")}flowParseTypeParameterDeclaration(allowDefault=true){const oldInType=this.state.inType;const node=this.startNode();node.params=[];this.state.inType=true;if(this.isRelational("<")||this.match(types.jsxTagStart))this.next();else this.unexpected();let defaultRequired=false;do{const typeParameter=this.flowParseTypeParameter(allowDefault,defaultRequired);node.params.push(typeParameter);if(typeParameter.default)defaultRequired=true;if(!this.isRelational(">"))this.expect(types.comma)}while(!this.isRelational(">"));
this.expectRelational(">");this.state.inType=oldInType;return this.finishNode(node,"TypeParameterDeclaration")}flowParseTypeParameterInstantiation(){const node=this.startNode();const oldInType=this.state.inType;node.params=[];this.state.inType=true;this.expectRelational("<");const oldNoAnonFunctionType=this.state.noAnonFunctionType;this.state.noAnonFunctionType=false;while(!this.isRelational(">")){node.params.push(this.flowParseType());if(!this.isRelational(">"))this.expect(types.comma)}this.state.noAnonFunctionType=
oldNoAnonFunctionType;this.expectRelational(">");this.state.inType=oldInType;return this.finishNode(node,"TypeParameterInstantiation")}flowParseTypeParameterInstantiationCallOrNew(){const node=this.startNode();const oldInType=this.state.inType;node.params=[];this.state.inType=true;this.expectRelational("<");while(!this.isRelational(">")){node.params.push(this.flowParseTypeOrImplicitInstantiation());if(!this.isRelational(">"))this.expect(types.comma)}this.expectRelational(">");this.state.inType=oldInType;
return this.finishNode(node,"TypeParameterInstantiation")}flowParseInterfaceType(){const node=this.startNode();this.expectContextual("interface");node.extends=[];if(this.eat(types._extends)){do node.extends.push(this.flowParseInterfaceExtends());while(this.eat(types.comma))}node.body=this.flowParseObjectType({allowStatic:false,allowExact:false,allowSpread:false,allowProto:false,allowInexact:false});return this.finishNode(node,"InterfaceTypeAnnotation")}flowParseObjectPropertyKey(){return this.match(types.num)||
this.match(types.string)?this.parseExprAtom():this.parseIdentifier(true)}flowParseObjectTypeIndexer(node,isStatic,variance){node.static=isStatic;if(this.lookahead().type===types.colon){node.id=this.flowParseObjectPropertyKey();node.key=this.flowParseTypeInitialiser()}else{node.id=null;node.key=this.flowParseType()}this.expect(types.bracketR);node.value=this.flowParseTypeInitialiser();node.variance=variance;return this.finishNode(node,"ObjectTypeIndexer")}flowParseObjectTypeInternalSlot(node,isStatic){node.static=
isStatic;node.id=this.flowParseObjectPropertyKey();this.expect(types.bracketR);this.expect(types.bracketR);if(this.isRelational("<")||this.match(types.parenL)){node.method=true;node.optional=false;node.value=this.flowParseObjectTypeMethodish(this.startNodeAt(node.start,node.loc.start))}else{node.method=false;if(this.eat(types.question))node.optional=true;node.value=this.flowParseTypeInitialiser()}return this.finishNode(node,"ObjectTypeInternalSlot")}flowParseObjectTypeMethodish(node){node.params=
[];node.rest=null;node.typeParameters=null;if(this.isRelational("<"))node.typeParameters=this.flowParseTypeParameterDeclaration(false);this.expect(types.parenL);while(!this.match(types.parenR)&&!this.match(types.ellipsis)){node.params.push(this.flowParseFunctionTypeParam());if(!this.match(types.parenR))this.expect(types.comma)}if(this.eat(types.ellipsis))node.rest=this.flowParseFunctionTypeParam();this.expect(types.parenR);node.returnType=this.flowParseTypeInitialiser();return this.finishNode(node,
"FunctionTypeAnnotation")}flowParseObjectTypeCallProperty(node,isStatic){const valueNode=this.startNode();node.static=isStatic;node.value=this.flowParseObjectTypeMethodish(valueNode);return this.finishNode(node,"ObjectTypeCallProperty")}flowParseObjectType({allowStatic,allowExact,allowSpread,allowProto,allowInexact}){const oldInType=this.state.inType;this.state.inType=true;const nodeStart=this.startNode();nodeStart.callProperties=[];nodeStart.properties=[];nodeStart.indexers=[];nodeStart.internalSlots=
[];let endDelim;let exact;let inexact=false;if(allowExact&&this.match(types.braceBarL)){this.expect(types.braceBarL);endDelim=types.braceBarR;exact=true}else{this.expect(types.braceL);endDelim=types.braceR;exact=false}nodeStart.exact=exact;while(!this.match(endDelim)){let isStatic=false;let protoStart=null;const node=this.startNode();if(allowProto&&this.isContextual("proto")){const lookahead=this.lookahead();if(lookahead.type!==types.colon&&lookahead.type!==types.question){this.next();protoStart=
this.state.start;allowStatic=false}}if(allowStatic&&this.isContextual("static")){const lookahead=this.lookahead();if(lookahead.type!==types.colon&&lookahead.type!==types.question){this.next();isStatic=true}}const variance=this.flowParseVariance();if(this.eat(types.bracketL)){if(protoStart!=null)this.unexpected(protoStart);if(this.eat(types.bracketL)){if(variance)this.unexpected(variance.start);nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node,isStatic))}else nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node,
isStatic,variance))}else if(this.match(types.parenL)||this.isRelational("<")){if(protoStart!=null)this.unexpected(protoStart);if(variance)this.unexpected(variance.start);nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node,isStatic))}else{let kind="init";if(this.isContextual("get")||this.isContextual("set")){const lookahead=this.lookahead();if(lookahead.type===types.name||lookahead.type===types.string||lookahead.type===types.num){kind=this.state.value;this.next()}}const propOrInexact=
this.flowParseObjectTypeProperty(node,isStatic,protoStart,variance,kind,allowSpread,allowInexact);if(propOrInexact===null)inexact=true;else nodeStart.properties.push(propOrInexact)}this.flowObjectTypeSemicolon()}this.expect(endDelim);if(allowSpread)nodeStart.inexact=inexact;const out=this.finishNode(nodeStart,"ObjectTypeAnnotation");this.state.inType=oldInType;return out}flowParseObjectTypeProperty(node,isStatic,protoStart,variance,kind,allowSpread,allowInexact){if(this.match(types.ellipsis)){if(!allowSpread)this.unexpected(null,
"Spread operator cannot appear in class or interface definitions");if(protoStart!=null)this.unexpected(protoStart);if(variance)this.unexpected(variance.start,"Spread properties cannot have variance");this.expect(types.ellipsis);const isInexactToken=this.eat(types.comma)||this.eat(types.semi);if(this.match(types.braceR)){if(allowInexact)return null;this.unexpected(null,"Explicit inexact syntax is only allowed inside inexact objects")}if(this.match(types.braceBarR))this.unexpected(null,"Explicit inexact syntax cannot appear inside an explicit exact object type");
if(isInexactToken)this.unexpected(null,"Explicit inexact syntax must appear at the end of an inexact object");node.argument=this.flowParseType();return this.finishNode(node,"ObjectTypeSpreadProperty")}else{node.key=this.flowParseObjectPropertyKey();node.static=isStatic;node.proto=protoStart!=null;node.kind=kind;let optional=false;if(this.isRelational("<")||this.match(types.parenL)){node.method=true;if(protoStart!=null)this.unexpected(protoStart);if(variance)this.unexpected(variance.start);node.value=
this.flowParseObjectTypeMethodish(this.startNodeAt(node.start,node.loc.start));if(kind==="get"||kind==="set")this.flowCheckGetterSetterParams(node)}else{if(kind!=="init")this.unexpected();node.method=false;if(this.eat(types.question))optional=true;node.value=this.flowParseTypeInitialiser();node.variance=variance}node.optional=optional;return this.finishNode(node,"ObjectTypeProperty")}}flowCheckGetterSetterParams(property){const paramCount=property.kind==="get"?0:1;const start=property.start;const length=
property.value.params.length+(property.value.rest?1:0);if(length!==paramCount)if(property.kind==="get")this.raise(start,"getter must not have any formal parameters");else this.raise(start,"setter must have exactly one formal parameter");if(property.kind==="set"&&property.value.rest)this.raise(start,"setter function argument must not be a rest parameter")}flowObjectTypeSemicolon(){if(!this.eat(types.semi)&&!this.eat(types.comma)&&!this.match(types.braceR)&&!this.match(types.braceBarR))this.unexpected()}flowParseQualifiedTypeIdentifier(startPos,
startLoc,id){startPos=startPos||this.state.start;startLoc=startLoc||this.state.startLoc;let node=id||this.parseIdentifier();while(this.eat(types.dot)){const node2=this.startNodeAt(startPos,startLoc);node2.qualification=node;node2.id=this.parseIdentifier();node=this.finishNode(node2,"QualifiedTypeIdentifier")}return node}flowParseGenericType(startPos,startLoc,id){const node=this.startNodeAt(startPos,startLoc);node.typeParameters=null;node.id=this.flowParseQualifiedTypeIdentifier(startPos,startLoc,
id);if(this.isRelational("<"))node.typeParameters=this.flowParseTypeParameterInstantiation();return this.finishNode(node,"GenericTypeAnnotation")}flowParseTypeofType(){const node=this.startNode();this.expect(types._typeof);node.argument=this.flowParsePrimaryType();return this.finishNode(node,"TypeofTypeAnnotation")}flowParseTupleType(){const node=this.startNode();node.types=[];this.expect(types.bracketL);while(this.state.pos<this.state.length&&!this.match(types.bracketR)){node.types.push(this.flowParseType());
if(this.match(types.bracketR))break;this.expect(types.comma)}this.expect(types.bracketR);return this.finishNode(node,"TupleTypeAnnotation")}flowParseFunctionTypeParam(){let name=null;let optional=false;let typeAnnotation=null;const node=this.startNode();const lh=this.lookahead();if(lh.type===types.colon||lh.type===types.question){name=this.parseIdentifier();if(this.eat(types.question))optional=true;typeAnnotation=this.flowParseTypeInitialiser()}else typeAnnotation=this.flowParseType();node.name=name;
node.optional=optional;node.typeAnnotation=typeAnnotation;return this.finishNode(node,"FunctionTypeParam")}reinterpretTypeAsFunctionTypeParam(type){const node=this.startNodeAt(type.start,type.loc.start);node.name=null;node.optional=false;node.typeAnnotation=type;return this.finishNode(node,"FunctionTypeParam")}flowParseFunctionTypeParams(params=[]){let rest=null;while(!this.match(types.parenR)&&!this.match(types.ellipsis)){params.push(this.flowParseFunctionTypeParam());if(!this.match(types.parenR))this.expect(types.comma)}if(this.eat(types.ellipsis))rest=
this.flowParseFunctionTypeParam();return{params,rest}}flowIdentToTypeAnnotation(startPos,startLoc,node,id){switch(id.name){case "any":return this.finishNode(node,"AnyTypeAnnotation");case "bool":case "boolean":return this.finishNode(node,"BooleanTypeAnnotation");case "mixed":return this.finishNode(node,"MixedTypeAnnotation");case "empty":return this.finishNode(node,"EmptyTypeAnnotation");case "number":return this.finishNode(node,"NumberTypeAnnotation");case "string":return this.finishNode(node,"StringTypeAnnotation");
default:this.checkNotUnderscore(id.name);return this.flowParseGenericType(startPos,startLoc,id)}}flowParsePrimaryType(){const startPos=this.state.start;const startLoc=this.state.startLoc;const node=this.startNode();let tmp;let type;let isGroupedType=false;const oldNoAnonFunctionType=this.state.noAnonFunctionType;switch(this.state.type){case types.name:if(this.isContextual("interface"))return this.flowParseInterfaceType();return this.flowIdentToTypeAnnotation(startPos,startLoc,node,this.parseIdentifier());
case types.braceL:return this.flowParseObjectType({allowStatic:false,allowExact:false,allowSpread:true,allowProto:false,allowInexact:true});case types.braceBarL:return this.flowParseObjectType({allowStatic:false,allowExact:true,allowSpread:true,allowProto:false,allowInexact:false});case types.bracketL:return this.flowParseTupleType();case types.relational:if(this.state.value==="<"){node.typeParameters=this.flowParseTypeParameterDeclaration(false);this.expect(types.parenL);tmp=this.flowParseFunctionTypeParams();
node.params=tmp.params;node.rest=tmp.rest;this.expect(types.parenR);this.expect(types.arrow);node.returnType=this.flowParseType();return this.finishNode(node,"FunctionTypeAnnotation")}break;case types.parenL:this.next();if(!this.match(types.parenR)&&!this.match(types.ellipsis))if(this.match(types.name)){const token=this.lookahead().type;isGroupedType=token!==types.question&&token!==types.colon}else isGroupedType=true;if(isGroupedType){this.state.noAnonFunctionType=false;type=this.flowParseType();
this.state.noAnonFunctionType=oldNoAnonFunctionType;if(this.state.noAnonFunctionType||!(this.match(types.comma)||this.match(types.parenR)&&this.lookahead().type===types.arrow)){this.expect(types.parenR);return type}else this.eat(types.comma)}if(type)tmp=this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);else tmp=this.flowParseFunctionTypeParams();node.params=tmp.params;node.rest=tmp.rest;this.expect(types.parenR);this.expect(types.arrow);node.returnType=this.flowParseType();
node.typeParameters=null;return this.finishNode(node,"FunctionTypeAnnotation");case types.string:return this.parseLiteral(this.state.value,"StringLiteralTypeAnnotation");case types._true:case types._false:node.value=this.match(types._true);this.next();return this.finishNode(node,"BooleanLiteralTypeAnnotation");case types.plusMin:if(this.state.value==="-"){this.next();if(!this.match(types.num))this.unexpected(null,`Unexpected token, expected "number"`);return this.parseLiteral(-this.state.value,"NumberLiteralTypeAnnotation",
node.start,node.loc.start)}this.unexpected();case types.num:return this.parseLiteral(this.state.value,"NumberLiteralTypeAnnotation");case types._void:this.next();return this.finishNode(node,"VoidTypeAnnotation");case types._null:this.next();return this.finishNode(node,"NullLiteralTypeAnnotation");case types._this:this.next();return this.finishNode(node,"ThisTypeAnnotation");case types.star:this.next();return this.finishNode(node,"ExistsTypeAnnotation");default:if(this.state.type.keyword==="typeof")return this.flowParseTypeofType();
else if(this.state.type.keyword){const label=this.state.type.label;this.next();return super.createIdentifier(node,label)}}throw this.unexpected();}flowParsePostfixType(){const startPos=this.state.start,startLoc=this.state.startLoc;let type=this.flowParsePrimaryType();while(this.match(types.bracketL)&&!this.canInsertSemicolon()){const node=this.startNodeAt(startPos,startLoc);node.elementType=type;this.expect(types.bracketL);this.expect(types.bracketR);type=this.finishNode(node,"ArrayTypeAnnotation")}return type}flowParsePrefixType(){const node=
this.startNode();if(this.eat(types.question)){node.typeAnnotation=this.flowParsePrefixType();return this.finishNode(node,"NullableTypeAnnotation")}else return this.flowParsePostfixType()}flowParseAnonFunctionWithoutParens(){const param=this.flowParsePrefixType();if(!this.state.noAnonFunctionType&&this.eat(types.arrow)){const node=this.startNodeAt(param.start,param.loc.start);node.params=[this.reinterpretTypeAsFunctionTypeParam(param)];node.rest=null;node.returnType=this.flowParseType();node.typeParameters=
null;return this.finishNode(node,"FunctionTypeAnnotation")}return param}flowParseIntersectionType(){const node=this.startNode();this.eat(types.bitwiseAND);const type=this.flowParseAnonFunctionWithoutParens();node.types=[type];while(this.eat(types.bitwiseAND))node.types.push(this.flowParseAnonFunctionWithoutParens());return node.types.length===1?type:this.finishNode(node,"IntersectionTypeAnnotation")}flowParseUnionType(){const node=this.startNode();this.eat(types.bitwiseOR);const type=this.flowParseIntersectionType();
node.types=[type];while(this.eat(types.bitwiseOR))node.types.push(this.flowParseIntersectionType());return node.types.length===1?type:this.finishNode(node,"UnionTypeAnnotation")}flowParseType(){const oldInType=this.state.inType;this.state.inType=true;const type=this.flowParseUnionType();this.state.inType=oldInType;this.state.exprAllowed=this.state.exprAllowed||this.state.noAnonFunctionType;return type}flowParseTypeOrImplicitInstantiation(){if(this.state.type===types.name&&this.state.value==="_"){const startPos=
this.state.start;const startLoc=this.state.startLoc;const node=this.parseIdentifier();return this.flowParseGenericType(startPos,startLoc,node)}else return this.flowParseType()}flowParseTypeAnnotation(){const node=this.startNode();node.typeAnnotation=this.flowParseTypeInitialiser();return this.finishNode(node,"TypeAnnotation")}flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride){const ident=allowPrimitiveOverride?this.parseIdentifier():this.flowParseRestrictedIdentifier();if(this.match(types.colon)){ident.typeAnnotation=
this.flowParseTypeAnnotation();this.finishNode(ident,ident.type)}return ident}typeCastToParameter(node){node.expression.typeAnnotation=node.typeAnnotation;return this.finishNodeAt(node.expression,node.expression.type,node.typeAnnotation.end,node.typeAnnotation.loc.end)}flowParseVariance(){let variance=null;if(this.match(types.plusMin)){variance=this.startNode();if(this.state.value==="+")variance.kind="plus";else variance.kind="minus";this.next();this.finishNode(variance,"Variance")}return variance}parseFunctionBody(node,
allowExpressionBody){if(allowExpressionBody)return this.forwardNoArrowParamsConversionAt(node,()=>super.parseFunctionBody(node,true));return super.parseFunctionBody(node,false)}parseFunctionBodyAndFinish(node,type,allowExpressionBody){if(!allowExpressionBody&&this.match(types.colon)){const typeNode=this.startNode();[typeNode.typeAnnotation,node.predicate]=this.flowParseTypeAndPredicateInitialiser();node.returnType=typeNode.typeAnnotation?this.finishNode(typeNode,"TypeAnnotation"):null}super.parseFunctionBodyAndFinish(node,
type,allowExpressionBody)}parseStatement(context,topLevel){if(this.state.strict&&this.match(types.name)&&this.state.value==="interface"){const node=this.startNode();this.next();return this.flowParseInterface(node)}else{const stmt=super.parseStatement(context,topLevel);if(this.flowPragma===undefined&&!this.isValidDirective(stmt))this.flowPragma=null;return stmt}}parseExpressionStatement(node,expr){if(expr.type==="Identifier")if(expr.name==="declare"){if(this.match(types._class)||this.match(types.name)||
this.match(types._function)||this.match(types._var)||this.match(types._export))return this.flowParseDeclare(node)}else if(this.match(types.name))if(expr.name==="interface")return this.flowParseInterface(node);else if(expr.name==="type")return this.flowParseTypeAlias(node);else if(expr.name==="opaque")return this.flowParseOpaqueType(node,false);return super.parseExpressionStatement(node,expr)}shouldParseExportDeclaration(){return this.isContextual("type")||this.isContextual("interface")||this.isContextual("opaque")||
super.shouldParseExportDeclaration()}isExportDefaultSpecifier(){if(this.match(types.name)&&(this.state.value==="type"||this.state.value==="interface"||this.state.value==="opaque"))return false;return super.isExportDefaultSpecifier()}parseConditional(expr,noIn,startPos,startLoc,refNeedsArrowPos){if(!this.match(types.question))return expr;if(refNeedsArrowPos){const state=this.state.clone();try{return super.parseConditional(expr,noIn,startPos,startLoc)}catch(err){if(err instanceof SyntaxError){this.state=
state;refNeedsArrowPos.start=err.pos||this.state.start;return expr}else throw err;}}this.expect(types.question);const state=this.state.clone();const originalNoArrowAt=this.state.noArrowAt;const node=this.startNodeAt(startPos,startLoc);let {consequent,failed}=this.tryParseConditionalConsequent();let [valid,invalid]=this.getArrowLikeExpressions(consequent);if(failed||invalid.length>0){const noArrowAt=[...originalNoArrowAt];if(invalid.length>0){this.state=state;this.state.noArrowAt=noArrowAt;for(let i=
0;i<invalid.length;i++)noArrowAt.push(invalid[i].start);({consequent,failed}=this.tryParseConditionalConsequent());[valid,invalid]=this.getArrowLikeExpressions(consequent)}if(failed&&valid.length>1)this.raise(state.start,"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.");if(failed&&valid.length===1){this.state=state;this.state.noArrowAt=noArrowAt.concat(valid[0].start);({consequent,failed}=this.tryParseConditionalConsequent())}this.getArrowLikeExpressions(consequent,
true)}this.state.noArrowAt=originalNoArrowAt;this.expect(types.colon);node.test=expr;node.consequent=consequent;node.alternate=this.forwardNoArrowParamsConversionAt(node,()=>this.parseMaybeAssign(noIn,undefined,undefined,undefined));return this.finishNode(node,"ConditionalExpression")}tryParseConditionalConsequent(){this.state.noArrowParamsConversionAt.push(this.state.start);const consequent=this.parseMaybeAssign();const failed=!this.match(types.colon);this.state.noArrowParamsConversionAt.pop();return{consequent,
failed}}getArrowLikeExpressions(node,disallowInvalid){const stack=[node];const arrows=[];while(stack.length!==0){const node=stack.pop();if(node.type==="ArrowFunctionExpression"){if(node.typeParameters||!node.returnType){this.toAssignableList(node.params,true,"arrow function parameters");super.checkFunctionNameAndParams(node,true)}else arrows.push(node);stack.push(node.body)}else if(node.type==="ConditionalExpression"){stack.push(node.consequent);stack.push(node.alternate)}}if(disallowInvalid){for(let i=
0;i<arrows.length;i++)this.toAssignableList(node.params,true,"arrow function parameters");return[arrows,[]]}return partition(arrows,(node)=>{try{this.toAssignableList(node.params,true,"arrow function parameters");return true}catch(err){return false}})}forwardNoArrowParamsConversionAt(node,parse){let result;if(this.state.noArrowParamsConversionAt.indexOf(node.start)!==-1){this.state.noArrowParamsConversionAt.push(this.state.start);result=parse();this.state.noArrowParamsConversionAt.pop()}else result=
parse();return result}parseParenItem(node,startPos,startLoc){node=super.parseParenItem(node,startPos,startLoc);if(this.eat(types.question))node.optional=true;if(this.match(types.colon)){const typeCastNode=this.startNodeAt(startPos,startLoc);typeCastNode.expression=node;typeCastNode.typeAnnotation=this.flowParseTypeAnnotation();return this.finishNode(typeCastNode,"TypeCastExpression")}return node}assertModuleNodeAllowed(node){if(node.type==="ImportDeclaration"&&(node.importKind==="type"||node.importKind===
"typeof")||node.type==="ExportNamedDeclaration"&&node.exportKind==="type"||node.type==="ExportAllDeclaration"&&node.exportKind==="type")return;super.assertModuleNodeAllowed(node)}parseExport(node){const decl=super.parseExport(node);if(decl.type==="ExportNamedDeclaration"||decl.type==="ExportAllDeclaration")decl.exportKind=decl.exportKind||"value";return decl}parseExportDeclaration(node){if(this.isContextual("type")){node.exportKind="type";const declarationNode=this.startNode();this.next();if(this.match(types.braceL)){node.specifiers=
this.parseExportSpecifiers();this.parseExportFrom(node);return null}else return this.flowParseTypeAlias(declarationNode)}else if(this.isContextual("opaque")){node.exportKind="type";const declarationNode=this.startNode();this.next();return this.flowParseOpaqueType(declarationNode,false)}else if(this.isContextual("interface")){node.exportKind="type";const declarationNode=this.startNode();this.next();return this.flowParseInterface(declarationNode)}else return super.parseExportDeclaration(node)}eatExportStar(node){if(super.eatExportStar(...arguments))return true;
if(this.isContextual("type")&&this.lookahead().type===types.star){node.exportKind="type";this.next();this.next();return true}return false}maybeParseExportNamespaceSpecifier(node){const pos=this.state.start;const hasNamespace=super.maybeParseExportNamespaceSpecifier(node);if(hasNamespace&&node.exportKind==="type")this.unexpected(pos);return hasNamespace}parseClassId(node,isStatement,optionalId){super.parseClassId(node,isStatement,optionalId);if(this.isRelational("<"))node.typeParameters=this.flowParseTypeParameterDeclaration()}getTokenFromCode(code){const next=
this.state.input.charCodeAt(this.state.pos+1);if(code===123&&next===124)return this.finishOp(types.braceBarL,2);else if(this.state.inType&&(code===62||code===60))return this.finishOp(types.relational,1);else if(isIteratorStart(code,next)){this.state.isIterator=true;return super.readWord()}else return super.getTokenFromCode(code)}toAssignable(node,isBinding,contextDescription){if(node.type==="TypeCastExpression")return super.toAssignable(this.typeCastToParameter(node),isBinding,contextDescription);
else return super.toAssignable(node,isBinding,contextDescription)}toAssignableList(exprList,isBinding,contextDescription){for(let i=0;i<exprList.length;i++){const expr=exprList[i];if(expr&&expr.type==="TypeCastExpression")exprList[i]=this.typeCastToParameter(expr)}return super.toAssignableList(exprList,isBinding,contextDescription)}toReferencedList(exprList,isParenthesizedExpr){for(let i=0;i<exprList.length;i++){const expr=exprList[i];if(expr&&expr.type==="TypeCastExpression"&&(!expr.extra||!expr.extra.parenthesized)&&
(exprList.length>1||!isParenthesizedExpr))this.raise(expr.typeAnnotation.start,"The type cast expression is expected to be wrapped with parenthesis")}return exprList}checkLVal(expr,isBinding,checkClashes,contextDescription){if(expr.type!=="TypeCastExpression")return super.checkLVal(expr,isBinding,checkClashes,contextDescription)}parseClassProperty(node){if(this.match(types.colon))node.typeAnnotation=this.flowParseTypeAnnotation();return super.parseClassProperty(node)}parseClassPrivateProperty(node){if(this.match(types.colon))node.typeAnnotation=
this.flowParseTypeAnnotation();return super.parseClassPrivateProperty(node)}isClassMethod(){return this.isRelational("<")||super.isClassMethod()}isClassProperty(){return this.match(types.colon)||super.isClassProperty()}isNonstaticConstructor(method){return!this.match(types.colon)&&super.isNonstaticConstructor(method)}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor){if(method.variance)this.unexpected(method.variance.start);delete method.variance;if(this.isRelational("<"))method.typeParameters=
this.flowParseTypeParameterDeclaration(false);super.pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor)}pushClassPrivateMethod(classBody,method,isGenerator,isAsync){if(method.variance)this.unexpected(method.variance.start);delete method.variance;if(this.isRelational("<"))method.typeParameters=this.flowParseTypeParameterDeclaration();super.pushClassPrivateMethod(classBody,method,isGenerator,isAsync)}parseClassSuper(node){super.parseClassSuper(node);if(node.superClass&&this.isRelational("<"))node.superTypeParameters=
this.flowParseTypeParameterInstantiation();if(this.isContextual("implements")){this.next();const implemented=node.implements=[];do{const node=this.startNode();node.id=this.flowParseRestrictedIdentifier(true);if(this.isRelational("<"))node.typeParameters=this.flowParseTypeParameterInstantiation();else node.typeParameters=null;implemented.push(this.finishNode(node,"ClassImplements"))}while(this.eat(types.comma))}}parsePropertyName(node){const variance=this.flowParseVariance();const key=super.parsePropertyName(node);
node.variance=variance;return key}parseObjPropValue(prop,startPos,startLoc,isGenerator,isAsync,isPattern,refShorthandDefaultPos,containsEsc){if(prop.variance)this.unexpected(prop.variance.start);delete prop.variance;let typeParameters;if(this.isRelational("<")){typeParameters=this.flowParseTypeParameterDeclaration(false);if(!this.match(types.parenL))this.unexpected()}super.parseObjPropValue(prop,startPos,startLoc,isGenerator,isAsync,isPattern,refShorthandDefaultPos,containsEsc);if(typeParameters)(prop.value||
prop).typeParameters=typeParameters}parseAssignableListItemTypes(param){if(this.eat(types.question)){if(param.type!=="Identifier")throw this.raise(param.start,"A binding pattern parameter cannot be optional in an implementation signature.");param.optional=true}if(this.match(types.colon))param.typeAnnotation=this.flowParseTypeAnnotation();this.finishNode(param,param.type);return param}parseMaybeDefault(startPos,startLoc,left){const node=super.parseMaybeDefault(startPos,startLoc,left);if(node.type===
"AssignmentPattern"&&node.typeAnnotation&&node.right.start<node.typeAnnotation.start)this.raise(node.typeAnnotation.start,"Type annotations must come before default assignments, "+"e.g. instead of `age = 25: number` use `age: number = 25`");return node}shouldParseDefaultImport(node){if(!hasTypeImportKind(node))return super.shouldParseDefaultImport(node);return isMaybeDefaultImport(this.state)}parseImportSpecifierLocal(node,specifier,type,contextDescription){specifier.local=hasTypeImportKind(node)?
this.flowParseRestrictedIdentifier(true):this.parseIdentifier();this.checkLVal(specifier.local,true,undefined,contextDescription);node.specifiers.push(this.finishNode(specifier,type))}maybeParseDefaultImportSpecifier(node){node.importKind="value";let kind=null;if(this.match(types._typeof))kind="typeof";else if(this.isContextual("type"))kind="type";if(kind){const lh=this.lookahead();if(kind==="type"&&lh.type===types.star)this.unexpected(lh.start);if(isMaybeDefaultImport(lh)||lh.type===types.braceL||
lh.type===types.star){this.next();node.importKind=kind}}return super.maybeParseDefaultImportSpecifier(node)}parseImportSpecifier(node){const specifier=this.startNode();const firstIdentLoc=this.state.start;const firstIdent=this.parseIdentifier(true);let specifierTypeKind=null;if(firstIdent.name==="type")specifierTypeKind="type";else if(firstIdent.name==="typeof")specifierTypeKind="typeof";let isBinding=false;if(this.isContextual("as")&&!this.isLookaheadContextual("as")){const as_ident=this.parseIdentifier(true);
if(specifierTypeKind!==null&&!this.match(types.name)&&!this.state.type.keyword){specifier.imported=as_ident;specifier.importKind=specifierTypeKind;specifier.local=as_ident.__clone()}else{specifier.imported=firstIdent;specifier.importKind=null;specifier.local=this.parseIdentifier()}}else if(specifierTypeKind!==null&&(this.match(types.name)||this.state.type.keyword)){specifier.imported=this.parseIdentifier(true);specifier.importKind=specifierTypeKind;if(this.eatContextual("as"))specifier.local=this.parseIdentifier();
else{isBinding=true;specifier.local=specifier.imported.__clone()}}else{isBinding=true;specifier.imported=firstIdent;specifier.importKind=null;specifier.local=specifier.imported.__clone()}const nodeIsTypeImport=hasTypeImportKind(node);const specifierIsTypeImport=hasTypeImportKind(specifier);if(nodeIsTypeImport&&specifierIsTypeImport)this.raise(firstIdentLoc,"The `type` and `typeof` keywords on named imports can only be used on regular "+"`import` statements. It cannot be used with `import type` or `import typeof` statements");
if(nodeIsTypeImport||specifierIsTypeImport)this.checkReservedType(specifier.local.name,specifier.local.start);if(isBinding&&!nodeIsTypeImport&&!specifierIsTypeImport)this.checkReservedWord(specifier.local.name,specifier.start,true,true);this.checkLVal(specifier.local,true,undefined,"import specifier");node.specifiers.push(this.finishNode(specifier,"ImportSpecifier"))}parseFunctionParams(node){const kind=node.kind;if(kind!=="get"&&kind!=="set"&&this.isRelational("<"))node.typeParameters=this.flowParseTypeParameterDeclaration(false);
super.parseFunctionParams(node)}parseVarId(decl,kind){super.parseVarId(decl,kind);if(this.match(types.colon)){decl.id.typeAnnotation=this.flowParseTypeAnnotation();this.finishNode(decl.id,decl.id.type)}}parseAsyncArrowFromCallExpression(node,call){if(this.match(types.colon)){const oldNoAnonFunctionType=this.state.noAnonFunctionType;this.state.noAnonFunctionType=true;node.returnType=this.flowParseTypeAnnotation();this.state.noAnonFunctionType=oldNoAnonFunctionType}return super.parseAsyncArrowFromCallExpression(node,
call)}shouldParseAsyncArrow(){return this.match(types.colon)||super.shouldParseAsyncArrow()}parseMaybeAssign(noIn,refShorthandDefaultPos,afterLeftParse,refNeedsArrowPos){let jsxError=null;if(this.hasPlugin("jsx")&&(this.match(types.jsxTagStart)||this.isRelational("<"))){const state=this.state.clone();try{return super.parseMaybeAssign(noIn,refShorthandDefaultPos,afterLeftParse,refNeedsArrowPos)}catch(err){if(err instanceof SyntaxError){this.state=state;const cLength=this.state.context.length;if(this.state.context[cLength-
1]===types$1.j_oTag)this.state.context.length-=2;jsxError=err}else throw err;}}if(jsxError!=null||this.isRelational("<")){let arrowExpression;let typeParameters;try{typeParameters=this.flowParseTypeParameterDeclaration();arrowExpression=this.forwardNoArrowParamsConversionAt(typeParameters,()=>super.parseMaybeAssign(noIn,refShorthandDefaultPos,afterLeftParse,refNeedsArrowPos));arrowExpression.typeParameters=typeParameters;this.resetStartLocationFromNode(arrowExpression,typeParameters)}catch(err){throw jsxError||
err;}if(arrowExpression.type==="ArrowFunctionExpression")return arrowExpression;else if(jsxError!=null)throw jsxError;else this.raise(typeParameters.start,"Expected an arrow function after this type parameter declaration")}return super.parseMaybeAssign(noIn,refShorthandDefaultPos,afterLeftParse,refNeedsArrowPos)}parseArrow(node){if(this.match(types.colon)){const state=this.state.clone();try{const oldNoAnonFunctionType=this.state.noAnonFunctionType;this.state.noAnonFunctionType=true;const typeNode=
this.startNode();[typeNode.typeAnnotation,node.predicate]=this.flowParseTypeAndPredicateInitialiser();this.state.noAnonFunctionType=oldNoAnonFunctionType;if(this.canInsertSemicolon())this.unexpected();if(!this.match(types.arrow))this.unexpected();node.returnType=typeNode.typeAnnotation?this.finishNode(typeNode,"TypeAnnotation"):null}catch(err){if(err instanceof SyntaxError)this.state=state;else throw err;}}return super.parseArrow(node)}shouldParseArrow(){return this.match(types.colon)||super.shouldParseArrow()}setArrowFunctionParameters(node,
params){if(this.state.noArrowParamsConversionAt.indexOf(node.start)!==-1)node.params=params;else super.setArrowFunctionParameters(node,params)}checkFunctionNameAndParams(node,isArrowFunction){if(isArrowFunction&&this.state.noArrowParamsConversionAt.indexOf(node.start)!==-1)return;return super.checkFunctionNameAndParams(node,isArrowFunction)}parseParenAndDistinguishExpression(canBeArrow){return super.parseParenAndDistinguishExpression(canBeArrow&&this.state.noArrowAt.indexOf(this.state.start)===-1)}parseSubscripts(base,
startPos,startLoc,noCalls){if(base.type==="Identifier"&&base.name==="async"&&this.state.noArrowAt.indexOf(startPos)!==-1){this.next();const node=this.startNodeAt(startPos,startLoc);node.callee=base;node.arguments=this.parseCallExpressionArguments(types.parenR,false);base=this.finishNode(node,"CallExpression")}else if(base.type==="Identifier"&&base.name==="async"&&this.isRelational("<")){const state=this.state.clone();let error;try{const node=this.parseAsyncArrowWithTypeParameters(startPos,startLoc);
if(node)return node}catch(e){error=e}this.state=state;try{return super.parseSubscripts(base,startPos,startLoc,noCalls)}catch(e){throw error||e;}}return super.parseSubscripts(base,startPos,startLoc,noCalls)}parseSubscript(base,startPos,startLoc,noCalls,subscriptState){if(this.match(types.questionDot)&&this.isLookaheadRelational("<")){this.expectPlugin("optionalChaining");subscriptState.optionalChainMember=true;if(noCalls){subscriptState.stop=true;return base}this.next();const node=this.startNodeAt(startPos,
startLoc);node.callee=base;node.typeArguments=this.flowParseTypeParameterInstantiation();this.expect(types.parenL);node.arguments=this.parseCallExpressionArguments(types.parenR,false);node.optional=true;return this.finishNode(node,"OptionalCallExpression")}else if(!noCalls&&this.shouldParseTypes()&&this.isRelational("<")){const node=this.startNodeAt(startPos,startLoc);node.callee=base;const state=this.state.clone();try{node.typeArguments=this.flowParseTypeParameterInstantiationCallOrNew();this.expect(types.parenL);
node.arguments=this.parseCallExpressionArguments(types.parenR,false);if(subscriptState.optionalChainMember){node.optional=false;return this.finishNode(node,"OptionalCallExpression")}return this.finishNode(node,"CallExpression")}catch(e){if(e instanceof SyntaxError)this.state=state;else throw e;}}return super.parseSubscript(base,startPos,startLoc,noCalls,subscriptState)}parseNewArguments(node){let targs=null;if(this.shouldParseTypes()&&this.isRelational("<")){const state=this.state.clone();try{targs=
this.flowParseTypeParameterInstantiationCallOrNew()}catch(e){if(e instanceof SyntaxError)this.state=state;else throw e;}}node.typeArguments=targs;super.parseNewArguments(node)}parseAsyncArrowWithTypeParameters(startPos,startLoc){const node=this.startNodeAt(startPos,startLoc);this.parseFunctionParams(node);if(!this.parseArrow(node))return;return this.parseArrowExpression(node,undefined,true)}readToken_mult_modulo(code){const next=this.state.input.charCodeAt(this.state.pos+1);if(code===42&&next===47&&
this.state.hasFlowComment){this.state.hasFlowComment=false;this.state.pos+=2;this.nextToken();return}super.readToken_mult_modulo(code)}readToken_pipe_amp(code){const next=this.state.input.charCodeAt(this.state.pos+1);if(code===124&&next===125){this.finishOp(types.braceBarR,2);return}super.readToken_pipe_amp(code)}parseTopLevel(file,program){const fileNode=super.parseTopLevel(file,program);if(this.state.hasFlowComment)this.unexpected(null,"Unterminated flow-comment");return fileNode}skipBlockComment(){if(this.hasPlugin("flowComments")&&
this.skipFlowComment()){if(this.state.hasFlowComment)this.unexpected(null,"Cannot have a flow comment inside another flow comment");this.hasFlowCommentCompletion();this.state.pos+=this.skipFlowComment();this.state.hasFlowComment=true;return}if(this.state.hasFlowComment){const end=this.state.input.indexOf("*-/",this.state.pos+=2);if(end===-1)this.raise(this.state.pos-2,"Unterminated comment");this.state.pos=end+3;return}super.skipBlockComment()}skipFlowComment(){const {pos}=this.state;let shiftToFirstNonWhiteSpace=
2;while([32,9].includes(this.state.input.charCodeAt(pos+shiftToFirstNonWhiteSpace)))shiftToFirstNonWhiteSpace++;const ch2=this.state.input.charCodeAt(shiftToFirstNonWhiteSpace+pos);const ch3=this.state.input.charCodeAt(shiftToFirstNonWhiteSpace+pos+1);if(ch2===58&&ch3===58)return shiftToFirstNonWhiteSpace+2;if(this.state.input.slice(shiftToFirstNonWhiteSpace+pos,shiftToFirstNonWhiteSpace+pos+12)==="flow-include")return shiftToFirstNonWhiteSpace+12;if(ch2===58&&ch3!==58)return shiftToFirstNonWhiteSpace;
return false}hasFlowCommentCompletion(){const end=this.state.input.indexOf("*/",this.state.pos);if(end===-1)this.raise(this.state.pos,"Unterminated comment")}};const entities={quot:'"',amp:"&",apos:"'",lt:"<",gt:">",nbsp:"\u00a0",iexcl:"\u00a1",cent:"\u00a2",pound:"\u00a3",curren:"\u00a4",yen:"\u00a5",brvbar:"\u00a6",sect:"\u00a7",uml:"\u00a8",copy:"\u00a9",ordf:"\u00aa",laquo:"\u00ab",not:"\u00ac",shy:"\u00ad",reg:"\u00ae",macr:"\u00af",deg:"\u00b0",plusmn:"\u00b1",sup2:"\u00b2",sup3:"\u00b3",acute:"\u00b4",
micro:"\u00b5",para:"\u00b6",middot:"\u00b7",cedil:"\u00b8",sup1:"\u00b9",ordm:"\u00ba",raquo:"\u00bb",frac14:"\u00bc",frac12:"\u00bd",frac34:"\u00be",iquest:"\u00bf",Agrave:"\u00c0",Aacute:"\u00c1",Acirc:"\u00c2",Atilde:"\u00c3",Auml:"\u00c4",Aring:"\u00c5",AElig:"\u00c6",Ccedil:"\u00c7",Egrave:"\u00c8",Eacute:"\u00c9",Ecirc:"\u00ca",Euml:"\u00cb",Igrave:"\u00cc",Iacute:"\u00cd",Icirc:"\u00ce",Iuml:"\u00cf",ETH:"\u00d0",Ntilde:"\u00d1",Ograve:"\u00d2",Oacute:"\u00d3",Ocirc:"\u00d4",Otilde:"\u00d5",
Ouml:"\u00d6",times:"\u00d7",Oslash:"\u00d8",Ugrave:"\u00d9",Uacute:"\u00da",Ucirc:"\u00db",Uuml:"\u00dc",Yacute:"\u00dd",THORN:"\u00de",szlig:"\u00df",agrave:"\u00e0",aacute:"\u00e1",acirc:"\u00e2",atilde:"\u00e3",auml:"\u00e4",aring:"\u00e5",aelig:"\u00e6",ccedil:"\u00e7",egrave:"\u00e8",eacute:"\u00e9",ecirc:"\u00ea",euml:"\u00eb",igrave:"\u00ec",iacute:"\u00ed",icirc:"\u00ee",iuml:"\u00ef",eth:"\u00f0",ntilde:"\u00f1",ograve:"\u00f2",oacute:"\u00f3",ocirc:"\u00f4",otilde:"\u00f5",ouml:"\u00f6",
divide:"\u00f7",oslash:"\u00f8",ugrave:"\u00f9",uacute:"\u00fa",ucirc:"\u00fb",uuml:"\u00fc",yacute:"\u00fd",thorn:"\u00fe",yuml:"\u00ff",OElig:"\u0152",oelig:"\u0153",Scaron:"\u0160",scaron:"\u0161",Yuml:"\u0178",fnof:"\u0192",circ:"\u02c6",tilde:"\u02dc",Alpha:"\u0391",Beta:"\u0392",Gamma:"\u0393",Delta:"\u0394",Epsilon:"\u0395",Zeta:"\u0396",Eta:"\u0397",Theta:"\u0398",Iota:"\u0399",Kappa:"\u039a",Lambda:"\u039b",Mu:"\u039c",Nu:"\u039d",Xi:"\u039e",Omicron:"\u039f",Pi:"\u03a0",Rho:"\u03a1",Sigma:"\u03a3",
Tau:"\u03a4",Upsilon:"\u03a5",Phi:"\u03a6",Chi:"\u03a7",Psi:"\u03a8",Omega:"\u03a9",alpha:"\u03b1",beta:"\u03b2",gamma:"\u03b3",delta:"\u03b4",epsilon:"\u03b5",zeta:"\u03b6",eta:"\u03b7",theta:"\u03b8",iota:"\u03b9",kappa:"\u03ba",lambda:"\u03bb",mu:"\u03bc",nu:"\u03bd",xi:"\u03be",omicron:"\u03bf",pi:"\u03c0",rho:"\u03c1",sigmaf:"\u03c2",sigma:"\u03c3",tau:"\u03c4",upsilon:"\u03c5",phi:"\u03c6",chi:"\u03c7",psi:"\u03c8",omega:"\u03c9",thetasym:"\u03d1",upsih:"\u03d2",piv:"\u03d6",ensp:"\u2002",emsp:"\u2003",
thinsp:"\u2009",zwnj:"\u200c",zwj:"\u200d",lrm:"\u200e",rlm:"\u200f",ndash:"\u2013",mdash:"\u2014",lsquo:"\u2018",rsquo:"\u2019",sbquo:"\u201a",ldquo:"\u201c",rdquo:"\u201d",bdquo:"\u201e",dagger:"\u2020",Dagger:"\u2021",bull:"\u2022",hellip:"\u2026",permil:"\u2030",prime:"\u2032",Prime:"\u2033",lsaquo:"\u2039",rsaquo:"\u203a",oline:"\u203e",frasl:"\u2044",euro:"\u20ac",image:"\u2111",weierp:"\u2118",real:"\u211c",trade:"\u2122",alefsym:"\u2135",larr:"\u2190",uarr:"\u2191",rarr:"\u2192",darr:"\u2193",
harr:"\u2194",crarr:"\u21b5",lArr:"\u21d0",uArr:"\u21d1",rArr:"\u21d2",dArr:"\u21d3",hArr:"\u21d4",forall:"\u2200",part:"\u2202",exist:"\u2203",empty:"\u2205",nabla:"\u2207",isin:"\u2208",notin:"\u2209",ni:"\u220b",prod:"\u220f",sum:"\u2211",minus:"\u2212",lowast:"\u2217",radic:"\u221a",prop:"\u221d",infin:"\u221e",ang:"\u2220",and:"\u2227",or:"\u2228",cap:"\u2229",cup:"\u222a",int:"\u222b",there4:"\u2234",sim:"\u223c",cong:"\u2245",asymp:"\u2248",ne:"\u2260",equiv:"\u2261",le:"\u2264",ge:"\u2265",
sub:"\u2282",sup:"\u2283",nsub:"\u2284",sube:"\u2286",supe:"\u2287",oplus:"\u2295",otimes:"\u2297",perp:"\u22a5",sdot:"\u22c5",lceil:"\u2308",rceil:"\u2309",lfloor:"\u230a",rfloor:"\u230b",lang:"\u2329",rang:"\u232a",loz:"\u25ca",spades:"\u2660",clubs:"\u2663",hearts:"\u2665",diams:"\u2666"};const HEX_NUMBER=/^[\da-fA-F]+$/;const DECIMAL_NUMBER=/^\d+$/;types$1.j_oTag=new TokContext("<tag",false);types$1.j_cTag=new TokContext("</tag",false);types$1.j_expr=new TokContext("<tag>...</tag>",true,true);
types.jsxName=new TokenType("jsxName");types.jsxText=new TokenType("jsxText",{beforeExpr:true});types.jsxTagStart=new TokenType("jsxTagStart",{startsExpr:true});types.jsxTagEnd=new TokenType("jsxTagEnd");types.jsxTagStart.updateContext=function(){this.state.context.push(types$1.j_expr);this.state.context.push(types$1.j_oTag);this.state.exprAllowed=false};types.jsxTagEnd.updateContext=function(prevType){const out=this.state.context.pop();if(out===types$1.j_oTag&&prevType===types.slash||out===types$1.j_cTag){this.state.context.pop();
this.state.exprAllowed=this.curContext()===types$1.j_expr}else this.state.exprAllowed=true};function isFragment(object){return object?object.type==="JSXOpeningFragment"||object.type==="JSXClosingFragment":false}function getQualifiedJSXName(object){if(object.type==="JSXIdentifier")return object.name;if(object.type==="JSXNamespacedName")return object.namespace.name+":"+object.name.name;if(object.type==="JSXMemberExpression")return getQualifiedJSXName(object.object)+"."+getQualifiedJSXName(object.property);
throw new Error("Node had unexpected type: "+object.type);}var jsx=(superClass)=>class extends superClass{jsxReadToken(){let out="";let chunkStart=this.state.pos;for(;;){if(this.state.pos>=this.state.length)this.raise(this.state.start,"Unterminated JSX contents");const ch=this.state.input.charCodeAt(this.state.pos);switch(ch){case 60:case 123:if(this.state.pos===this.state.start){if(ch===60&&this.state.exprAllowed){++this.state.pos;return this.finishToken(types.jsxTagStart)}return super.getTokenFromCode(ch)}out+=
this.state.input.slice(chunkStart,this.state.pos);return this.finishToken(types.jsxText,out);case 38:out+=this.state.input.slice(chunkStart,this.state.pos);out+=this.jsxReadEntity();chunkStart=this.state.pos;break;default:if(isNewLine(ch)){out+=this.state.input.slice(chunkStart,this.state.pos);out+=this.jsxReadNewLine(true);chunkStart=this.state.pos}else++this.state.pos}}}jsxReadNewLine(normalizeCRLF){const ch=this.state.input.charCodeAt(this.state.pos);let out;++this.state.pos;if(ch===13&&this.state.input.charCodeAt(this.state.pos)===
10){++this.state.pos;out=normalizeCRLF?"\n":"\r\n"}else out=String.fromCharCode(ch);++this.state.curLine;this.state.lineStart=this.state.pos;return out}jsxReadString(quote){let out="";let chunkStart=++this.state.pos;for(;;){if(this.state.pos>=this.state.length)this.raise(this.state.start,"Unterminated string constant");const ch=this.state.input.charCodeAt(this.state.pos);if(ch===quote)break;if(ch===38){out+=this.state.input.slice(chunkStart,this.state.pos);out+=this.jsxReadEntity();chunkStart=this.state.pos}else if(isNewLine(ch)){out+=
this.state.input.slice(chunkStart,this.state.pos);out+=this.jsxReadNewLine(false);chunkStart=this.state.pos}else++this.state.pos}out+=this.state.input.slice(chunkStart,this.state.pos++);return this.finishToken(types.string,out)}jsxReadEntity(){let str="";let count=0;let entity;let ch=this.state.input[this.state.pos];const startPos=++this.state.pos;while(this.state.pos<this.state.length&&count++<10){ch=this.state.input[this.state.pos++];if(ch===";"){if(str[0]==="#")if(str[1]==="x"){str=str.substr(2);
if(HEX_NUMBER.test(str))entity=String.fromCodePoint(parseInt(str,16))}else{str=str.substr(1);if(DECIMAL_NUMBER.test(str))entity=String.fromCodePoint(parseInt(str,10))}else entity=entities[str];break}str+=ch}if(!entity){this.state.pos=startPos;return"&"}return entity}jsxReadWord(){let ch;const start=this.state.pos;do ch=this.state.input.charCodeAt(++this.state.pos);while(isIdentifierChar(ch)||ch===45);return this.finishToken(types.jsxName,this.state.input.slice(start,this.state.pos))}jsxParseIdentifier(){const node=
this.startNode();if(this.match(types.jsxName))node.name=this.state.value;else if(this.state.type.keyword)node.name=this.state.type.keyword;else this.unexpected();this.next();return this.finishNode(node,"JSXIdentifier")}jsxParseNamespacedName(){const startPos=this.state.start;const startLoc=this.state.startLoc;const name=this.jsxParseIdentifier();if(!this.eat(types.colon))return name;const node=this.startNodeAt(startPos,startLoc);node.namespace=name;node.name=this.jsxParseIdentifier();return this.finishNode(node,
"JSXNamespacedName")}jsxParseElementName(){const startPos=this.state.start;const startLoc=this.state.startLoc;let node=this.jsxParseNamespacedName();while(this.eat(types.dot)){const newNode=this.startNodeAt(startPos,startLoc);newNode.object=node;newNode.property=this.jsxParseIdentifier();node=this.finishNode(newNode,"JSXMemberExpression")}return node}jsxParseAttributeValue(){let node;switch(this.state.type){case types.braceL:node=this.jsxParseExpressionContainer();if(node.expression.type==="JSXEmptyExpression")throw this.raise(node.start,
"JSX attributes must only be assigned a non-empty expression");else return node;case types.jsxTagStart:case types.string:return this.parseExprAtom();default:throw this.raise(this.state.start,"JSX value should be either an expression or a quoted JSX text");}}jsxParseEmptyExpression(){const node=this.startNodeAt(this.state.lastTokEnd,this.state.lastTokEndLoc);return this.finishNodeAt(node,"JSXEmptyExpression",this.state.start,this.state.startLoc)}jsxParseSpreadChild(){const node=this.startNode();this.expect(types.braceL);
this.expect(types.ellipsis);node.expression=this.parseExpression();this.expect(types.braceR);return this.finishNode(node,"JSXSpreadChild")}jsxParseExpressionContainer(){const node=this.startNode();this.next();if(this.match(types.braceR))node.expression=this.jsxParseEmptyExpression();else node.expression=this.parseExpression();this.expect(types.braceR);return this.finishNode(node,"JSXExpressionContainer")}jsxParseAttribute(){const node=this.startNode();if(this.eat(types.braceL)){this.expect(types.ellipsis);
node.argument=this.parseMaybeAssign();this.expect(types.braceR);return this.finishNode(node,"JSXSpreadAttribute")}node.name=this.jsxParseNamespacedName();node.value=this.eat(types.eq)?this.jsxParseAttributeValue():null;return this.finishNode(node,"JSXAttribute")}jsxParseOpeningElementAt(startPos,startLoc){const node=this.startNodeAt(startPos,startLoc);if(this.match(types.jsxTagEnd)){this.expect(types.jsxTagEnd);return this.finishNode(node,"JSXOpeningFragment")}node.name=this.jsxParseElementName();
return this.jsxParseOpeningElementAfterName(node)}jsxParseOpeningElementAfterName(node){const attributes=[];while(!this.match(types.slash)&&!this.match(types.jsxTagEnd))attributes.push(this.jsxParseAttribute());node.attributes=attributes;node.selfClosing=this.eat(types.slash);this.expect(types.jsxTagEnd);return this.finishNode(node,"JSXOpeningElement")}jsxParseClosingElementAt(startPos,startLoc){const node=this.startNodeAt(startPos,startLoc);if(this.match(types.jsxTagEnd)){this.expect(types.jsxTagEnd);
return this.finishNode(node,"JSXClosingFragment")}node.name=this.jsxParseElementName();this.expect(types.jsxTagEnd);return this.finishNode(node,"JSXClosingElement")}jsxParseElementAt(startPos,startLoc){const node=this.startNodeAt(startPos,startLoc);const children=[];const openingElement=this.jsxParseOpeningElementAt(startPos,startLoc);let closingElement=null;if(!openingElement.selfClosing){contents:for(;;)switch(this.state.type){case types.jsxTagStart:startPos=this.state.start;startLoc=this.state.startLoc;
this.next();if(this.eat(types.slash)){closingElement=this.jsxParseClosingElementAt(startPos,startLoc);break contents}children.push(this.jsxParseElementAt(startPos,startLoc));break;case types.jsxText:children.push(this.parseExprAtom());break;case types.braceL:if(this.lookahead().type===types.ellipsis)children.push(this.jsxParseSpreadChild());else children.push(this.jsxParseExpressionContainer());break;default:throw this.unexpected();}if(isFragment(openingElement)&&!isFragment(closingElement))this.raise(closingElement.start,
"Expected corresponding JSX closing tag for <>");else if(!isFragment(openingElement)&&isFragment(closingElement))this.raise(closingElement.start,"Expected corresponding JSX closing tag for <"+getQualifiedJSXName(openingElement.name)+">");else if(!isFragment(openingElement)&&!isFragment(closingElement))if(getQualifiedJSXName(closingElement.name)!==getQualifiedJSXName(openingElement.name))this.raise(closingElement.start,"Expected corresponding JSX closing tag for <"+getQualifiedJSXName(openingElement.name)+
">")}if(isFragment(openingElement)){node.openingFragment=openingElement;node.closingFragment=closingElement}else{node.openingElement=openingElement;node.closingElement=closingElement}node.children=children;if(this.match(types.relational)&&this.state.value==="<")this.raise(this.state.start,"Adjacent JSX elements must be wrapped in an enclosing tag. "+"Did you want a JSX fragment <>...</>?");return isFragment(openingElement)?this.finishNode(node,"JSXFragment"):this.finishNode(node,"JSXElement")}jsxParseElement(){const startPos=
this.state.start;const startLoc=this.state.startLoc;this.next();return this.jsxParseElementAt(startPos,startLoc)}parseExprAtom(refShortHandDefaultPos){if(this.match(types.jsxText))return this.parseLiteral(this.state.value,"JSXText");else if(this.match(types.jsxTagStart))return this.jsxParseElement();else if(this.isRelational("<")&&this.state.input.charCodeAt(this.state.pos)!==33){this.finishToken(types.jsxTagStart);return this.jsxParseElement()}else return super.parseExprAtom(refShortHandDefaultPos)}getTokenFromCode(code){if(this.state.inPropertyName)return super.getTokenFromCode(code);
const context=this.curContext();if(context===types$1.j_expr)return this.jsxReadToken();if(context===types$1.j_oTag||context===types$1.j_cTag){if(isIdentifierStart(code))return this.jsxReadWord();if(code===62){++this.state.pos;return this.finishToken(types.jsxTagEnd)}if((code===34||code===39)&&context===types$1.j_oTag)return this.jsxReadString(code)}if(code===60&&this.state.exprAllowed&&this.state.input.charCodeAt(this.state.pos+1)!==33){++this.state.pos;return this.finishToken(types.jsxTagStart)}return super.getTokenFromCode(code)}updateContext(prevType){if(this.match(types.braceL)){const curContext=
this.curContext();if(curContext===types$1.j_oTag)this.state.context.push(types$1.braceExpression);else if(curContext===types$1.j_expr)this.state.context.push(types$1.templateQuasi);else super.updateContext(prevType);this.state.exprAllowed=true}else if(this.match(types.slash)&&prevType===types.jsxTagStart){this.state.context.length-=2;this.state.context.push(types$1.j_cTag);this.state.exprAllowed=false}else return super.updateContext(prevType)}};const defaultOptions={sourceType:"script",sourceFilename:undefined,
startLine:1,allowAwaitOutsideFunction:false,allowReturnOutsideFunction:false,allowImportExportEverywhere:false,allowSuperOutsideMethod:false,plugins:[],strictMode:null,ranges:false,tokens:false};function getOptions(opts){const options={};for(const key in defaultOptions)options[key]=opts&&opts[key]!=null?opts[key]:defaultOptions[key];return options}class Position{constructor(line,col){this.line=line;this.column=col}}class SourceLocation{constructor(start,end){this.start=start;this.end=end}}function getLineInfo(input,
offset){let line=1;let lineStart=0;let match;lineBreakG.lastIndex=0;while((match=lineBreakG.exec(input))&&match.index<offset){line++;lineStart=lineBreakG.lastIndex}return new Position(line,offset-lineStart)}class BaseParser{constructor(){this.sawUnambiguousESM=false}hasPlugin(name){return this.plugins.has(name)}getPluginOption(plugin,name){if(this.hasPlugin(plugin))return this.plugins.get(plugin)[name]}}function last(stack){return stack[stack.length-1]}class CommentsParser extends BaseParser{addComment(comment){if(this.filename)comment.loc.filename=
this.filename;this.state.trailingComments.push(comment);this.state.leadingComments.push(comment)}processComment(node){if(node.type==="Program"&&node.body.length>0)return;const stack=this.state.commentStack;let firstChild,lastChild,trailingComments,i,j;if(this.state.trailingComments.length>0)if(this.state.trailingComments[0].start>=node.end){trailingComments=this.state.trailingComments;this.state.trailingComments=[]}else this.state.trailingComments.length=0;else if(stack.length>0){const lastInStack=
last(stack);if(lastInStack.trailingComments&&lastInStack.trailingComments[0].start>=node.end){trailingComments=lastInStack.trailingComments;delete lastInStack.trailingComments}}if(stack.length>0&&last(stack).start>=node.start)firstChild=stack.pop();while(stack.length>0&&last(stack).start>=node.start)lastChild=stack.pop();if(!lastChild&&firstChild)lastChild=firstChild;if(firstChild&&this.state.leadingComments.length>0){const lastComment=last(this.state.leadingComments);if(firstChild.type==="ObjectProperty"){if(lastComment.start>=
node.start)if(this.state.commentPreviousNode){for(j=0;j<this.state.leadingComments.length;j++)if(this.state.leadingComments[j].end<this.state.commentPreviousNode.end){this.state.leadingComments.splice(j,1);j--}if(this.state.leadingComments.length>0){firstChild.trailingComments=this.state.leadingComments;this.state.leadingComments=[]}}}else if(node.type==="CallExpression"&&node.arguments&&node.arguments.length){const lastArg=last(node.arguments);if(lastArg&&lastComment.start>=lastArg.start&&lastComment.end<=
node.end)if(this.state.commentPreviousNode){for(j=0;j<this.state.leadingComments.length;j++)if(this.state.leadingComments[j].end<this.state.commentPreviousNode.end){this.state.leadingComments.splice(j,1);j--}if(this.state.leadingComments.length>0){lastArg.trailingComments=this.state.leadingComments;this.state.leadingComments=[]}}}}if(lastChild){if(lastChild.leadingComments)if(lastChild!==node&&lastChild.leadingComments.length>0&&last(lastChild.leadingComments).end<=node.start){node.leadingComments=
lastChild.leadingComments;delete lastChild.leadingComments}else for(i=lastChild.leadingComments.length-2;i>=0;--i)if(lastChild.leadingComments[i].end<=node.start){node.leadingComments=lastChild.leadingComments.splice(0,i+1);break}}else if(this.state.leadingComments.length>0)if(last(this.state.leadingComments).end<=node.start){if(this.state.commentPreviousNode)for(j=0;j<this.state.leadingComments.length;j++)if(this.state.leadingComments[j].end<this.state.commentPreviousNode.end){this.state.leadingComments.splice(j,
1);j--}if(this.state.leadingComments.length>0){node.leadingComments=this.state.leadingComments;this.state.leadingComments=[]}}else{for(i=0;i<this.state.leadingComments.length;i++)if(this.state.leadingComments[i].end>node.start)break;const leadingComments=this.state.leadingComments.slice(0,i);if(leadingComments.length)node.leadingComments=leadingComments;trailingComments=this.state.leadingComments.slice(i);if(trailingComments.length===0)trailingComments=null}this.state.commentPreviousNode=node;if(trailingComments)if(trailingComments.length&&
trailingComments[0].start>=node.start&&last(trailingComments).end<=node.end)node.innerComments=trailingComments;else node.trailingComments=trailingComments;stack.push(node)}}class LocationParser extends CommentsParser{raise(pos,message,{missingPluginNames,code}={}){const loc=getLineInfo(this.state.input,pos);message+=` (${loc.line}:${loc.column})`;const err=new SyntaxError(message);err.pos=pos;err.loc=loc;if(missingPluginNames)err.missingPlugin=missingPluginNames;if(code!==undefined)err.code=code;
throw err;}}class State{constructor(){this.potentialArrowAt=-1;this.noArrowAt=[];this.noArrowParamsConversionAt=[];this.commaAfterSpreadAt=-1;this.inFunction=false;this.inParameters=false;this.maybeInArrowParameters=false;this.inGenerator=false;this.inMethod=false;this.inAsync=false;this.inPipeline=false;this.inType=false;this.noAnonFunctionType=false;this.inPropertyName=false;this.inClassProperty=false;this.hasFlowComment=false;this.isIterator=false;this.topicContext={maxNumOfResolvableTopics:0,
maxTopicIndex:null};this.classLevel=0;this.labels=[];this.decoratorStack=[[]];this.yieldPos=0;this.awaitPos=0;this.tokens=[];this.comments=[];this.trailingComments=[];this.leadingComments=[];this.commentStack=[];this.commentPreviousNode=null;this.pos=0;this.lineStart=0;this.type=types.eof;this.value=null;this.start=0;this.end=0;this.lastTokEndLoc=null;this.lastTokStartLoc=null;this.lastTokStart=0;this.lastTokEnd=0;this.context=[types$1.braceStatement];this.exprAllowed=true;this.containsEsc=false;
this.containsOctal=false;this.octalPosition=null;this.exportedIdentifiers=[];this.invalidTemplateEscapePosition=null}init(options,input){this.strict=options.strictMode===false?false:options.sourceType==="module";this.input=input;this.length=input.length;this.curLine=options.startLine;this.startLoc=this.endLoc=this.curPosition()}curPosition(){return new Position(this.curLine,this.pos-this.lineStart)}clone(skipArrays){const state=new State;const keys=Object.keys(this);for(let i=0,length=keys.length;i<
length;i++){const key=keys[i];let val=this[key];if((!skipArrays||key==="context")&&Array.isArray(val))val=val.slice();state[key]=val}return state}}var _isDigit=function isDigit(code){return code>=48&&code<=57};const VALID_REGEX_FLAGS=new Set(["g","m","s","i","y","u"]);const forbiddenNumericSeparatorSiblings={decBinOct:[46,66,69,79,95,98,101,111],hex:[46,88,95,120]};const allowedNumericSeparatorSiblings={};allowedNumericSeparatorSiblings.bin=[48,49];allowedNumericSeparatorSiblings.oct=[...allowedNumericSeparatorSiblings.bin,
50,51,52,53,54,55];allowedNumericSeparatorSiblings.dec=[...allowedNumericSeparatorSiblings.oct,56,57];allowedNumericSeparatorSiblings.hex=[...allowedNumericSeparatorSiblings.dec,65,66,67,68,69,70,97,98,99,100,101,102];class Token{constructor(state){this.type=state.type;this.value=state.value;this.start=state.start;this.end=state.end;this.loc=new SourceLocation(state.startLoc,state.endLoc)}}class Tokenizer extends LocationParser{constructor(options,input){super();this.state=new State;this.state.init(options,
input);this.isLookahead=false}next(){if(this.options.tokens&&!this.isLookahead)this.state.tokens.push(new Token(this.state));this.state.lastTokEnd=this.state.end;this.state.lastTokStart=this.state.start;this.state.lastTokEndLoc=this.state.endLoc;this.state.lastTokStartLoc=this.state.startLoc;this.nextToken()}eat(type){if(this.match(type)){this.next();return true}else return false}match(type){return this.state.type===type}lookahead(){const old=this.state;this.state=old.clone(true);this.isLookahead=
true;this.next();this.isLookahead=false;const curr=this.state;this.state=old;return curr}setStrict(strict){this.state.strict=strict;if(!this.match(types.num)&&!this.match(types.string))return;this.state.pos=this.state.start;while(this.state.pos<this.state.lineStart){this.state.lineStart=this.state.input.lastIndexOf("\n",this.state.lineStart-2)+1;--this.state.curLine}this.nextToken()}curContext(){return this.state.context[this.state.context.length-1]}nextToken(){const curContext=this.curContext();
if(!curContext||!curContext.preserveSpace)this.skipSpace();this.state.containsOctal=false;this.state.octalPosition=null;this.state.start=this.state.pos;this.state.startLoc=this.state.curPosition();if(this.state.pos>=this.state.length){this.finishToken(types.eof);return}if(curContext.override)curContext.override(this);else this.getTokenFromCode(this.state.input.codePointAt(this.state.pos))}pushComment(block,text,start,end,startLoc,endLoc){const comment={type:block?"CommentBlock":"CommentLine",value:text,
start:start,end:end,loc:new SourceLocation(startLoc,endLoc)};if(!this.isLookahead){if(this.options.tokens)this.state.tokens.push(comment);this.state.comments.push(comment);this.addComment(comment)}}skipBlockComment(){const startLoc=this.state.curPosition();const start=this.state.pos;const end=this.state.input.indexOf("*/",this.state.pos+=2);if(end===-1)this.raise(this.state.pos-2,"Unterminated comment");this.state.pos=end+2;lineBreakG.lastIndex=start;let match;while((match=lineBreakG.exec(this.state.input))&&
match.index<this.state.pos){++this.state.curLine;this.state.lineStart=match.index+match[0].length}this.pushComment(true,this.state.input.slice(start+2,end),start,this.state.pos,startLoc,this.state.curPosition())}skipLineComment(startSkip){const start=this.state.pos;const startLoc=this.state.curPosition();let ch=this.state.input.charCodeAt(this.state.pos+=startSkip);if(this.state.pos<this.state.length)while(ch!==10&&ch!==13&&ch!==8232&&ch!==8233&&++this.state.pos<this.state.length)ch=this.state.input.charCodeAt(this.state.pos);
this.pushComment(false,this.state.input.slice(start+startSkip,this.state.pos),start,this.state.pos,startLoc,this.state.curPosition())}skipSpace(){loop:while(this.state.pos<this.state.length){const ch=this.state.input.charCodeAt(this.state.pos);switch(ch){case 32:case 160:case 9:++this.state.pos;break;case 13:if(this.state.input.charCodeAt(this.state.pos+1)===10)++this.state.pos;case 10:case 8232:case 8233:++this.state.pos;++this.state.curLine;this.state.lineStart=this.state.pos;break;case 47:switch(this.state.input.charCodeAt(this.state.pos+
1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break loop}break;default:if(isWhitespace(ch))++this.state.pos;else break loop}}}finishToken(type,val){this.state.end=this.state.pos;this.state.endLoc=this.state.curPosition();const prevType=this.state.type;this.state.type=type;this.state.value=val;this.updateContext(prevType)}readToken_numberSign(){if(this.state.pos===0&&this.readToken_interpreter())return;const nextPos=this.state.pos+1;const next=this.state.input.charCodeAt(nextPos);
if(next>=48&&next<=57)this.raise(this.state.pos,"Unexpected digit after hash token");if((this.hasPlugin("classPrivateProperties")||this.hasPlugin("classPrivateMethods"))&&this.state.classLevel>0){++this.state.pos;this.finishToken(types.hash);return}else if(this.getPluginOption("pipelineOperator","proposal")==="smart")this.finishOp(types.hash,1);else this.raise(this.state.pos,"Unexpected character '#'")}readToken_dot(){const next=this.state.input.charCodeAt(this.state.pos+1);if(next>=48&&next<=57){this.readNumber(true);
return}const next2=this.state.input.charCodeAt(this.state.pos+2);if(next===46&&next2===46){this.state.pos+=3;this.finishToken(types.ellipsis)}else{++this.state.pos;this.finishToken(types.dot)}}readToken_slash(){if(this.state.exprAllowed&&!this.state.inType){++this.state.pos;this.readRegexp();return}const next=this.state.input.charCodeAt(this.state.pos+1);if(next===61)this.finishOp(types.assign,2);else this.finishOp(types.slash,1)}readToken_interpreter(){if(this.state.pos!==0||this.state.length<2)return false;
const start=this.state.pos;this.state.pos+=1;let ch=this.state.input.charCodeAt(this.state.pos);if(ch!==33)return false;while(ch!==10&&ch!==13&&ch!==8232&&ch!==8233&&++this.state.pos<this.state.length)ch=this.state.input.charCodeAt(this.state.pos);const value=this.state.input.slice(start+2,this.state.pos);this.finishToken(types.interpreterDirective,value);return true}readToken_mult_modulo(code){let type=code===42?types.star:types.modulo;let width=1;let next=this.state.input.charCodeAt(this.state.pos+
1);const exprAllowed=this.state.exprAllowed;if(code===42&&next===42){width++;next=this.state.input.charCodeAt(this.state.pos+2);type=types.exponent}if(next===61&&!exprAllowed){width++;type=types.assign}this.finishOp(type,width)}readToken_pipe_amp(code){const next=this.state.input.charCodeAt(this.state.pos+1);if(next===code){if(this.state.input.charCodeAt(this.state.pos+2)===61)this.finishOp(types.assign,3);else this.finishOp(code===124?types.logicalOR:types.logicalAND,2);return}if(code===124)if(next===
62){this.finishOp(types.pipeline,2);return}if(next===61){this.finishOp(types.assign,2);return}this.finishOp(code===124?types.bitwiseOR:types.bitwiseAND,1)}readToken_caret(){const next=this.state.input.charCodeAt(this.state.pos+1);if(next===61)this.finishOp(types.assign,2);else this.finishOp(types.bitwiseXOR,1)}readToken_plus_min(code){const next=this.state.input.charCodeAt(this.state.pos+1);if(next===code){if(next===45&&!this.inModule&&this.state.input.charCodeAt(this.state.pos+2)===62&&lineBreak.test(this.state.input.slice(this.state.lastTokEnd,
this.state.pos))){this.skipLineComment(3);this.skipSpace();this.nextToken();return}this.finishOp(types.incDec,2);return}if(next===61)this.finishOp(types.assign,2);else this.finishOp(types.plusMin,1)}readToken_lt_gt(code){const next=this.state.input.charCodeAt(this.state.pos+1);let size=1;if(next===code){size=code===62&&this.state.input.charCodeAt(this.state.pos+2)===62?3:2;if(this.state.input.charCodeAt(this.state.pos+size)===61){this.finishOp(types.assign,size+1);return}this.finishOp(types.bitShift,
size);return}if(next===33&&code===60&&!this.inModule&&this.state.input.charCodeAt(this.state.pos+2)===45&&this.state.input.charCodeAt(this.state.pos+3)===45){this.skipLineComment(4);this.skipSpace();this.nextToken();return}if(next===61)size=2;this.finishOp(types.relational,size)}readToken_eq_excl(code){const next=this.state.input.charCodeAt(this.state.pos+1);if(next===61){this.finishOp(types.equality,this.state.input.charCodeAt(this.state.pos+2)===61?3:2);return}if(code===61&&next===62){this.state.pos+=
2;this.finishToken(types.arrow);return}this.finishOp(code===61?types.eq:types.bang,1)}readToken_question(){const next=this.state.input.charCodeAt(this.state.pos+1);const next2=this.state.input.charCodeAt(this.state.pos+2);if(next===63&&!this.state.inType)if(next2===61)this.finishOp(types.assign,3);else this.finishOp(types.nullishCoalescing,2);else if(next===46&&!(next2>=48&&next2<=57)){this.state.pos+=2;this.finishToken(types.questionDot)}else{++this.state.pos;this.finishToken(types.question)}}getTokenFromCode(code){switch(code){case 46:this.readToken_dot();
return;case 40:++this.state.pos;this.finishToken(types.parenL);return;case 41:++this.state.pos;this.finishToken(types.parenR);return;case 59:++this.state.pos;this.finishToken(types.semi);return;case 44:++this.state.pos;this.finishToken(types.comma);return;case 91:++this.state.pos;this.finishToken(types.bracketL);return;case 93:++this.state.pos;this.finishToken(types.bracketR);return;case 123:++this.state.pos;this.finishToken(types.braceL);return;case 125:++this.state.pos;this.finishToken(types.braceR);
return;case 58:if(this.hasPlugin("functionBind")&&this.state.input.charCodeAt(this.state.pos+1)===58)this.finishOp(types.doubleColon,2);else{++this.state.pos;this.finishToken(types.colon)}return;case 63:this.readToken_question();return;case 96:++this.state.pos;this.finishToken(types.backQuote);return;case 48:{const next=this.state.input.charCodeAt(this.state.pos+1);if(next===120||next===88){this.readRadixNumber(16);return}if(next===111||next===79){this.readRadixNumber(8);return}if(next===98||next===
66){this.readRadixNumber(2);return}}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:this.readNumber(false);return;case 34:case 39:this.readString(code);return;case 47:this.readToken_slash();return;case 37:case 42:this.readToken_mult_modulo(code);return;case 124:case 38:this.readToken_pipe_amp(code);return;case 94:this.readToken_caret();return;case 43:case 45:this.readToken_plus_min(code);return;case 60:case 62:this.readToken_lt_gt(code);return;case 61:case 33:this.readToken_eq_excl(code);
return;case 126:this.finishOp(types.tilde,1);return;case 64:++this.state.pos;this.finishToken(types.at);return;case 35:this.readToken_numberSign();return;case 92:this.readWord();return;default:if(isIdentifierStart(code)){this.readWord();return}}this.raise(this.state.pos,`Unexpected character '${String.fromCodePoint(code)}'`)}finishOp(type,size){const str=this.state.input.slice(this.state.pos,this.state.pos+size);this.state.pos+=size;this.finishToken(type,str)}readRegexp(){const start=this.state.pos;
let escaped,inClass;for(;;){if(this.state.pos>=this.state.length)this.raise(start,"Unterminated regular expression");const ch=this.state.input.charAt(this.state.pos);if(lineBreak.test(ch))this.raise(start,"Unterminated regular expression");if(escaped)escaped=false;else{if(ch==="[")inClass=true;else if(ch==="]"&&inClass)inClass=false;else if(ch==="/"&&!inClass)break;escaped=ch==="\\"}++this.state.pos}const content=this.state.input.slice(start,this.state.pos);++this.state.pos;let mods="";while(this.state.pos<
this.state.length){const char=this.state.input[this.state.pos];const charCode=this.state.input.codePointAt(this.state.pos);if(VALID_REGEX_FLAGS.has(char)){if(mods.indexOf(char)>-1)this.raise(this.state.pos+1,"Duplicate regular expression flag");++this.state.pos;mods+=char}else if(isIdentifierChar(charCode)||charCode===92)this.raise(this.state.pos+1,"Invalid regular expression flag");else break}this.finishToken(types.regexp,{pattern:content,flags:mods})}readInt(radix,len){const start=this.state.pos;
const forbiddenSiblings=radix===16?forbiddenNumericSeparatorSiblings.hex:forbiddenNumericSeparatorSiblings.decBinOct;const allowedSiblings=radix===16?allowedNumericSeparatorSiblings.hex:radix===10?allowedNumericSeparatorSiblings.dec:radix===8?allowedNumericSeparatorSiblings.oct:allowedNumericSeparatorSiblings.bin;let total=0;for(let i=0,e=len==null?Infinity:len;i<e;++i){const code=this.state.input.charCodeAt(this.state.pos);let val;if(this.hasPlugin("numericSeparator")){const prev=this.state.input.charCodeAt(this.state.pos-
1);const next=this.state.input.charCodeAt(this.state.pos+1);if(code===95){if(allowedSiblings.indexOf(next)===-1)this.raise(this.state.pos,"Invalid or unexpected token");if(forbiddenSiblings.indexOf(prev)>-1||forbiddenSiblings.indexOf(next)>-1||Number.isNaN(next))this.raise(this.state.pos,"Invalid or unexpected token");++this.state.pos;continue}}if(code>=97)val=code-97+10;else if(code>=65)val=code-65+10;else if(_isDigit(code))val=code-48;else val=Infinity;if(val>=radix)break;++this.state.pos;total=
total*radix+val}if(this.state.pos===start||len!=null&&this.state.pos-start!==len)return null;return total}readRadixNumber(radix){const start=this.state.pos;let isBigInt=false;this.state.pos+=2;const val=this.readInt(radix);if(val==null)this.raise(this.state.start+2,"Expected number in radix "+radix);if(this.hasPlugin("bigInt"))if(this.state.input.charCodeAt(this.state.pos)===110){++this.state.pos;isBigInt=true}if(isIdentifierStart(this.state.input.codePointAt(this.state.pos)))this.raise(this.state.pos,
"Identifier directly after number");if(isBigInt){const str=this.state.input.slice(start,this.state.pos).replace(/[_n]/g,"");this.finishToken(types.bigint,str);return}this.finishToken(types.num,val)}readNumber(startsWithDot){const start=this.state.pos;let isFloat=false;let isBigInt=false;if(!startsWithDot&&this.readInt(10)===null)this.raise(start,"Invalid number");let octal=this.state.pos-start>=2&&this.state.input.charCodeAt(start)===48;if(octal){if(this.state.strict)this.raise(start,"Legacy octal literals are not allowed in strict mode");
if(/[89]/.test(this.state.input.slice(start,this.state.pos)))octal=false}let next=this.state.input.charCodeAt(this.state.pos);if(next===46&&!octal){++this.state.pos;this.readInt(10);isFloat=true;next=this.state.input.charCodeAt(this.state.pos)}if((next===69||next===101)&&!octal){next=this.state.input.charCodeAt(++this.state.pos);if(next===43||next===45)++this.state.pos;if(this.readInt(10)===null)this.raise(start,"Invalid number");isFloat=true;next=this.state.input.charCodeAt(this.state.pos)}if(this.hasPlugin("bigInt"))if(next===
110){if(isFloat||octal)this.raise(start,"Invalid BigIntLiteral");++this.state.pos;isBigInt=true}if(isIdentifierStart(this.state.input.codePointAt(this.state.pos)))this.raise(this.state.pos,"Identifier directly after number");const str=this.state.input.slice(start,this.state.pos).replace(/[_n]/g,"");if(isBigInt){this.finishToken(types.bigint,str);return}const val=octal?parseInt(str,8):parseFloat(str);this.finishToken(types.num,val)}readCodePoint(throwOnInvalid){const ch=this.state.input.charCodeAt(this.state.pos);
let code;if(ch===123){const codePos=++this.state.pos;code=this.readHexChar(this.state.input.indexOf("}",this.state.pos)-this.state.pos,throwOnInvalid);++this.state.pos;if(code===null)--this.state.invalidTemplateEscapePosition;else if(code>1114111)if(throwOnInvalid)this.raise(codePos,"Code point out of bounds");else{this.state.invalidTemplateEscapePosition=codePos-2;return null}}else code=this.readHexChar(4,throwOnInvalid);return code}readString(quote){let out="",chunkStart=++this.state.pos;for(;;){if(this.state.pos>=
this.state.length)this.raise(this.state.start,"Unterminated string constant");const ch=this.state.input.charCodeAt(this.state.pos);if(ch===quote)break;if(ch===92){out+=this.state.input.slice(chunkStart,this.state.pos);out+=this.readEscapedChar(false);chunkStart=this.state.pos}else if(ch===8232||ch===8233){++this.state.pos;++this.state.curLine}else if(isNewLine(ch))this.raise(this.state.start,"Unterminated string constant");else++this.state.pos}out+=this.state.input.slice(chunkStart,this.state.pos++);
this.finishToken(types.string,out)}readTmplToken(){let out="",chunkStart=this.state.pos,containsInvalid=false;for(;;){if(this.state.pos>=this.state.length)this.raise(this.state.start,"Unterminated template");const ch=this.state.input.charCodeAt(this.state.pos);if(ch===96||ch===36&&this.state.input.charCodeAt(this.state.pos+1)===123){if(this.state.pos===this.state.start&&this.match(types.template))if(ch===36){this.state.pos+=2;this.finishToken(types.dollarBraceL);return}else{++this.state.pos;this.finishToken(types.backQuote);
return}out+=this.state.input.slice(chunkStart,this.state.pos);this.finishToken(types.template,containsInvalid?null:out);return}if(ch===92){out+=this.state.input.slice(chunkStart,this.state.pos);const escaped=this.readEscapedChar(true);if(escaped===null)containsInvalid=true;else out+=escaped;chunkStart=this.state.pos}else if(isNewLine(ch)){out+=this.state.input.slice(chunkStart,this.state.pos);++this.state.pos;switch(ch){case 13:if(this.state.input.charCodeAt(this.state.pos)===10)++this.state.pos;
case 10:out+="\n";break;default:out+=String.fromCharCode(ch);break}++this.state.curLine;this.state.lineStart=this.state.pos;chunkStart=this.state.pos}else++this.state.pos}}readEscapedChar(inTemplate){const throwOnInvalid=!inTemplate;const ch=this.state.input.charCodeAt(++this.state.pos);++this.state.pos;switch(ch){case 110:return"\n";case 114:return"\r";case 120:{const code=this.readHexChar(2,throwOnInvalid);return code===null?null:String.fromCharCode(code)}case 117:{const code=this.readCodePoint(throwOnInvalid);
return code===null?null:String.fromCodePoint(code)}case 116:return"\t";case 98:return"\b";case 118:return"\x0B";case 102:return"\f";case 13:if(this.state.input.charCodeAt(this.state.pos)===10)++this.state.pos;case 10:this.state.lineStart=this.state.pos;++this.state.curLine;case 8232:case 8233:return"";default:if(ch>=48&&ch<=55){const codePos=this.state.pos-1;let octalStr=this.state.input.substr(this.state.pos-1,3).match(/^[0-7]+/)[0];let octal=parseInt(octalStr,8);if(octal>255){octalStr=octalStr.slice(0,
-1);octal=parseInt(octalStr,8)}if(octal>0)if(inTemplate){this.state.invalidTemplateEscapePosition=codePos;return null}else if(this.state.strict)this.raise(codePos,"Octal literal in strict mode");else if(!this.state.containsOctal){this.state.containsOctal=true;this.state.octalPosition=codePos}this.state.pos+=octalStr.length-1;return String.fromCharCode(octal)}return String.fromCharCode(ch)}}readHexChar(len,throwOnInvalid){const codePos=this.state.pos;const n=this.readInt(16,len);if(n===null)if(throwOnInvalid)this.raise(codePos,
"Bad character escape sequence");else{this.state.pos=codePos-1;this.state.invalidTemplateEscapePosition=codePos-1}return n}readWord1(){let word="";this.state.containsEsc=false;const start=this.state.pos;let chunkStart=this.state.pos;while(this.state.pos<this.state.length){const ch=this.state.input.codePointAt(this.state.pos);if(isIdentifierChar(ch))this.state.pos+=ch<=65535?1:2;else if(this.state.isIterator&&ch===64)++this.state.pos;else if(ch===92){this.state.containsEsc=true;word+=this.state.input.slice(chunkStart,
this.state.pos);const escStart=this.state.pos;const identifierCheck=this.state.pos===start?isIdentifierStart:isIdentifierChar;if(this.state.input.charCodeAt(++this.state.pos)!==117)this.raise(this.state.pos,"Expecting Unicode escape sequence \\uXXXX");++this.state.pos;const esc=this.readCodePoint(true);if(!identifierCheck(esc,true))this.raise(escStart,"Invalid Unicode escape");word+=String.fromCodePoint(esc);chunkStart=this.state.pos}else break}return word+this.state.input.slice(chunkStart,this.state.pos)}isIterator(word){return word===
"@@iterator"||word==="@@asyncIterator"}readWord(){const word=this.readWord1();const type=keywords[word]||types.name;if(type.keyword&&this.state.containsEsc)this.raise(this.state.pos,`Escape sequence in keyword ${word}`);if(this.state.isIterator&&(!this.isIterator(word)||!this.state.inType))this.raise(this.state.pos,`Invalid identifier ${word}`);this.finishToken(type,word)}braceIsBlock(prevType){const parent=this.curContext();if(parent===types$1.functionExpression||parent===types$1.functionStatement)return true;
if(prevType===types.colon&&(parent===types$1.braceStatement||parent===types$1.braceExpression))return!parent.isExpr;if(prevType===types._return||prevType===types.name&&this.state.exprAllowed)return lineBreak.test(this.state.input.slice(this.state.lastTokEnd,this.state.start));if(prevType===types._else||prevType===types.semi||prevType===types.eof||prevType===types.parenR||prevType===types.arrow)return true;if(prevType===types.braceL)return parent===types$1.braceStatement;if(prevType===types._var||
prevType===types._const||prevType===types.name)return false;if(prevType===types.relational)return true;return!this.state.exprAllowed}updateContext(prevType){const type=this.state.type;let update;if(type.keyword&&(prevType===types.dot||prevType===types.questionDot))this.state.exprAllowed=false;else if(update=type.updateContext)update.call(this,prevType);else this.state.exprAllowed=type.beforeExpr}}class UtilParser extends Tokenizer{addExtra(node,key,val){if(!node)return;const extra=node.extra=node.extra||
{};extra[key]=val}isRelational(op){return this.match(types.relational)&&this.state.value===op}isLookaheadRelational(op){const l=this.lookahead();return l.type===types.relational&&l.value===op}expectRelational(op){if(this.isRelational(op))this.next();else this.unexpected(null,types.relational)}eatRelational(op){if(this.isRelational(op)){this.next();return true}return false}isContextual(name){return this.match(types.name)&&this.state.value===name&&!this.state.containsEsc}isLookaheadContextual(name){const l=
this.lookahead();return l.type===types.name&&l.value===name}eatContextual(name){return this.isContextual(name)&&this.eat(types.name)}expectContextual(name,message){if(!this.eatContextual(name))this.unexpected(null,message)}canInsertSemicolon(){return this.match(types.eof)||this.match(types.braceR)||this.hasPrecedingLineBreak()}hasPrecedingLineBreak(){return lineBreak.test(this.state.input.slice(this.state.lastTokEnd,this.state.start))}isLineTerminator(){return this.eat(types.semi)||this.canInsertSemicolon()}semicolon(){if(!this.isLineTerminator())this.unexpected(null,
types.semi)}expect(type,pos){this.eat(type)||this.unexpected(pos,type)}unexpected(pos,messageOrType="Unexpected token"){if(typeof messageOrType!=="string")messageOrType=`Unexpected token, expected "${messageOrType.label}"`;throw this.raise(pos!=null?pos:this.state.start,messageOrType);}expectPlugin(name,pos){if(!this.hasPlugin(name))throw this.raise(pos!=null?pos:this.state.start,`This experimental syntax requires enabling the parser plugin: '${name}'`,{missingPluginNames:[name]});return true}expectOnePlugin(names,
pos){if(!names.some((n)=>this.hasPlugin(n)))throw this.raise(pos!=null?pos:this.state.start,`This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(", ")}'`,{missingPluginNames:names});}checkYieldAwaitInDefaultParams(){if(this.state.yieldPos&&(!this.state.awaitPos||this.state.yieldPos<this.state.awaitPos))this.raise(this.state.yieldPos,"Yield cannot be used as name inside a generator function");if(this.state.awaitPos)this.raise(this.state.awaitPos,"Await cannot be used as name inside an async function")}}
class Node{constructor(parser,pos,loc){this.type="";this.start=pos;this.end=0;this.loc=new SourceLocation(loc);if(parser&&parser.options.ranges)this.range=[pos,0];if(parser&&parser.filename)this.loc.filename=parser.filename}__clone(){const newNode=new Node;const keys=Object.keys(this);for(let i=0,length=keys.length;i<length;i++){const key=keys[i];if(key!=="leadingComments"&&key!=="trailingComments"&&key!=="innerComments")newNode[key]=this[key]}return newNode}}class NodeUtils extends UtilParser{startNode(){return new Node(this,
this.state.start,this.state.startLoc)}startNodeAt(pos,loc){return new Node(this,pos,loc)}startNodeAtNode(type){return this.startNodeAt(type.start,type.loc.start)}finishNode(node,type){return this.finishNodeAt(node,type,this.state.lastTokEnd,this.state.lastTokEndLoc)}finishNodeAt(node,type,pos,loc){node.type=type;node.end=pos;node.loc.end=loc;if(this.options.ranges)node.range[1]=pos;this.processComment(node);return node}resetStartLocation(node,start,startLoc){node.start=start;node.loc.start=startLoc;
if(this.options.ranges)node.range[0]=start}resetStartLocationFromNode(node,locationNode){this.resetStartLocation(node,locationNode.start,locationNode.loc.start)}}class LValParser extends NodeUtils{toAssignable(node,isBinding,contextDescription){if(node)switch(node.type){case "Identifier":case "ObjectPattern":case "ArrayPattern":case "AssignmentPattern":break;case "ObjectExpression":node.type="ObjectPattern";for(let i=0,length=node.properties.length,last=length-1;i<length;i++){const prop=node.properties[i];
const isLast=i===last;this.toAssignableObjectExpressionProp(prop,isBinding,isLast)}break;case "ObjectProperty":this.toAssignable(node.value,isBinding,contextDescription);break;case "SpreadElement":{this.checkToRestConversion(node);node.type="RestElement";const arg=node.argument;this.toAssignable(arg,isBinding,contextDescription);break}case "ArrayExpression":node.type="ArrayPattern";this.toAssignableList(node.elements,isBinding,contextDescription);break;case "AssignmentExpression":if(node.operator===
"="){node.type="AssignmentPattern";delete node.operator}else this.raise(node.left.end,"Only '=' operator can be used for specifying default value.");break;case "MemberExpression":if(!isBinding)break;default:{const message="Invalid left-hand side"+(contextDescription?" in "+contextDescription:"expression");this.raise(node.start,message)}}return node}toAssignableObjectExpressionProp(prop,isBinding,isLast){if(prop.type==="ObjectMethod"){const error=prop.kind==="get"||prop.kind==="set"?"Object pattern can't contain getter or setter":
"Object pattern can't contain methods";this.raise(prop.key.start,error)}else if(prop.type==="SpreadElement"&&!isLast)this.raiseRestNotLast(prop.start,"property");else this.toAssignable(prop,isBinding,"object destructuring pattern")}toAssignableList(exprList,isBinding,contextDescription){let end=exprList.length;if(end){const last=exprList[end-1];if(last&&last.type==="RestElement")--end;else if(last&&last.type==="SpreadElement"){last.type="RestElement";const arg=last.argument;this.toAssignable(arg,
isBinding,contextDescription);if(arg.type!=="Identifier"&&arg.type!=="MemberExpression"&&arg.type!=="ArrayPattern"&&arg.type!=="ObjectPattern")this.unexpected(arg.start);--end}}for(let i=0;i<end;i++){const elt=exprList[i];if(elt){this.toAssignable(elt,isBinding,contextDescription);if(elt.type==="RestElement")this.raiseRestNotLast(elt.start,"element")}}return exprList}toReferencedList(exprList,isParenthesizedExpr){return exprList}toReferencedListDeep(exprList,isParenthesizedExpr){this.toReferencedList(exprList,
isParenthesizedExpr);for(let _i=0;_i<exprList.length;_i++){const expr=exprList[_i];if(expr&&expr.type==="ArrayExpression")this.toReferencedListDeep(expr.elements)}return exprList}parseSpread(refShorthandDefaultPos,refNeedsArrowPos){const node=this.startNode();this.next();node.argument=this.parseMaybeAssign(false,refShorthandDefaultPos,undefined,refNeedsArrowPos);if(this.state.commaAfterSpreadAt===-1&&this.match(types.comma))this.state.commaAfterSpreadAt=this.state.start;return this.finishNode(node,
"SpreadElement")}parseRest(){const node=this.startNode();this.next();node.argument=this.parseBindingAtom();return this.finishNode(node,"RestElement")}parseBindingAtom(){switch(this.state.type){case types.name:return this.parseIdentifier();case types.bracketL:{const node=this.startNode();this.next();node.elements=this.parseBindingList(types.bracketR,true);return this.finishNode(node,"ArrayPattern")}case types.braceL:return this.parseObj(true);default:throw this.unexpected();}}parseBindingList(close,
allowEmpty,allowModifiers){const elts=[];let first=true;while(!this.eat(close)){if(first)first=false;else this.expect(types.comma);if(allowEmpty&&this.match(types.comma))elts.push(null);else if(this.eat(close))break;else if(this.match(types.ellipsis)){elts.push(this.parseAssignableListItemTypes(this.parseRest()));this.checkCommaAfterRest(close,this.state.inFunction&&this.state.inParameters?"parameter":"element");this.expect(close);break}else{const decorators=[];if(this.match(types.at)&&this.hasPlugin("decorators"))this.raise(this.state.start,
"Stage 2 decorators cannot be used to decorate parameters");while(this.match(types.at))decorators.push(this.parseDecorator());elts.push(this.parseAssignableListItem(allowModifiers,decorators))}}return elts}parseAssignableListItem(allowModifiers,decorators){const left=this.parseMaybeDefault();this.parseAssignableListItemTypes(left);const elt=this.parseMaybeDefault(left.start,left.loc.start,left);if(decorators.length)left.decorators=decorators;return elt}parseAssignableListItemTypes(param){return param}parseMaybeDefault(startPos,
startLoc,left){startLoc=startLoc||this.state.startLoc;startPos=startPos||this.state.start;left=left||this.parseBindingAtom();if(!this.eat(types.eq))return left;const node=this.startNodeAt(startPos,startLoc);node.left=left;node.right=this.parseMaybeAssign();return this.finishNode(node,"AssignmentPattern")}checkLVal(expr,isBinding,checkClashes,contextDescription){switch(expr.type){case "Identifier":if(this.state.strict&&isStrictBindReservedWord(expr.name,this.inModule))this.raise(expr.start,`${isBinding?
"Binding":"Assigning to"} '${expr.name}' in strict mode`);if(checkClashes){const key=`_${expr.name}`;if(checkClashes[key])this.raise(expr.start,"Argument name clash in strict mode");else checkClashes[key]=true}break;case "MemberExpression":if(isBinding)this.raise(expr.start,"Binding member expression");break;case "ObjectPattern":for(let _i2=0,_expr$properties=expr.properties;_i2<_expr$properties.length;_i2++){let prop=_expr$properties[_i2];if(prop.type==="ObjectProperty")prop=prop.value;this.checkLVal(prop,
isBinding,checkClashes,"object destructuring pattern")}break;case "ArrayPattern":for(let _i3=0,_expr$elements=expr.elements;_i3<_expr$elements.length;_i3++){const elem=_expr$elements[_i3];if(elem)this.checkLVal(elem,isBinding,checkClashes,"array destructuring pattern")}break;case "AssignmentPattern":this.checkLVal(expr.left,isBinding,checkClashes,"assignment pattern");break;case "RestElement":this.checkLVal(expr.argument,isBinding,checkClashes,"rest element");break;default:{const message=(isBinding?
"Binding invalid":"Invalid")+" left-hand side"+(contextDescription?" in "+contextDescription:"expression");this.raise(expr.start,message)}}}checkToRestConversion(node){if(node.argument.type!=="Identifier"&&node.argument.type!=="MemberExpression")this.raise(node.argument.start,"Invalid rest operator's argument")}checkCommaAfterRest(close,kind){if(this.match(types.comma))if(this.lookahead().type===close)this.raiseCommaAfterRest(this.state.start,kind);else this.raiseRestNotLast(this.state.start,kind)}checkCommaAfterRestFromSpread(kind){if(this.state.commaAfterSpreadAt>
-1)this.raiseCommaAfterRest(this.state.commaAfterSpreadAt,kind)}raiseCommaAfterRest(pos,kind){this.raise(pos,`A trailing comma is not permitted after the rest ${kind}`)}raiseRestNotLast(pos,kind){this.raise(pos,`The rest ${kind} must be the last ${kind}`)}}class ExpressionParser extends LValParser{checkPropClash(prop,propHash){if(prop.computed||prop.kind)return;const key=prop.key;const name=key.type==="Identifier"?key.name:String(key.value);if(name==="__proto__"){if(propHash.proto)this.raise(key.start,
"Redefinition of __proto__ property");propHash.proto=true}}getExpression(){this.nextToken();const expr=this.parseExpression();if(!this.match(types.eof))this.unexpected();expr.comments=this.state.comments;return expr}parseExpression(noIn,refShorthandDefaultPos){const startPos=this.state.start;const startLoc=this.state.startLoc;const expr=this.parseMaybeAssign(noIn,refShorthandDefaultPos);if(this.match(types.comma)){const node=this.startNodeAt(startPos,startLoc);node.expressions=[expr];while(this.eat(types.comma))node.expressions.push(this.parseMaybeAssign(noIn,
refShorthandDefaultPos));this.toReferencedList(node.expressions);return this.finishNode(node,"SequenceExpression")}return expr}parseMaybeAssign(noIn,refShorthandDefaultPos,afterLeftParse,refNeedsArrowPos){const startPos=this.state.start;const startLoc=this.state.startLoc;if(this.isContextual("yield"))if(this.state.inGenerator){let left=this.parseYield(noIn);if(afterLeftParse)left=afterLeftParse.call(this,left,startPos,startLoc);return left}else this.state.exprAllowed=false;const oldCommaAfterSpreadAt=
this.state.commaAfterSpreadAt;this.state.commaAfterSpreadAt=-1;let failOnShorthandAssign;if(refShorthandDefaultPos)failOnShorthandAssign=false;else{refShorthandDefaultPos={start:0};failOnShorthandAssign=true}if(this.match(types.parenL)||this.match(types.name))this.state.potentialArrowAt=this.state.start;let left=this.parseMaybeConditional(noIn,refShorthandDefaultPos,refNeedsArrowPos);if(afterLeftParse)left=afterLeftParse.call(this,left,startPos,startLoc);if(this.state.type.isAssign){const node=this.startNodeAt(startPos,
startLoc);const operator=this.state.value;node.operator=operator;if(operator==="??="){this.expectPlugin("nullishCoalescingOperator");this.expectPlugin("logicalAssignment")}if(operator==="||="||operator==="&&=")this.expectPlugin("logicalAssignment");node.left=this.match(types.eq)?this.toAssignable(left,undefined,"assignment expression"):left;refShorthandDefaultPos.start=0;this.checkLVal(left,undefined,undefined,"assignment expression");let patternErrorMsg;let elementName;if(left.type==="ObjectPattern"){patternErrorMsg=
"`({a}) = 0` use `({a} = 0)`";elementName="property"}else if(left.type==="ArrayPattern"){patternErrorMsg="`([a]) = 0` use `([a] = 0)`";elementName="element"}if(patternErrorMsg&&left.extra&&left.extra.parenthesized)this.raise(left.start,`You're trying to assign to a parenthesized expression, eg. instead of ${patternErrorMsg}`);if(elementName)this.checkCommaAfterRestFromSpread(elementName);this.state.commaAfterSpreadAt=oldCommaAfterSpreadAt;this.next();node.right=this.parseMaybeAssign(noIn);return this.finishNode(node,
"AssignmentExpression")}else if(failOnShorthandAssign&&refShorthandDefaultPos.start)this.unexpected(refShorthandDefaultPos.start);this.state.commaAfterSpreadAt=oldCommaAfterSpreadAt;return left}parseMaybeConditional(noIn,refShorthandDefaultPos,refNeedsArrowPos){const startPos=this.state.start;const startLoc=this.state.startLoc;const potentialArrowAt=this.state.potentialArrowAt;const expr=this.parseExprOps(noIn,refShorthandDefaultPos);if(expr.type==="ArrowFunctionExpression"&&expr.start===potentialArrowAt)return expr;
if(refShorthandDefaultPos&&refShorthandDefaultPos.start)return expr;return this.parseConditional(expr,noIn,startPos,startLoc,refNeedsArrowPos)}parseConditional(expr,noIn,startPos,startLoc,refNeedsArrowPos){if(this.eat(types.question)){const node=this.startNodeAt(startPos,startLoc);node.test=expr;node.consequent=this.parseMaybeAssign();this.expect(types.colon);node.alternate=this.parseMaybeAssign(noIn);return this.finishNode(node,"ConditionalExpression")}return expr}parseExprOps(noIn,refShorthandDefaultPos){const startPos=
this.state.start;const startLoc=this.state.startLoc;const potentialArrowAt=this.state.potentialArrowAt;const expr=this.parseMaybeUnary(refShorthandDefaultPos);if(expr.type==="ArrowFunctionExpression"&&expr.start===potentialArrowAt)return expr;if(refShorthandDefaultPos&&refShorthandDefaultPos.start)return expr;return this.parseExprOp(expr,startPos,startLoc,-1,noIn)}parseExprOp(left,leftStartPos,leftStartLoc,minPrec,noIn){const prec=this.state.type.binop;if(prec!=null&&(!noIn||!this.match(types._in)))if(prec>
minPrec){const node=this.startNodeAt(leftStartPos,leftStartLoc);const operator=this.state.value;node.left=left;node.operator=operator;if(operator==="**"&&left.type==="UnaryExpression"&&!(left.extra&&left.extra.parenthesized))this.raise(left.argument.start,"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.");const op=this.state.type;if(op===types.pipeline){this.expectPlugin("pipelineOperator");this.state.inPipeline=true;this.checkPipelineAtInfixOperator(left,leftStartPos)}else if(op===
types.nullishCoalescing)this.expectPlugin("nullishCoalescingOperator");this.next();if(op===types.pipeline&&this.getPluginOption("pipelineOperator","proposal")==="minimal")if(this.match(types.name)&&this.state.value==="await"&&this.state.inAsync)throw this.raise(this.state.start,`Unexpected "await" after pipeline body; await must have parentheses in minimal proposal`);node.right=this.parseExprOpRightExpr(op,prec,noIn);this.finishNode(node,op===types.logicalOR||op===types.logicalAND||op===types.nullishCoalescing?
"LogicalExpression":"BinaryExpression");return this.parseExprOp(node,leftStartPos,leftStartLoc,minPrec,noIn)}return left}parseExprOpRightExpr(op,prec,noIn){switch(op){case types.pipeline:if(this.getPluginOption("pipelineOperator","proposal")==="smart"){const startPos=this.state.start;const startLoc=this.state.startLoc;return this.withTopicPermittingContext(()=>{return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op,prec,noIn),startPos,startLoc)})}default:return this.parseExprOpBaseRightExpr(op,
prec,noIn)}}parseExprOpBaseRightExpr(op,prec,noIn){const startPos=this.state.start;const startLoc=this.state.startLoc;return this.parseExprOp(this.parseMaybeUnary(),startPos,startLoc,op.rightAssociative?prec-1:prec,noIn)}parseMaybeUnary(refShorthandDefaultPos){if(this.isContextual("await")&&(this.state.inAsync||!this.state.inFunction&&this.options.allowAwaitOutsideFunction))return this.parseAwait();else if(this.state.type.prefix){const node=this.startNode();const update=this.match(types.incDec);node.operator=
this.state.value;node.prefix=true;if(node.operator==="throw")this.expectPlugin("throwExpressions");this.next();node.argument=this.parseMaybeUnary();if(refShorthandDefaultPos&&refShorthandDefaultPos.start)this.unexpected(refShorthandDefaultPos.start);if(update)this.checkLVal(node.argument,undefined,undefined,"prefix operation");else if(this.state.strict&&node.operator==="delete"){const arg=node.argument;if(arg.type==="Identifier")this.raise(node.start,"Deleting local variable in strict mode");else if(arg.type===
"MemberExpression"&&arg.property.type==="PrivateName")this.raise(node.start,"Deleting a private field is not allowed")}return this.finishNode(node,update?"UpdateExpression":"UnaryExpression")}const startPos=this.state.start;const startLoc=this.state.startLoc;let expr=this.parseExprSubscripts(refShorthandDefaultPos);if(refShorthandDefaultPos&&refShorthandDefaultPos.start)return expr;while(this.state.type.postfix&&!this.canInsertSemicolon()){const node=this.startNodeAt(startPos,startLoc);node.operator=
this.state.value;node.prefix=false;node.argument=expr;this.checkLVal(expr,undefined,undefined,"postfix operation");this.next();expr=this.finishNode(node,"UpdateExpression")}return expr}parseExprSubscripts(refShorthandDefaultPos){const startPos=this.state.start;const startLoc=this.state.startLoc;const potentialArrowAt=this.state.potentialArrowAt;const expr=this.parseExprAtom(refShorthandDefaultPos);if(expr.type==="ArrowFunctionExpression"&&expr.start===potentialArrowAt)return expr;if(refShorthandDefaultPos&&
refShorthandDefaultPos.start)return expr;return this.parseSubscripts(expr,startPos,startLoc)}parseSubscripts(base,startPos,startLoc,noCalls){const state={optionalChainMember:false,stop:false};do base=this.parseSubscript(base,startPos,startLoc,noCalls,state);while(!state.stop);return base}parseSubscript(base,startPos,startLoc,noCalls,state){if(!noCalls&&this.eat(types.doubleColon)){const node=this.startNodeAt(startPos,startLoc);node.object=base;node.callee=this.parseNoCallExpr();state.stop=true;return this.parseSubscripts(this.finishNode(node,
"BindExpression"),startPos,startLoc,noCalls)}else if(this.match(types.questionDot)){this.expectPlugin("optionalChaining");state.optionalChainMember=true;if(noCalls&&this.lookahead().type===types.parenL){state.stop=true;return base}this.next();const node=this.startNodeAt(startPos,startLoc);if(this.eat(types.bracketL)){node.object=base;node.property=this.parseExpression();node.computed=true;node.optional=true;this.expect(types.bracketR);return this.finishNode(node,"OptionalMemberExpression")}else if(this.eat(types.parenL)){const possibleAsync=
this.atPossibleAsync(base);node.callee=base;node.arguments=this.parseCallExpressionArguments(types.parenR,possibleAsync);node.optional=true;return this.finishNode(node,"OptionalCallExpression")}else{node.object=base;node.property=this.parseIdentifier(true);node.computed=false;node.optional=true;return this.finishNode(node,"OptionalMemberExpression")}}else if(this.eat(types.dot)){const node=this.startNodeAt(startPos,startLoc);node.object=base;node.property=this.parseMaybePrivateName();node.computed=
false;if(state.optionalChainMember){node.optional=false;return this.finishNode(node,"OptionalMemberExpression")}return this.finishNode(node,"MemberExpression")}else if(this.eat(types.bracketL)){const node=this.startNodeAt(startPos,startLoc);node.object=base;node.property=this.parseExpression();node.computed=true;this.expect(types.bracketR);if(state.optionalChainMember){node.optional=false;return this.finishNode(node,"OptionalMemberExpression")}return this.finishNode(node,"MemberExpression")}else if(!noCalls&&
this.match(types.parenL)){const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;const oldYieldPos=this.state.yieldPos;const oldAwaitPos=this.state.awaitPos;this.state.maybeInArrowParameters=true;this.state.yieldPos=0;this.state.awaitPos=0;const possibleAsync=this.atPossibleAsync(base);this.next();let node=this.startNodeAt(startPos,startLoc);node.callee=base;const oldCommaAfterSpreadAt=this.state.commaAfterSpreadAt;this.state.commaAfterSpreadAt=-1;node.arguments=this.parseCallExpressionArguments(types.parenR,
possibleAsync,base.type==="Import");if(!state.optionalChainMember)this.finishCallExpression(node);else this.finishOptionalCallExpression(node);if(possibleAsync&&this.shouldParseAsyncArrow()){state.stop=true;this.checkCommaAfterRestFromSpread("parameter");node=this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos,startLoc),node);this.checkYieldAwaitInDefaultParams();this.state.yieldPos=oldYieldPos;this.state.awaitPos=oldAwaitPos}else{this.toReferencedListDeep(node.arguments);this.state.yieldPos=
oldYieldPos||this.state.yieldPos;this.state.awaitPos=oldAwaitPos||this.state.awaitPos}this.state.maybeInArrowParameters=oldMaybeInArrowParameters;this.state.commaAfterSpreadAt=oldCommaAfterSpreadAt;return node}else if(this.match(types.backQuote))return this.parseTaggedTemplateExpression(startPos,startLoc,base,state);else{state.stop=true;return base}}parseTaggedTemplateExpression(startPos,startLoc,base,state,typeArguments){const node=this.startNodeAt(startPos,startLoc);node.tag=base;node.quasi=this.parseTemplate(true);
if(typeArguments)node.typeParameters=typeArguments;if(state.optionalChainMember)this.raise(startPos,"Tagged Template Literals are not allowed in optionalChain");return this.finishNode(node,"TaggedTemplateExpression")}atPossibleAsync(base){return!this.state.containsEsc&&this.state.potentialArrowAt===base.start&&base.type==="Identifier"&&base.name==="async"&&!this.canInsertSemicolon()}finishCallExpression(node){if(node.callee.type==="Import"){if(node.arguments.length!==1)this.raise(node.start,"import() requires exactly one argument");
const importArg=node.arguments[0];if(importArg&&importArg.type==="SpreadElement")this.raise(importArg.start,"... is not allowed in import()")}return this.finishNode(node,"CallExpression")}finishOptionalCallExpression(node){if(node.callee.type==="Import"){if(node.arguments.length!==1)this.raise(node.start,"import() requires exactly one argument");const importArg=node.arguments[0];if(importArg&&importArg.type==="SpreadElement")this.raise(importArg.start,"... is not allowed in import()")}return this.finishNode(node,
"OptionalCallExpression")}parseCallExpressionArguments(close,possibleAsyncArrow,dynamicImport){const elts=[];let innerParenStart;let first=true;while(!this.eat(close)){if(first)first=false;else{this.expect(types.comma);if(this.eat(close)){if(dynamicImport)this.raise(this.state.lastTokStart,"Trailing comma is disallowed inside import(...) arguments");break}}if(this.match(types.parenL)&&!innerParenStart)innerParenStart=this.state.start;elts.push(this.parseExprListItem(false,possibleAsyncArrow?{start:0}:
undefined,possibleAsyncArrow?{start:0}:undefined))}if(possibleAsyncArrow&&innerParenStart&&this.shouldParseAsyncArrow())this.unexpected();return elts}shouldParseAsyncArrow(){return this.match(types.arrow)}parseAsyncArrowFromCallExpression(node,call){this.expect(types.arrow);this.parseArrowExpression(node,call.arguments,true);return node}parseNoCallExpr(){const startPos=this.state.start;const startLoc=this.state.startLoc;return this.parseSubscripts(this.parseExprAtom(),startPos,startLoc,true)}parseExprAtom(refShorthandDefaultPos){if(this.state.type===
types.slash)this.readRegexp();const canBeArrow=this.state.potentialArrowAt===this.state.start;let node;switch(this.state.type){case types._super:if(!this.state.inMethod&&!this.state.inClassProperty&&!this.options.allowSuperOutsideMethod)this.raise(this.state.start,"super is only allowed in object methods and classes");node=this.startNode();this.next();if(!this.match(types.parenL)&&!this.match(types.bracketL)&&!this.match(types.dot))this.unexpected();if(this.match(types.parenL)&&this.state.inMethod!==
"constructor"&&!this.options.allowSuperOutsideMethod)this.raise(node.start,"super() is only valid inside a class constructor. "+"Make sure the method name is spelled exactly as 'constructor'.");return this.finishNode(node,"Super");case types._import:if(this.lookahead().type===types.dot)return this.parseImportMetaProperty();this.expectPlugin("dynamicImport");node=this.startNode();this.next();if(!this.match(types.parenL))this.unexpected(null,types.parenL);return this.finishNode(node,"Import");case types._this:node=
this.startNode();this.next();return this.finishNode(node,"ThisExpression");case types.name:{node=this.startNode();const containsEsc=this.state.containsEsc;const id=this.parseIdentifier();if(!containsEsc&&id.name==="async"&&this.match(types._function)&&!this.canInsertSemicolon()){this.next();return this.parseFunction(node,false,false,true)}else if(canBeArrow&&id.name==="async"&&this.match(types.name)&&!this.canInsertSemicolon()){const oldInAsync=this.state.inAsync;this.state.inAsync=true;const params=
[this.parseIdentifier()];this.expect(types.arrow);this.parseArrowExpression(node,params,true);this.state.inAsync=oldInAsync;return node}if(canBeArrow&&this.match(types.arrow)&&!this.canInsertSemicolon()){this.next();this.parseArrowExpression(node,[id],false);return node}return id}case types._do:{this.expectPlugin("doExpressions");const node=this.startNode();this.next();const oldInFunction=this.state.inFunction;const oldLabels=this.state.labels;this.state.labels=[];this.state.inFunction=false;node.body=
this.parseBlock(false);this.state.inFunction=oldInFunction;this.state.labels=oldLabels;return this.finishNode(node,"DoExpression")}case types.regexp:{const value=this.state.value;node=this.parseLiteral(value.value,"RegExpLiteral");node.pattern=value.pattern;node.flags=value.flags;return node}case types.num:return this.parseLiteral(this.state.value,"NumericLiteral");case types.bigint:return this.parseLiteral(this.state.value,"BigIntLiteral");case types.string:return this.parseLiteral(this.state.value,
"StringLiteral");case types._null:node=this.startNode();this.next();return this.finishNode(node,"NullLiteral");case types._true:case types._false:return this.parseBooleanLiteral();case types.parenL:return this.parseParenAndDistinguishExpression(canBeArrow);case types.bracketL:node=this.startNode();this.next();node.elements=this.parseExprList(types.bracketR,true,refShorthandDefaultPos);if(!this.state.maybeInArrowParameters)this.toReferencedList(node.elements);return this.finishNode(node,"ArrayExpression");
case types.braceL:return this.parseObj(false,refShorthandDefaultPos);case types._function:return this.parseFunctionExpression();case types.at:this.parseDecorators();case types._class:node=this.startNode();this.takeDecorators(node);return this.parseClass(node,false);case types._new:return this.parseNew();case types.backQuote:return this.parseTemplate(false);case types.doubleColon:{node=this.startNode();this.next();node.object=null;const callee=node.callee=this.parseNoCallExpr();if(callee.type==="MemberExpression")return this.finishNode(node,
"BindExpression");else throw this.raise(callee.start,"Binding should be performed on object property.");}case types.hash:{if(this.state.inPipeline){node=this.startNode();if(this.getPluginOption("pipelineOperator","proposal")!=="smart")this.raise(node.start,"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.");this.next();if(this.primaryTopicReferenceIsAllowedInCurrentTopicContext()){this.registerTopicReference();return this.finishNode(node,"PipelinePrimaryTopicReference")}else throw this.raise(node.start,
`Topic reference was used in a lexical context without topic binding`);}}default:throw this.unexpected();}}parseBooleanLiteral(){const node=this.startNode();node.value=this.match(types._true);this.next();return this.finishNode(node,"BooleanLiteral")}parseMaybePrivateName(){const isPrivate=this.match(types.hash);if(isPrivate){this.expectOnePlugin(["classPrivateProperties","classPrivateMethods"]);const node=this.startNode();const columnHashEnd=this.state.end;this.next();const columnIdentifierStart=
this.state.start;const spacesBetweenHashAndIdentifier=columnIdentifierStart-columnHashEnd;if(spacesBetweenHashAndIdentifier!=0)this.raise(columnIdentifierStart,"Unexpected space between # and identifier");node.id=this.parseIdentifier(true);return this.finishNode(node,"PrivateName")}else return this.parseIdentifier(true)}parseFunctionExpression(){const node=this.startNode();let meta=this.startNode();this.next();meta=this.createIdentifier(meta,"function");if(this.state.inGenerator&&this.eat(types.dot))return this.parseMetaProperty(node,
meta,"sent");return this.parseFunction(node,false)}parseMetaProperty(node,meta,propertyName){node.meta=meta;if(meta.name==="function"&&propertyName==="sent")if(this.isContextual(propertyName))this.expectPlugin("functionSent");else if(!this.hasPlugin("functionSent"))this.unexpected();const containsEsc=this.state.containsEsc;node.property=this.parseIdentifier(true);if(node.property.name!==propertyName||containsEsc)this.raise(node.property.start,`The only valid meta property for ${meta.name} is ${meta.name}.${propertyName}`);
return this.finishNode(node,"MetaProperty")}parseImportMetaProperty(){const node=this.startNode();const id=this.parseIdentifier(true);this.expect(types.dot);if(id.name==="import")if(this.isContextual("meta"))this.expectPlugin("importMeta");else if(!this.hasPlugin("importMeta"))this.raise(id.start,`Dynamic imports require a parameter: import('a.js')`);if(!this.inModule)this.raise(id.start,`import.meta may appear only with 'sourceType: "module"'`,{code:"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"});this.sawUnambiguousESM=
true;return this.parseMetaProperty(node,id,"meta")}parseLiteral(value,type,startPos,startLoc){startPos=startPos||this.state.start;startLoc=startLoc||this.state.startLoc;const node=this.startNodeAt(startPos,startLoc);this.addExtra(node,"rawValue",value);this.addExtra(node,"raw",this.state.input.slice(startPos,this.state.end));node.value=value;this.next();return this.finishNode(node,type)}parseParenExpression(){this.expect(types.parenL);const val=this.parseExpression();this.expect(types.parenR);return val}parseParenAndDistinguishExpression(canBeArrow){const startPos=
this.state.start;const startLoc=this.state.startLoc;let val;this.expect(types.parenL);const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;const oldYieldPos=this.state.yieldPos;const oldAwaitPos=this.state.awaitPos;this.state.maybeInArrowParameters=true;this.state.yieldPos=0;this.state.awaitPos=0;const innerStartPos=this.state.start;const innerStartLoc=this.state.startLoc;const exprList=[];const refShorthandDefaultPos={start:0};const refNeedsArrowPos={start:0};let first=true;let spreadStart;
let optionalCommaStart;while(!this.match(types.parenR)){if(first)first=false;else{this.expect(types.comma,refNeedsArrowPos.start||null);if(this.match(types.parenR)){optionalCommaStart=this.state.start;break}}if(this.match(types.ellipsis)){const spreadNodeStartPos=this.state.start;const spreadNodeStartLoc=this.state.startLoc;spreadStart=this.state.start;exprList.push(this.parseParenItem(this.parseRest(),spreadNodeStartPos,spreadNodeStartLoc));this.checkCommaAfterRest(types.parenR,"parameter");break}else exprList.push(this.parseMaybeAssign(false,
refShorthandDefaultPos,this.parseParenItem,refNeedsArrowPos))}const innerEndPos=this.state.start;const innerEndLoc=this.state.startLoc;this.expect(types.parenR);this.state.maybeInArrowParameters=oldMaybeInArrowParameters;let arrowNode=this.startNodeAt(startPos,startLoc);if(canBeArrow&&this.shouldParseArrow()&&(arrowNode=this.parseArrow(arrowNode))){this.checkYieldAwaitInDefaultParams();this.state.yieldPos=oldYieldPos;this.state.awaitPos=oldAwaitPos;for(let _i=0;_i<exprList.length;_i++){const param=
exprList[_i];if(param.extra&&param.extra.parenthesized)this.unexpected(param.extra.parenStart)}this.parseArrowExpression(arrowNode,exprList,false);return arrowNode}this.state.yieldPos=oldYieldPos||this.state.yieldPos;this.state.awaitPos=oldAwaitPos||this.state.awaitPos;if(!exprList.length)this.unexpected(this.state.lastTokStart);if(optionalCommaStart)this.unexpected(optionalCommaStart);if(spreadStart)this.unexpected(spreadStart);if(refShorthandDefaultPos.start)this.unexpected(refShorthandDefaultPos.start);
if(refNeedsArrowPos.start)this.unexpected(refNeedsArrowPos.start);this.toReferencedListDeep(exprList,true);if(exprList.length>1){val=this.startNodeAt(innerStartPos,innerStartLoc);val.expressions=exprList;this.finishNodeAt(val,"SequenceExpression",innerEndPos,innerEndLoc)}else val=exprList[0];this.addExtra(val,"parenthesized",true);this.addExtra(val,"parenStart",startPos);return val}shouldParseArrow(){return!this.canInsertSemicolon()}parseArrow(node){if(this.eat(types.arrow))return node}parseParenItem(node,
startPos,startLoc){return node}parseNew(){const node=this.startNode();const meta=this.parseIdentifier(true);if(this.eat(types.dot)){const metaProp=this.parseMetaProperty(node,meta,"target");if(!this.state.inFunction&&!this.state.inClassProperty){let error="new.target can only be used in functions";if(this.hasPlugin("classProperties"))error+=" or class properties";this.raise(metaProp.start,error)}return metaProp}node.callee=this.parseNoCallExpr();if(node.callee.type==="Import")this.raise(node.callee.start,
"Cannot use new with import(...)");else if(node.callee.type==="OptionalMemberExpression"||node.callee.type==="OptionalCallExpression")this.raise(this.state.lastTokEnd,"constructors in/after an Optional Chain are not allowed");else if(this.eat(types.questionDot))this.raise(this.state.start,"constructors in/after an Optional Chain are not allowed");this.parseNewArguments(node);return this.finishNode(node,"NewExpression")}parseNewArguments(node){if(this.eat(types.parenL)){const args=this.parseExprList(types.parenR);
this.toReferencedList(args);node.arguments=args}else node.arguments=[]}parseTemplateElement(isTagged){const elem=this.startNode();if(this.state.value===null)if(!isTagged)this.raise(this.state.invalidTemplateEscapePosition||0,"Invalid escape sequence in template");else this.state.invalidTemplateEscapePosition=null;elem.value={raw:this.state.input.slice(this.state.start,this.state.end).replace(/\r\n?/g,"\n"),cooked:this.state.value};this.next();elem.tail=this.match(types.backQuote);return this.finishNode(elem,
"TemplateElement")}parseTemplate(isTagged){const node=this.startNode();this.next();node.expressions=[];let curElt=this.parseTemplateElement(isTagged);node.quasis=[curElt];while(!curElt.tail){this.expect(types.dollarBraceL);node.expressions.push(this.parseExpression());this.expect(types.braceR);node.quasis.push(curElt=this.parseTemplateElement(isTagged))}this.next();return this.finishNode(node,"TemplateLiteral")}parseObj(isPattern,refShorthandDefaultPos){let decorators=[];const propHash=Object.create(null);
let first=true;const node=this.startNode();node.properties=[];this.next();while(!this.eat(types.braceR)){if(first)first=false;else{this.expect(types.comma);if(this.eat(types.braceR))break}if(this.match(types.at))if(this.hasPlugin("decorators"))this.raise(this.state.start,"Stage 2 decorators disallow object literal property decorators");else while(this.match(types.at))decorators.push(this.parseDecorator());let prop=this.startNode(),isGenerator=false,isAsync=false,startPos,startLoc;if(decorators.length){prop.decorators=
decorators;decorators=[]}if(this.match(types.ellipsis)){prop=this.parseSpread(isPattern?{start:0}:undefined);node.properties.push(prop);if(isPattern){this.toAssignable(prop,true,"object pattern");this.checkCommaAfterRest(types.braceR,"property");this.expect(types.braceR);break}continue}prop.method=false;if(isPattern||refShorthandDefaultPos){startPos=this.state.start;startLoc=this.state.startLoc}if(!isPattern)isGenerator=this.eat(types.star);const containsEsc=this.state.containsEsc;if(!isPattern&&
this.isContextual("async")){if(isGenerator)this.unexpected();const asyncId=this.parseIdentifier();if(this.match(types.colon)||this.match(types.parenL)||this.match(types.braceR)||this.match(types.eq)||this.match(types.comma)){prop.key=asyncId;prop.computed=false}else{isAsync=true;isGenerator=this.eat(types.star);this.parsePropertyName(prop)}}else this.parsePropertyName(prop);this.parseObjPropValue(prop,startPos,startLoc,isGenerator,isAsync,isPattern,refShorthandDefaultPos,containsEsc);this.checkPropClash(prop,
propHash);if(prop.shorthand)this.addExtra(prop,"shorthand",true);node.properties.push(prop)}if(decorators.length)this.raise(this.state.start,"You have trailing decorators with no property");return this.finishNode(node,isPattern?"ObjectPattern":"ObjectExpression")}isGetterOrSetterMethod(prop,isPattern){return!isPattern&&!prop.computed&&prop.key.type==="Identifier"&&(prop.key.name==="get"||prop.key.name==="set")&&(this.match(types.string)||this.match(types.num)||this.match(types.bracketL)||this.match(types.name)||
!!this.state.type.keyword)}checkGetterSetterParams(method){const paramCount=method.kind==="get"?0:1;const start=method.start;if(method.params.length!==paramCount)if(method.kind==="get")this.raise(start,"getter must not have any formal parameters");else this.raise(start,"setter must have exactly one formal parameter");if(method.kind==="set"&&method.params[0].type==="RestElement")this.raise(start,"setter function argument must not be a rest parameter")}parseObjectMethod(prop,isGenerator,isAsync,isPattern,
containsEsc){if(isAsync||isGenerator||this.match(types.parenL)){if(isPattern)this.unexpected();prop.kind="method";prop.method=true;return this.parseMethod(prop,isGenerator,isAsync,false,"ObjectMethod")}if(!containsEsc&&this.isGetterOrSetterMethod(prop,isPattern)){if(isGenerator||isAsync)this.unexpected();prop.kind=prop.key.name;this.parsePropertyName(prop);this.parseMethod(prop,false,false,false,"ObjectMethod");this.checkGetterSetterParams(prop);return prop}}parseObjectProperty(prop,startPos,startLoc,
isPattern,refShorthandDefaultPos){prop.shorthand=false;if(this.eat(types.colon)){prop.value=isPattern?this.parseMaybeDefault(this.state.start,this.state.startLoc):this.parseMaybeAssign(false,refShorthandDefaultPos);return this.finishNode(prop,"ObjectProperty")}if(!prop.computed&&prop.key.type==="Identifier"){this.checkReservedWord(prop.key.name,prop.key.start,true,true);if(isPattern)prop.value=this.parseMaybeDefault(startPos,startLoc,prop.key.__clone());else if(this.match(types.eq)&&refShorthandDefaultPos){if(!refShorthandDefaultPos.start)refShorthandDefaultPos.start=
this.state.start;prop.value=this.parseMaybeDefault(startPos,startLoc,prop.key.__clone())}else prop.value=prop.key.__clone();prop.shorthand=true;return this.finishNode(prop,"ObjectProperty")}}parseObjPropValue(prop,startPos,startLoc,isGenerator,isAsync,isPattern,refShorthandDefaultPos,containsEsc){const node=this.parseObjectMethod(prop,isGenerator,isAsync,isPattern,containsEsc)||this.parseObjectProperty(prop,startPos,startLoc,isPattern,refShorthandDefaultPos);if(!node)this.unexpected();return node}parsePropertyName(prop){if(this.eat(types.bracketL)){prop.computed=
true;prop.key=this.parseMaybeAssign();this.expect(types.bracketR)}else{const oldInPropertyName=this.state.inPropertyName;this.state.inPropertyName=true;prop.key=this.match(types.num)||this.match(types.string)?this.parseExprAtom():this.parseMaybePrivateName();if(prop.key.type!=="PrivateName")prop.computed=false;this.state.inPropertyName=oldInPropertyName}return prop.key}initFunction(node,isAsync){node.id=null;node.generator=false;node.async=!!isAsync}parseMethod(node,isGenerator,isAsync,isConstructor,
type){const oldInFunc=this.state.inFunction;const oldInMethod=this.state.inMethod;const oldInAsync=this.state.inAsync;const oldInGenerator=this.state.inGenerator;const oldYieldPos=this.state.yieldPos;const oldAwaitPos=this.state.awaitPos;this.state.inFunction=true;this.state.inMethod=node.kind||true;this.state.inAsync=isAsync;this.state.inGenerator=isGenerator;this.state.yieldPos=0;this.state.awaitPos=0;this.initFunction(node,isAsync);node.generator=!!isGenerator;const allowModifiers=isConstructor;
this.parseFunctionParams(node,allowModifiers);this.checkYieldAwaitInDefaultParams();this.parseFunctionBodyAndFinish(node,type);this.state.inFunction=oldInFunc;this.state.inMethod=oldInMethod;this.state.inAsync=oldInAsync;this.state.inGenerator=oldInGenerator;this.state.yieldPos=oldYieldPos;this.state.awaitPos=oldAwaitPos;return node}parseArrowExpression(node,params,isAsync){this.initFunction(node,isAsync);const oldInFunc=this.state.inFunction;const oldInAsync=this.state.inAsync;const oldInGenerator=
this.state.inGenerator;const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;const oldYieldPos=this.state.yieldPos;const oldAwaitPos=this.state.awaitPos;this.state.inFunction=true;this.state.inAsync=isAsync;this.state.inGenerator=false;this.state.maybeInArrowParameters=false;this.state.yieldPos=0;this.state.awaitPos=0;if(params)this.setArrowFunctionParameters(node,params);this.parseFunctionBody(node,true);this.state.inAsync=oldInAsync;this.state.inGenerator=oldInGenerator;this.state.inFunction=
oldInFunc;this.state.maybeInArrowParameters=oldMaybeInArrowParameters;this.state.yieldPos=oldYieldPos;this.state.awaitPos=oldAwaitPos;return this.finishNode(node,"ArrowFunctionExpression")}setArrowFunctionParameters(node,params){node.params=this.toAssignableList(params,true,"arrow function parameters")}isStrictBody(node){const isBlockStatement=node.body.type==="BlockStatement";if(isBlockStatement&&node.body.directives.length)for(let _i2=0,_node$body$directives=node.body.directives;_i2<_node$body$directives.length;_i2++){const directive=
_node$body$directives[_i2];if(directive.value.value==="use strict")return true}return false}parseFunctionBodyAndFinish(node,type,allowExpressionBody){this.parseFunctionBody(node,allowExpressionBody);this.finishNode(node,type)}parseFunctionBody(node,allowExpression){const isExpression=allowExpression&&!this.match(types.braceL);const oldInParameters=this.state.inParameters;this.state.inParameters=false;if(isExpression)node.body=this.parseMaybeAssign();else{const oldInFunc=this.state.inFunction;const oldLabels=
this.state.labels;this.state.inFunction=true;this.state.labels=[];node.body=this.parseBlock(true);this.state.inFunction=oldInFunc;this.state.labels=oldLabels}this.checkFunctionNameAndParams(node,allowExpression);this.state.inParameters=oldInParameters}checkFunctionNameAndParams(node,isArrowFunction){const isStrict=this.isStrictBody(node);const checkLVal=this.state.strict||isStrict||isArrowFunction;const oldStrict=this.state.strict;if(isStrict)this.state.strict=isStrict;if(checkLVal){const nameHash=
Object.create(null);if(node.id)this.checkLVal(node.id,true,undefined,"function name");for(let _i3=0,_node$params=node.params;_i3<_node$params.length;_i3++){const param=_node$params[_i3];if(isStrict&&param.type!=="Identifier")this.raise(param.start,"Non-simple parameter in strict mode");this.checkLVal(param,true,nameHash,"function parameter list")}}this.state.strict=oldStrict}parseExprList(close,allowEmpty,refShorthandDefaultPos){const elts=[];let first=true;while(!this.eat(close)){if(first)first=
false;else{this.expect(types.comma);if(this.eat(close))break}elts.push(this.parseExprListItem(allowEmpty,refShorthandDefaultPos))}return elts}parseExprListItem(allowEmpty,refShorthandDefaultPos,refNeedsArrowPos){let elt;if(allowEmpty&&this.match(types.comma))elt=null;else if(this.match(types.ellipsis)){const spreadNodeStartPos=this.state.start;const spreadNodeStartLoc=this.state.startLoc;elt=this.parseParenItem(this.parseSpread(refShorthandDefaultPos,refNeedsArrowPos),spreadNodeStartPos,spreadNodeStartLoc)}else elt=
this.parseMaybeAssign(false,refShorthandDefaultPos,this.parseParenItem,refNeedsArrowPos);return elt}parseIdentifier(liberal){const node=this.startNode();const name=this.parseIdentifierName(node.start,liberal);return this.createIdentifier(node,name)}createIdentifier(node,name){node.name=name;node.loc.identifierName=name;return this.finishNode(node,"Identifier")}parseIdentifierName(pos,liberal){let name;if(this.match(types.name))name=this.state.value;else if(this.state.type.keyword){name=this.state.type.keyword;
if((name==="class"||name==="function")&&(this.state.lastTokEnd!==this.state.lastTokStart+1||this.state.input.charCodeAt(this.state.lastTokStart)!==46))this.state.context.pop()}else throw this.unexpected();if(!liberal)this.checkReservedWord(name,this.state.start,!!this.state.type.keyword,false);this.next();return name}checkReservedWord(word,startLoc,checkKeywords,isBinding){const state=this.state;if(state.inGenerator&&word==="yield")this.raise(startLoc,"Can not use 'yield' as identifier inside a generator");
if(state.inAsync&&word==="await")this.raise(startLoc,"Can not use 'await' as identifier inside an async function");if(state.inClassProperty&&word==="arguments")this.raise(startLoc,"'arguments' is not allowed in class field initializer");if(checkKeywords&&isKeyword(word))this.raise(startLoc,`Unexpected keyword '${word}'`);const reservedTest=!state.strict?isReservedWord:isBinding?isStrictBindReservedWord:isStrictReservedWord;if(reservedTest(word,this.inModule)){if(!state.inAsync&&word==="await")this.raise(startLoc,
"Can not use keyword 'await' outside an async function");this.raise(startLoc,`Unexpected reserved word '${word}'`)}}parseAwait(){if(!this.state.awaitPos)this.state.awaitPos=this.state.start;const node=this.startNode();this.next();if(this.state.inParameters)this.raise(node.start,"await is not allowed in async function parameters");if(this.match(types.star))this.raise(node.start,"await* has been removed from the async functions proposal. Use Promise.all() instead.");node.argument=this.parseMaybeUnary();
return this.finishNode(node,"AwaitExpression")}parseYield(noIn){if(!this.state.yieldPos)this.state.yieldPos=this.state.start;const node=this.startNode();if(this.state.inParameters)this.raise(node.start,"yield is not allowed in generator parameters");this.next();if(this.match(types.semi)||!this.match(types.star)&&!this.state.type.startsExpr||this.canInsertSemicolon()){node.delegate=false;node.argument=null}else{node.delegate=this.eat(types.star);node.argument=this.parseMaybeAssign(noIn)}return this.finishNode(node,
"YieldExpression")}checkPipelineAtInfixOperator(left,leftStartPos){if(this.getPluginOption("pipelineOperator","proposal")==="smart")if(left.type==="SequenceExpression")throw this.raise(leftStartPos,`Pipeline head should not be a comma-separated sequence expression`);}parseSmartPipelineBody(childExpression,startPos,startLoc){const pipelineStyle=this.checkSmartPipelineBodyStyle(childExpression);this.checkSmartPipelineBodyEarlyErrors(childExpression,pipelineStyle,startPos);return this.parseSmartPipelineBodyInStyle(childExpression,
pipelineStyle,startPos,startLoc)}checkSmartPipelineBodyEarlyErrors(childExpression,pipelineStyle,startPos){if(this.match(types.arrow))throw this.raise(this.state.start,`Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized`);else if(pipelineStyle==="PipelineTopicExpression"&&childExpression.type==="SequenceExpression")throw this.raise(startPos,`Pipeline body may not be a comma-separated sequence expression`);}parseSmartPipelineBodyInStyle(childExpression,
pipelineStyle,startPos,startLoc){const bodyNode=this.startNodeAt(startPos,startLoc);switch(pipelineStyle){case "PipelineBareFunction":bodyNode.callee=childExpression;break;case "PipelineBareConstructor":bodyNode.callee=childExpression.callee;break;case "PipelineBareAwaitedFunction":bodyNode.callee=childExpression.argument;break;case "PipelineTopicExpression":if(!this.topicReferenceWasUsedInCurrentTopicContext())throw this.raise(startPos,`Pipeline is in topic style but does not use topic reference`);
bodyNode.expression=childExpression;break;default:throw this.raise(startPos,`Unknown pipeline style ${pipelineStyle}`);}return this.finishNode(bodyNode,pipelineStyle)}checkSmartPipelineBodyStyle(expression){switch(expression.type){default:return this.isSimpleReference(expression)?"PipelineBareFunction":"PipelineTopicExpression"}}isSimpleReference(expression){switch(expression.type){case "MemberExpression":return!expression.computed&&this.isSimpleReference(expression.object);case "Identifier":return true;
default:return false}}withTopicPermittingContext(callback){const outerContextTopicState=this.state.topicContext;this.state.topicContext={maxNumOfResolvableTopics:1,maxTopicIndex:null};try{return callback()}finally{this.state.topicContext=outerContextTopicState}}withTopicForbiddingContext(callback){const outerContextTopicState=this.state.topicContext;this.state.topicContext={maxNumOfResolvableTopics:0,maxTopicIndex:null};try{return callback()}finally{this.state.topicContext=outerContextTopicState}}registerTopicReference(){this.state.topicContext.maxTopicIndex=
0}primaryTopicReferenceIsAllowedInCurrentTopicContext(){return this.state.topicContext.maxNumOfResolvableTopics>=1}topicReferenceWasUsedInCurrentTopicContext(){return this.state.topicContext.maxTopicIndex!=null&&this.state.topicContext.maxTopicIndex>=0}}const empty=[];const loopLabel={kind:"loop"};const switchLabel={kind:"switch"};class StatementParser extends ExpressionParser{parseTopLevel(file,program){program.sourceType=this.options.sourceType;program.interpreter=this.parseInterpreterDirective();
this.parseBlockBody(program,true,true,types.eof);file.program=this.finishNode(program,"Program");file.comments=this.state.comments;if(this.options.tokens)file.tokens=this.state.tokens;return this.finishNode(file,"File")}stmtToDirective(stmt){const expr=stmt.expression;const directiveLiteral=this.startNodeAt(expr.start,expr.loc.start);const directive=this.startNodeAt(stmt.start,stmt.loc.start);const raw=this.state.input.slice(expr.start,expr.end);const val=directiveLiteral.value=raw.slice(1,-1);this.addExtra(directiveLiteral,
"raw",raw);this.addExtra(directiveLiteral,"rawValue",val);directive.value=this.finishNodeAt(directiveLiteral,"DirectiveLiteral",expr.end,expr.loc.end);return this.finishNodeAt(directive,"Directive",stmt.end,stmt.loc.end)}parseInterpreterDirective(){if(!this.match(types.interpreterDirective))return null;const node=this.startNode();node.value=this.state.value;this.next();return this.finishNode(node,"InterpreterDirective")}isLet(context){if(!this.isContextual("let"))return false;skipWhiteSpace.lastIndex=
this.state.pos;const skip=skipWhiteSpace.exec(this.state.input);const next=this.state.pos+skip[0].length;const nextCh=this.state.input.charCodeAt(next);if(nextCh===91)return true;if(context)return false;if(nextCh===123)return true;if(isIdentifierStart(nextCh)){let pos=next+1;while(isIdentifierChar(this.state.input.charCodeAt(pos)))++pos;const ident=this.state.input.slice(next,pos);if(!keywordRelationalOperator.test(ident))return true}return false}parseStatement(context,topLevel){if(this.match(types.at))this.parseDecorators(true);
return this.parseStatementContent(context,topLevel)}parseStatementContent(context,topLevel){let starttype=this.state.type;const node=this.startNode();let kind;if(this.isLet(context)){starttype=types._var;kind="let"}switch(starttype){case types._break:case types._continue:return this.parseBreakContinueStatement(node,starttype.keyword);case types._debugger:return this.parseDebuggerStatement(node);case types._do:return this.parseDoStatement(node);case types._for:return this.parseForStatement(node);case types._function:{if(this.lookahead().type===
types.dot)break;if(context&&(this.state.strict||context!=="if"&&context!=="label"))this.raise(this.state.start,"Function declaration not allowed in this context");const result=this.parseFunctionStatement(node);if(context&&result.generator)this.unexpected(node.start);return result}case types._class:if(context)this.unexpected();return this.parseClass(node,true);case types._if:return this.parseIfStatement(node);case types._return:return this.parseReturnStatement(node);case types._switch:return this.parseSwitchStatement(node);
case types._throw:return this.parseThrowStatement(node);case types._try:return this.parseTryStatement(node);case types._const:case types._var:kind=kind||this.state.value;if(context&&kind!=="var")this.unexpected();return this.parseVarStatement(node,kind);case types._while:return this.parseWhileStatement(node);case types._with:return this.parseWithStatement(node);case types.braceL:return this.parseBlock();case types.semi:return this.parseEmptyStatement(node);case types._export:case types._import:{const nextToken=
this.lookahead();if(nextToken.type===types.parenL||nextToken.type===types.dot)break;if(!this.options.allowImportExportEverywhere&&!topLevel)this.raise(this.state.start,"'import' and 'export' may only appear at the top level");this.next();let result;if(starttype===types._import){result=this.parseImport(node);if(result.type==="ImportDeclaration"&&(!result.importKind||result.importKind==="value"))this.sawUnambiguousESM=true}else{result=this.parseExport(node);if(result.type==="ExportNamedDeclaration"&&
(!result.exportKind||result.exportKind==="value")||result.type==="ExportAllDeclaration"&&(!result.exportKind||result.exportKind==="value")||result.type==="ExportDefaultDeclaration")this.sawUnambiguousESM=true}this.assertModuleNodeAllowed(node);return result}case types.name:if(this.isContextual("async")){const state=this.state.clone();this.next();if(this.match(types._function)&&!this.canInsertSemicolon()){if(context)this.raise(this.state.lastTokStart,"Function declaration not allowed in this context");
this.next();return this.parseFunction(node,true,false,true)}else this.state=state}}const maybeName=this.state.value;const expr=this.parseExpression();if(starttype===types.name&&expr.type==="Identifier"&&this.eat(types.colon))return this.parseLabeledStatement(node,maybeName,expr,context);else return this.parseExpressionStatement(node,expr)}assertModuleNodeAllowed(node){if(!this.options.allowImportExportEverywhere&&!this.inModule)this.raise(node.start,`'import' and 'export' may appear only with 'sourceType: "module"'`,
{code:"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"})}takeDecorators(node){const decorators=this.state.decoratorStack[this.state.decoratorStack.length-1];if(decorators.length){node.decorators=decorators;this.resetStartLocationFromNode(node,decorators[0]);this.state.decoratorStack[this.state.decoratorStack.length-1]=[]}}canHaveLeadingDecorator(){return this.match(types._class)}parseDecorators(allowExport){const currentContextDecorators=this.state.decoratorStack[this.state.decoratorStack.length-1];while(this.match(types.at)){const decorator=
this.parseDecorator();currentContextDecorators.push(decorator)}if(this.match(types._export)){if(!allowExport)this.unexpected();if(this.hasPlugin("decorators")&&!this.getPluginOption("decorators","decoratorsBeforeExport"))this.raise(this.state.start,"Using the export keyword between a decorator and a class is not allowed. "+"Please use `export @dec class` instead.")}else if(!this.canHaveLeadingDecorator())this.raise(this.state.start,"Leading decorators must be attached to a class declaration")}parseDecorator(){this.expectOnePlugin(["decorators-legacy",
"decorators"]);const node=this.startNode();this.next();if(this.hasPlugin("decorators")){this.state.decoratorStack.push([]);const startPos=this.state.start;const startLoc=this.state.startLoc;let expr;if(this.eat(types.parenL)){expr=this.parseExpression();this.expect(types.parenR)}else{expr=this.parseIdentifier(false);while(this.eat(types.dot)){const node=this.startNodeAt(startPos,startLoc);node.object=expr;node.property=this.parseIdentifier(true);node.computed=false;expr=this.finishNode(node,"MemberExpression")}}node.expression=
this.parseMaybeDecoratorArguments(expr);this.state.decoratorStack.pop()}else node.expression=this.parseMaybeAssign();return this.finishNode(node,"Decorator")}parseMaybeDecoratorArguments(expr){if(this.eat(types.parenL)){const node=this.startNodeAtNode(expr);node.callee=expr;node.arguments=this.parseCallExpressionArguments(types.parenR,false);this.toReferencedList(node.arguments);return this.finishNode(node,"CallExpression")}return expr}parseBreakContinueStatement(node,keyword){const isBreak=keyword===
"break";this.next();if(this.isLineTerminator())node.label=null;else if(!this.match(types.name))this.unexpected();else{node.label=this.parseIdentifier();this.semicolon()}let i;for(i=0;i<this.state.labels.length;++i){const lab=this.state.labels[i];if(node.label==null||lab.name===node.label.name){if(lab.kind!=null&&(isBreak||lab.kind==="loop"))break;if(node.label&&isBreak)break}}if(i===this.state.labels.length)this.raise(node.start,"Unsyntactic "+keyword);return this.finishNode(node,isBreak?"BreakStatement":
"ContinueStatement")}parseDebuggerStatement(node){this.next();this.semicolon();return this.finishNode(node,"DebuggerStatement")}parseDoStatement(node){this.next();this.state.labels.push(loopLabel);node.body=this.withTopicForbiddingContext(()=>this.parseStatement("do"));this.state.labels.pop();this.expect(types._while);node.test=this.parseParenExpression();this.eat(types.semi);return this.finishNode(node,"DoWhileStatement")}parseForStatement(node){this.next();this.state.labels.push(loopLabel);let awaitAt=
-1;if((this.state.inAsync||!this.state.inFunction&&this.options.allowAwaitOutsideFunction)&&this.eatContextual("await"))awaitAt=this.state.lastTokStart;this.expect(types.parenL);if(this.match(types.semi)){if(awaitAt>-1)this.unexpected(awaitAt);return this.parseFor(node,null)}const isLet=this.isLet();if(this.match(types._var)||this.match(types._const)||isLet){const init=this.startNode();const kind=isLet?"let":this.state.value;this.next();this.parseVar(init,true,kind);this.finishNode(init,"VariableDeclaration");
if(this.match(types._in)||this.isContextual("of"))if(init.declarations.length===1){const declaration=init.declarations[0];const isForInInitializer=kind==="var"&&declaration.init&&declaration.id.type!="ObjectPattern"&&declaration.id.type!="ArrayPattern"&&!this.isContextual("of");if(this.state.strict&&isForInInitializer)this.raise(this.state.start,"for-in initializer in strict mode");else if(isForInInitializer||!declaration.init)return this.parseForIn(node,init,awaitAt)}if(awaitAt>-1)this.unexpected(awaitAt);
return this.parseFor(node,init)}const refShorthandDefaultPos={start:0};const init=this.parseExpression(true,refShorthandDefaultPos);if(this.match(types._in)||this.isContextual("of")){const description=this.isContextual("of")?"for-of statement":"for-in statement";this.toAssignable(init,undefined,description);this.checkLVal(init,undefined,undefined,description);return this.parseForIn(node,init,awaitAt)}else if(refShorthandDefaultPos.start)this.unexpected(refShorthandDefaultPos.start);if(awaitAt>-1)this.unexpected(awaitAt);
return this.parseFor(node,init)}parseFunctionStatement(node){this.next();return this.parseFunction(node,true)}parseIfStatement(node){this.next();node.test=this.parseParenExpression();node.consequent=this.parseStatement("if");node.alternate=this.eat(types._else)?this.parseStatement("if"):null;return this.finishNode(node,"IfStatement")}parseReturnStatement(node){if(!this.state.inFunction&&!this.options.allowReturnOutsideFunction)this.raise(this.state.start,"'return' outside of function");this.next();
if(this.isLineTerminator())node.argument=null;else{node.argument=this.parseExpression();this.semicolon()}return this.finishNode(node,"ReturnStatement")}parseSwitchStatement(node){this.next();node.discriminant=this.parseParenExpression();const cases=node.cases=[];this.expect(types.braceL);this.state.labels.push(switchLabel);let cur;for(let sawDefault;!this.match(types.braceR);)if(this.match(types._case)||this.match(types._default)){const isCase=this.match(types._case);if(cur)this.finishNode(cur,"SwitchCase");
cases.push(cur=this.startNode());cur.consequent=[];this.next();if(isCase)cur.test=this.parseExpression();else{if(sawDefault)this.raise(this.state.lastTokStart,"Multiple default clauses");sawDefault=true;cur.test=null}this.expect(types.colon)}else if(cur)cur.consequent.push(this.parseStatement(null));else this.unexpected();if(cur)this.finishNode(cur,"SwitchCase");this.next();this.state.labels.pop();return this.finishNode(node,"SwitchStatement")}parseThrowStatement(node){this.next();if(lineBreak.test(this.state.input.slice(this.state.lastTokEnd,
this.state.start)))this.raise(this.state.lastTokEnd,"Illegal newline after throw");node.argument=this.parseExpression();this.semicolon();return this.finishNode(node,"ThrowStatement")}parseTryStatement(node){this.next();node.block=this.parseBlock();node.handler=null;if(this.match(types._catch)){const clause=this.startNode();this.next();if(this.match(types.parenL)){this.expect(types.parenL);clause.param=this.parseBindingAtom();const clashes=Object.create(null);this.checkLVal(clause.param,true,clashes,
"catch clause");this.expect(types.parenR)}else clause.param=null;clause.body=this.withTopicForbiddingContext(()=>this.parseBlock(false));node.handler=this.finishNode(clause,"CatchClause")}node.guardedHandlers=empty;node.finalizer=this.eat(types._finally)?this.parseBlock():null;if(!node.handler&&!node.finalizer)this.raise(node.start,"Missing catch or finally clause");return this.finishNode(node,"TryStatement")}parseVarStatement(node,kind){this.next();this.parseVar(node,false,kind);this.semicolon();
return this.finishNode(node,"VariableDeclaration")}parseWhileStatement(node){this.next();node.test=this.parseParenExpression();this.state.labels.push(loopLabel);node.body=this.withTopicForbiddingContext(()=>this.parseStatement("while"));this.state.labels.pop();return this.finishNode(node,"WhileStatement")}parseWithStatement(node){if(this.state.strict)this.raise(this.state.start,"'with' in strict mode");this.next();node.object=this.parseParenExpression();node.body=this.withTopicForbiddingContext(()=>
this.parseStatement("with"));return this.finishNode(node,"WithStatement")}parseEmptyStatement(node){this.next();return this.finishNode(node,"EmptyStatement")}parseLabeledStatement(node,maybeName,expr,context){for(let _i=0,_this$state$labels=this.state.labels;_i<_this$state$labels.length;_i++){const label=_this$state$labels[_i];if(label.name===maybeName)this.raise(expr.start,`Label '${maybeName}' is already declared`)}const kind=this.state.type.isLoop?"loop":this.match(types._switch)?"switch":null;
for(let i=this.state.labels.length-1;i>=0;i--){const label=this.state.labels[i];if(label.statementStart===node.start){label.statementStart=this.state.start;label.kind=kind}else break}this.state.labels.push({name:maybeName,kind:kind,statementStart:this.state.start});node.body=this.parseStatement(context?context.indexOf("label")===-1?context+"label":context:"label");this.state.labels.pop();node.label=expr;return this.finishNode(node,"LabeledStatement")}parseExpressionStatement(node,expr){node.expression=
expr;this.semicolon();return this.finishNode(node,"ExpressionStatement")}parseBlock(allowDirectives){const node=this.startNode();this.expect(types.braceL);this.parseBlockBody(node,allowDirectives,false,types.braceR);return this.finishNode(node,"BlockStatement")}isValidDirective(stmt){return stmt.type==="ExpressionStatement"&&stmt.expression.type==="StringLiteral"&&!stmt.expression.extra.parenthesized}parseBlockBody(node,allowDirectives,topLevel,end){const body=node.body=[];const directives=node.directives=
[];this.parseBlockOrModuleBlockBody(body,allowDirectives?directives:undefined,topLevel,end)}parseBlockOrModuleBlockBody(body,directives,topLevel,end){let parsedNonDirective=false;let oldStrict;let octalPosition;while(!this.eat(end)){if(!parsedNonDirective&&this.state.containsOctal&&!octalPosition)octalPosition=this.state.octalPosition;const stmt=this.parseStatement(null,topLevel);if(directives&&!parsedNonDirective&&this.isValidDirective(stmt)){const directive=this.stmtToDirective(stmt);directives.push(directive);
if(oldStrict===undefined&&directive.value.value==="use strict"){oldStrict=this.state.strict;this.setStrict(true);if(octalPosition)this.raise(octalPosition,"Octal literal in strict mode")}continue}parsedNonDirective=true;body.push(stmt)}if(oldStrict===false)this.setStrict(false)}parseFor(node,init){node.init=init;this.expect(types.semi);node.test=this.match(types.semi)?null:this.parseExpression();this.expect(types.semi);node.update=this.match(types.parenR)?null:this.parseExpression();this.expect(types.parenR);
node.body=this.withTopicForbiddingContext(()=>this.parseStatement("for"));this.state.labels.pop();return this.finishNode(node,"ForStatement")}parseForIn(node,init,awaitAt){const type=this.match(types._in)?"ForInStatement":"ForOfStatement";if(awaitAt>-1)this.eatContextual("of");else this.next();if(type==="ForOfStatement")node.await=awaitAt>-1;node.left=init;node.right=this.parseExpression();this.expect(types.parenR);node.body=this.withTopicForbiddingContext(()=>this.parseStatement("for"));this.state.labels.pop();
return this.finishNode(node,type)}parseVar(node,isFor,kind){const declarations=node.declarations=[];const isTypescript=this.hasPlugin("typescript");node.kind=kind;for(;;){const decl=this.startNode();this.parseVarId(decl,kind);if(this.eat(types.eq))decl.init=this.parseMaybeAssign(isFor);else{if(kind==="const"&&!(this.match(types._in)||this.isContextual("of"))){if(!isTypescript)this.unexpected()}else if(decl.id.type!=="Identifier"&&!(isFor&&(this.match(types._in)||this.isContextual("of"))))this.raise(this.state.lastTokEnd,
"Complex binding patterns require an initialization value");decl.init=null}declarations.push(this.finishNode(decl,"VariableDeclarator"));if(!this.eat(types.comma))break}return node}parseVarId(decl,kind){if((kind==="const"||kind==="let")&&this.isContextual("let"))this.unexpected(null,"let is disallowed as a lexically bound name");decl.id=this.parseBindingAtom();this.checkLVal(decl.id,true,undefined,"variable declaration")}parseFunction(node,isStatement,allowExpressionBody=false,isAsync=false,optionalId=
false){const oldInFunc=this.state.inFunction;const oldInMethod=this.state.inMethod;const oldInAsync=this.state.inAsync;const oldInGenerator=this.state.inGenerator;const oldInClassProperty=this.state.inClassProperty;const oldYieldPos=this.state.yieldPos;const oldAwaitPos=this.state.awaitPos;this.state.inFunction=true;this.state.inMethod=false;this.state.inClassProperty=false;this.state.yieldPos=0;this.state.awaitPos=0;this.initFunction(node,isAsync);node.generator=this.eat(types.star);if(isStatement&&
!optionalId&&!this.match(types.name))this.unexpected();if(!isStatement){this.state.inAsync=isAsync;this.state.inGenerator=node.generator}if(this.match(types.name))node.id=this.parseIdentifier();if(isStatement){this.state.inAsync=isAsync;this.state.inGenerator=node.generator}this.parseFunctionParams(node);this.withTopicForbiddingContext(()=>{this.parseFunctionBodyAndFinish(node,isStatement?"FunctionDeclaration":"FunctionExpression",allowExpressionBody)});this.state.inFunction=oldInFunc;this.state.inMethod=
oldInMethod;this.state.inAsync=oldInAsync;this.state.inGenerator=oldInGenerator;this.state.inClassProperty=oldInClassProperty;this.state.yieldPos=oldYieldPos;this.state.awaitPos=oldAwaitPos;return node}parseFunctionParams(node,allowModifiers){const oldInParameters=this.state.inParameters;this.state.inParameters=true;this.expect(types.parenL);node.params=this.parseBindingList(types.parenR,false,allowModifiers);this.state.inParameters=oldInParameters;this.checkYieldAwaitInDefaultParams()}parseClass(node,
isStatement,optionalId){this.next();this.takeDecorators(node);const oldStrict=this.state.strict;this.state.strict=true;this.parseClassId(node,isStatement,optionalId);this.parseClassSuper(node);this.parseClassBody(node);this.state.strict=oldStrict;return this.finishNode(node,isStatement?"ClassDeclaration":"ClassExpression")}isClassProperty(){return this.match(types.eq)||this.match(types.semi)||this.match(types.braceR)}isClassMethod(){return this.match(types.parenL)}isNonstaticConstructor(method){return!method.computed&&
!method.static&&(method.key.name==="constructor"||method.key.value==="constructor")}parseClassBody(node){this.state.classLevel++;const state={hadConstructor:false};let decorators=[];const classBody=this.startNode();classBody.body=[];this.expect(types.braceL);this.withTopicForbiddingContext(()=>{while(!this.eat(types.braceR)){if(this.eat(types.semi)){if(decorators.length>0)this.raise(this.state.lastTokEnd,"Decorators must not be followed by a semicolon");continue}if(this.match(types.at)){decorators.push(this.parseDecorator());
continue}const member=this.startNode();if(decorators.length){member.decorators=decorators;this.resetStartLocationFromNode(member,decorators[0]);decorators=[]}this.parseClassMember(classBody,member,state);if(member.kind==="constructor"&&member.decorators&&member.decorators.length>0)this.raise(member.start,"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?")}});if(decorators.length)this.raise(this.state.start,"You have trailing decorators with no method");node.body=this.finishNode(classBody,
"ClassBody");this.state.classLevel--}parseClassMember(classBody,member,state){let isStatic=false;const containsEsc=this.state.containsEsc;if(this.match(types.name)&&this.state.value==="static"){const key=this.parseIdentifier(true);if(this.isClassMethod()){const method=member;method.kind="method";method.computed=false;method.key=key;method.static=false;this.pushClassMethod(classBody,method,false,false,false);return}else if(this.isClassProperty()){const prop=member;prop.computed=false;prop.key=key;
prop.static=false;classBody.body.push(this.parseClassProperty(prop));return}else if(containsEsc)throw this.unexpected();isStatic=true}this.parseClassMemberWithIsStatic(classBody,member,state,isStatic)}parseClassMemberWithIsStatic(classBody,member,state,isStatic){const publicMethod=member;const privateMethod=member;const publicProp=member;const privateProp=member;const method=publicMethod;const publicMember=publicMethod;member.static=isStatic;if(this.eat(types.star)){method.kind="method";this.parseClassPropertyName(method);
if(method.key.type==="PrivateName"){this.pushClassPrivateMethod(classBody,privateMethod,true,false);return}if(this.isNonstaticConstructor(publicMethod))this.raise(publicMethod.key.start,"Constructor can't be a generator");this.pushClassMethod(classBody,publicMethod,true,false,false);return}const key=this.parseClassPropertyName(member);const isPrivate=key.type==="PrivateName";const isSimple=key.type==="Identifier";this.parsePostMemberNameModifiers(publicMember);if(this.isClassMethod()){method.kind=
"method";if(isPrivate){this.pushClassPrivateMethod(classBody,privateMethod,false,false);return}const isConstructor=this.isNonstaticConstructor(publicMethod);if(isConstructor){publicMethod.kind="constructor";if(publicMethod.decorators)this.raise(publicMethod.start,"You can't attach decorators to a class constructor");if(state.hadConstructor&&!this.hasPlugin("typescript"))this.raise(key.start,"Duplicate constructor in the same class");state.hadConstructor=true}this.pushClassMethod(classBody,publicMethod,
false,false,isConstructor)}else if(this.isClassProperty())if(isPrivate)this.pushClassPrivateProperty(classBody,privateProp);else this.pushClassProperty(classBody,publicProp);else if(isSimple&&key.name==="async"&&!this.isLineTerminator()){const isGenerator=this.eat(types.star);method.kind="method";this.parseClassPropertyName(method);if(method.key.type==="PrivateName")this.pushClassPrivateMethod(classBody,privateMethod,isGenerator,true);else{if(this.isNonstaticConstructor(publicMethod))this.raise(publicMethod.key.start,
"Constructor can't be an async function");this.pushClassMethod(classBody,publicMethod,isGenerator,true,false)}}else if(isSimple&&(key.name==="get"||key.name==="set")&&!(this.match(types.star)&&this.isLineTerminator())){method.kind=key.name;this.parseClassPropertyName(publicMethod);if(method.key.type==="PrivateName")this.pushClassPrivateMethod(classBody,privateMethod,false,false);else{if(this.isNonstaticConstructor(publicMethod))this.raise(publicMethod.key.start,"Constructor can't have get/set modifier");
this.pushClassMethod(classBody,publicMethod,false,false,false)}this.checkGetterSetterParams(publicMethod)}else if(this.isLineTerminator())if(isPrivate)this.pushClassPrivateProperty(classBody,privateProp);else this.pushClassProperty(classBody,publicProp);else this.unexpected()}parseClassPropertyName(member){const key=this.parsePropertyName(member);if(!member.computed&&member.static&&(key.name==="prototype"||key.value==="prototype"))this.raise(key.start,"Classes may not have static property named prototype");
if(key.type==="PrivateName"&&key.id.name==="constructor")this.raise(key.start,"Classes may not have a private field named '#constructor'");return key}pushClassProperty(classBody,prop){if(this.isNonstaticConstructor(prop))this.raise(prop.key.start,"Classes may not have a non-static field named 'constructor'");classBody.body.push(this.parseClassProperty(prop))}pushClassPrivateProperty(classBody,prop){this.expectPlugin("classPrivateProperties",prop.key.start);classBody.body.push(this.parseClassPrivateProperty(prop))}pushClassMethod(classBody,
method,isGenerator,isAsync,isConstructor){classBody.body.push(this.parseMethod(method,isGenerator,isAsync,isConstructor,"ClassMethod"))}pushClassPrivateMethod(classBody,method,isGenerator,isAsync){this.expectPlugin("classPrivateMethods",method.key.start);classBody.body.push(this.parseMethod(method,isGenerator,isAsync,false,"ClassPrivateMethod"))}parsePostMemberNameModifiers(methodOrProp){}parseAccessModifier(){return undefined}parseClassPrivateProperty(node){const oldInMethod=this.state.inMethod;
this.state.inMethod=false;this.state.inClassProperty=true;node.value=this.eat(types.eq)?this.parseMaybeAssign():null;this.semicolon();this.state.inClassProperty=false;this.state.inMethod=oldInMethod;return this.finishNode(node,"ClassPrivateProperty")}parseClassProperty(node){if(!node.typeAnnotation)this.expectPlugin("classProperties");const oldInMethod=this.state.inMethod;this.state.inMethod=false;this.state.inClassProperty=true;if(this.match(types.eq)){this.expectPlugin("classProperties");this.next();
node.value=this.parseMaybeAssign()}else node.value=null;this.semicolon();this.state.inClassProperty=false;this.state.inMethod=oldInMethod;return this.finishNode(node,"ClassProperty")}parseClassId(node,isStatement,optionalId){if(this.match(types.name))node.id=this.parseIdentifier();else if(optionalId||!isStatement)node.id=null;else this.unexpected(null,"A class name is required")}parseClassSuper(node){node.superClass=this.eat(types._extends)?this.parseExprSubscripts():null}parseExport(node){const hasDefault=
this.maybeParseExportDefaultSpecifier(node);const parseAfterDefault=!hasDefault||this.eat(types.comma);const hasStar=parseAfterDefault&&this.eatExportStar(node);const hasNamespace=hasStar&&this.maybeParseExportNamespaceSpecifier(node);const parseAfterNamespace=parseAfterDefault&&(!hasNamespace||this.eat(types.comma));const isFromRequired=hasDefault||hasStar;if(hasStar&&!hasNamespace){if(hasDefault)this.unexpected();this.parseExportFrom(node,true);return this.finishNode(node,"ExportAllDeclaration")}const hasSpecifiers=
this.maybeParseExportNamedSpecifiers(node);if(hasDefault&&parseAfterDefault&&!hasStar&&!hasSpecifiers||hasNamespace&&parseAfterNamespace&&!hasSpecifiers)throw this.unexpected(null,types.braceL);let hasDeclaration;if(isFromRequired||hasSpecifiers){hasDeclaration=false;this.parseExportFrom(node,isFromRequired)}else hasDeclaration=this.maybeParseExportDeclaration(node);if(isFromRequired||hasSpecifiers||hasDeclaration){this.checkExport(node,true);return this.finishNode(node,"ExportNamedDeclaration")}if(this.eat(types._default)){node.declaration=
this.parseExportDefaultExpression();this.checkExport(node,true,true);return this.finishNode(node,"ExportDefaultDeclaration")}throw this.unexpected(null,types.braceL);}eatExportStar(node){return this.eat(types.star)}maybeParseExportDefaultSpecifier(node){if(this.isExportDefaultSpecifier()){this.expectPlugin("exportDefaultFrom");const specifier=this.startNode();specifier.exported=this.parseIdentifier(true);node.specifiers=[this.finishNode(specifier,"ExportDefaultSpecifier")];return true}return false}maybeParseExportNamespaceSpecifier(node){if(this.isContextual("as")){if(!node.specifiers)node.specifiers=
[];this.expectPlugin("exportNamespaceFrom");const specifier=this.startNodeAt(this.state.lastTokStart,this.state.lastTokStartLoc);this.next();specifier.exported=this.parseIdentifier(true);node.specifiers.push(this.finishNode(specifier,"ExportNamespaceSpecifier"));return true}return false}maybeParseExportNamedSpecifiers(node){if(this.match(types.braceL)){if(!node.specifiers)node.specifiers=[];node.specifiers.push(...this.parseExportSpecifiers());node.source=null;node.declaration=null;return true}return false}maybeParseExportDeclaration(node){if(this.shouldParseExportDeclaration()){if(this.isContextual("async")){const next=
this.lookahead();if(next.type!==types._function)this.unexpected(next.start,`Unexpected token, expected "function"`)}node.specifiers=[];node.source=null;node.declaration=this.parseExportDeclaration(node);return true}return false}isAsyncFunction(){if(!this.isContextual("async"))return false;const {input,pos,length}=this.state;skipWhiteSpace.lastIndex=pos;const skip=skipWhiteSpace.exec(input);if(!skip||!skip.length)return false;const next=pos+skip[0].length;return!lineBreak.test(input.slice(pos,next))&&
input.slice(next,next+8)==="function"&&(next+8===length||!isIdentifierChar(input.charCodeAt(next+8)))}parseExportDefaultExpression(){const expr=this.startNode();const isAsync=this.isAsyncFunction();if(this.eat(types._function)||isAsync){if(isAsync){this.eatContextual("async");this.expect(types._function)}return this.parseFunction(expr,true,false,isAsync,true)}else if(this.match(types._class))return this.parseClass(expr,true,true);else if(this.match(types.at)){if(this.hasPlugin("decorators")&&this.getPluginOption("decorators",
"decoratorsBeforeExport"))this.unexpected(this.state.start,"Decorators must be placed *before* the 'export' keyword."+" You can set the 'decoratorsBeforeExport' option to false to use"+" the 'export @decorator class {}' syntax");this.parseDecorators(false);return this.parseClass(expr,true,true)}else if(this.match(types._const)||this.match(types._var)||this.isLet())return this.raise(this.state.start,"Only expressions, functions or classes are allowed as the `default` export.");else{const res=this.parseMaybeAssign();
this.semicolon();return res}}parseExportDeclaration(node){return this.parseStatement(null)}isExportDefaultSpecifier(){if(this.match(types.name))return this.state.value!=="async"&&this.state.value!=="let";if(!this.match(types._default))return false;const lookahead=this.lookahead();return lookahead.type===types.comma||lookahead.type===types.name&&lookahead.value==="from"}parseExportFrom(node,expect){if(this.eatContextual("from")){node.source=this.parseImportSource();this.checkExport(node)}else if(expect)this.unexpected();
else node.source=null;this.semicolon()}shouldParseExportDeclaration(){if(this.match(types.at)){this.expectOnePlugin(["decorators","decorators-legacy"]);if(this.hasPlugin("decorators"))if(this.getPluginOption("decorators","decoratorsBeforeExport"))this.unexpected(this.state.start,"Decorators must be placed *before* the 'export' keyword."+" You can set the 'decoratorsBeforeExport' option to false to use"+" the 'export @decorator class {}' syntax");else return true}return this.state.type.keyword==="var"||
this.state.type.keyword==="const"||this.state.type.keyword==="function"||this.state.type.keyword==="class"||this.isLet()||this.isAsyncFunction()}checkExport(node,checkNames,isDefault){if(checkNames)if(isDefault)this.checkDuplicateExports(node,"default");else if(node.specifiers&&node.specifiers.length)for(let _i2=0,_node$specifiers=node.specifiers;_i2<_node$specifiers.length;_i2++){const specifier=_node$specifiers[_i2];this.checkDuplicateExports(specifier,specifier.exported.name)}else if(node.declaration)if(node.declaration.type===
"FunctionDeclaration"||node.declaration.type==="ClassDeclaration"){const id=node.declaration.id;if(!id)throw new Error("Assertion failure");this.checkDuplicateExports(node,id.name)}else if(node.declaration.type==="VariableDeclaration")for(let _i3=0,_node$declaration$dec=node.declaration.declarations;_i3<_node$declaration$dec.length;_i3++){const declaration=_node$declaration$dec[_i3];this.checkDeclaration(declaration.id)}const currentContextDecorators=this.state.decoratorStack[this.state.decoratorStack.length-
1];if(currentContextDecorators.length){const isClass=node.declaration&&(node.declaration.type==="ClassDeclaration"||node.declaration.type==="ClassExpression");if(!node.declaration||!isClass)throw this.raise(node.start,"You can only use decorators on an export when exporting a class");this.takeDecorators(node.declaration)}}checkDeclaration(node){if(node.type==="ObjectPattern")for(let _i4=0,_node$properties=node.properties;_i4<_node$properties.length;_i4++){const prop=_node$properties[_i4];this.checkDeclaration(prop)}else if(node.type===
"ArrayPattern")for(let _i5=0,_node$elements=node.elements;_i5<_node$elements.length;_i5++){const elem=_node$elements[_i5];if(elem)this.checkDeclaration(elem)}else if(node.type==="ObjectProperty")this.checkDeclaration(node.value);else if(node.type==="RestElement")this.checkDeclaration(node.argument);else if(node.type==="Identifier")this.checkDuplicateExports(node,node.name)}checkDuplicateExports(node,name){if(this.state.exportedIdentifiers.indexOf(name)>-1)throw this.raise(node.start,name==="default"?
"Only one default export allowed per module.":`\`${name}\` has already been exported. Exported identifiers must be unique.`);this.state.exportedIdentifiers.push(name)}parseExportSpecifiers(){const nodes=[];let first=true;let needsFrom;this.expect(types.braceL);while(!this.eat(types.braceR)){if(first)first=false;else{this.expect(types.comma);if(this.eat(types.braceR))break}const isDefault=this.match(types._default);if(isDefault&&!needsFrom)needsFrom=true;const node=this.startNode();node.local=this.parseIdentifier(isDefault);
node.exported=this.eatContextual("as")?this.parseIdentifier(true):node.local.__clone();nodes.push(this.finishNode(node,"ExportSpecifier"))}if(needsFrom&&!this.isContextual("from"))this.unexpected();return nodes}parseImport(node){node.specifiers=[];if(!this.match(types.string)){const hasDefault=this.maybeParseDefaultImportSpecifier(node);const parseNext=!hasDefault||this.eat(types.comma);const hasStar=parseNext&&this.maybeParseStarImportSpecifier(node);if(parseNext&&!hasStar)this.parseNamedImportSpecifiers(node);
this.expectContextual("from")}node.source=this.parseImportSource();this.semicolon();return this.finishNode(node,"ImportDeclaration")}parseImportSource(){if(!this.match(types.string))this.unexpected();return this.parseExprAtom()}shouldParseDefaultImport(node){return this.match(types.name)}parseImportSpecifierLocal(node,specifier,type,contextDescription){specifier.local=this.parseIdentifier();this.checkLVal(specifier.local,true,undefined,contextDescription);node.specifiers.push(this.finishNode(specifier,
type))}maybeParseDefaultImportSpecifier(node){if(this.shouldParseDefaultImport(node)){this.parseImportSpecifierLocal(node,this.startNode(),"ImportDefaultSpecifier","default import specifier");return true}return false}maybeParseStarImportSpecifier(node){if(this.match(types.star)){const specifier=this.startNode();this.next();this.expectContextual("as");this.parseImportSpecifierLocal(node,specifier,"ImportNamespaceSpecifier","import namespace specifier");return true}return false}parseNamedImportSpecifiers(node){let first=
true;this.expect(types.braceL);while(!this.eat(types.braceR)){if(first)first=false;else{if(this.eat(types.colon))this.unexpected(null,"ES2015 named imports do not destructure. "+"Use another statement for destructuring after the import.");this.expect(types.comma);if(this.eat(types.braceR))break}this.parseImportSpecifier(node)}}parseImportSpecifier(node){const specifier=this.startNode();specifier.imported=this.parseIdentifier(true);if(this.eatContextual("as"))specifier.local=this.parseIdentifier();
else{this.checkReservedWord(specifier.imported.name,specifier.start,true,true);specifier.local=specifier.imported.__clone()}this.checkLVal(specifier.local,true,undefined,"import specifier");node.specifiers.push(this.finishNode(specifier,"ImportSpecifier"))}}class Parser extends StatementParser{constructor(options,input){options=getOptions(options);super(options,input);this.options=options;this.inModule=this.options.sourceType==="module";this.plugins=pluginsMap(this.options.plugins);this.filename=
options.sourceFilename}parse(){const file=this.startNode();const program=this.startNode();this.nextToken();return this.parseTopLevel(file,program)}}function pluginsMap(plugins){const pluginMap=new Map;for(let _i=0;_i<plugins.length;_i++){const plugin=plugins[_i];const [name,options]=Array.isArray(plugin)?plugin:[plugin,{}];if(!pluginMap.has(name))pluginMap.set(name,options||{})}return pluginMap}function nonNull(x){if(x==null)throw new Error(`Unexpected ${x} value.`);return x}function assert(x){if(!x)throw new Error("Assert fail");
}function keywordTypeFromName(value){switch(value){case "any":return"TSAnyKeyword";case "boolean":return"TSBooleanKeyword";case "bigint":return"TSBigIntKeyword";case "never":return"TSNeverKeyword";case "number":return"TSNumberKeyword";case "object":return"TSObjectKeyword";case "string":return"TSStringKeyword";case "symbol":return"TSSymbolKeyword";case "undefined":return"TSUndefinedKeyword";case "unknown":return"TSUnknownKeyword";default:return undefined}}var typescript=(superClass)=>class extends superClass{tsIsIdentifier(){return this.match(types.name)}tsNextTokenCanFollowModifier(){this.next();
return!this.hasPrecedingLineBreak()&&!this.match(types.parenL)&&!this.match(types.parenR)&&!this.match(types.colon)&&!this.match(types.eq)&&!this.match(types.question)}tsParseModifier(allowedModifiers){if(!this.match(types.name))return undefined;const modifier=this.state.value;if(allowedModifiers.indexOf(modifier)!==-1&&this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this)))return modifier;return undefined}tsIsListTerminator(kind){switch(kind){case "EnumMembers":case "TypeMembers":return this.match(types.braceR);
case "HeritageClauseElement":return this.match(types.braceL);case "TupleElementTypes":return this.match(types.bracketR);case "TypeParametersOrArguments":return this.isRelational(">")}throw new Error("Unreachable");}tsParseList(kind,parseElement){const result=[];while(!this.tsIsListTerminator(kind))result.push(parseElement());return result}tsParseDelimitedList(kind,parseElement){return nonNull(this.tsParseDelimitedListWorker(kind,parseElement,true))}tsTryParseDelimitedList(kind,parseElement){return this.tsParseDelimitedListWorker(kind,
parseElement,false)}tsParseDelimitedListWorker(kind,parseElement,expectSuccess){const result=[];while(true){if(this.tsIsListTerminator(kind))break;const element=parseElement();if(element==null)return undefined;result.push(element);if(this.eat(types.comma))continue;if(this.tsIsListTerminator(kind))break;if(expectSuccess)this.expect(types.comma);return undefined}return result}tsParseBracketedList(kind,parseElement,bracket,skipFirstToken){if(!skipFirstToken)if(bracket)this.expect(types.bracketL);else this.expectRelational("<");
const result=this.tsParseDelimitedList(kind,parseElement);if(bracket)this.expect(types.bracketR);else this.expectRelational(">");return result}tsParseImportType(){const node=this.startNode();this.expect(types._import);this.expect(types.parenL);if(!this.match(types.string))throw this.unexpected(null,"Argument in a type import must be a string literal");node.argument=this.parseLiteral(this.state.value,"StringLiteral");this.expect(types.parenR);if(this.eat(types.dot))node.qualifier=this.tsParseEntityName(true);
if(this.isRelational("<"))node.typeParameters=this.tsParseTypeArguments();return this.finishNode(node,"TSImportType")}tsParseEntityName(allowReservedWords){let entity=this.parseIdentifier();while(this.eat(types.dot)){const node=this.startNodeAtNode(entity);node.left=entity;node.right=this.parseIdentifier(allowReservedWords);entity=this.finishNode(node,"TSQualifiedName")}return entity}tsParseTypeReference(){const node=this.startNode();node.typeName=this.tsParseEntityName(false);if(!this.hasPrecedingLineBreak()&&
this.isRelational("<"))node.typeParameters=this.tsParseTypeArguments();return this.finishNode(node,"TSTypeReference")}tsParseThisTypePredicate(lhs){this.next();const node=this.startNodeAtNode(lhs);node.parameterName=lhs;node.typeAnnotation=this.tsParseTypeAnnotation(false);return this.finishNode(node,"TSTypePredicate")}tsParseThisTypeNode(){const node=this.startNode();this.next();return this.finishNode(node,"TSThisType")}tsParseTypeQuery(){const node=this.startNode();this.expect(types._typeof);if(this.match(types._import))node.exprName=
this.tsParseImportType();else node.exprName=this.tsParseEntityName(true);return this.finishNode(node,"TSTypeQuery")}tsParseTypeParameter(){const node=this.startNode();node.name=this.parseIdentifierName(node.start);node.constraint=this.tsEatThenParseType(types._extends);node.default=this.tsEatThenParseType(types.eq);return this.finishNode(node,"TSTypeParameter")}tsTryParseTypeParameters(){if(this.isRelational("<"))return this.tsParseTypeParameters()}tsParseTypeParameters(){const node=this.startNode();
if(this.isRelational("<")||this.match(types.jsxTagStart))this.next();else this.unexpected();node.params=this.tsParseBracketedList("TypeParametersOrArguments",this.tsParseTypeParameter.bind(this),false,true);return this.finishNode(node,"TSTypeParameterDeclaration")}tsFillSignature(returnToken,signature){const returnTokenRequired=returnToken===types.arrow;signature.typeParameters=this.tsTryParseTypeParameters();this.expect(types.parenL);signature.parameters=this.tsParseBindingListForSignature();if(returnTokenRequired)signature.typeAnnotation=
this.tsParseTypeOrTypePredicateAnnotation(returnToken);else if(this.match(returnToken))signature.typeAnnotation=this.tsParseTypeOrTypePredicateAnnotation(returnToken)}tsParseBindingListForSignature(){return this.parseBindingList(types.parenR).map((pattern)=>{if(pattern.type!=="Identifier"&&pattern.type!=="RestElement"&&pattern.type!=="ObjectPattern"&&pattern.type!=="ArrayPattern")throw this.unexpected(pattern.start,`Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${pattern.type}`);
return pattern})}tsParseTypeMemberSemicolon(){if(!this.eat(types.comma))this.semicolon()}tsParseSignatureMember(kind){const node=this.startNode();if(kind==="TSConstructSignatureDeclaration")this.expect(types._new);this.tsFillSignature(types.colon,node);this.tsParseTypeMemberSemicolon();return this.finishNode(node,kind)}tsIsUnambiguouslyIndexSignature(){this.next();return this.eat(types.name)&&this.match(types.colon)}tsTryParseIndexSignature(node){if(!(this.match(types.bracketL)&&this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))))return undefined;
this.expect(types.bracketL);const id=this.parseIdentifier();id.typeAnnotation=this.tsParseTypeAnnotation();this.finishNode(id,"Identifier");this.expect(types.bracketR);node.parameters=[id];const type=this.tsTryParseTypeAnnotation();if(type)node.typeAnnotation=type;this.tsParseTypeMemberSemicolon();return this.finishNode(node,"TSIndexSignature")}tsParsePropertyOrMethodSignature(node,readonly){this.parsePropertyName(node);if(this.eat(types.question))node.optional=true;const nodeAny=node;if(!readonly&&
(this.match(types.parenL)||this.isRelational("<"))){const method=nodeAny;this.tsFillSignature(types.colon,method);this.tsParseTypeMemberSemicolon();return this.finishNode(method,"TSMethodSignature")}else{const property=nodeAny;if(readonly)property.readonly=true;const type=this.tsTryParseTypeAnnotation();if(type)property.typeAnnotation=type;this.tsParseTypeMemberSemicolon();return this.finishNode(property,"TSPropertySignature")}}tsParseTypeMember(){if(this.match(types.parenL)||this.isRelational("<"))return this.tsParseSignatureMember("TSCallSignatureDeclaration");
if(this.match(types._new)&&this.tsLookAhead(this.tsIsStartOfConstructSignature.bind(this)))return this.tsParseSignatureMember("TSConstructSignatureDeclaration");const node=this.startNode();const readonly=!!this.tsParseModifier(["readonly"]);const idx=this.tsTryParseIndexSignature(node);if(idx){if(readonly)node.readonly=true;return idx}return this.tsParsePropertyOrMethodSignature(node,readonly)}tsIsStartOfConstructSignature(){this.next();return this.match(types.parenL)||this.isRelational("<")}tsParseTypeLiteral(){const node=
this.startNode();node.members=this.tsParseObjectTypeMembers();return this.finishNode(node,"TSTypeLiteral")}tsParseObjectTypeMembers(){this.expect(types.braceL);const members=this.tsParseList("TypeMembers",this.tsParseTypeMember.bind(this));this.expect(types.braceR);return members}tsIsStartOfMappedType(){this.next();if(this.eat(types.plusMin))return this.isContextual("readonly");if(this.isContextual("readonly"))this.next();if(!this.match(types.bracketL))return false;this.next();if(!this.tsIsIdentifier())return false;
this.next();return this.match(types._in)}tsParseMappedTypeParameter(){const node=this.startNode();node.name=this.parseIdentifierName(node.start);node.constraint=this.tsExpectThenParseType(types._in);return this.finishNode(node,"TSTypeParameter")}tsParseMappedType(){const node=this.startNode();this.expect(types.braceL);if(this.match(types.plusMin)){node.readonly=this.state.value;this.next();this.expectContextual("readonly")}else if(this.eatContextual("readonly"))node.readonly=true;this.expect(types.bracketL);
node.typeParameter=this.tsParseMappedTypeParameter();this.expect(types.bracketR);if(this.match(types.plusMin)){node.optional=this.state.value;this.next();this.expect(types.question)}else if(this.eat(types.question))node.optional=true;node.typeAnnotation=this.tsTryParseType();this.semicolon();this.expect(types.braceR);return this.finishNode(node,"TSMappedType")}tsParseTupleType(){const node=this.startNode();node.elementTypes=this.tsParseBracketedList("TupleElementTypes",this.tsParseTupleElementType.bind(this),
true,false);let seenOptionalElement=false;node.elementTypes.forEach((elementNode)=>{if(elementNode.type==="TSOptionalType")seenOptionalElement=true;else if(seenOptionalElement&&elementNode.type!=="TSRestType")this.raise(elementNode.start,"A required element cannot follow an optional element.")});return this.finishNode(node,"TSTupleType")}tsParseTupleElementType(){if(this.match(types.ellipsis)){const restNode=this.startNode();this.next();restNode.typeAnnotation=this.tsParseType();this.checkCommaAfterRest(types.bracketR,
"type");return this.finishNode(restNode,"TSRestType")}const type=this.tsParseType();if(this.eat(types.question)){const optionalTypeNode=this.startNodeAtNode(type);optionalTypeNode.typeAnnotation=type;return this.finishNode(optionalTypeNode,"TSOptionalType")}return type}tsParseParenthesizedType(){const node=this.startNode();this.expect(types.parenL);node.typeAnnotation=this.tsParseType();this.expect(types.parenR);return this.finishNode(node,"TSParenthesizedType")}tsParseFunctionOrConstructorType(type){const node=
this.startNode();if(type==="TSConstructorType")this.expect(types._new);this.tsFillSignature(types.arrow,node);return this.finishNode(node,type)}tsParseLiteralTypeNode(){const node=this.startNode();node.literal=(()=>{switch(this.state.type){case types.num:return this.parseLiteral(this.state.value,"NumericLiteral");case types.string:return this.parseLiteral(this.state.value,"StringLiteral");case types._true:case types._false:return this.parseBooleanLiteral();default:throw this.unexpected();}})();return this.finishNode(node,
"TSLiteralType")}tsParseNonArrayType(){switch(this.state.type){case types.name:case types._void:case types._null:{const type=this.match(types._void)?"TSVoidKeyword":this.match(types._null)?"TSNullKeyword":keywordTypeFromName(this.state.value);if(type!==undefined&&this.lookahead().type!==types.dot){const node=this.startNode();this.next();return this.finishNode(node,type)}return this.tsParseTypeReference()}case types.string:case types.num:case types._true:case types._false:return this.tsParseLiteralTypeNode();
case types.plusMin:if(this.state.value==="-"){const node=this.startNode();this.next();if(!this.match(types.num))throw this.unexpected();node.literal=this.parseLiteral(-this.state.value,"NumericLiteral",node.start,node.loc.start);return this.finishNode(node,"TSLiteralType")}break;case types._this:{const thisKeyword=this.tsParseThisTypeNode();if(this.isContextual("is")&&!this.hasPrecedingLineBreak())return this.tsParseThisTypePredicate(thisKeyword);else return thisKeyword}case types._typeof:return this.tsParseTypeQuery();
case types._import:return this.tsParseImportType();case types.braceL:return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))?this.tsParseMappedType():this.tsParseTypeLiteral();case types.bracketL:return this.tsParseTupleType();case types.parenL:return this.tsParseParenthesizedType()}throw this.unexpected();}tsParseArrayTypeOrHigher(){let type=this.tsParseNonArrayType();while(!this.hasPrecedingLineBreak()&&this.eat(types.bracketL))if(this.match(types.bracketR)){const node=this.startNodeAtNode(type);
node.elementType=type;this.expect(types.bracketR);type=this.finishNode(node,"TSArrayType")}else{const node=this.startNodeAtNode(type);node.objectType=type;node.indexType=this.tsParseType();this.expect(types.bracketR);type=this.finishNode(node,"TSIndexedAccessType")}return type}tsParseTypeOperator(operator){const node=this.startNode();this.expectContextual(operator);node.operator=operator;node.typeAnnotation=this.tsParseTypeOperatorOrHigher();return this.finishNode(node,"TSTypeOperator")}tsParseInferType(){const node=
this.startNode();this.expectContextual("infer");const typeParameter=this.startNode();typeParameter.name=this.parseIdentifierName(typeParameter.start);node.typeParameter=this.finishNode(typeParameter,"TSTypeParameter");return this.finishNode(node,"TSInferType")}tsParseTypeOperatorOrHigher(){const operator=["keyof","unique"].find((kw)=>this.isContextual(kw));return operator?this.tsParseTypeOperator(operator):this.isContextual("infer")?this.tsParseInferType():this.tsParseArrayTypeOrHigher()}tsParseUnionOrIntersectionType(kind,
parseConstituentType,operator){this.eat(operator);let type=parseConstituentType();if(this.match(operator)){const types$$1=[type];while(this.eat(operator))types$$1.push(parseConstituentType());const node=this.startNodeAtNode(type);node.types=types$$1;type=this.finishNode(node,kind)}return type}tsParseIntersectionTypeOrHigher(){return this.tsParseUnionOrIntersectionType("TSIntersectionType",this.tsParseTypeOperatorOrHigher.bind(this),types.bitwiseAND)}tsParseUnionTypeOrHigher(){return this.tsParseUnionOrIntersectionType("TSUnionType",
this.tsParseIntersectionTypeOrHigher.bind(this),types.bitwiseOR)}tsIsStartOfFunctionType(){if(this.isRelational("<"))return true;return this.match(types.parenL)&&this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))}tsSkipParameterStart(){if(this.match(types.name)||this.match(types._this)){this.next();return true}if(this.match(types.braceL)){let braceStackCounter=1;this.next();while(braceStackCounter>0){if(this.match(types.braceL))++braceStackCounter;else if(this.match(types.braceR))--braceStackCounter;
this.next()}return true}if(this.match(types.bracketL)){let braceStackCounter=1;this.next();while(braceStackCounter>0){if(this.match(types.bracketL))++braceStackCounter;else if(this.match(types.bracketR))--braceStackCounter;this.next()}return true}return false}tsIsUnambiguouslyStartOfFunctionType(){this.next();if(this.match(types.parenR)||this.match(types.ellipsis))return true;if(this.tsSkipParameterStart()){if(this.match(types.colon)||this.match(types.comma)||this.match(types.question)||this.match(types.eq))return true;
if(this.match(types.parenR)){this.next();if(this.match(types.arrow))return true}}return false}tsParseTypeOrTypePredicateAnnotation(returnToken){return this.tsInType(()=>{const t=this.startNode();this.expect(returnToken);const typePredicateVariable=this.tsIsIdentifier()&&this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));if(!typePredicateVariable)return this.tsParseTypeAnnotation(false,t);const type=this.tsParseTypeAnnotation(false);const node=this.startNodeAtNode(typePredicateVariable);node.parameterName=
typePredicateVariable;node.typeAnnotation=type;t.typeAnnotation=this.finishNode(node,"TSTypePredicate");return this.finishNode(t,"TSTypeAnnotation")})}tsTryParseTypeOrTypePredicateAnnotation(){return this.match(types.colon)?this.tsParseTypeOrTypePredicateAnnotation(types.colon):undefined}tsTryParseTypeAnnotation(){return this.match(types.colon)?this.tsParseTypeAnnotation():undefined}tsTryParseType(){return this.tsEatThenParseType(types.colon)}tsParseTypePredicatePrefix(){const id=this.parseIdentifier();
if(this.isContextual("is")&&!this.hasPrecedingLineBreak()){this.next();return id}}tsParseTypeAnnotation(eatColon=true,t=this.startNode()){this.tsInType(()=>{if(eatColon)this.expect(types.colon);t.typeAnnotation=this.tsParseType()});return this.finishNode(t,"TSTypeAnnotation")}tsParseType(){assert(this.state.inType);const type=this.tsParseNonConditionalType();if(this.hasPrecedingLineBreak()||!this.eat(types._extends))return type;const node=this.startNodeAtNode(type);node.checkType=type;node.extendsType=
this.tsParseNonConditionalType();this.expect(types.question);node.trueType=this.tsParseType();this.expect(types.colon);node.falseType=this.tsParseType();return this.finishNode(node,"TSConditionalType")}tsParseNonConditionalType(){if(this.tsIsStartOfFunctionType())return this.tsParseFunctionOrConstructorType("TSFunctionType");if(this.match(types._new))return this.tsParseFunctionOrConstructorType("TSConstructorType");return this.tsParseUnionTypeOrHigher()}tsParseTypeAssertion(){const node=this.startNode();
this.next();node.typeAnnotation=this.tsInType(()=>this.tsParseType());this.expectRelational(">");node.expression=this.parseMaybeUnary();return this.finishNode(node,"TSTypeAssertion")}tsParseHeritageClause(descriptor){const originalStart=this.state.start;const delimitedList=this.tsParseDelimitedList("HeritageClauseElement",this.tsParseExpressionWithTypeArguments.bind(this));if(!delimitedList.length)this.raise(originalStart,`'${descriptor}' list cannot be empty.`);return delimitedList}tsParseExpressionWithTypeArguments(){const node=
this.startNode();node.expression=this.tsParseEntityName(false);if(this.isRelational("<"))node.typeParameters=this.tsParseTypeArguments();return this.finishNode(node,"TSExpressionWithTypeArguments")}tsParseInterfaceDeclaration(node){node.id=this.parseIdentifier();node.typeParameters=this.tsTryParseTypeParameters();if(this.eat(types._extends))node.extends=this.tsParseHeritageClause("extends");const body=this.startNode();body.body=this.tsInType(this.tsParseObjectTypeMembers.bind(this));node.body=this.finishNode(body,
"TSInterfaceBody");return this.finishNode(node,"TSInterfaceDeclaration")}tsParseTypeAliasDeclaration(node){node.id=this.parseIdentifier();node.typeParameters=this.tsTryParseTypeParameters();node.typeAnnotation=this.tsExpectThenParseType(types.eq);this.semicolon();return this.finishNode(node,"TSTypeAliasDeclaration")}tsInNoContext(cb){const oldContext=this.state.context;this.state.context=[oldContext[0]];try{return cb()}finally{this.state.context=oldContext}}tsInType(cb){const oldInType=this.state.inType;
this.state.inType=true;try{return cb()}finally{this.state.inType=oldInType}}tsEatThenParseType(token){return!this.match(token)?undefined:this.tsNextThenParseType()}tsExpectThenParseType(token){return this.tsDoThenParseType(()=>this.expect(token))}tsNextThenParseType(){return this.tsDoThenParseType(()=>this.next())}tsDoThenParseType(cb){return this.tsInType(()=>{cb();return this.tsParseType()})}tsParseEnumMember(){const node=this.startNode();node.id=this.match(types.string)?this.parseLiteral(this.state.value,
"StringLiteral"):this.parseIdentifier(true);if(this.eat(types.eq))node.initializer=this.parseMaybeAssign();return this.finishNode(node,"TSEnumMember")}tsParseEnumDeclaration(node,isConst){if(isConst)node.const=true;node.id=this.parseIdentifier();this.expect(types.braceL);node.members=this.tsParseDelimitedList("EnumMembers",this.tsParseEnumMember.bind(this));this.expect(types.braceR);return this.finishNode(node,"TSEnumDeclaration")}tsParseModuleBlock(){const node=this.startNode();this.expect(types.braceL);
this.parseBlockOrModuleBlockBody(node.body=[],undefined,true,types.braceR);return this.finishNode(node,"TSModuleBlock")}tsParseModuleOrNamespaceDeclaration(node){node.id=this.parseIdentifier();if(this.eat(types.dot)){const inner=this.startNode();this.tsParseModuleOrNamespaceDeclaration(inner);node.body=inner}else node.body=this.tsParseModuleBlock();return this.finishNode(node,"TSModuleDeclaration")}tsParseAmbientExternalModuleDeclaration(node){if(this.isContextual("global")){node.global=true;node.id=
this.parseIdentifier()}else if(this.match(types.string))node.id=this.parseExprAtom();else this.unexpected();if(this.match(types.braceL))node.body=this.tsParseModuleBlock();else this.semicolon();return this.finishNode(node,"TSModuleDeclaration")}tsParseImportEqualsDeclaration(node,isExport){node.isExport=isExport||false;node.id=this.parseIdentifier();this.expect(types.eq);node.moduleReference=this.tsParseModuleReference();this.semicolon();return this.finishNode(node,"TSImportEqualsDeclaration")}tsIsExternalModuleReference(){return this.isContextual("require")&&
this.lookahead().type===types.parenL}tsParseModuleReference(){return this.tsIsExternalModuleReference()?this.tsParseExternalModuleReference():this.tsParseEntityName(false)}tsParseExternalModuleReference(){const node=this.startNode();this.expectContextual("require");this.expect(types.parenL);if(!this.match(types.string))throw this.unexpected();node.expression=this.parseLiteral(this.state.value,"StringLiteral");this.expect(types.parenR);return this.finishNode(node,"TSExternalModuleReference")}tsLookAhead(f){const state=
this.state.clone();const res=f();this.state=state;return res}tsTryParseAndCatch(f){const state=this.state.clone();try{return f()}catch(e){if(e instanceof SyntaxError){this.state=state;return undefined}throw e;}}tsTryParse(f){const state=this.state.clone();const result=f();if(result!==undefined&&result!==false)return result;else{this.state=state;return undefined}}nodeWithSamePosition(original,type){const node=this.startNodeAtNode(original);node.type=type;node.end=original.end;node.loc.end=original.loc.end;
if(original.leadingComments)node.leadingComments=original.leadingComments;if(original.trailingComments)node.trailingComments=original.trailingComments;if(original.innerComments)node.innerComments=original.innerComments;return node}tsTryParseDeclare(nany){if(this.isLineTerminator())return;let starttype=this.state.type;let kind;if(this.isContextual("let")){starttype=types._var;kind="let"}switch(starttype){case types._function:this.next();return this.parseFunction(nany,true);case types._class:return this.parseClass(nany,
true,false);case types._const:if(this.match(types._const)&&this.isLookaheadContextual("enum")){this.expect(types._const);this.expectContextual("enum");return this.tsParseEnumDeclaration(nany,true)}case types._var:kind=kind||this.state.value;return this.parseVarStatement(nany,kind);case types.name:{const value=this.state.value;if(value==="global")return this.tsParseAmbientExternalModuleDeclaration(nany);else return this.tsParseDeclaration(nany,value,true)}}}tsTryParseExportDeclaration(){return this.tsParseDeclaration(this.startNode(),
this.state.value,true)}tsParseExpressionStatement(node,expr){switch(expr.name){case "declare":{const declaration=this.tsTryParseDeclare(node);if(declaration){declaration.declare=true;return declaration}break}case "global":if(this.match(types.braceL)){const mod=node;mod.global=true;mod.id=expr;mod.body=this.tsParseModuleBlock();return this.finishNode(mod,"TSModuleDeclaration")}break;default:return this.tsParseDeclaration(node,expr.name,false)}}tsParseDeclaration(node,value,next){switch(value){case "abstract":if(this.tsCheckLineTerminatorAndMatch(types._class,
next)){const cls=node;cls.abstract=true;if(next){this.next();if(!this.match(types._class))this.unexpected(null,types._class)}return this.parseClass(cls,true,false)}break;case "enum":if(next||this.match(types.name)){if(next)this.next();return this.tsParseEnumDeclaration(node,false)}break;case "interface":if(this.tsCheckLineTerminatorAndMatch(types.name,next)){if(next)this.next();return this.tsParseInterfaceDeclaration(node)}break;case "module":if(next)this.next();if(this.match(types.string))return this.tsParseAmbientExternalModuleDeclaration(node);
else if(this.tsCheckLineTerminatorAndMatch(types.name,next))return this.tsParseModuleOrNamespaceDeclaration(node);break;case "namespace":if(this.tsCheckLineTerminatorAndMatch(types.name,next)){if(next)this.next();return this.tsParseModuleOrNamespaceDeclaration(node)}break;case "type":if(this.tsCheckLineTerminatorAndMatch(types.name,next)){if(next)this.next();return this.tsParseTypeAliasDeclaration(node)}break}}tsCheckLineTerminatorAndMatch(tokenType,next){return(next||this.match(tokenType))&&!this.isLineTerminator()}tsTryParseGenericAsyncArrowFunction(startPos,
startLoc){const res=this.tsTryParseAndCatch(()=>{const node=this.startNodeAt(startPos,startLoc);node.typeParameters=this.tsParseTypeParameters();super.parseFunctionParams(node);node.returnType=this.tsTryParseTypeOrTypePredicateAnnotation();this.expect(types.arrow);return node});if(!res)return undefined;const oldInAsync=this.state.inAsync;const oldInGenerator=this.state.inGenerator;this.state.inAsync=true;this.state.inGenerator=false;res.id=null;res.generator=false;res.expression=true;res.async=true;
this.parseFunctionBody(res,true);this.state.inAsync=oldInAsync;this.state.inGenerator=oldInGenerator;return this.finishNode(res,"ArrowFunctionExpression")}tsParseTypeArguments(){const node=this.startNode();node.params=this.tsInType(()=>this.tsInNoContext(()=>{this.expectRelational("<");return this.tsParseDelimitedList("TypeParametersOrArguments",this.tsParseType.bind(this))}));this.state.exprAllowed=false;this.expectRelational(">");return this.finishNode(node,"TSTypeParameterInstantiation")}tsIsDeclarationStart(){if(this.match(types.name))switch(this.state.value){case "abstract":case "declare":case "enum":case "interface":case "module":case "namespace":case "type":return true}return false}isExportDefaultSpecifier(){if(this.tsIsDeclarationStart())return false;
return super.isExportDefaultSpecifier()}parseAssignableListItem(allowModifiers,decorators){const startPos=this.state.start;const startLoc=this.state.startLoc;let accessibility;let readonly=false;if(allowModifiers){accessibility=this.parseAccessModifier();readonly=!!this.tsParseModifier(["readonly"])}const left=this.parseMaybeDefault();this.parseAssignableListItemTypes(left);const elt=this.parseMaybeDefault(left.start,left.loc.start,left);if(accessibility||readonly){const pp=this.startNodeAt(startPos,
startLoc);if(decorators.length)pp.decorators=decorators;if(accessibility)pp.accessibility=accessibility;if(readonly)pp.readonly=readonly;if(elt.type!=="Identifier"&&elt.type!=="AssignmentPattern")throw this.raise(pp.start,"A parameter property may not be declared using a binding pattern.");pp.parameter=elt;return this.finishNode(pp,"TSParameterProperty")}if(decorators.length)left.decorators=decorators;return elt}parseFunctionBodyAndFinish(node,type,allowExpressionBody){if(!allowExpressionBody&&this.match(types.colon))node.returnType=
this.tsParseTypeOrTypePredicateAnnotation(types.colon);const bodilessType=type==="FunctionDeclaration"?"TSDeclareFunction":type==="ClassMethod"?"TSDeclareMethod":undefined;if(bodilessType&&!this.match(types.braceL)&&this.isLineTerminator()){this.finishNode(node,bodilessType);return}super.parseFunctionBodyAndFinish(node,type,allowExpressionBody)}parseSubscript(base,startPos,startLoc,noCalls,state){if(!this.hasPrecedingLineBreak()&&this.match(types.bang)){this.state.exprAllowed=false;this.next();const nonNullExpression=
this.startNodeAt(startPos,startLoc);nonNullExpression.expression=base;return this.finishNode(nonNullExpression,"TSNonNullExpression")}if(this.isRelational("<")){const result=this.tsTryParseAndCatch(()=>{if(!noCalls&&this.atPossibleAsync(base)){const asyncArrowFn=this.tsTryParseGenericAsyncArrowFunction(startPos,startLoc);if(asyncArrowFn)return asyncArrowFn}const node=this.startNodeAt(startPos,startLoc);node.callee=base;const typeArguments=this.tsParseTypeArguments();if(typeArguments)if(!noCalls&&
this.eat(types.parenL)){node.arguments=this.parseCallExpressionArguments(types.parenR,false);node.typeParameters=typeArguments;return this.finishCallExpression(node)}else if(this.match(types.backQuote))return this.parseTaggedTemplateExpression(startPos,startLoc,base,state,typeArguments);this.unexpected()});if(result)return result}return super.parseSubscript(base,startPos,startLoc,noCalls,state)}parseNewArguments(node){if(this.isRelational("<")){const typeParameters=this.tsTryParseAndCatch(()=>{const args=
this.tsParseTypeArguments();if(!this.match(types.parenL))this.unexpected();return args});if(typeParameters)node.typeParameters=typeParameters}super.parseNewArguments(node)}parseExprOp(left,leftStartPos,leftStartLoc,minPrec,noIn){if(nonNull(types._in.binop)>minPrec&&!this.hasPrecedingLineBreak()&&this.isContextual("as")){const node=this.startNodeAt(leftStartPos,leftStartLoc);node.expression=left;node.typeAnnotation=this.tsNextThenParseType();this.finishNode(node,"TSAsExpression");return this.parseExprOp(node,
leftStartPos,leftStartLoc,minPrec,noIn)}return super.parseExprOp(left,leftStartPos,leftStartLoc,minPrec,noIn)}checkReservedWord(word,startLoc,checkKeywords,isBinding){}checkDuplicateExports(){}parseImport(node){if(this.match(types.name)&&this.lookahead().type===types.eq)return this.tsParseImportEqualsDeclaration(node);return super.parseImport(node)}parseExport(node){if(this.match(types._import)){this.expect(types._import);return this.tsParseImportEqualsDeclaration(node,true)}else if(this.eat(types.eq)){const assign=
node;assign.expression=this.parseExpression();this.semicolon();return this.finishNode(assign,"TSExportAssignment")}else if(this.eatContextual("as")){const decl=node;this.expectContextual("namespace");decl.id=this.parseIdentifier();this.semicolon();return this.finishNode(decl,"TSNamespaceExportDeclaration")}else return super.parseExport(node)}isAbstractClass(){return this.isContextual("abstract")&&this.lookahead().type===types._class}parseExportDefaultExpression(){if(this.isAbstractClass()){const cls=
this.startNode();this.next();this.parseClass(cls,true,true);cls.abstract=true;return cls}if(this.state.value==="interface"){const result=this.tsParseDeclaration(this.startNode(),this.state.value,true);if(result)return result}return super.parseExportDefaultExpression()}parseStatementContent(context,topLevel){if(this.state.type===types._const){const ahead=this.lookahead();if(ahead.type===types.name&&ahead.value==="enum"){const node=this.startNode();this.expect(types._const);this.expectContextual("enum");
return this.tsParseEnumDeclaration(node,true)}}return super.parseStatementContent(context,topLevel)}parseAccessModifier(){return this.tsParseModifier(["public","protected","private"])}parseClassMember(classBody,member,state){const accessibility=this.parseAccessModifier();if(accessibility)member.accessibility=accessibility;super.parseClassMember(classBody,member,state)}parseClassMemberWithIsStatic(classBody,member,state,isStatic){const methodOrProp=member;const prop=member;const propOrIdx=member;let abstract=
false,readonly=false;const mod=this.tsParseModifier(["abstract","readonly"]);switch(mod){case "readonly":readonly=true;abstract=!!this.tsParseModifier(["abstract"]);break;case "abstract":abstract=true;readonly=!!this.tsParseModifier(["readonly"]);break}if(abstract)methodOrProp.abstract=true;if(readonly)propOrIdx.readonly=true;if(!abstract&&!isStatic&&!methodOrProp.accessibility){const idx=this.tsTryParseIndexSignature(member);if(idx){classBody.body.push(idx);return}}if(readonly){methodOrProp.static=
isStatic;this.parseClassPropertyName(prop);this.parsePostMemberNameModifiers(methodOrProp);this.pushClassProperty(classBody,prop);return}super.parseClassMemberWithIsStatic(classBody,member,state,isStatic)}parsePostMemberNameModifiers(methodOrProp){const optional=this.eat(types.question);if(optional)methodOrProp.optional=true}parseExpressionStatement(node,expr){const decl=expr.type==="Identifier"?this.tsParseExpressionStatement(node,expr):undefined;return decl||super.parseExpressionStatement(node,
expr)}shouldParseExportDeclaration(){if(this.tsIsDeclarationStart())return true;return super.shouldParseExportDeclaration()}parseConditional(expr,noIn,startPos,startLoc,refNeedsArrowPos){if(!refNeedsArrowPos||!this.match(types.question))return super.parseConditional(expr,noIn,startPos,startLoc,refNeedsArrowPos);const state=this.state.clone();try{return super.parseConditional(expr,noIn,startPos,startLoc)}catch(err){if(!(err instanceof SyntaxError))throw err;this.state=state;refNeedsArrowPos.start=
err.pos||this.state.start;return expr}}parseParenItem(node,startPos,startLoc){node=super.parseParenItem(node,startPos,startLoc);if(this.eat(types.question))node.optional=true;if(this.match(types.colon)){const typeCastNode=this.startNodeAt(startPos,startLoc);typeCastNode.expression=node;typeCastNode.typeAnnotation=this.tsParseTypeAnnotation();return this.finishNode(typeCastNode,"TSTypeCastExpression")}return this.finishNode(node,node.type)}parseExportDeclaration(node){const startPos=this.state.start;
const startLoc=this.state.startLoc;const isDeclare=this.eatContextual("declare");let declaration;if(this.match(types.name))declaration=this.tsTryParseExportDeclaration();if(!declaration)declaration=super.parseExportDeclaration(node);if(declaration&&isDeclare){this.resetStartLocation(declaration,startPos,startLoc);declaration.declare=true}return declaration}parseClassId(node,isStatement,optionalId){if((!isStatement||optionalId)&&this.isContextual("implements"))return;super.parseClassId(...arguments);
const typeParameters=this.tsTryParseTypeParameters();if(typeParameters)node.typeParameters=typeParameters}parseClassProperty(node){if(!node.optional&&this.eat(types.bang))node.definite=true;const type=this.tsTryParseTypeAnnotation();if(type)node.typeAnnotation=type;return super.parseClassProperty(node)}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor){const typeParameters=this.tsTryParseTypeParameters();if(typeParameters)method.typeParameters=typeParameters;super.pushClassMethod(classBody,
method,isGenerator,isAsync,isConstructor)}pushClassPrivateMethod(classBody,method,isGenerator,isAsync){const typeParameters=this.tsTryParseTypeParameters();if(typeParameters)method.typeParameters=typeParameters;super.pushClassPrivateMethod(classBody,method,isGenerator,isAsync)}parseClassSuper(node){super.parseClassSuper(node);if(node.superClass&&this.isRelational("<"))node.superTypeParameters=this.tsParseTypeArguments();if(this.eatContextual("implements"))node.implements=this.tsParseHeritageClause("implements")}parseObjPropValue(prop,
...args){const typeParameters=this.tsTryParseTypeParameters();if(typeParameters)prop.typeParameters=typeParameters;super.parseObjPropValue(prop,...args)}parseFunctionParams(node,allowModifiers){const typeParameters=this.tsTryParseTypeParameters();if(typeParameters)node.typeParameters=typeParameters;super.parseFunctionParams(node,allowModifiers)}parseVarId(decl,kind){super.parseVarId(decl,kind);if(decl.id.type==="Identifier"&&this.eat(types.bang))decl.definite=true;const type=this.tsTryParseTypeAnnotation();
if(type){decl.id.typeAnnotation=type;this.finishNode(decl.id,decl.id.type)}}parseAsyncArrowFromCallExpression(node,call){if(this.match(types.colon))node.returnType=this.tsParseTypeAnnotation();return super.parseAsyncArrowFromCallExpression(node,call)}parseMaybeAssign(...args){let jsxError;if(this.match(types.jsxTagStart)){const context=this.curContext();assert(context===types$1.j_oTag);assert(this.state.context[this.state.context.length-2]===types$1.j_expr);const state=this.state.clone();try{return super.parseMaybeAssign(...args)}catch(err){if(!(err instanceof
SyntaxError))throw err;this.state=state;assert(this.curContext()===types$1.j_oTag);this.state.context.pop();assert(this.curContext()===types$1.j_expr);this.state.context.pop();jsxError=err}}if(jsxError===undefined&&!this.isRelational("<"))return super.parseMaybeAssign(...args);let arrowExpression;let typeParameters;const state=this.state.clone();try{typeParameters=this.tsParseTypeParameters();arrowExpression=super.parseMaybeAssign(...args);if(arrowExpression.type!=="ArrowFunctionExpression")this.unexpected()}catch(err){if(!(err instanceof
SyntaxError))throw err;if(jsxError)throw jsxError;assert(!this.hasPlugin("jsx"));this.state=state;return super.parseMaybeAssign(...args)}if(typeParameters&&typeParameters.params.length!==0)this.resetStartLocationFromNode(arrowExpression,typeParameters);arrowExpression.typeParameters=typeParameters;return arrowExpression}parseMaybeUnary(refShorthandDefaultPos){if(!this.hasPlugin("jsx")&&this.isRelational("<"))return this.tsParseTypeAssertion();else return super.parseMaybeUnary(refShorthandDefaultPos)}parseArrow(node){if(this.match(types.colon)){const state=
this.state.clone();try{const returnType=this.tsParseTypeOrTypePredicateAnnotation(types.colon);if(this.canInsertSemicolon())this.unexpected();if(!this.match(types.arrow))this.unexpected();node.returnType=returnType}catch(err){if(err instanceof SyntaxError)this.state=state;else throw err;}}return super.parseArrow(node)}parseAssignableListItemTypes(param){if(this.eat(types.question)){if(param.type!=="Identifier")throw this.raise(param.start,"A binding pattern parameter cannot be optional in an implementation signature.");
param.optional=true}const type=this.tsTryParseTypeAnnotation();if(type)param.typeAnnotation=type;return this.finishNode(param,param.type)}toAssignable(node,isBinding,contextDescription){switch(node.type){case "TSTypeCastExpression":return super.toAssignable(this.typeCastToParameter(node),isBinding,contextDescription);case "TSParameterProperty":return super.toAssignable(node,isBinding,contextDescription);case "TSAsExpression":case "TSNonNullExpression":case "TSTypeAssertion":node.expression=this.toAssignable(node.expression,
isBinding,contextDescription);return node;default:return super.toAssignable(node,isBinding,contextDescription)}}checkLVal(expr,isBinding,checkClashes,contextDescription){switch(expr.type){case "TSTypeCastExpression":return;case "TSParameterProperty":this.checkLVal(expr.parameter,isBinding,checkClashes,"parameter property");return;case "TSAsExpression":case "TSNonNullExpression":case "TSTypeAssertion":this.checkLVal(expr.expression,isBinding,checkClashes,contextDescription);return;default:super.checkLVal(expr,
isBinding,checkClashes,contextDescription);return}}parseBindingAtom(){switch(this.state.type){case types._this:return this.parseIdentifier(true);default:return super.parseBindingAtom()}}parseMaybeDecoratorArguments(expr){if(this.isRelational("<")){const typeArguments=this.tsParseTypeArguments();if(this.match(types.parenL)){const call=super.parseMaybeDecoratorArguments(expr);call.typeParameters=typeArguments;return call}this.unexpected(this.state.start,types.parenL)}return super.parseMaybeDecoratorArguments(expr)}isClassMethod(){return this.isRelational("<")||
super.isClassMethod()}isClassProperty(){return this.match(types.bang)||this.match(types.colon)||super.isClassProperty()}parseMaybeDefault(...args){const node=super.parseMaybeDefault(...args);if(node.type==="AssignmentPattern"&&node.typeAnnotation&&node.right.start<node.typeAnnotation.start)this.raise(node.typeAnnotation.start,"Type annotations must come before default assignments, "+"e.g. instead of `age = 25: number` use `age: number = 25`");return node}getTokenFromCode(code){if(this.state.inType&&
(code===62||code===60))return this.finishOp(types.relational,1);else return super.getTokenFromCode(code)}toAssignableList(exprList,isBinding,contextDescription){for(let i=0;i<exprList.length;i++){const expr=exprList[i];if(expr&&expr.type==="TSTypeCastExpression")exprList[i]=this.typeCastToParameter(expr)}return super.toAssignableList(exprList,isBinding,contextDescription)}typeCastToParameter(node){node.expression.typeAnnotation=node.typeAnnotation;return this.finishNodeAt(node.expression,node.expression.type,
node.typeAnnotation.end,node.typeAnnotation.loc.end)}toReferencedList(exprList,isInParens){for(let i=0;i<exprList.length;i++){const expr=exprList[i];if(expr&&expr._exprListItem&&expr.type==="TsTypeCastExpression")this.raise(expr.start,"Did not expect a type annotation here.")}return exprList}shouldParseArrow(){return this.match(types.colon)||super.shouldParseArrow()}shouldParseAsyncArrow(){return this.match(types.colon)||super.shouldParseAsyncArrow()}canHaveLeadingDecorator(){return super.canHaveLeadingDecorator()||
this.isAbstractClass()}jsxParseOpeningElementAfterName(node){const typeArguments=this.tsTryParseAndCatch(()=>this.tsParseTypeArguments());if(typeArguments)node.typeParameters=typeArguments;return super.jsxParseOpeningElementAfterName(node)}};function hasPlugin(plugins,name){return plugins.some((plugin)=>{if(Array.isArray(plugin))return plugin[0]===name;else return plugin===name})}function getPluginOption(plugins,name,option){const plugin=plugins.find((plugin)=>{if(Array.isArray(plugin))return plugin[0]===
name;else return plugin===name});if(plugin&&Array.isArray(plugin))return plugin[1][option];return null}const PIPELINE_PROPOSALS=["minimal","smart"];function validatePlugins(plugins){if(hasPlugin(plugins,"decorators")){if(hasPlugin(plugins,"decorators-legacy"))throw new Error("Cannot use the decorators and decorators-legacy plugin together");const decoratorsBeforeExport=getPluginOption(plugins,"decorators","decoratorsBeforeExport");if(decoratorsBeforeExport==null)throw new Error("The 'decorators' plugin requires a 'decoratorsBeforeExport' option,"+
" whose value must be a boolean. If you are migrating from"+" Babylon/Babel 6 or want to use the old decorators proposal, you"+" should use the 'decorators-legacy' plugin instead of 'decorators'.");else if(typeof decoratorsBeforeExport!=="boolean")throw new Error("'decoratorsBeforeExport' must be a boolean.");}if(hasPlugin(plugins,"flow")&&hasPlugin(plugins,"typescript"))throw new Error("Cannot combine flow and typescript plugins.");if(hasPlugin(plugins,"pipelineOperator")&&!PIPELINE_PROPOSALS.includes(getPluginOption(plugins,
"pipelineOperator","proposal")))throw new Error("'pipelineOperator' requires 'proposal' option whose value should be one of: "+PIPELINE_PROPOSALS.map((p)=>`'${p}'`).join(", "));}const mixinPluginNames=["estree","jsx","flow","typescript"];const mixinPlugins={estree,jsx,flow,typescript};function parse(input,options){if(options&&options.sourceType==="unambiguous"){options=Object.assign({},options);try{options.sourceType="module";const parser=getParser(options,input);const ast=parser.parse();if(!parser.sawUnambiguousESM)ast.program.sourceType=
"script";return ast}catch(moduleError){try{options.sourceType="script";return getParser(options,input).parse()}catch(scriptError){}throw moduleError;}}else return getParser(options,input).parse()}function parseExpression(input,options){const parser=getParser(options,input);if(parser.options.strictMode)parser.state.strict=true;return parser.getExpression()}function getParser(options,input){let cls=Parser;if(options&&options.plugins){validatePlugins(options.plugins);cls=getParserClass(options.plugins)}return new cls(options,
input)}const parserClassCache={};function getParserClass(pluginsFromOptions){const pluginList=mixinPluginNames.filter((name)=>hasPlugin(pluginsFromOptions,name));const key=pluginList.join("/");let cls=parserClassCache[key];if(!cls){cls=Parser;for(let _i=0;_i<pluginList.length;_i++){const plugin=pluginList[_i];cls=mixinPlugins[plugin](cls)}parserClassCache[key]=cls}return cls}exports.parse=parse;exports.parseExpression=parseExpression;exports.tokTypes=types},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.codeFrameColumns=codeFrameColumns;exports.default=_default;function _highlight(){const data=_interopRequireWildcard(__webpack_require__(249));_highlight=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):
{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}let deprecationWarningShown=false;function getDefs(chalk){return{gutter:chalk.grey,marker:chalk.red.bold,message:chalk.red.bold}}const NEWLINE=/\r\n|[\n\r\u2028\u2029]/;function getMarkerLines(loc,source,opts){const startLoc=Object.assign({column:0,line:-1},loc.start);const endLoc=Object.assign({},startLoc,loc.end);const {linesAbove=2,linesBelow=3}=opts||{};const startLine=startLoc.line;
const startColumn=startLoc.column;const endLine=endLoc.line;const endColumn=endLoc.column;let start=Math.max(startLine-(linesAbove+1),0);let end=Math.min(source.length,endLine+linesBelow);if(startLine===-1)start=0;if(endLine===-1)end=source.length;const lineDiff=endLine-startLine;const markerLines={};if(lineDiff)for(let i=0;i<=lineDiff;i++){const lineNumber=i+startLine;if(!startColumn)markerLines[lineNumber]=true;else if(i===0){const sourceLength=source[lineNumber-1].length;markerLines[lineNumber]=
[startColumn,sourceLength-startColumn]}else if(i===lineDiff)markerLines[lineNumber]=[0,endColumn];else{const sourceLength=source[lineNumber-i].length;markerLines[lineNumber]=[0,sourceLength]}}else if(startColumn===endColumn)if(startColumn)markerLines[startLine]=[startColumn,0];else markerLines[startLine]=true;else markerLines[startLine]=[startColumn,endColumn-startColumn];return{start,end,markerLines}}function codeFrameColumns(rawLines,loc,opts={}){const highlighted=(opts.highlightCode||opts.forceColor)&&
(0,_highlight().shouldHighlight)(opts);const chalk=(0,_highlight().getChalk)(opts);const defs=getDefs(chalk);const maybeHighlight=(chalkFn,string)=>{return highlighted?chalkFn(string):string};if(highlighted)rawLines=(0,_highlight().default)(rawLines,opts);const lines=rawLines.split(NEWLINE);const {start,end,markerLines}=getMarkerLines(loc,lines,opts);const hasColumns=loc.start&&typeof loc.start.column==="number";const numberMaxWidth=String(end).length;let frame=lines.slice(start,end).map((line,index)=>
{const number=start+1+index;const paddedNumber=` ${number}`.slice(-numberMaxWidth);const gutter=` ${paddedNumber} | `;const hasMarker=markerLines[number];const lastMarkerLine=!markerLines[number+1];if(hasMarker){let markerLine="";if(Array.isArray(hasMarker)){const markerSpacing=line.slice(0,Math.max(hasMarker[0]-1,0)).replace(/[^\t]/g," ");const numberOfMarkers=hasMarker[1]||1;markerLine=["\n ",maybeHighlight(defs.gutter,gutter.replace(/\d/g," ")),markerSpacing,maybeHighlight(defs.marker,"^").repeat(numberOfMarkers)].join("");
if(lastMarkerLine&&opts.message)markerLine+=" "+maybeHighlight(defs.message,opts.message)}return[maybeHighlight(defs.marker,">"),maybeHighlight(defs.gutter,gutter),line,markerLine].join("")}else return` ${maybeHighlight(defs.gutter,gutter)}${line}`}).join("\n");if(opts.message&&!hasColumns)frame=`${" ".repeat(numberMaxWidth+1)}${opts.message}\n${frame}`;if(highlighted)return chalk.reset(frame);else return frame}function _default(rawLines,lineNumber,colNumber,opts={}){if(!deprecationWarningShown){deprecationWarningShown=
true;const message="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";if(process.emitWarning)process.emitWarning(message,"DeprecationWarning");else{const deprecationError=new Error(message);deprecationError.name="DeprecationWarning";console.warn(new Error(message))}}colNumber=Math.max(colNumber,0);const location={start:{column:colNumber,line:lineNumber}};return codeFrameColumns(rawLines,location,opts)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.shouldHighlight=shouldHighlight;exports.getChalk=getChalk;exports.default=highlight;function _jsTokens(){const data=_interopRequireWildcard(__webpack_require__(250));_jsTokens=function(){return data};return data}function _esutils(){const data=_interopRequireDefault(__webpack_require__(251));_esutils=function(){return data};return data}function _chalk(){const data=_interopRequireDefault(__webpack_require__(255));_chalk=function(){return data};return data}function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function getDefs(chalk){return{keyword:chalk.cyan,capitalized:chalk.yellow,
jsx_tag:chalk.yellow,punctuator:chalk.yellow,number:chalk.magenta,string:chalk.green,regex:chalk.magenta,comment:chalk.grey,invalid:chalk.white.bgRed.bold}}const NEWLINE=/\r\n|[\n\r\u2028\u2029]/;const JSX_TAG=/^[a-z][\w-]*$/i;const BRACKET=/^[()[\]{}]$/;function getTokenType(match){const [offset,text]=match.slice(-2);const token=(0,_jsTokens().matchToToken)(match);if(token.type==="name"){if(_esutils().default.keyword.isReservedWordES6(token.value))return"keyword";if(JSX_TAG.test(token.value)&&(text[offset-
1]==="<"||text.substr(offset-2,2)=="</"))return"jsx_tag";if(token.value[0]!==token.value[0].toLowerCase())return"capitalized"}if(token.type==="punctuator"&&BRACKET.test(token.value))return"bracket";if(token.type==="invalid"&&(token.value==="@"||token.value==="#"))return"punctuator";return token.type}function highlightTokens(defs,text){return text.replace(_jsTokens().default,function(...args){const type=getTokenType(args);const colorize=defs[type];if(colorize)return args[0].split(NEWLINE).map((str)=>
colorize(str)).join("\n");else return args[0]})}function shouldHighlight(options){return _chalk().default.supportsColor||options.forceColor}function getChalk(options){let chalk=_chalk().default;if(options.forceColor)chalk=new (_chalk().default.constructor)({enabled:true,level:1});return chalk}function highlight(code,options={}){if(shouldHighlight(options)){const chalk=getChalk(options);const defs=getDefs(chalk);return highlightTokens(defs,code)}else return code}},function(module,exports){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=/((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g;
exports.matchToToken=function(match){var token={type:"invalid",value:match[0],closed:undefined};if(match[1])token.type="string",token.closed=!!(match[3]||match[4]);else if(match[5])token.type="comment";else if(match[6])token.type="comment",token.closed=!!match[7];else if(match[8])token.type="regex";else if(match[9])token.type="number";else if(match[10])token.type="name";else if(match[11])token.type="punctuator";else if(match[12])token.type="whitespace";return token}},function(module,exports,__webpack_require__){(function(){exports.ast=
__webpack_require__(252);exports.code=__webpack_require__(253);exports.keyword=__webpack_require__(254)})()},function(module,exports){(function(){function isExpression(node){if(node==null)return false;switch(node.type){case "ArrayExpression":case "AssignmentExpression":case "BinaryExpression":case "CallExpression":case "ConditionalExpression":case "FunctionExpression":case "Identifier":case "Literal":case "LogicalExpression":case "MemberExpression":case "NewExpression":case "ObjectExpression":case "SequenceExpression":case "ThisExpression":case "UnaryExpression":case "UpdateExpression":return true}return false}
function isIterationStatement(node){if(node==null)return false;switch(node.type){case "DoWhileStatement":case "ForInStatement":case "ForStatement":case "WhileStatement":return true}return false}function isStatement(node){if(node==null)return false;switch(node.type){case "BlockStatement":case "BreakStatement":case "ContinueStatement":case "DebuggerStatement":case "DoWhileStatement":case "EmptyStatement":case "ExpressionStatement":case "ForInStatement":case "ForStatement":case "IfStatement":case "LabeledStatement":case "ReturnStatement":case "SwitchStatement":case "ThrowStatement":case "TryStatement":case "VariableDeclaration":case "WhileStatement":case "WithStatement":return true}return false}
function isSourceElement(node){return isStatement(node)||node!=null&&node.type==="FunctionDeclaration"}function trailingStatement(node){switch(node.type){case "IfStatement":if(node.alternate!=null)return node.alternate;return node.consequent;case "LabeledStatement":case "ForStatement":case "ForInStatement":case "WhileStatement":case "WithStatement":return node.body}return null}function isProblematicIfStatement(node){var current;if(node.type!=="IfStatement")return false;if(node.alternate==null)return false;
current=node.consequent;do{if(current.type==="IfStatement")if(current.alternate==null)return true;current=trailingStatement(current)}while(current);return false}module.exports={isExpression:isExpression,isStatement:isStatement,isIterationStatement:isIterationStatement,isSourceElement:isSourceElement,isProblematicIfStatement:isProblematicIfStatement,trailingStatement:trailingStatement}})()},function(module,exports){(function(){var ES6Regex,ES5Regex,NON_ASCII_WHITESPACES,IDENTIFIER_START,IDENTIFIER_PART,
ch;ES5Regex={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/};
ES6Regex={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/};
function isDecimalDigit(ch){return 48<=ch&&ch<=57}function isHexDigit(ch){return 48<=ch&&ch<=57||97<=ch&&ch<=102||65<=ch&&ch<=70}function isOctalDigit(ch){return ch>=48&&ch<=55}NON_ASCII_WHITESPACES=[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279];function isWhiteSpace(ch){return ch===32||ch===9||ch===11||ch===12||ch===160||ch>=5760&&NON_ASCII_WHITESPACES.indexOf(ch)>=0}function isLineTerminator(ch){return ch===10||ch===13||ch===8232||ch===8233}function fromCodePoint(cp){if(cp<=
65535)return String.fromCharCode(cp);var cu1=String.fromCharCode(Math.floor((cp-65536)/1024)+55296);var cu2=String.fromCharCode((cp-65536)%1024+56320);return cu1+cu2}IDENTIFIER_START=new Array(128);for(ch=0;ch<128;++ch)IDENTIFIER_START[ch]=ch>=97&&ch<=122||ch>=65&&ch<=90||ch===36||ch===95;IDENTIFIER_PART=new Array(128);for(ch=0;ch<128;++ch)IDENTIFIER_PART[ch]=ch>=97&&ch<=122||ch>=65&&ch<=90||ch>=48&&ch<=57||ch===36||ch===95;function isIdentifierStartES5(ch){return ch<128?IDENTIFIER_START[ch]:ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch))}
function isIdentifierPartES5(ch){return ch<128?IDENTIFIER_PART[ch]:ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch))}function isIdentifierStartES6(ch){return ch<128?IDENTIFIER_START[ch]:ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch))}function isIdentifierPartES6(ch){return ch<128?IDENTIFIER_PART[ch]:ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch))}module.exports={isDecimalDigit:isDecimalDigit,isHexDigit:isHexDigit,isOctalDigit:isOctalDigit,isWhiteSpace:isWhiteSpace,isLineTerminator:isLineTerminator,
isIdentifierStartES5:isIdentifierStartES5,isIdentifierPartES5:isIdentifierPartES5,isIdentifierStartES6:isIdentifierStartES6,isIdentifierPartES6:isIdentifierPartES6}})()},function(module,exports,__webpack_require__){(function(){var code=__webpack_require__(253);function isStrictModeReservedWordES6(id){switch(id){case "implements":case "interface":case "package":case "private":case "protected":case "public":case "static":case "let":return true;default:return false}}function isKeywordES5(id,strict){if(!strict&&
id==="yield")return false;return isKeywordES6(id,strict)}function isKeywordES6(id,strict){if(strict&&isStrictModeReservedWordES6(id))return true;switch(id.length){case 2:return id==="if"||id==="in"||id==="do";case 3:return id==="var"||id==="for"||id==="new"||id==="try";case 4:return id==="this"||id==="else"||id==="case"||id==="void"||id==="with"||id==="enum";case 5:return id==="while"||id==="break"||id==="catch"||id==="throw"||id==="const"||id==="yield"||id==="class"||id==="super";case 6:return id===
"return"||id==="typeof"||id==="delete"||id==="switch"||id==="export"||id==="import";case 7:return id==="default"||id==="finally"||id==="extends";case 8:return id==="function"||id==="continue"||id==="debugger";case 10:return id==="instanceof";default:return false}}function isReservedWordES5(id,strict){return id==="null"||id==="true"||id==="false"||isKeywordES5(id,strict)}function isReservedWordES6(id,strict){return id==="null"||id==="true"||id==="false"||isKeywordES6(id,strict)}function isRestrictedWord(id){return id===
"eval"||id==="arguments"}function isIdentifierNameES5(id){var i,iz,ch;if(id.length===0)return false;ch=id.charCodeAt(0);if(!code.isIdentifierStartES5(ch))return false;for(i=1,iz=id.length;i<iz;++i){ch=id.charCodeAt(i);if(!code.isIdentifierPartES5(ch))return false}return true}function decodeUtf16(lead,trail){return(lead-55296)*1024+(trail-56320)+65536}function isIdentifierNameES6(id){var i,iz,ch,lowCh,check;if(id.length===0)return false;check=code.isIdentifierStartES6;for(i=0,iz=id.length;i<iz;++i){ch=
id.charCodeAt(i);if(55296<=ch&&ch<=56319){++i;if(i>=iz)return false;lowCh=id.charCodeAt(i);if(!(56320<=lowCh&&lowCh<=57343))return false;ch=decodeUtf16(ch,lowCh)}if(!check(ch))return false;check=code.isIdentifierPartES6}return true}function isIdentifierES5(id,strict){return isIdentifierNameES5(id)&&!isReservedWordES5(id,strict)}function isIdentifierES6(id,strict){return isIdentifierNameES6(id)&&!isReservedWordES6(id,strict)}module.exports={isKeywordES5:isKeywordES5,isKeywordES6:isKeywordES6,isReservedWordES5:isReservedWordES5,
isReservedWordES6:isReservedWordES6,isRestrictedWord:isRestrictedWord,isIdentifierNameES5:isIdentifierNameES5,isIdentifierNameES6:isIdentifierNameES6,isIdentifierES5:isIdentifierES5,isIdentifierES6:isIdentifierES6}})()},function(module,exports,__webpack_require__){const escapeStringRegexp=__webpack_require__(256);const ansiStyles=__webpack_require__(257);const stdoutColor=__webpack_require__(262).stdout;const template=__webpack_require__(265);const isSimpleWindowsTerm=process.platform==="win32"&&
!(process.env.TERM||"").toLowerCase().startsWith("xterm");const levelMapping=["ansi","ansi","ansi256","ansi16m"];const skipModels=new Set(["gray"]);const styles=Object.create(null);function applyOptions(obj,options){options=options||{};const scLevel=stdoutColor?stdoutColor.level:0;obj.level=options.level===undefined?scLevel:options.level;obj.enabled="enabled"in options?options.enabled:obj.level>0}function Chalk(options){if(!this||!(this instanceof Chalk)||this.template){const chalk={};applyOptions(chalk,
options);chalk.template=function(){const args=[].slice.call(arguments);return chalkTag.apply(null,[chalk.template].concat(args))};Object.setPrototypeOf(chalk,Chalk.prototype);Object.setPrototypeOf(chalk.template,chalk);chalk.template.constructor=Chalk;return chalk.template}applyOptions(this,options)}if(isSimpleWindowsTerm)ansiStyles.blue.open="\u001b[94m";for(const key of Object.keys(ansiStyles)){ansiStyles[key].closeRe=new RegExp(escapeStringRegexp(ansiStyles[key].close),"g");styles[key]={get(){const codes=
ansiStyles[key];return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,key)}}}styles.visible={get(){return build.call(this,this._styles||[],true,"visible")}};ansiStyles.color.closeRe=new RegExp(escapeStringRegexp(ansiStyles.color.close),"g");for(const model of Object.keys(ansiStyles.color.ansi)){if(skipModels.has(model))continue;styles[model]={get(){const level=this.level;return function(){const open=ansiStyles.color[levelMapping[level]][model].apply(null,arguments);const codes=
{open,close:ansiStyles.color.close,closeRe:ansiStyles.color.closeRe};return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,model)}}}}ansiStyles.bgColor.closeRe=new RegExp(escapeStringRegexp(ansiStyles.bgColor.close),"g");for(const model of Object.keys(ansiStyles.bgColor.ansi)){if(skipModels.has(model))continue;const bgModel="bg"+model[0].toUpperCase()+model.slice(1);styles[bgModel]={get(){const level=this.level;return function(){const open=ansiStyles.bgColor[levelMapping[level]][model].apply(null,
arguments);const codes={open,close:ansiStyles.bgColor.close,closeRe:ansiStyles.bgColor.closeRe};return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,model)}}}}const proto=Object.defineProperties(()=>{},styles);function build(_styles,_empty,key){const builder=function(){return applyStyle.apply(builder,arguments)};builder._styles=_styles;builder._empty=_empty;const self=this;Object.defineProperty(builder,"level",{enumerable:true,get(){return self.level},set(level){self.level=
level}});Object.defineProperty(builder,"enabled",{enumerable:true,get(){return self.enabled},set(enabled){self.enabled=enabled}});builder.hasGrey=this.hasGrey||key==="gray"||key==="grey";builder.__proto__=proto;return builder}function applyStyle(){const args=arguments;const argsLen=args.length;let str=String(arguments[0]);if(argsLen===0)return"";if(argsLen>1)for(let a=1;a<argsLen;a++)str+=" "+args[a];if(!this.enabled||this.level<=0||!str)return this._empty?"":str;const originalDim=ansiStyles.dim.open;
if(isSimpleWindowsTerm&&this.hasGrey)ansiStyles.dim.open="";for(const code of this._styles.slice().reverse()){str=code.open+str.replace(code.closeRe,code.open)+code.close;str=str.replace(/\r?\n/g,`${code.close}$&${code.open}`)}ansiStyles.dim.open=originalDim;return str}function chalkTag(chalk,strings){if(!Array.isArray(strings))return[].slice.call(arguments,1).join(" ");const args=[].slice.call(arguments,2);const parts=[strings.raw[0]];for(let i=1;i<strings.length;i++){parts.push(String(args[i-1]).replace(/[{}\\]/g,
"\\$&"));parts.push(String(strings.raw[i]))}return template(chalk,parts.join(""))}Object.defineProperties(Chalk.prototype,styles);module.exports=Chalk();module.exports.supportsColor=stdoutColor;module.exports.default=module.exports},function(module,exports,__webpack_require__){var matchOperatorsRe=/[|\\{}()[\]^$+*?.]/g;module.exports=function(str){if(typeof str!=="string")throw new TypeError("Expected a string");return str.replace(matchOperatorsRe,"\\$&")}},function(module,exports,__webpack_require__){(function(module){const colorConvert=
__webpack_require__(258);const wrapAnsi16=(fn,offset)=>function(){const code=fn.apply(colorConvert,arguments);return`\u001B[${code+offset}m`};const wrapAnsi256=(fn,offset)=>function(){const code=fn.apply(colorConvert,arguments);return`\u001B[${38+offset};5;${code}m`};const wrapAnsi16m=(fn,offset)=>function(){const rgb=fn.apply(colorConvert,arguments);return`\u001B[${38+offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`};function assembleStyles(){const codes=new Map;const styles={modifier:{reset:[0,0],bold:[1,
22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],
bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};styles.color.grey=styles.color.gray;for(const groupName of Object.keys(styles)){const group=styles[groupName];for(const styleName of Object.keys(group)){const style=group[styleName];styles[styleName]={open:`\u001B[${style[0]}m`,close:`\u001B[${style[1]}m`};group[styleName]=styles[styleName];codes.set(style[0],style[1])}Object.defineProperty(styles,
groupName,{value:group,enumerable:false});Object.defineProperty(styles,"codes",{value:codes,enumerable:false})}const ansi2ansi=(n)=>n;const rgb2rgb=(r,g,b)=>[r,g,b];styles.color.close="\u001b[39m";styles.bgColor.close="\u001b[49m";styles.color.ansi={ansi:wrapAnsi16(ansi2ansi,0)};styles.color.ansi256={ansi256:wrapAnsi256(ansi2ansi,0)};styles.color.ansi16m={rgb:wrapAnsi16m(rgb2rgb,0)};styles.bgColor.ansi={ansi:wrapAnsi16(ansi2ansi,10)};styles.bgColor.ansi256={ansi256:wrapAnsi256(ansi2ansi,10)};styles.bgColor.ansi16m=
{rgb:wrapAnsi16m(rgb2rgb,10)};for(let key of Object.keys(colorConvert)){if(typeof colorConvert[key]!=="object")continue;const suite=colorConvert[key];if(key==="ansi16")key="ansi";if("ansi16"in suite){styles.color.ansi[key]=wrapAnsi16(suite.ansi16,0);styles.bgColor.ansi[key]=wrapAnsi16(suite.ansi16,10)}if("ansi256"in suite){styles.color.ansi256[key]=wrapAnsi256(suite.ansi256,0);styles.bgColor.ansi256[key]=wrapAnsi256(suite.ansi256,10)}if("rgb"in suite){styles.color.ansi16m[key]=wrapAnsi16m(suite.rgb,
0);styles.bgColor.ansi16m[key]=wrapAnsi16m(suite.rgb,10)}}return styles}Object.defineProperty(module,"exports",{enumerable:true,get:assembleStyles})}).call(this,__webpack_require__(92)(module))},function(module,exports,__webpack_require__){var conversions=__webpack_require__(259);var route=__webpack_require__(261);var convert={};var models=Object.keys(conversions);function wrapRaw(fn){var wrappedFn=function(args){if(args===undefined||args===null)return args;if(arguments.length>1)args=Array.prototype.slice.call(arguments);
return fn(args)};if("conversion"in fn)wrappedFn.conversion=fn.conversion;return wrappedFn}function wrapRounded(fn){var wrappedFn=function(args){if(args===undefined||args===null)return args;if(arguments.length>1)args=Array.prototype.slice.call(arguments);var result=fn(args);if(typeof result==="object")for(var len=result.length,i=0;i<len;i++)result[i]=Math.round(result[i]);return result};if("conversion"in fn)wrappedFn.conversion=fn.conversion;return wrappedFn}models.forEach(function(fromModel){convert[fromModel]=
{};Object.defineProperty(convert[fromModel],"channels",{value:conversions[fromModel].channels});Object.defineProperty(convert[fromModel],"labels",{value:conversions[fromModel].labels});var routes=route(fromModel);var routeModels=Object.keys(routes);routeModels.forEach(function(toModel){var fn=routes[toModel];convert[fromModel][toModel]=wrapRounded(fn);convert[fromModel][toModel].raw=wrapRaw(fn)})});module.exports=convert},function(module,exports,__webpack_require__){var cssKeywords=__webpack_require__(260);
var reverseKeywords={};for(var key in cssKeywords)if(cssKeywords.hasOwnProperty(key))reverseKeywords[cssKeywords[key]]=key;var convert=module.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},
ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var model in convert)if(convert.hasOwnProperty(model)){if(!("channels"in convert[model]))throw new Error("missing channels property: "+model);if(!("labels"in convert[model]))throw new Error("missing channel labels property: "+model);if(convert[model].labels.length!==convert[model].channels)throw new Error("channel and label counts mismatch: "+
model);var channels=convert[model].channels;var labels=convert[model].labels;delete convert[model].channels;delete convert[model].labels;Object.defineProperty(convert[model],"channels",{value:channels});Object.defineProperty(convert[model],"labels",{value:labels})}convert.rgb.hsl=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var min=Math.min(r,g,b);var max=Math.max(r,g,b);var delta=max-min;var h;var s;var l;if(max===min)h=0;else if(r===max)h=(g-b)/delta;else if(g===max)h=2+(b-r)/
delta;else if(b===max)h=4+(r-g)/delta;h=Math.min(h*60,360);if(h<0)h+=360;l=(min+max)/2;if(max===min)s=0;else if(l<=.5)s=delta/(max+min);else s=delta/(2-max-min);return[h,s*100,l*100]};convert.rgb.hsv=function(rgb){var rdif;var gdif;var bdif;var h;var s;var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var v=Math.max(r,g,b);var diff=v-Math.min(r,g,b);var diffc=function(c){return(v-c)/6/diff+1/2};if(diff===0)h=s=0;else{s=diff/v;rdif=diffc(r);gdif=diffc(g);bdif=diffc(b);if(r===v)h=bdif-gdif;else if(g===
v)h=1/3+rdif-bdif;else if(b===v)h=2/3+gdif-rdif;if(h<0)h+=1;else if(h>1)h-=1}return[h*360,s*100,v*100]};convert.rgb.hwb=function(rgb){var r=rgb[0];var g=rgb[1];var b=rgb[2];var h=convert.rgb.hsl(rgb)[0];var w=1/255*Math.min(r,Math.min(g,b));b=1-1/255*Math.max(r,Math.max(g,b));return[h,w*100,b*100]};convert.rgb.cmyk=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var c;var m;var y;var k;k=Math.min(1-r,1-g,1-b);c=(1-r-k)/(1-k)||0;m=(1-g-k)/(1-k)||0;y=(1-b-k)/(1-k)||0;return[c*100,m*
100,y*100,k*100]};function comparativeDistance(x,y){return Math.pow(x[0]-y[0],2)+Math.pow(x[1]-y[1],2)+Math.pow(x[2]-y[2],2)}convert.rgb.keyword=function(rgb){var reversed=reverseKeywords[rgb];if(reversed)return reversed;var currentClosestDistance=Infinity;var currentClosestKeyword;for(var keyword in cssKeywords)if(cssKeywords.hasOwnProperty(keyword)){var value=cssKeywords[keyword];var distance=comparativeDistance(rgb,value);if(distance<currentClosestDistance){currentClosestDistance=distance;currentClosestKeyword=
keyword}}return currentClosestKeyword};convert.keyword.rgb=function(keyword){return cssKeywords[keyword]};convert.rgb.xyz=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92;g=g>.04045?Math.pow((g+.055)/1.055,2.4):g/12.92;b=b>.04045?Math.pow((b+.055)/1.055,2.4):b/12.92;var x=r*.4124+g*.3576+b*.1805;var y=r*.2126+g*.7152+b*.0722;var z=r*.0193+g*.1192+b*.9505;return[x*100,y*100,z*100]};convert.rgb.lab=function(rgb){var xyz=convert.rgb.xyz(rgb);
var x=xyz[0];var y=xyz[1];var z=xyz[2];var l;var a;var b;x/=95.047;y/=100;z/=108.883;x=x>.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>.008856?Math.pow(z,1/3):7.787*z+16/116;l=116*y-16;a=500*(x-y);b=200*(y-z);return[l,a,b]};convert.hsl.rgb=function(hsl){var h=hsl[0]/360;var s=hsl[1]/100;var l=hsl[2]/100;var t1;var t2;var t3;var rgb;var val;if(s===0){val=l*255;return[val,val,val]}if(l<.5)t2=l*(1+s);else t2=l+s-l*s;t1=2*l-t2;rgb=[0,0,0];for(var i=0;i<3;i++){t3=
h+1/3*-(i-1);if(t3<0)t3++;if(t3>1)t3--;if(6*t3<1)val=t1+(t2-t1)*6*t3;else if(2*t3<1)val=t2;else if(3*t3<2)val=t1+(t2-t1)*(2/3-t3)*6;else val=t1;rgb[i]=val*255}return rgb};convert.hsl.hsv=function(hsl){var h=hsl[0];var s=hsl[1]/100;var l=hsl[2]/100;var smin=s;var lmin=Math.max(l,.01);var sv;var v;l*=2;s*=l<=1?l:2-l;smin*=lmin<=1?lmin:2-lmin;v=(l+s)/2;sv=l===0?2*smin/(lmin+smin):2*s/(l+s);return[h,sv*100,v*100]};convert.hsv.rgb=function(hsv){var h=hsv[0]/60;var s=hsv[1]/100;var v=hsv[2]/100;var hi=
Math.floor(h)%6;var f=h-Math.floor(h);var p=255*v*(1-s);var q=255*v*(1-s*f);var t=255*v*(1-s*(1-f));v*=255;switch(hi){case 0:return[v,t,p];case 1:return[q,v,p];case 2:return[p,v,t];case 3:return[p,q,v];case 4:return[t,p,v];case 5:return[v,p,q]}};convert.hsv.hsl=function(hsv){var h=hsv[0];var s=hsv[1]/100;var v=hsv[2]/100;var vmin=Math.max(v,.01);var lmin;var sl;var l;l=(2-s)*v;lmin=(2-s)*vmin;sl=s*vmin;sl/=lmin<=1?lmin:2-lmin;sl=sl||0;l/=2;return[h,sl*100,l*100]};convert.hwb.rgb=function(hwb){var h=
hwb[0]/360;var wh=hwb[1]/100;var bl=hwb[2]/100;var ratio=wh+bl;var i;var v;var f;var n;if(ratio>1){wh/=ratio;bl/=ratio}i=Math.floor(6*h);v=1-bl;f=6*h-i;if((i&1)!==0)f=1-f;n=wh+f*(v-wh);var r;var g;var b;switch(i){default:case 6:case 0:r=v;g=n;b=wh;break;case 1:r=n;g=v;b=wh;break;case 2:r=wh;g=v;b=n;break;case 3:r=wh;g=n;b=v;break;case 4:r=n;g=wh;b=v;break;case 5:r=v;g=wh;b=n;break}return[r*255,g*255,b*255]};convert.cmyk.rgb=function(cmyk){var c=cmyk[0]/100;var m=cmyk[1]/100;var y=cmyk[2]/100;var k=
cmyk[3]/100;var r;var g;var b;r=1-Math.min(1,c*(1-k)+k);g=1-Math.min(1,m*(1-k)+k);b=1-Math.min(1,y*(1-k)+k);return[r*255,g*255,b*255]};convert.xyz.rgb=function(xyz){var x=xyz[0]/100;var y=xyz[1]/100;var z=xyz[2]/100;var r;var g;var b;r=x*3.2406+y*-1.5372+z*-.4986;g=x*-.9689+y*1.8758+z*.0415;b=x*.0557+y*-.204+z*1.057;r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:r*12.92;g=g>.0031308?1.055*Math.pow(g,1/2.4)-.055:g*12.92;b=b>.0031308?1.055*Math.pow(b,1/2.4)-.055:b*12.92;r=Math.min(Math.max(0,r),1);g=Math.min(Math.max(0,
g),1);b=Math.min(Math.max(0,b),1);return[r*255,g*255,b*255]};convert.xyz.lab=function(xyz){var x=xyz[0];var y=xyz[1];var z=xyz[2];var l;var a;var b;x/=95.047;y/=100;z/=108.883;x=x>.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>.008856?Math.pow(z,1/3):7.787*z+16/116;l=116*y-16;a=500*(x-y);b=200*(y-z);return[l,a,b]};convert.lab.xyz=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var x;var y;var z;y=(l+16)/116;x=a/500+y;z=y-b/200;var y2=Math.pow(y,3);var x2=
Math.pow(x,3);var z2=Math.pow(z,3);y=y2>.008856?y2:(y-16/116)/7.787;x=x2>.008856?x2:(x-16/116)/7.787;z=z2>.008856?z2:(z-16/116)/7.787;x*=95.047;y*=100;z*=108.883;return[x,y,z]};convert.lab.lch=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var hr;var h;var c;hr=Math.atan2(b,a);h=hr*360/2/Math.PI;if(h<0)h+=360;c=Math.sqrt(a*a+b*b);return[l,c,h]};convert.lch.lab=function(lch){var l=lch[0];var c=lch[1];var h=lch[2];var a;var b;var hr;hr=h/360*2*Math.PI;a=c*Math.cos(hr);b=c*Math.sin(hr);return[l,
a,b]};convert.rgb.ansi16=function(args){var r=args[0];var g=args[1];var b=args[2];var value=1 in arguments?arguments[1]:convert.rgb.hsv(args)[2];value=Math.round(value/50);if(value===0)return 30;var ansi=30+(Math.round(b/255)<<2|Math.round(g/255)<<1|Math.round(r/255));if(value===2)ansi+=60;return ansi};convert.hsv.ansi16=function(args){return convert.rgb.ansi16(convert.hsv.rgb(args),args[2])};convert.rgb.ansi256=function(args){var r=args[0];var g=args[1];var b=args[2];if(r===g&&g===b){if(r<8)return 16;
if(r>248)return 231;return Math.round((r-8)/247*24)+232}var ansi=16+36*Math.round(r/255*5)+6*Math.round(g/255*5)+Math.round(b/255*5);return ansi};convert.ansi16.rgb=function(args){var color=args%10;if(color===0||color===7){if(args>50)color+=3.5;color=color/10.5*255;return[color,color,color]}var mult=(~~(args>50)+1)*.5;var r=(color&1)*mult*255;var g=(color>>1&1)*mult*255;var b=(color>>2&1)*mult*255;return[r,g,b]};convert.ansi256.rgb=function(args){if(args>=232){var c=(args-232)*10+8;return[c,c,c]}args-=
16;var rem;var r=Math.floor(args/36)/5*255;var g=Math.floor((rem=args%36)/6)/5*255;var b=rem%6/5*255;return[r,g,b]};convert.rgb.hex=function(args){var integer=((Math.round(args[0])&255)<<16)+((Math.round(args[1])&255)<<8)+(Math.round(args[2])&255);var string=integer.toString(16).toUpperCase();return"000000".substring(string.length)+string};convert.hex.rgb=function(args){var match=args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!match)return[0,0,0];var colorString=match[0];if(match[0].length===
3)colorString=colorString.split("").map(function(char){return char+char}).join("");var integer=parseInt(colorString,16);var r=integer>>16&255;var g=integer>>8&255;var b=integer&255;return[r,g,b]};convert.rgb.hcg=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var max=Math.max(Math.max(r,g),b);var min=Math.min(Math.min(r,g),b);var chroma=max-min;var grayscale;var hue;if(chroma<1)grayscale=min/(1-chroma);else grayscale=0;if(chroma<=0)hue=0;else if(max===r)hue=(g-b)/chroma%6;else if(max===
g)hue=2+(b-r)/chroma;else hue=4+(r-g)/chroma+4;hue/=6;hue%=1;return[hue*360,chroma*100,grayscale*100]};convert.hsl.hcg=function(hsl){var s=hsl[1]/100;var l=hsl[2]/100;var c=1;var f=0;if(l<.5)c=2*s*l;else c=2*s*(1-l);if(c<1)f=(l-.5*c)/(1-c);return[hsl[0],c*100,f*100]};convert.hsv.hcg=function(hsv){var s=hsv[1]/100;var v=hsv[2]/100;var c=s*v;var f=0;if(c<1)f=(v-c)/(1-c);return[hsv[0],c*100,f*100]};convert.hcg.rgb=function(hcg){var h=hcg[0]/360;var c=hcg[1]/100;var g=hcg[2]/100;if(c===0)return[g*255,
g*255,g*255];var pure=[0,0,0];var hi=h%1*6;var v=hi%1;var w=1-v;var mg=0;switch(Math.floor(hi)){case 0:pure[0]=1;pure[1]=v;pure[2]=0;break;case 1:pure[0]=w;pure[1]=1;pure[2]=0;break;case 2:pure[0]=0;pure[1]=1;pure[2]=v;break;case 3:pure[0]=0;pure[1]=w;pure[2]=1;break;case 4:pure[0]=v;pure[1]=0;pure[2]=1;break;default:pure[0]=1;pure[1]=0;pure[2]=w}mg=(1-c)*g;return[(c*pure[0]+mg)*255,(c*pure[1]+mg)*255,(c*pure[2]+mg)*255]};convert.hcg.hsv=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1-
c);var f=0;if(v>0)f=c/v;return[hcg[0],f*100,v*100]};convert.hcg.hsl=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var l=g*(1-c)+.5*c;var s=0;if(l>0&&l<.5)s=c/(2*l);else if(l>=.5&&l<1)s=c/(2*(1-l));return[hcg[0],s*100,l*100]};convert.hcg.hwb=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1-c);return[hcg[0],(v-c)*100,(1-v)*100]};convert.hwb.hcg=function(hwb){var w=hwb[1]/100;var b=hwb[2]/100;var v=1-b;var c=v-w;var g=0;if(c<1)g=(v-c)/(1-c);return[hwb[0],c*100,g*100]};convert.apple.rgb=
function(apple){return[apple[0]/65535*255,apple[1]/65535*255,apple[2]/65535*255]};convert.rgb.apple=function(rgb){return[rgb[0]/255*65535,rgb[1]/255*65535,rgb[2]/255*65535]};convert.gray.rgb=function(args){return[args[0]/100*255,args[0]/100*255,args[0]/100*255]};convert.gray.hsl=convert.gray.hsv=function(args){return[0,0,args[0]]};convert.gray.hwb=function(gray){return[0,100,gray[0]]};convert.gray.cmyk=function(gray){return[0,0,0,gray[0]]};convert.gray.lab=function(gray){return[gray[0],0,0]};convert.gray.hex=
function(gray){var val=Math.round(gray[0]/100*255)&255;var integer=(val<<16)+(val<<8)+val;var string=integer.toString(16).toUpperCase();return"000000".substring(string.length)+string};convert.rgb.gray=function(rgb){var val=(rgb[0]+rgb[1]+rgb[2])/3;return[val/255*100]}},function(module,exports,__webpack_require__){module.exports={"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"aqua":[0,255,255],"aquamarine":[127,255,212],"azure":[240,255,255],"beige":[245,245,220],"bisque":[255,228,196],"black":[0,
0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blueviolet":[138,43,226],"brown":[165,42,42],"burlywood":[222,184,135],"cadetblue":[95,158,160],"chartreuse":[127,255,0],"chocolate":[210,105,30],"coral":[255,127,80],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"crimson":[220,20,60],"cyan":[0,255,255],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":[169,169,169],"darkkhaki":[189,183,107],"darkmagenta":[139,
0,139],"darkolivegreen":[85,107,47],"darkorange":[255,140,0],"darkorchid":[153,50,204],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategrey":[47,79,79],"darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deepskyblue":[0,191,255],"dimgray":[105,105,105],"dimgrey":[105,105,105],"dodgerblue":[30,144,255],"firebrick":[178,34,34],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"fuchsia":[255,
0,255],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"goldenrod":[218,165,32],"gray":[128,128,128],"green":[0,128,0],"greenyellow":[173,255,47],"grey":[128,128,128],"honeydew":[240,255,240],"hotpink":[255,105,180],"indianred":[205,92,92],"indigo":[75,0,130],"ivory":[255,255,240],"khaki":[240,230,140],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lightblue":[173,216,230],"lightcoral":[240,128,128],"lightcyan":[224,
255,255],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":[211,211,211],"lightpink":[255,182,193],"lightsalmon":[255,160,122],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightslategray":[119,136,153],"lightslategrey":[119,136,153],"lightsteelblue":[176,196,222],"lightyellow":[255,255,224],"lime":[0,255,0],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"maroon":[128,0,0],"mediumaquamarine":[102,205,170],"mediumblue":[0,
0,205],"mediumorchid":[186,85,211],"mediumpurple":[147,112,219],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navy":[0,0,128],"oldlace":[253,245,230],"olive":[128,128,0],"olivedrab":[107,142,35],"orange":[255,165,0],"orangered":[255,69,0],"orchid":[218,112,214],
"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"paleturquoise":[175,238,238],"palevioletred":[219,112,147],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peru":[205,133,63],"pink":[255,192,203],"plum":[221,160,221],"powderblue":[176,224,230],"purple":[128,0,128],"rebeccapurple":[102,51,153],"red":[255,0,0],"rosybrown":[188,143,143],"royalblue":[65,105,225],"saddlebrown":[139,69,19],"salmon":[250,128,114],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seashell":[255,245,238],"sienna":[160,
82,45],"silver":[192,192,192],"skyblue":[135,206,235],"slateblue":[106,90,205],"slategray":[112,128,144],"slategrey":[112,128,144],"snow":[255,250,250],"springgreen":[0,255,127],"steelblue":[70,130,180],"tan":[210,180,140],"teal":[0,128,128],"thistle":[216,191,216],"tomato":[255,99,71],"turquoise":[64,224,208],"violet":[238,130,238],"wheat":[245,222,179],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellowgreen":[154,205,50]}},function(module,exports,__webpack_require__){var conversions=
__webpack_require__(259);function buildGraph(){var graph={};var models=Object.keys(conversions);for(var len=models.length,i=0;i<len;i++)graph[models[i]]={distance:-1,parent:null};return graph}function deriveBFS(fromModel){var graph=buildGraph();var queue=[fromModel];graph[fromModel].distance=0;while(queue.length){var current=queue.pop();var adjacents=Object.keys(conversions[current]);for(var len=adjacents.length,i=0;i<len;i++){var adjacent=adjacents[i];var node=graph[adjacent];if(node.distance===
-1){node.distance=graph[current].distance+1;node.parent=current;queue.unshift(adjacent)}}}return graph}function link(from,to){return function(args){return to(from(args))}}function wrapConversion(toModel,graph){var path=[graph[toModel].parent,toModel];var fn=conversions[graph[toModel].parent][toModel];var cur=graph[toModel].parent;while(graph[cur].parent){path.unshift(graph[cur].parent);fn=link(conversions[graph[cur].parent][cur],fn);cur=graph[cur].parent}fn.conversion=path;return fn}module.exports=
function(fromModel){var graph=deriveBFS(fromModel);var conversion={};var models=Object.keys(graph);for(var len=models.length,i=0;i<len;i++){var toModel=models[i];var node=graph[toModel];if(node.parent===null)continue;conversion[toModel]=wrapConversion(toModel,graph)}return conversion}},function(module,exports,__webpack_require__){const os=__webpack_require__(263);const hasFlag=__webpack_require__(264);const env=process.env;let forceColor;if(hasFlag("no-color")||hasFlag("no-colors")||hasFlag("color=false"))forceColor=
false;else if(hasFlag("color")||hasFlag("colors")||hasFlag("color=true")||hasFlag("color=always"))forceColor=true;if("FORCE_COLOR"in env)forceColor=env.FORCE_COLOR.length===0||parseInt(env.FORCE_COLOR,10)!==0;function translateLevel(level){if(level===0)return false;return{level,hasBasic:true,has256:level>=2,has16m:level>=3}}function supportsColor(stream){if(forceColor===false)return 0;if(hasFlag("color=16m")||hasFlag("color=full")||hasFlag("color=truecolor"))return 3;if(hasFlag("color=256"))return 2;
if(stream&&!stream.isTTY&&forceColor!==true)return 0;const min=forceColor?1:0;if(process.platform==="win32"){const osRelease=os.release().split(".");if(Number(process.versions.node.split(".")[0])>=8&&Number(osRelease[0])>=10&&Number(osRelease[2])>=10586)return Number(osRelease[2])>=14931?3:2;return 1}if("CI"in env){if(["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((sign)=>sign in env)||env.CI_NAME==="codeship")return 1;return min}if("TEAMCITY_VERSION"in env)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION)?
1:0;if(env.COLORTERM==="truecolor")return 3;if("TERM_PROGRAM"in env){const version=parseInt((env.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(env.TERM_PROGRAM){case "iTerm.app":return version>=3?3:2;case "Apple_Terminal":return 2}}if(/-256(color)?$/i.test(env.TERM))return 2;if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM))return 1;if("COLORTERM"in env)return 1;if(env.TERM==="dumb")return min;return min}function getSupportLevel(stream){const level=supportsColor(stream);
return translateLevel(level)}module.exports={supportsColor:getSupportLevel,stdout:getSupportLevel(process.stdout),stderr:getSupportLevel(process.stderr)}},function(module,exports){module.exports=__WEBPACK_EXTERNAL_MODULE__263__},function(module,exports,__webpack_require__){module.exports=(flag,argv)=>{argv=argv||process.argv;const prefix=flag.startsWith("-")?"":flag.length===1?"-":"--";const pos=argv.indexOf(prefix+flag);const terminatorPos=argv.indexOf("--");return pos!==-1&&(terminatorPos===-1?
true:pos<terminatorPos)}},function(module,exports,__webpack_require__){const TEMPLATE_REGEX=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;const STYLE_REGEX=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;const STRING_REGEX=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;const ESCAPE_REGEX=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi;const ESCAPES=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\x00"],["\\",
"\\"],["e","\u001b"],["a","\u0007"]]);function unescape(c){if(c[0]==="u"&&c.length===5||c[0]==="x"&&c.length===3)return String.fromCharCode(parseInt(c.slice(1),16));return ESCAPES.get(c)||c}function parseArguments(name,args){const results=[];const chunks=args.trim().split(/\s*,\s*/g);let matches;for(const chunk of chunks)if(!isNaN(chunk))results.push(Number(chunk));else if(matches=chunk.match(STRING_REGEX))results.push(matches[2].replace(ESCAPE_REGEX,(m,escape,chr)=>escape?unescape(escape):chr));
else throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);return results}function parseStyle(style){STYLE_REGEX.lastIndex=0;const results=[];let matches;while((matches=STYLE_REGEX.exec(style))!==null){const name=matches[1];if(matches[2]){const args=parseArguments(name,matches[2]);results.push([name].concat(args))}else results.push([name])}return results}function buildStyle(chalk,styles){const enabled={};for(const layer of styles)for(const style of layer.styles)enabled[style[0]]=
layer.inverse?null:style.slice(1);let current=chalk;for(const styleName of Object.keys(enabled))if(Array.isArray(enabled[styleName])){if(!(styleName in current))throw new Error(`Unknown Chalk style: ${styleName}`);if(enabled[styleName].length>0)current=current[styleName].apply(current,enabled[styleName]);else current=current[styleName]}return current}module.exports=(chalk,tmp)=>{const styles=[];const chunks=[];let chunk=[];tmp.replace(TEMPLATE_REGEX,(m,escapeChar,inverse,style,close,chr)=>{if(escapeChar)chunk.push(unescape(escapeChar));
else if(style){const str=chunk.join("");chunk=[];chunks.push(styles.length===0?str:buildStyle(chalk,styles)(str));styles.push({inverse,styles:parseStyle(style)})}else if(close){if(styles.length===0)throw new Error("Found extraneous } in Chalk template literal");chunks.push(buildStyle(chalk,styles)(chunk.join("")));chunk=[];styles.pop()}else chunk.push(chr)});chunks.push(chunk.join(""));if(styles.length>0){const errMsg=`Chalk template literal is missing ${styles.length} closing bracket${styles.length===
1?"":"s"} (\`}\`)`;throw new Error(errMsg);}return chunks.join("")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=populatePlaceholders;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=
Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function populatePlaceholders(metadata,replacements){const ast=t().cloneNode(metadata.ast);if(replacements){metadata.placeholders.forEach((placeholder)=>{if(!Object.prototype.hasOwnProperty.call(replacements,placeholder.name)){const placeholderName=placeholder.name;throw new Error(`Error: No substitution given for "${placeholderName}". If this is not meant to be a
            placeholder you may want to consider passing one of the following options to @babel/template:
            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}
            - { placeholderPattern: /^${placeholderName}$/ }`);}});Object.keys(replacements).forEach((key)=>{if(!metadata.placeholderNames.has(key))throw new Error(`Unknown substitution "${key}" given`);})}metadata.placeholders.slice().reverse().forEach((placeholder)=>{try{applyReplacement(placeholder,ast,replacements&&replacements[placeholder.name]||null)}catch(e){e.message=`@babel/template placeholder "${placeholder.name}": ${e.message}`;throw e;}});return ast}function applyReplacement(placeholder,
ast,replacement){if(placeholder.isDuplicate)if(Array.isArray(replacement))replacement=replacement.map((node)=>t().cloneNode(node));else if(typeof replacement==="object")replacement=t().cloneNode(replacement);const {parent,key,index}=placeholder.resolve(ast);if(placeholder.type==="string"){if(typeof replacement==="string")replacement=t().stringLiteral(replacement);if(!replacement||!t().isStringLiteral(replacement))throw new Error("Expected string substitution");}else if(placeholder.type==="statement")if(index===
undefined)if(!replacement)replacement=t().emptyStatement();else if(Array.isArray(replacement))replacement=t().blockStatement(replacement);else if(typeof replacement==="string")replacement=t().expressionStatement(t().identifier(replacement));else{if(!t().isStatement(replacement))replacement=t().expressionStatement(replacement)}else{if(replacement&&!Array.isArray(replacement)){if(typeof replacement==="string")replacement=t().identifier(replacement);if(!t().isStatement(replacement))replacement=t().expressionStatement(replacement)}}else if(placeholder.type===
"param"){if(typeof replacement==="string")replacement=t().identifier(replacement);if(index===undefined)throw new Error("Assertion failure.");}else{if(typeof replacement==="string")replacement=t().identifier(replacement);if(Array.isArray(replacement))throw new Error("Cannot replace single expression with an array.");}if(index===undefined){t().validate(parent,key,replacement);parent[key]=replacement}else{const items=parent[key].slice();if(placeholder.type==="statement"||placeholder.type==="param")if(replacement==
null)items.splice(index,1);else if(Array.isArray(replacement))items.splice(index,1,...replacement);else items[index]=replacement;else items[index]=replacement;t().validate(parent,key,items);parent[key]=items}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=literalTemplate;var _options=__webpack_require__(244);var _parse=_interopRequireDefault(__webpack_require__(246));var _populate=_interopRequireDefault(__webpack_require__(266));
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function literalTemplate(formatter,tpl,opts){const {metadata,names}=buildLiteralData(formatter,tpl,opts);return(arg)=>{const defaultReplacements=arg.reduce((acc,replacement,i)=>{acc[names[i]]=replacement;return acc},{});return(arg)=>{const replacements=(0,_options.normalizeReplacements)(arg);if(replacements)Object.keys(replacements).forEach((key)=>{if(Object.prototype.hasOwnProperty.call(defaultReplacements,key))throw new Error("Unexpected replacement overlap.");
});return formatter.unwrap((0,_populate.default)(metadata,replacements?Object.assign(replacements,defaultReplacements):defaultReplacements))}}}function buildLiteralData(formatter,tpl,opts){let names;let nameSet;let metadata;let prefix="";do{prefix+="$";const result=buildTemplateCode(tpl,prefix);names=result.names;nameSet=new Set(names);metadata=(0,_parse.default)(formatter,formatter.code(result.code),{parser:opts.parser,placeholderWhitelist:new Set(result.names.concat(opts.placeholderWhitelist?Array.from(opts.placeholderWhitelist):
[])),placeholderPattern:opts.placeholderPattern,preserveComments:opts.preserveComments})}while(metadata.placeholders.some((placeholder)=>placeholder.isDuplicate&&nameSet.has(placeholder.name)));return{metadata,names}}function buildTemplateCode(tpl,prefix){const names=[];let code=tpl[0];for(let i=1;i<tpl.length;i++){const value=`${prefix}${i-1}`;names.push(value);code+=value+tpl[i]}return{names,code}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});
exports.cloneDescriptor=cloneDescriptor;exports.equalDescriptors=equalDescriptors;exports.AbstractJoinedDescriptor=exports.InternalSlotDescriptor=exports.PropertyDescriptor=exports.Descriptor=void 0;var _invariant=_interopRequireDefault(__webpack_require__(9));var _errors=__webpack_require__(3);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Descriptor{constructor(){(0,_invariant.default)(this.constructor!==Descriptor,"Descriptor is an abstract base class")}throwIfNotConcrete(realm){let error=
new _errors.CompilerDiagnostic("only known descriptors supported",realm.currentLocation,"PP0042","FatalError");realm.handleError(error);throw new _errors.FatalError;}mightHaveBeenDeleted(){(0,_invariant.default)(false,"should have been overridden by subclass")}}exports.Descriptor=Descriptor;class PropertyDescriptor extends Descriptor{constructor(desc){super();this.writable=desc.writable;this.enumerable=desc.enumerable;this.configurable=desc.configurable;this.value=desc.value;this.get=desc.get;this.set=
desc.set}throwIfNotConcrete(realm){return this}mightHaveBeenDeleted(){if(this.value===undefined)return false;return this.value.mightHaveBeenDeleted()}}exports.PropertyDescriptor=PropertyDescriptor;class InternalSlotDescriptor extends Descriptor{constructor(value){super();this.value=Array.isArray(value)?value.slice(0):value}mightHaveBeenDeleted(){return false}}exports.InternalSlotDescriptor=InternalSlotDescriptor;class AbstractJoinedDescriptor extends Descriptor{constructor(joinCondition,descriptor1,
descriptor2){super();this.joinCondition=joinCondition;this.descriptor1=descriptor1;this.descriptor2=descriptor2}mightHaveBeenDeleted(){if(!this.descriptor1||this.descriptor1.mightHaveBeenDeleted())return true;if(!this.descriptor2||this.descriptor2.mightHaveBeenDeleted())return true;return false}}exports.AbstractJoinedDescriptor=AbstractJoinedDescriptor;function cloneDescriptor(d){if(d===undefined)return undefined;return new PropertyDescriptor(d)}function equalDescriptors(d1,d2){if(d1.writable!==d2.writable)return false;
if(d1.enumerable!==d2.enumerable)return false;if(d1.configurable!==d2.configurable)return false;if(d1.value!==undefined)if(d2.value===undefined)return false;if(d1.get!==d2.get)return false;if(d1.set!==d2.set)return false;return true}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.HasName=HasName;exports.HasProperty=HasProperty;exports.HasOwnProperty=HasOwnProperty;exports.OrdinaryHasProperty=OrdinaryHasProperty;exports.HasCompatibleType=
HasCompatibleType;exports.HasSomeCompatibleType=HasSomeCompatibleType;var _errors=__webpack_require__(3);var _index=__webpack_require__(232);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function HasName(realm,ast){if(ast.type==="ArrowFunctionExpression")return false;if(ast.type==="FunctionExpression"){if(ast.id===null)return false;
if(ast.id!==null)return true}if(ast.type==="ClassExpression"){if(ast.id===null)return false;if(ast.id!==null)return true}throw Error("Unexpected AST node type  : "+ast.type);}function HasProperty(realm,O,P){(0,_invariant.default)((0,_index.IsPropertyKey)(realm,P),"expected property key");return O.$HasProperty(P)}function HasOwnProperty(realm,O,P){(0,_invariant.default)((0,_index.IsPropertyKey)(realm,P),"not a valid property key");let desc=O.$GetOwnProperty(P);if(desc===undefined)return false;_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);
return true}function OrdinaryHasProperty(realm,O,P){(0,_invariant.default)(typeof P==="string"||(0,_index.IsPropertyKey)(realm,P),"expected property key");let hasOwn=O.$GetOwnProperty(P);if(hasOwn!==undefined){_singletons.Properties.ThrowIfMightHaveBeenDeleted(hasOwn);return true}let parent=O.$GetPrototypeOf();if(!(parent instanceof _index2.NullValue)){(0,_invariant.default)(parent instanceof _index2.ObjectValue);return parent.$HasProperty(P)}return false}function HasCompatibleType(value,type){let valueType=
value.getType();if(valueType===_index2.Value){(0,_invariant.default)(value instanceof _index2.AbstractValue);_index2.AbstractValue.reportIntrospectionError(value);throw new _errors.FatalError;}return _index2.Value.isTypeCompatibleWith(valueType,type)}function HasSomeCompatibleType(value,...manyTypes){let valueType=value.getType();if(valueType===_index2.Value){(0,_invariant.default)(value instanceof _index2.AbstractValue);_index2.AbstractValue.reportIntrospectionError(value);throw new _errors.FatalError;
}return manyTypes.some(_index2.Value.isTypeCompatibleWith.bind(null,valueType))}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.Day=Day;exports.TimeWithinDay=TimeWithinDay;exports.DaysInYear=DaysInYear;exports.DayFromYear=DayFromYear;exports.TimeFromYear=TimeFromYear;exports.YearFromTime=YearFromTime;exports.InLeapYear=InLeapYear;exports.MonthFromTime=MonthFromTime;exports.DayWithinYear=DayWithinYear;exports.DateFromTime=DateFromTime;
exports.WeekDay=WeekDay;exports.DaylightSavingTA=DaylightSavingTA;exports.LocalTime=LocalTime;exports.UTC=UTC;exports.HourFromTime=HourFromTime;exports.MinFromTime=MinFromTime;exports.SecFromTime=SecFromTime;exports.msFromTime=msFromTime;exports.MakeTime=MakeTime;exports.MakeDay=MakeDay;exports.MakeDate=MakeDate;exports.TimeClip=TimeClip;exports.thisTimeValue=thisTimeValue;exports.ToDateString=ToDateString;exports.msPerDay=exports.msPerHour=exports.msPerMinute=exports.msPerSecond=exports.HoursPerDay=
exports.MinutesPerHour=exports.SecondsPerMinute=void 0;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const SecondsPerMinute=60;exports.SecondsPerMinute=SecondsPerMinute;const MinutesPerHour=60;exports.MinutesPerHour=MinutesPerHour;const HoursPerDay=24;exports.HoursPerDay=HoursPerDay;const msPerSecond=1E3;exports.msPerSecond=msPerSecond;
const msPerMinute=msPerSecond*SecondsPerMinute;exports.msPerMinute=msPerMinute;const msPerHour=msPerMinute*MinutesPerHour;exports.msPerHour=msPerHour;const msPerDay=msPerHour*HoursPerDay;exports.msPerDay=msPerDay;let LocalTZA=-(new Date(0)).getTimezoneOffset()*msPerMinute;function Day(realm,t){return Math.floor(t/msPerDay)}function TimeWithinDay(realm,t){return t%msPerDay}function DaysInYear(realm,y){if(y%4!==0)return 365;if(y%4===0&&y%100!==0)return 366;if(y%100===0&&y%400!==0)return 365;if(y%400===
0)return 366;(0,_invariant.default)(false,"Invalid condition")}function DayFromYear(realm,y){return 365*(y-1970)+Math.floor((y-1969)/4)-Math.floor((y-1901)/100)+Math.floor((y-1601)/400)}function TimeFromYear(realm,y){return msPerDay*DayFromYear(realm,y)}function YearFromTime(realm,t){let y=Math.floor(t/(msPerDay*365.2425))+1970;let t2=TimeFromYear(realm,y);if(t2>t)y--;else if(t2+msPerDay*DaysInYear(realm,y)<=t)y++;return y}function InLeapYear(realm,t){let daysInYear=DaysInYear(realm,YearFromTime(realm,
t));if(daysInYear===365)return 0;if(daysInYear===366)return 1;(0,_invariant.default)(false,"invalid condition")}function MonthFromTime(realm,t){let step;let d=DayWithinYear(realm,t);if(d<(step=31))return 0;step+=InLeapYear(realm,t)?29:28;if(d<step)return 1;if(d<(step+=31))return 2;if(d<(step+=30))return 3;if(d<(step+=31))return 4;if(d<(step+=30))return 5;if(d<(step+=31))return 6;if(d<(step+=31))return 7;if(d<(step+=30))return 8;if(d<(step+=31))return 9;if(d<(step+=30))return 10;return 11}function DayWithinYear(realm,
t){return Day(realm,t)-DayFromYear(realm,YearFromTime(realm,t))}function DateFromTime(realm,t){let step;let next;let d=DayWithinYear(realm,t);if(d<=(next=30))return d+1;step=next;next+=InLeapYear(realm,t)?29:28;if(d<=next)return d-step;step=next;if(d<=(next+=31))return d-step;step=next;if(d<=(next+=30))return d-step;step=next;if(d<=(next+=31))return d-step;step=next;if(d<=(next+=30))return d-step;step=next;if(d<=(next+=31))return d-step;step=next;if(d<=(next+=31))return d-step;step=next;if(d<=(next+=
30))return d-step;step=next;if(d<=(next+=31))return d-step;step=next;if(d<=(next+=30))return d-step;step=next;return d-step}function WeekDay(realm,t){return(Day(realm,t)+4)%7}function DaylightSavingTA(realm,t){return 0}function LocalTime(realm,t){return t+LocalTZA+DaylightSavingTA(realm,t)}function UTC(realm,_t){let t=_t;if(t instanceof _index.Value)t=t.throwIfNotConcreteNumber().value;return new _index.NumberValue(realm,t-LocalTZA-DaylightSavingTA(realm,t-LocalTZA))}function HourFromTime(realm,t){return Math.floor(t/
msPerHour)%HoursPerDay}function MinFromTime(realm,t){return Math.floor(t/msPerMinute)%MinutesPerHour}function SecFromTime(realm,t){return Math.floor(t/msPerSecond)%SecondsPerMinute}function msFromTime(realm,t){return t%msPerSecond}function MakeTime(realm,hour,min,sec,ms){if(!isFinite(hour)||!isFinite(min)||!isFinite(sec)||!isFinite(ms))return NaN;let h=_singletons.To.ToInteger(realm,new _index.NumberValue(realm,hour));let m=_singletons.To.ToInteger(realm,new _index.NumberValue(realm,min));let s=_singletons.To.ToInteger(realm,
new _index.NumberValue(realm,sec));let milli=_singletons.To.ToInteger(realm,new _index.NumberValue(realm,ms));let t=h*msPerHour+m*msPerMinute+s*msPerSecond+milli;return t}function MakeDay(realm,year,month,date){if(!isFinite(year)||!isFinite(month)||!isFinite(date))return NaN;let y=_singletons.To.ToInteger(realm,new _index.NumberValue(realm,year));let m=_singletons.To.ToInteger(realm,new _index.NumberValue(realm,month));let dt=_singletons.To.ToInteger(realm,new _index.NumberValue(realm,date));let ym=
y+Math.floor(m/12);let mn=m<0?m%12+12:m%12;if(Math.abs(ym)>=1E6||Math.abs(mn)>=1E6)return NaN;const yearDelta=399999;const baseDay=365*(1970+yearDelta)+Math.floor((1970+yearDelta)/4)-Math.floor((1970+yearDelta)/100)+Math.floor((1970+yearDelta)/400);let t=365*(ym+yearDelta)+Math.floor((ym+yearDelta)/4)-Math.floor((ym+yearDelta)/100)+Math.floor((ym+yearDelta)/400)-baseDay;if(ym%4!==0||ym%100===0&&ym%400!==0)t+=[0,31,59,90,120,151,181,212,243,273,304,334][mn];else t+=[0,31,60,91,121,152,182,213,244,
274,305,335][mn];return t+dt-1}function MakeDate(realm,day,time){if(!isFinite(day)||!isFinite(time))return NaN;return day*msPerDay+time}function TimeClip(realm,_time){let time=_time;if(time instanceof _index.Value)time=time.throwIfNotConcreteNumber().value;if(!isFinite(time))return realm.intrinsics.NaN;if(Math.abs(time)>864E13)return realm.intrinsics.NaN;let clippedTime=_singletons.To.ToInteger(realm,new _index.NumberValue(realm,time));if(Object.is(clippedTime,-0))clippedTime=+0;return new _index.NumberValue(realm,
clippedTime)}function thisTimeValue(realm,value){if(value instanceof _index.ObjectValue&&value.$DateValue!==undefined)return value.$DateValue;throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}function ToDateString(realm,tv){(0,_invariant.default)(typeof tv==="number","expected tv to be a number");if(isNaN(tv))return"Invalid Date";return(new Date(tv)).toString()}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.hashBinary=
hashBinary;exports.hashCall=hashCall;exports.hashTernary=hashTernary;exports.hashString=hashString;exports.hashUnary=hashUnary;exports.HashSet=void 0;var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function hashBinary(op,x,y){let xHash=x.getHash();let yHash=y.getHash();if(yHash<xHash){let commutative;switch(op){case "*":case "==":case "!=":case "===":case "!==":commutative=!(x.mightBeObject()&&y.mightBeObject());
break;case "+":commutative=!(x.mightBeObject()&&y.mightBeObject())&&!(x.mightBeString()||y.mightBeString());break;default:commutative=false;break}if(commutative){[x,y]=[y,x];[xHash,yHash]=[yHash,xHash]}}let hash=(hashString(op)*13^xHash)*13^yHash;return[hash,[x,y]]}function hashCall(calleeName,...args){let hash=hashString(calleeName);for(let a of args)hash=hash*13^a.getHash();return[hash,args]}function hashTernary(x,y,z){let hash=(x.getHash()*13^y.getHash())*13^z.getHash();return[hash,[x,y,z]]}function hashString(value){let hash=
5381;for(let i=value.length-1;i>=0;i--)hash=hash*33^value.charCodeAt(i);return hash}function hashUnary(op,x){return hashString(op)*13^x.getHash()}class HashSet{constructor(expectedEntries=32*1024){let initialSize=16;expectedEntries*=2;while(initialSize<expectedEntries)initialSize*=2;this._entries=new Array(initialSize);this._count=0}add(e){let entries=this._entries;let n=entries.length;let key=e.getHash();let i=key&n-1;while(true){let entry=entries[i];if(entry===undefined){entries[i]=e;if(++this._count>
n/2)this.expand();return e}else if(e.equals(entry))return entry;if(++i>=n)i=0}(0,_invariant.default)(false)}expand(){let oldEntries=this._entries;let n=oldEntries.length;let m=n*2;if(m<=0)return;let entries=new Array(m);for(let i=0;i<n;i++){let oldEntry=oldEntries[i];if(oldEntry===undefined)continue;let key=oldEntry.getHash();let j=key&m-1;while(true){let entry=entries[j];if(entry===undefined){entries[j]=oldEntry;break}if(++j>=m)j=0}}this._entries=entries}}exports.HashSet=HashSet},function(module,
exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.GetIterator=GetIterator;exports.IteratorStep=IteratorStep;exports.IteratorValue=IteratorValue;exports.IteratorComplete=IteratorComplete;exports.IteratorNext=IteratorNext;exports.CreateListIterator=CreateListIterator;exports.CreateMapIterator=CreateMapIterator;exports.CreateSetIterator=CreateSetIterator;exports.IteratorClose=IteratorClose;exports.IterableToList=IterableToList;var _completions=__webpack_require__(18);
var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));var _abstract=__webpack_require__(233);var _singletons=__webpack_require__(236);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function GetIterator(realm,obj=realm.intrinsics.undefined,_method){let method=_method;if(!method)method=(0,_index2.GetMethod)(realm,obj,realm.intrinsics.SymbolIterator);let iterator=(0,_index2.Call)(realm,
method,obj);if(!(iterator instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return iterator}function IteratorStep(realm,iterator){let result=IteratorNext(realm,iterator);let done=IteratorComplete(realm,result);if(done)return false;return result}function IteratorValue(realm,iterResult){(0,_invariant.default)(iterResult instanceof _index.ObjectValue,"expected obj");return(0,_index2.Get)(realm,iterResult,"value")}function IteratorComplete(realm,iterResult){(0,
_invariant.default)(iterResult instanceof _index.ObjectValue,"expected obj");return _singletons.To.ToBooleanPartial(realm,(0,_index2.Get)(realm,iterResult,"done"))}function IteratorNext(realm,iterator,value){let result;if(!value)result=(0,_index2.Invoke)(realm,iterator,"next",[]);else result=(0,_index2.Invoke)(realm,iterator,"next",[value]);if(!(result instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return result}function CreateListIterator(realm,
list){let iterator=_singletons.Create.ObjectCreate(realm,realm.intrinsics.IteratorPrototype,{$IteratorNext:undefined,$IteratedList:undefined,$ListIteratorNextIndex:undefined});iterator.$IteratedList=list;iterator.$ListIteratorNextIndex=0;let next=ListIterator_next(realm);iterator.$IteratorNext=next;_singletons.Create.CreateMethodProperty(realm,iterator,new _index.StringValue(realm,"next"),next);return iterator}function ListIterator_next(realm){let func=new _index.NativeFunctionValue(realm,undefined,
"next",0,(context)=>{(0,_invariant.default)(context instanceof _index.ObjectValue);let O=context;let f=func;if(!O.$IteratorNext)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have an [[IteratorNext]] internal slot");let next=O.$IteratorNext;if(!(0,_abstract.SameValue)(realm,f,next))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!O.$IteratedList)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have an [[IteratedList]] internal slot");
let list=O.$IteratedList;(0,_invariant.default)(typeof O.$ListIteratorNextIndex==="number");let index=O.$ListIteratorNextIndex;let len=list.length;if(index>=len)return _singletons.Create.CreateIterResultObject(realm,realm.intrinsics.undefined,true);O.$ListIteratorNextIndex=index+1;return _singletons.Create.CreateIterResultObject(realm,list[index],false)});return func}function CreateMapIterator(realm,map,kind){if(!(map instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
if(!map.$MapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let iterator=_singletons.Create.ObjectCreate(realm,realm.intrinsics.MapIteratorPrototype,{$Map:undefined,$MapNextIndex:undefined,$MapIterationKind:undefined});iterator.$Map=map;iterator.$MapNextIndex=new _index.NumberValue(realm,0);iterator.$MapIterationKind=kind;return iterator}function CreateSetIterator(realm,set,kind){if(!(set instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
if(!set.$SetData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let iterator=_singletons.Create.ObjectCreate(realm,realm.intrinsics.SetIteratorPrototype,{$IteratedSet:undefined,$SetNextIndex:undefined,$SetIterationKind:undefined});iterator.$IteratedSet=set;iterator.$SetNextIndex=0;iterator.$SetIterationKind=kind;return iterator}function IteratorClose(realm,iterator,completion){(0,_invariant.default)(iterator instanceof _index.ObjectValue,"expected object");(0,_invariant.default)(completion instanceof
_completions.Completion,"expected completion record");let ret=(0,_index2.GetMethod)(realm,iterator,"return");if(ret instanceof _index.UndefinedValue)return completion;let innerResult;try{innerResult=(0,_index2.Call)(realm,ret.throwIfNotConcrete(),iterator,[])}catch(error){if(error instanceof _completions.AbruptCompletion)innerResult=error;else throw error;}if(completion instanceof _completions.ThrowCompletion)return completion;if(innerResult instanceof _completions.ThrowCompletion)return innerResult;
if(!(innerResult instanceof _index.ObjectValue))return realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return completion}function IterableToList(realm,items,method){let iterator=GetIterator(realm,items,method);let values=[];let next=true;while(next!==false){next=IteratorStep(realm,iterator);if(next!==false){let nextValue=IteratorValue(realm,next);values.push(nextValue)}}return values}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});
exports.GetOwnPropertyKeys=GetOwnPropertyKeys;exports.OrdinaryOwnPropertyKeys=OrdinaryOwnPropertyKeys;exports.EnumerableOwnProperties=EnumerableOwnProperties;var _index=__webpack_require__(232);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function GetOwnPropertyKeys(realm,O,Type){let obj=_singletons.To.ToObject(realm,O);let keys=
obj.$OwnPropertyKeys();let nameList=[];for(let nextKey of keys)if(nextKey instanceof Type)nameList.push(nextKey);return _singletons.Create.CreateArrayFromList(realm,nameList)}function OrdinaryOwnPropertyKeys(realm,o,getOwnPropertyKeysEvenIfPartial=false){let keys=[];let properties=_singletons.Properties.GetOwnPropertyKeysArray(realm,o,false,getOwnPropertyKeysEvenIfPartial);for(let key of properties.filter((x)=>(0,_index.IsArrayIndex)(realm,x)).map((x)=>parseInt(x,10)).sort((x,y)=>x-y))keys.push(new _index2.StringValue(realm,
key+""));for(let key of properties.filter((x)=>!(0,_index.IsArrayIndex)(realm,x)))keys.push(new _index2.StringValue(realm,key));for(let key of o.symbols.keys())keys.push(key);return keys}function EnumerableOwnProperties(realm,O,kind,getOwnPropertyKeysEvenIfPartial=false){(0,_invariant.default)(O instanceof _index2.ObjectValue,"expected object");let ownKeys=O.$OwnPropertyKeys(getOwnPropertyKeysEvenIfPartial);let properties=[];for(let key of ownKeys)if(key instanceof _index2.StringValue){let desc=O.$GetOwnProperty(key);
if(desc&&desc.throwIfNotConcrete(realm).enumerable){_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);if(kind==="key")properties.push(key);else{let value=(0,_index.Get)(realm,O,key);if(kind==="value")properties.push(value);else{(0,_invariant.default)(kind==="key+value","expected kind to be key+value");let entry=_singletons.Create.CreateArrayFromList(realm,[key,value]);properties.push(entry)}}}}return properties}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.DestructuringAssignmentEvaluation=DestructuringAssignmentEvaluation;exports.IteratorDestructuringAssignmentEvaluation=IteratorDestructuringAssignmentEvaluation;exports.KeyedDestructuringAssignmentEvaluation=KeyedDestructuringAssignmentEvaluation;var _invariant=_interopRequireDefault(__webpack_require__(9));var _environment=__webpack_require__(20);var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _ObjectExpression=__webpack_require__(275);var _index2=
__webpack_require__(232);var _singletons=__webpack_require__(236);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function RestDestructuringAssignmentEvaluation(realm,property,value,excludedNames,strictCode,env){let DestructuringAssignmentTarget=property.argument;let lref;if(DestructuringAssignmentTarget.type!=="ObjectPattern"&&DestructuringAssignmentTarget.type!=="ArrayPattern")lref=env.evaluate(DestructuringAssignmentTarget,strictCode);let restObj=_singletons.Create.ObjectCreate(realm,
realm.intrinsics.ObjectPrototype);_singletons.Create.CopyDataProperties(realm,restObj,value,excludedNames);if(DestructuringAssignmentTarget.type!=="ObjectPattern"&&DestructuringAssignmentTarget.type!=="ArrayPattern"){(0,_invariant.default)(lref);return _singletons.Properties.PutValue(realm,lref,restObj)}let nestedAssignmentPattern=DestructuringAssignmentTarget;return DestructuringAssignmentEvaluation(realm,nestedAssignmentPattern,restObj,strictCode,env)}function PropertyDestructuringAssignmentEvaluation(realm,
properties,value,strictCode,env){if(properties.length===0)return[];let AssignmentProperty=properties.slice(-1)[0];let AssignmentPropertyList=properties.slice(0,-1);let propertyNames=PropertyDestructuringAssignmentEvaluation(realm,AssignmentPropertyList,value,strictCode,env);let nextNames;if(AssignmentProperty.key.type==="Identifier"&&(AssignmentProperty.value.type==="Identifier"&&AssignmentProperty.value.name===AssignmentProperty.key.name||AssignmentProperty.value.type==="AssignmentPattern"&&AssignmentProperty.value.left.name===
AssignmentProperty.key.name)&&AssignmentProperty.computed===false){let Initializer;if(AssignmentProperty.value.type==="AssignmentPattern")Initializer=AssignmentProperty.value.right;let P=AssignmentProperty.key.name;let lref=_singletons.Environment.ResolveBinding(realm,P,strictCode,env);let v=(0,_index2.GetV)(realm,value,P);if(Initializer!==undefined&&v instanceof _index.UndefinedValue){let defaultValue=env.evaluate(Initializer,strictCode);v=_singletons.Environment.GetValue(realm,defaultValue);if((0,
_index2.IsAnonymousFunctionDefinition)(realm,Initializer)){(0,_invariant.default)(v instanceof _index.ObjectValue);let hasNameProperty=(0,_index2.HasOwnProperty)(realm,v,"name");if(hasNameProperty===false)_singletons.Functions.SetFunctionName(realm,v,P)}}_singletons.Properties.PutValue(realm,lref,v);nextNames=[new _index.StringValue(realm,P)]}else{let name=(0,_ObjectExpression.EvalPropertyName)(AssignmentProperty,env,realm,strictCode);KeyedDestructuringAssignmentEvaluation(realm,AssignmentProperty.value,
value,name,strictCode,env);nextNames=[name]}(0,_invariant.default)(nextNames instanceof Array);propertyNames=propertyNames.concat(nextNames);return propertyNames}function DestructuringAssignmentEvaluation(realm,pattern,value,strictCode,env){if(pattern.type==="ObjectPattern"){let AssignmentPropertyList=[],AssignmentRestElement=null;for(let property of pattern.properties)if(property.type==="RestElement")AssignmentRestElement=property;else AssignmentPropertyList.push(property);if(!AssignmentRestElement){(0,
_index2.RequireObjectCoercible)(realm,value);PropertyDestructuringAssignmentEvaluation(realm,AssignmentPropertyList,value,strictCode,env);return realm.intrinsics.empty}if(AssignmentPropertyList.length===0){let excludedNames=[];return RestDestructuringAssignmentEvaluation(realm,AssignmentRestElement,value,excludedNames,strictCode,env)}else{let excludedNames=PropertyDestructuringAssignmentEvaluation(realm,AssignmentPropertyList,value,strictCode,env);return RestDestructuringAssignmentEvaluation(realm,
AssignmentRestElement,value,excludedNames,strictCode,env)}}else if(pattern.type==="ArrayPattern"){let iterator=(0,_index2.GetIterator)(realm,value);let iteratorRecord={$Iterator:iterator,$Done:false};let result;try{result=IteratorDestructuringAssignmentEvaluation(realm,pattern.elements,iteratorRecord,strictCode,env)}catch(error){if(iteratorRecord.$Done===false&&error instanceof _completions.AbruptCompletion)throw(0,_index2.IteratorClose)(realm,iterator,error);throw error;}if(iteratorRecord.$Done===
false){let completion=(0,_index2.IteratorClose)(realm,iterator,new _completions.SimpleNormalCompletion(realm.intrinsics.undefined));if(completion instanceof _completions.AbruptCompletion)throw completion;}return result}}function IteratorDestructuringAssignmentEvaluation(realm,_elements,iteratorRecord,strictCode,env){let elements=_elements;let restEl;if(elements.length>0){let lastEl=elements[elements.length-1];if(lastEl!==null&&lastEl.type==="RestElement"){restEl=lastEl;elements=elements.slice(0,-1)}}for(let element of elements){if(element===
null){if(iteratorRecord.$Done===false){let next;try{next=(0,_index2.IteratorStep)(realm,iteratorRecord.$Iterator)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}if(next===false)iteratorRecord.$Done=true}continue}let DestructuringAssignmentTarget;let Initializer;if(element.type==="AssignmentPattern"){Initializer=element.right;DestructuringAssignmentTarget=element.left}else DestructuringAssignmentTarget=element;let lref;if(DestructuringAssignmentTarget.type!==
"ObjectPattern"&&DestructuringAssignmentTarget.type!=="ArrayPattern")lref=env.evaluate(DestructuringAssignmentTarget,strictCode);let value;if(iteratorRecord.$Done===false){let next;try{next=(0,_index2.IteratorStep)(realm,iteratorRecord.$Iterator)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}if(next===false){iteratorRecord.$Done=true;value=realm.intrinsics.undefined}else try{value=(0,_index2.IteratorValue)(realm,next)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=
true;throw e;}}else value=realm.intrinsics.undefined;let v;if(Initializer&&value instanceof _index.UndefinedValue){let defaultValue=env.evaluate(Initializer,strictCode);v=_singletons.Environment.GetValue(realm,defaultValue)}else v=value;if(DestructuringAssignmentTarget.type==="ObjectPattern"||DestructuringAssignmentTarget.type==="ArrayPattern"){let nestedAssignmentPattern=DestructuringAssignmentTarget;DestructuringAssignmentEvaluation(realm,nestedAssignmentPattern,v,strictCode,env);continue}(0,_invariant.default)(lref);
if(Initializer&&value instanceof _index.UndefinedValue&&(0,_index2.IsAnonymousFunctionDefinition)(realm,Initializer)&&(0,_index2.IsIdentifierRef)(realm,DestructuringAssignmentTarget)&&v instanceof _index.ObjectValue){let hasNameProperty=(0,_index2.HasOwnProperty)(realm,v,"name");if(hasNameProperty===false){(0,_invariant.default)(lref instanceof _environment.Reference);_singletons.Functions.SetFunctionName(realm,v,_singletons.Environment.GetReferencedName(realm,lref))}}_singletons.Properties.PutValue(realm,
lref,v);continue}if(restEl){let DestructuringAssignmentTarget=restEl.argument;let lref;if(DestructuringAssignmentTarget.type!=="ObjectPattern"&&DestructuringAssignmentTarget.type!=="ArrayPattern")lref=env.evaluate(DestructuringAssignmentTarget,strictCode);let A=_singletons.Create.ArrayCreate(realm,0);let n=0;while(iteratorRecord.$Done===false){let next;try{next=(0,_index2.IteratorStep)(realm,iteratorRecord.$Iterator)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;
throw e;}if(next===false)iteratorRecord.$Done=true;else{let nextValue;try{nextValue=(0,_index2.IteratorValue)(realm,next)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}let status=_singletons.Create.CreateDataProperty(realm,A,n.toString(),nextValue);(0,_invariant.default)(status,"expected to create data property");n+=1}}if(DestructuringAssignmentTarget.type!=="ObjectPattern"&&DestructuringAssignmentTarget.type!=="ArrayPattern"){(0,_invariant.default)(lref);
return _singletons.Properties.PutValue(realm,lref,A)}else{let nestedAssignmentPattern=DestructuringAssignmentTarget;return DestructuringAssignmentEvaluation(realm,nestedAssignmentPattern,A,strictCode,env)}}}function KeyedDestructuringAssignmentEvaluation(realm,node,value,propertyName,strictCode,env){let DestructuringAssignmentTarget;let Initializer;if(node.type==="AssignmentPattern"){Initializer=node.right;DestructuringAssignmentTarget=node.left}else DestructuringAssignmentTarget=node;let lref;if(DestructuringAssignmentTarget.type!==
"ObjectPattern"&&DestructuringAssignmentTarget.type!=="ArrayPattern")lref=env.evaluate(DestructuringAssignmentTarget,strictCode);let rhsValue;let v=(0,_index2.GetV)(realm,value,propertyName);if(Initializer&&v instanceof _index.UndefinedValue){let defaultValue=env.evaluate(Initializer,strictCode);rhsValue=_singletons.Environment.GetValue(realm,defaultValue)}else rhsValue=v;if(DestructuringAssignmentTarget.type==="ObjectPattern"||DestructuringAssignmentTarget.type==="ArrayPattern"){let assignmentPattern=
DestructuringAssignmentTarget;return DestructuringAssignmentEvaluation(realm,assignmentPattern,rhsValue,strictCode,env)}(0,_invariant.default)(lref);if(Initializer&&v instanceof _index.UndefinedValue&&(0,_index2.IsAnonymousFunctionDefinition)(realm,Initializer)&&(0,_index2.IsIdentifierRef)(realm,DestructuringAssignmentTarget)&&rhsValue instanceof _index.ObjectValue){let hasNameProperty=(0,_index2.HasOwnProperty)(realm,rhsValue,"name");if(hasNameProperty===false){(0,_invariant.default)(lref instanceof
_environment.Reference);_singletons.Functions.SetFunctionName(realm,rhsValue,_singletons.Environment.GetReferencedName(realm,lref))}}return _singletons.Properties.PutValue(realm,lref,rhsValue)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.EvalPropertyName=EvalPropertyName;exports.default=_default;var _errors=__webpack_require__(3);var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);
var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function EvalPropertyName(prop,env,realm,strictCode){let result=EvalPropertyNamePartial(prop,env,realm,strictCode);if(result instanceof _index.AbstractValue){let error=new _errors.CompilerDiagnostic("unknown computed property name",prop.loc,"PP0014","FatalError");realm.handleError(error);throw new _errors.FatalError;}return result}function EvalPropertyNamePartial(prop,
env,realm,strictCode){if(prop.computed){let propertyKeyName=_singletons.Environment.GetValue(realm,env.evaluate(prop.key,strictCode));if(propertyKeyName instanceof _index.AbstractValue)return propertyKeyName;(0,_invariant.default)(propertyKeyName instanceof _index.ConcreteValue);return _singletons.To.ToPropertyKey(realm,propertyKeyName)}else if(prop.key.type==="Identifier")return new _index.StringValue(realm,prop.key.name);else{let propertyKeyName=_singletons.Environment.GetValue(realm,env.evaluate(prop.key,
strictCode));(0,_invariant.default)(propertyKeyName instanceof _index.ConcreteValue);return _singletons.To.ToString(realm,propertyKeyName)}}function _default(ast,strictCode,env,realm){let obj=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);for(let prop of ast.properties)if(prop.type==="ObjectProperty"){let propKey=EvalPropertyNamePartial(prop,env,realm,strictCode);let exprValueRef=env.evaluate(prop.value,strictCode);let propValue=_singletons.Environment.GetValue(realm,exprValueRef);
if((0,_index2.IsAnonymousFunctionDefinition)(realm,prop.value)){(0,_invariant.default)(propValue instanceof _index.ObjectValue);let hasNameProperty=(0,_index2.HasOwnProperty)(realm,propValue,"name");(0,_invariant.default)(!hasNameProperty);_singletons.Functions.SetFunctionName(realm,propValue,propKey)}if(propKey instanceof _index.AbstractValue){if(propKey.mightNotBeString()){let error=new _errors.CompilerDiagnostic("property key value is unknown",prop.loc,"PP0011","FatalError");if(realm.handleError(error)===
"Fail")throw new _errors.FatalError;continue}obj.$SetPartial(propKey,propValue,obj)}else _singletons.Create.CreateDataPropertyOrThrow(realm,obj,propKey,propValue)}else if(prop.type==="SpreadElement"){let exprValue=env.evaluate(prop.argument,strictCode);let fromValue=_singletons.Environment.GetValue(realm,exprValue);let excludedNames=[];_singletons.Create.CopyDataProperties(realm,obj,fromValue,excludedNames)}else{(0,_invariant.default)(prop.type==="ObjectMethod");_singletons.Properties.PropertyDefinitionEvaluation(realm,
prop,obj,env,strictCode,true)}return obj}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.RegExpCreate=RegExpCreate;exports.RegExpAlloc=RegExpAlloc;exports.RegExpInitialize=RegExpInitialize;exports.RegExpExec=RegExpExec;exports.RegExpBuiltinExec=RegExpBuiltinExec;exports.AdvanceStringIndex=AdvanceStringIndex;exports.EscapeRegExpPattern=EscapeRegExpPattern;var _invariant=_interopRequireDefault(__webpack_require__(9));var _index=__webpack_require__(10);
var _get=__webpack_require__(230);var _is=__webpack_require__(229);var _call=__webpack_require__(234);var _has=__webpack_require__(269);var _singletons=__webpack_require__(236);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function RegExpCreate(realm,P,F){let obj=RegExpAlloc(realm,realm.intrinsics.RegExp);return RegExpInitialize(realm,obj,P,F)}function RegExpAlloc(realm,newTarget){let obj=_singletons.Create.OrdinaryCreateFromConstructor(realm,
newTarget,"RegExpPrototype",{$RegExpMatcher:undefined,$OriginalSource:undefined,$OriginalFlags:undefined});_singletons.Properties.DefinePropertyOrThrow(realm,obj,"lastIndex",new _descriptors.PropertyDescriptor({writable:true,enumerable:false,configurable:false}));return obj}function RegExpInitialize(realm,obj,pattern,flags){(0,_invariant.default)(realm.isNewObject(obj));let P;if(!pattern||(0,_has.HasCompatibleType)(pattern,_index.UndefinedValue))P="";else P=_singletons.To.ToStringPartial(realm,pattern);
let F;if(!flags||(0,_has.HasCompatibleType)(flags,_index.UndefinedValue))F="";else F=_singletons.To.ToStringPartial(realm,flags);for(let i=0;i<F.length;++i){if("gimuy".indexOf(F.charAt(i))<0)throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,"invalid RegExp flag");for(let j=i+1;j<F.length;++j)if(F.charAt(i)===F.charAt(j))throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,"duplicate RegExp flag");}let BMP=F.indexOf("u")>=0?false:true;if(BMP);else;obj.$OriginalSource=
P;obj.$OriginalFlags=F;try{let computedFlags="y";if(F.indexOf("i")>=0)computedFlags+="i";if(F.indexOf("u")>=0)computedFlags+="u";if(F.indexOf("m")>=0)computedFlags+="m";let matcher=new RegExp(P,computedFlags);obj.$RegExpMatcher=(S,lastIndex)=>{matcher.lastIndex=lastIndex;let match=matcher.exec(S);if(!match)return null;return{endIndex:match.index+match[0].length,captures:match}}}catch(e){if(e instanceof SyntaxError)throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,"invalid RegExp");
else throw e;}_singletons.Properties.Set(realm,obj,"lastIndex",realm.intrinsics.zero,true);return obj}function RegExpExec(realm,R,S){(0,_invariant.default)(R instanceof _index.ObjectValue,"Type(R) is Object");(0,_invariant.default)(typeof S==="string","Type(S) is String");let exec=(0,_get.Get)(realm,R,"exec");if((0,_is.IsCallable)(realm,exec)){let result=(0,_call.Call)(realm,exec,R,[new _index.StringValue(realm,S)]);if(!(0,_has.HasSomeCompatibleType)(result,_index.ObjectValue,_index.NullValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"Type(result) is neither Object or Null");return result.throwIfNotConcrete()}if(R.$RegExpMatcher===undefined)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"R does not have a [[RegExpMatcher]] internal slot");return RegExpBuiltinExec(realm,R,S)}function RegExpBuiltinExec(realm,R,S){(0,_invariant.default)(R.$RegExpMatcher!==undefined&&R.$OriginalSource!==undefined&&R.$OriginalFlags!==undefined,"R is an initialized RegExp instance");(0,_invariant.default)(typeof S==="string","Type(S) is String");
let length=S.length;let lastIndex=_singletons.To.ToLength(realm,(0,_get.Get)(realm,R,"lastIndex"));let flags=R.$OriginalFlags;(0,_invariant.default)(typeof flags==="string");let global=flags.indexOf("g")>=0?true:false;let sticky=flags.indexOf("y")>=0?true:false;if(global===false&&sticky===false)lastIndex=0;let matcher=R.$RegExpMatcher;(0,_invariant.default)(matcher!==undefined);let fullUnicode=flags.indexOf("u")>=0?true:false;let matchSucceeded=false;let r=null;while(!matchSucceeded){if(lastIndex>
length){_singletons.Properties.Set(realm,R,"lastIndex",realm.intrinsics.zero,true);return realm.intrinsics.null}r=matcher(S,lastIndex);if(r==null){if(sticky){_singletons.Properties.Set(realm,R,"lastIndex",realm.intrinsics.zero,true);return realm.intrinsics.null}lastIndex=AdvanceStringIndex(realm,S,lastIndex,fullUnicode)}else{(0,_invariant.default)(r,"r is a State");matchSucceeded=true;lastIndex=r.captures.index}}(0,_invariant.default)(r!=null);let e=r.endIndex;if(fullUnicode);if(global===true||sticky===
true)_singletons.Properties.Set(realm,R,"lastIndex",new _index.NumberValue(realm,e),true);let n=r.captures.length-1;let A=_singletons.Create.ArrayCreate(realm,n+1);let lengthOfA=(0,_get.Get)(realm,A,"length").throwIfNotConcrete();(0,_invariant.default)(lengthOfA instanceof _index.NumberValue);(0,_invariant.default)(lengthOfA.value===n+1,'The value of A\'s "length" property is n + 1');let matchIndex=lastIndex;_singletons.Create.CreateDataProperty(realm,A,"index",new _index.NumberValue(realm,matchIndex));
_singletons.Create.CreateDataProperty(realm,A,"input",new _index.StringValue(realm,S));let matchedSubstr=S.substr(lastIndex,e-lastIndex);_singletons.Create.CreateDataProperty(realm,A,"0",new _index.StringValue(realm,matchedSubstr));for(let i=1;i<=n;++i){let captureI=r.captures[i];let capturedValue;if(captureI===undefined)capturedValue=realm.intrinsics.undefined;else if(fullUnicode)capturedValue=realm.intrinsics.undefined;else{(0,_invariant.default)(typeof captureI==="string");capturedValue=new _index.StringValue(realm,
captureI)}_singletons.Create.CreateDataProperty(realm,A,_singletons.To.ToString(realm,new _index.NumberValue(realm,i)),capturedValue)}return A}function AdvanceStringIndex(realm,S,index,unicode){(0,_invariant.default)(typeof S==="string","Type(S) is String");(0,_invariant.default)(index>=0&&index<=Math.pow(2,53)-1,"index is an integer such that 0\u2264index\u2264253-1");(0,_invariant.default)(typeof unicode==="boolean","Type(unicode) is Boolean");if(unicode===false)return index+1;let length=S.length;
if(index+1>=length)return index+1;let first=S.charCodeAt(index);if(first<55296||first>56319)return index+1;let second=S.charCodeAt(index+1);if(second<56320||second>57343)return index+1;return index+2}function EscapeRegExpPattern(realm,P,F){return P.replace("/","/")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.EnqueueJob=EnqueueJob;exports.NewPromiseCapability=NewPromiseCapability;exports.PerformPromiseAll=PerformPromiseAll;exports.PerformPromiseRace=
PerformPromiseRace;exports.PerformPromiseThen=PerformPromiseThen;exports.PromiseReactionJob=PromiseReactionJob;exports.CreateResolvingFunctions=CreateResolvingFunctions;exports.FulfillPromise=FulfillPromise;exports.RejectPromise=RejectPromise;exports.TriggerPromiseReactions=TriggerPromiseReactions;exports.HostPromiseRejectionTracker=HostPromiseRejectionTracker;exports.PromiseResolveThenableJob=PromiseResolveThenableJob;var _completions=__webpack_require__(18);var _index=__webpack_require__(10);var _abstract=
__webpack_require__(233);var _construct=__webpack_require__(228);var _get=__webpack_require__(230);var _call=__webpack_require__(234);var _is=__webpack_require__(229);var _iterator=__webpack_require__(272);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function EnqueueJob(realm,queueName,job,args){}function NewPromiseCapability(realm,C){if((0,_is.IsConstructor)(realm,
C)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsConstructor(C) is false");(0,_invariant.default)(C instanceof _index.ObjectValue);let promiseCapability={promise:realm.intrinsics.undefined,resolve:realm.intrinsics.undefined,reject:realm.intrinsics.undefined};let executor=new _index.NativeFunctionValue(realm,undefined,undefined,2,(context,[resolve,reject])=>{(0,_invariant.default)(executor.$Capability,"F has a [[Capability]] internal slot whose value is a PromiseCapability Record");
(0,_invariant.default)(promiseCapability===executor.$Capability);if(!promiseCapability.resolve.mightBeUndefined())throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"promiseCapability.[[Resolve]] is not undefined");promiseCapability.resolve.throwIfNotConcrete();if(!promiseCapability.reject.mightBeUndefined())throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"promiseCapability.[[Reject]] is not undefined");promiseCapability.reject.throwIfNotConcrete();promiseCapability.resolve=
resolve;promiseCapability.reject=reject;return realm.intrinsics.undefined},false);executor.$Capability=promiseCapability;let promise=(0,_construct.Construct)(realm,C,[executor]).throwIfNotConcreteObject();if((0,_is.IsCallable)(realm,promiseCapability.resolve)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsCallable(promiseCapability.[[Resolve]]) is false");if((0,_is.IsCallable)(realm,promiseCapability.reject)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"IsCallable(promiseCapability.[[Reject]]) is false");promiseCapability.promise=promise;return promiseCapability}function createResolveElementFunction(realm){let resolveElement=new _index.NativeFunctionValue(realm,undefined,undefined,1,(context,[x])=>{let alreadyCalled=resolveElement.$AlreadyCalled;(0,_invariant.default)(alreadyCalled);if(alreadyCalled.value===true)return realm.intrinsics.undefined;alreadyCalled.value=true;let myIndex=resolveElement.$Index;(0,_invariant.default)(typeof myIndex==="number");
let values=resolveElement.$Values;(0,_invariant.default)(values instanceof Array);let promiseCapability=resolveElement.$Capabilities;(0,_invariant.default)(promiseCapability);let remainingElementsCount=resolveElement.$RemainingElements;(0,_invariant.default)(remainingElementsCount);values[myIndex]=x;remainingElementsCount.value=remainingElementsCount.value-1;if(remainingElementsCount.value===0){let valuesArray=_singletons.Create.CreateArrayFromList(realm,values);(0,_call.Call)(realm,promiseCapability.resolve,
realm.intrinsics.undefined,[valuesArray])}return realm.intrinsics.undefined},false);return resolveElement}function PerformPromiseAll(realm,iteratorRecord,constructor,resultCapability){(0,_invariant.default)(constructor instanceof _index.FunctionValue&&(0,_is.IsConstructor)(realm,constructor),"constructor is a constructor function");resultCapability;let values=[];let remainingElementsCount={value:1};let index=0;while(true){let next;try{next=(0,_iterator.IteratorStep)(realm,iteratorRecord.$Iterator)}catch(e){if(e instanceof
_completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}if(next===false){iteratorRecord.$Done=true;remainingElementsCount.value=remainingElementsCount.value-1;if(remainingElementsCount.value===0){let valuesArray=_singletons.Create.CreateArrayFromList(realm,values);(0,_call.Call)(realm,resultCapability.resolve,realm.intrinsics.undefined,[valuesArray])}return resultCapability.promise}let nextValue;try{nextValue=(0,_iterator.IteratorValue)(realm,next)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=
true;throw e;}values.push(realm.intrinsics.undefined);let nextPromise=(0,_call.Invoke)(realm,constructor,"resolve",[nextValue]);let resolveElement=createResolveElementFunction(realm);resolveElement.$AlreadyCalled={value:false};resolveElement.$Index=index;resolveElement.$Values=values;resolveElement.$Capabilities=resultCapability;resolveElement.$RemainingElements=remainingElementsCount;remainingElementsCount.value=remainingElementsCount.value+1;(0,_call.Invoke)(realm,nextPromise,"then",[resolveElement,
resultCapability.reject]);index=index+1}(0,_invariant.default)(false)}function PerformPromiseRace(realm,iteratorRecord,resultCapability,C){(0,_invariant.default)((0,_is.IsConstructor)(realm,C),"constructor is a constructor function");resultCapability;while(true){let next;try{next=(0,_iterator.IteratorStep)(realm,iteratorRecord.$Iterator)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}if(next===false){iteratorRecord.$Done=true;(0,_invariant.default)(resultCapability.promise instanceof
_index.ObjectValue);return resultCapability.promise}let nextValue;try{nextValue=(0,_iterator.IteratorValue)(realm,next)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}let nextPromise=(0,_call.Invoke)(realm,C,"resolve",[nextValue]);(0,_call.Invoke)(realm,nextPromise,"then",[resultCapability.resolve,resultCapability.reject])}(0,_invariant.default)(false)}function PerformPromiseThen(realm,promise,onFulfilled,onRejected,resultCapability){(0,_invariant.default)((0,
_is.IsPromise)(realm,promise),"IsPromise(promise) is true");resultCapability;if((0,_is.IsCallable)(realm,onFulfilled)===false)onFulfilled=new _index.StringValue(realm,"Identity");if((0,_is.IsCallable)(realm,onRejected))onRejected=new _index.StringValue(realm,"Thrower");let fulfillReaction={capabilities:resultCapability,handler:onFulfilled};let rejectReaction={capabilities:resultCapability,handler:onRejected};if(promise.$PromiseState==="pending"){_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,
promise,"$PromiseFulfillReactions");(0,_invariant.default)(promise.$PromiseFulfillReactions);promise.$PromiseFulfillReactions.push(fulfillReaction);_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,promise,"$PromiseRejectReactions");(0,_invariant.default)(promise.$PromiseRejectReactions);promise.$PromiseRejectReactions.push(rejectReaction)}else if(promise.$PromiseState==="fulfilled"){let value=promise.$PromiseResult;EnqueueJob(realm,"PromiseJobs",PromiseReactionJob,[fulfillReaction,value])}else{(0,
_invariant.default)(promise.$PromiseState==="rejected");let reason=promise.$PromiseResult;if(promise.$PromiseIsHandled===false)HostPromiseRejectionTracker(realm,promise,"handle");EnqueueJob(realm,"PromiseJobs",PromiseReactionJob,[rejectReaction,reason])}_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,promise,"$PromiseIsHandled").$PromiseIsHandled=true;(0,_invariant.default)(resultCapability.promise instanceof _index.ObjectValue);return resultCapability.promise}function PromiseReactionJob(realm,
reaction,argument){return realm.intrinsics.undefined}function createResolveFunction(realm){let resolve=new _index.NativeFunctionValue(realm,undefined,undefined,1,(context,[resolution])=>{(0,_invariant.default)(resolve.$Promise instanceof _index.ObjectValue,"F has a [[Promise]] internal slot whose value is an Object");let promise=resolve.$Promise;let alreadyResolved=resolve.$AlreadyResolved;(0,_invariant.default)(alreadyResolved!==undefined);if(alreadyResolved.value===true)return realm.intrinsics.undefined;
alreadyResolved.value=true;if((0,_abstract.SameValue)(realm,resolution.throwIfNotConcrete(),promise)){let selfResolutionError=(0,_construct.Construct)(realm,realm.intrinsics.TypeError,[new _index.StringValue(realm,"resolve")]);return RejectPromise(realm,promise,selfResolutionError)}if(!(resolution instanceof _index.ObjectValue))return FulfillPromise(realm,promise,resolution);let then;try{then=(0,_get.Get)(realm,resolution,"then")}catch(e){if(e instanceof _completions.AbruptCompletion)return RejectPromise(realm,
promise,e);else throw e;}let thenAction=then;if((0,_is.IsCallable)(realm,thenAction))return FulfillPromise(realm,promise,resolution);EnqueueJob(realm,"PromiseJobs",PromiseResolveThenableJob,[promise,resolution,thenAction]);return realm.intrinsics.undefined},false);return resolve}function createRejectFunction(realm){let reject=new _index.NativeFunctionValue(realm,undefined,undefined,1,(context,[reason])=>{(0,_invariant.default)(reject.$Promise instanceof _index.ObjectValue,"F has a [[Promise]] internal slot whose value is an Object");
let promise=reject.$Promise;let alreadyResolved=reject.$AlreadyResolved;(0,_invariant.default)(alreadyResolved!==undefined);if(alreadyResolved.value===true)return realm.intrinsics.undefined;alreadyResolved.value=true;return RejectPromise(realm,promise,reason)},false);return reject}function CreateResolvingFunctions(realm,promise){let alreadyResolved={value:false};let resolve=createResolveFunction(realm);resolve.$Promise=promise;resolve.$AlreadyResolved=alreadyResolved;let reject=createRejectFunction(realm);
reject.$Promise=promise;reject.$AlreadyResolved=alreadyResolved;return{resolve:resolve,reject:reject}}function FulfillPromise(realm,promise,value){(0,_invariant.default)(promise.$PromiseState==="pending");let reactions=promise.$PromiseFulfillReactions;(0,_invariant.default)(reactions);_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,promise,"$PromiseResult").$PromiseResult=value;_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,promise,"$PromiseFulfillReactions").$PromiseFulfillReactions=
undefined;_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,promise,"$PromiseRejectReactions").$PromiseRejectReactions=undefined;_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,promise,"$PromiseState").$PromiseState="fulfilled";return TriggerPromiseReactions(realm,reactions,value)}function RejectPromise(realm,promise,reason){(0,_invariant.default)(promise.$PromiseState==="pending");let reactions=promise.$PromiseFulfillReactions;(0,_invariant.default)(reactions);_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,
promise,"$PromiseResult").$PromiseResult=reason;_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,promise,"$PromiseFulfillReactions").$PromiseFulfillReactions=undefined;_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,promise,"$PromiseRejectReactions").$PromiseRejectReactions=undefined;_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,promise,"$PromiseState").$PromiseState="rejected";if(promise.$PromiseIsHandled===false)HostPromiseRejectionTracker(realm,promise,"reject");
return TriggerPromiseReactions(realm,reactions,reason)}function TriggerPromiseReactions(realm,reactions,argument){for(let reaction of reactions)EnqueueJob(realm,"PromiseJobs",PromiseReactionJob,[reaction,argument]);return realm.intrinsics.undefined}function HostPromiseRejectionTracker(realm,promise,operation){}function PromiseResolveThenableJob(realm,promiseToResolve,thenable,then){}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.CreateByteDataBlock=
CreateByteDataBlock;exports.CopyDataBlockBytes=CopyDataBlockBytes;exports.AllocateArrayBuffer=AllocateArrayBuffer;exports.DetachArrayBuffer=DetachArrayBuffer;exports.GetViewValue=GetViewValue;exports.GetValueFromBuffer=GetValueFromBuffer;exports.SetViewValue=SetViewValue;exports.CloneArrayBuffer=CloneArrayBuffer;exports.SetValueInBuffer=SetValueInBuffer;var _index=__webpack_require__(10);var _construct=__webpack_require__(228);var _index2=__webpack_require__(232);var _is=__webpack_require__(229);
var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _types=__webpack_require__(19);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function CreateByteDataBlock(realm,size){(0,_invariant.default)(size>=0,"size >= 0");let db;try{db=new Uint8Array(size)}catch(e){if(e instanceof RangeError)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"Invalid typed array length");else throw e;}for(let i=0;i<
size;++i)db[i]=0;return db}function CopyDataBlockBytes(realm,toBlock,_toIndex,fromBlock,_fromIndex,_count){let toIndex=_toIndex;let fromIndex=_fromIndex;let count=_count;(0,_invariant.default)(toBlock instanceof Uint8Array&&fromBlock instanceof Uint8Array&&toBlock!==fromBlock);(0,_invariant.default)(toIndex>=0&&fromIndex>=0&&count>=0);let fromSize=fromBlock.length;(0,_invariant.default)(fromIndex+count<=fromSize,"fromIndex+count \u2264 fromSize");let toSize=toBlock.length;(0,_invariant.default)(toIndex+
count<=toSize,"toIndex+count \u2264 toSize");while(count>0){toBlock[toIndex]=fromBlock[fromIndex];toIndex+=1;fromIndex+=1;count-=1}return realm.intrinsics.empty}function AllocateArrayBuffer(realm,constructor,byteLength){let obj=_singletons.Create.OrdinaryCreateFromConstructor(realm,constructor,"ArrayBufferPrototype",{$ArrayBufferData:undefined,$ArrayBufferByteLength:undefined});(0,_invariant.default)(typeof byteLength==="number"&&byteLength>=0,"byteLength is an integer value \u2265 0");let block=
CreateByteDataBlock(realm,byteLength);obj.$ArrayBufferData=block;obj.$ArrayBufferByteLength=byteLength;return obj}function DetachArrayBuffer(realm,arrayBuffer){(0,_invariant.default)(arrayBuffer instanceof _index.ObjectValue&&"$ArrayBufferData"in arrayBuffer&&"$ArrayBufferByteLength"in arrayBuffer);_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,arrayBuffer,"$ArrayBufferData").$ArrayBufferData=null;_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,arrayBuffer,"$ArrayBufferByteLength").$ArrayBufferByteLength=
0;return realm.intrinsics.null}function GetViewValue(realm,_view,requestIndex,isLittleEndian,type){let view=_view.throwIfNotConcrete();if(!(view instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(view) is not Object");if(!("$DataView"in view))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"view does not have a [[DataView]] internal slot");(0,_invariant.default)(view.$ViewedArrayBuffer);let getIndex=_singletons.To.ToIndexPartial(realm,
requestIndex);let littleEndian=_singletons.To.ToBooleanPartial(realm,isLittleEndian);let buffer=view.$ViewedArrayBuffer;(0,_invariant.default)(buffer);if((0,_is.IsDetachedBuffer)(realm,buffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(buffer) is true");let viewOffset=view.$ByteOffset;(0,_invariant.default)(typeof viewOffset==="number");let viewSize=view.$ByteLength;(0,_invariant.default)(typeof viewSize==="number");let elementSize=_types.ElementSize[type];
if(getIndex+elementSize>viewSize)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"getIndex + elementSize > viewSize");let bufferIndex=getIndex+viewOffset;return GetValueFromBuffer(realm,buffer,bufferIndex,type,littleEndian)}function GetValueFromBuffer(realm,arrayBuffer,byteIndex,type,_isLittleEndian){let isLittleEndian=_isLittleEndian;(0,_invariant.default)((0,_is.IsDetachedBuffer)(realm,arrayBuffer)===false);(0,_invariant.default)(arrayBuffer.$ArrayBufferData instanceof Uint8Array&&
byteIndex+_types.ElementSize[type]<=arrayBuffer.$ArrayBufferData.length);(0,_invariant.default)(byteIndex>=0);let block=arrayBuffer.$ArrayBufferData;(0,_invariant.default)(block instanceof Uint8Array);let elementSize=_types.ElementSize[type];let rawValue=new DataView(block.buffer,byteIndex,elementSize);if(isLittleEndian===undefined)isLittleEndian=true;if(type==="Float32")return new _index.NumberValue(realm,rawValue.getFloat32(0,isLittleEndian));if(type==="Float64")return new _index.NumberValue(realm,
rawValue.getFloat64(0,isLittleEndian));let intValue;if(type==="Uint8"||type==="Uint16"||type==="Uint32"||type==="Uint8Clamped")if(elementSize===1)intValue=rawValue.getUint8(0);else if(elementSize===2)intValue=rawValue.getUint16(0,isLittleEndian);else intValue=rawValue.getUint32(0,isLittleEndian);else if(elementSize===1)intValue=rawValue.getInt8(0);else if(elementSize===2)intValue=rawValue.getInt16(0,isLittleEndian);else intValue=rawValue.getInt32(0,isLittleEndian);return new _index.NumberValue(realm,
intValue)}function SetViewValue(realm,_view,requestIndex,isLittleEndian,type,value){let view=_view.throwIfNotConcrete();if(!(view instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(view) is not Object");if(!("$DataView"in view))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"view does not have a [[DataView]] internal slot");(0,_invariant.default)(view.$ViewedArrayBuffer);let getIndex=_singletons.To.ToIndexPartial(realm,requestIndex);
let numberValue=_singletons.To.ToNumber(realm,value);let littleEndian=_singletons.To.ToBooleanPartial(realm,isLittleEndian);let buffer=view.$ViewedArrayBuffer;(0,_invariant.default)(buffer);if((0,_is.IsDetachedBuffer)(realm,buffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(buffer) is true");let viewOffset=view.$ByteOffset;(0,_invariant.default)(typeof viewOffset==="number");let viewSize=view.$ByteLength;(0,_invariant.default)(typeof viewSize==="number");
let elementSize=_types.ElementSize[type];if(getIndex+elementSize>viewSize)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"getIndex + elementSize > viewSize");let bufferIndex=getIndex+viewOffset;return SetValueInBuffer(realm,buffer,bufferIndex,type,numberValue,littleEndian)}function CloneArrayBuffer(realm,srcBuffer,srcByteOffset,_cloneConstructor){let cloneConstructor=_cloneConstructor;(0,_invariant.default)(srcBuffer instanceof _index.ObjectValue&&srcBuffer.$ArrayBufferData);if(cloneConstructor===
undefined){cloneConstructor=(0,_construct.SpeciesConstructor)(realm,srcBuffer,realm.intrinsics.ArrayBuffer);if((0,_is.IsDetachedBuffer)(realm,srcBuffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(srcBuffer) is true");}else(0,_invariant.default)((0,_index2.IsConstructor)(realm,cloneConstructor)===true,"IsConstructor(cloneConstructor) is true");let srcLength=srcBuffer.$ArrayBufferByteLength;(0,_invariant.default)(typeof srcLength==="number");(0,_invariant.default)(srcByteOffset<=
srcLength,"srcByteOffset \u2264 srcLength");let cloneLength=srcLength-srcByteOffset;let srcBlock=srcBuffer.$ArrayBufferData;(0,_invariant.default)(srcBlock);let targetBuffer=AllocateArrayBuffer(realm,cloneConstructor,srcLength);if((0,_is.IsDetachedBuffer)(realm,srcBuffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(srcBuffer) is true");let targetBlock=targetBuffer.$ArrayBufferData;(0,_invariant.default)(targetBlock);CopyDataBlockBytes(realm,targetBlock,
0,srcBlock,srcByteOffset,cloneLength);return targetBuffer}function SetValueInBuffer(realm,arrayBuffer,byteIndex,type,value,_isLittleEndian){let isLittleEndian=_isLittleEndian;(0,_invariant.default)((0,_is.IsDetachedBuffer)(realm,arrayBuffer)===false);(0,_invariant.default)(arrayBuffer.$ArrayBufferData instanceof Uint8Array&&byteIndex+_types.ElementSize[type]<=arrayBuffer.$ArrayBufferData.length);(0,_invariant.default)(byteIndex>=0);(0,_invariant.default)(typeof value==="number");let block=_singletons.Properties.ThrowIfInternalSlotNotWritable(realm,
arrayBuffer,"$ArrayBufferData").$ArrayBufferData;(0,_invariant.default)(block instanceof Uint8Array);if(isLittleEndian===undefined)isLittleEndian=true;let rawBytes=new Uint8Array(_types.ElementSize[type]);if(type==="Float32")(new DataView(rawBytes.buffer)).setFloat32(0,value,isLittleEndian);else if(type==="Float64")(new DataView(rawBytes.buffer)).setFloat64(0,value,isLittleEndian);else{let n=_types.ElementSize[type];let convOp=_singletons.To.ElementConv[type];let intValue=convOp(realm,value);if(intValue>
0)if(n===1)(new DataView(rawBytes.buffer)).setUint8(0,intValue);else if(n===2)(new DataView(rawBytes.buffer)).setUint16(0,intValue,isLittleEndian);else if(n===4)(new DataView(rawBytes.buffer)).setUint32(0,intValue,isLittleEndian);else(0,_invariant.default)(false);else if(n===1)(new DataView(rawBytes.buffer)).setInt8(0,intValue);else if(n===2)(new DataView(rawBytes.buffer)).setInt16(0,intValue,isLittleEndian);else if(n===4)(new DataView(rawBytes.buffer)).setInt32(0,intValue,isLittleEndian);else(0,
_invariant.default)(false)}for(let i=0;i<rawBytes.length;++i)block[byteIndex+i]=rawBytes[i];return realm.intrinsics.undefined}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=traverse;var t=_interopRequireWildcard(__webpack_require__(21));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&
Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function traverse(node,enter){if(!node)return;let keys=t.VISITOR_KEYS[node.type];if(!keys)return;let stop=enter(node);if(stop)return;for(let key of keys){let subNode=node[key];if(Array.isArray(subNode))for(let elementNode of subNode)traverse(elementNode,enter);else traverse(subNode,enter)}}},function(module,
exports,__webpack_require__){exports.SourceMapGenerator=__webpack_require__(281).SourceMapGenerator;exports.SourceMapConsumer=__webpack_require__(287).SourceMapConsumer;exports.SourceNode=__webpack_require__(290).SourceNode},function(module,exports,__webpack_require__){var base64VLQ=__webpack_require__(282);var util=__webpack_require__(284);var ArraySet=__webpack_require__(285).ArraySet;var MappingList=__webpack_require__(286).MappingList;function SourceMapGenerator(aArgs){if(!aArgs)aArgs={};this._file=
util.getArg(aArgs,"file",null);this._sourceRoot=util.getArg(aArgs,"sourceRoot",null);this._skipValidation=util.getArg(aArgs,"skipValidation",false);this._sources=new ArraySet;this._names=new ArraySet;this._mappings=new MappingList;this._sourcesContents=null}SourceMapGenerator.prototype._version=3;SourceMapGenerator.fromSourceMap=function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){var sourceRoot=aSourceMapConsumer.sourceRoot;var generator=new SourceMapGenerator({file:aSourceMapConsumer.file,
sourceRoot:sourceRoot});aSourceMapConsumer.eachMapping(function(mapping){var newMapping={generated:{line:mapping.generatedLine,column:mapping.generatedColumn}};if(mapping.source!=null){newMapping.source=mapping.source;if(sourceRoot!=null)newMapping.source=util.relative(sourceRoot,newMapping.source);newMapping.original={line:mapping.originalLine,column:mapping.originalColumn};if(mapping.name!=null)newMapping.name=mapping.name}generator.addMapping(newMapping)});aSourceMapConsumer.sources.forEach(function(sourceFile){var content=
aSourceMapConsumer.sourceContentFor(sourceFile);if(content!=null)generator.setSourceContent(sourceFile,content)});return generator};SourceMapGenerator.prototype.addMapping=function SourceMapGenerator_addMapping(aArgs){var generated=util.getArg(aArgs,"generated");var original=util.getArg(aArgs,"original",null);var source=util.getArg(aArgs,"source",null);var name=util.getArg(aArgs,"name",null);if(!this._skipValidation)this._validateMapping(generated,original,source,name);if(source!=null){source=String(source);
if(!this._sources.has(source))this._sources.add(source)}if(name!=null){name=String(name);if(!this._names.has(name))this._names.add(name)}this._mappings.add({generatedLine:generated.line,generatedColumn:generated.column,originalLine:original!=null&&original.line,originalColumn:original!=null&&original.column,source:source,name:name})};SourceMapGenerator.prototype.setSourceContent=function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){var source=aSourceFile;if(this._sourceRoot!=null)source=
util.relative(this._sourceRoot,source);if(aSourceContent!=null){if(!this._sourcesContents)this._sourcesContents=Object.create(null);this._sourcesContents[util.toSetString(source)]=aSourceContent}else if(this._sourcesContents){delete this._sourcesContents[util.toSetString(source)];if(Object.keys(this._sourcesContents).length===0)this._sourcesContents=null}};SourceMapGenerator.prototype.applySourceMap=function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile,aSourceMapPath){var sourceFile=
aSourceFile;if(aSourceFile==null){if(aSourceMapConsumer.file==null)throw new Error("SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, "+'or the source map\'s "file" property. Both were omitted.');sourceFile=aSourceMapConsumer.file}var sourceRoot=this._sourceRoot;if(sourceRoot!=null)sourceFile=util.relative(sourceRoot,sourceFile);var newSources=new ArraySet;var newNames=new ArraySet;this._mappings.unsortedForEach(function(mapping){if(mapping.source===sourceFile&&
mapping.originalLine!=null){var original=aSourceMapConsumer.originalPositionFor({line:mapping.originalLine,column:mapping.originalColumn});if(original.source!=null){mapping.source=original.source;if(aSourceMapPath!=null)mapping.source=util.join(aSourceMapPath,mapping.source);if(sourceRoot!=null)mapping.source=util.relative(sourceRoot,mapping.source);mapping.originalLine=original.line;mapping.originalColumn=original.column;if(original.name!=null)mapping.name=original.name}}var source=mapping.source;
if(source!=null&&!newSources.has(source))newSources.add(source);var name=mapping.name;if(name!=null&&!newNames.has(name))newNames.add(name)},this);this._sources=newSources;this._names=newNames;aSourceMapConsumer.sources.forEach(function(sourceFile){var content=aSourceMapConsumer.sourceContentFor(sourceFile);if(content!=null){if(aSourceMapPath!=null)sourceFile=util.join(aSourceMapPath,sourceFile);if(sourceRoot!=null)sourceFile=util.relative(sourceRoot,sourceFile);this.setSourceContent(sourceFile,content)}},
this)};SourceMapGenerator.prototype._validateMapping=function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,aName){if(aOriginal&&typeof aOriginal.line!=="number"&&typeof aOriginal.column!=="number")throw new Error("original.line and original.column are not numbers -- you probably meant to omit "+"the original mapping entirely and only map the generated position. If so, pass "+"null for the original mapping instead of an object with empty or null values.");if(aGenerated&&"line"in
aGenerated&&"column"in aGenerated&&aGenerated.line>0&&aGenerated.column>=0&&!aOriginal&&!aSource&&!aName)return;else if(aGenerated&&"line"in aGenerated&&"column"in aGenerated&&aOriginal&&"line"in aOriginal&&"column"in aOriginal&&aGenerated.line>0&&aGenerated.column>=0&&aOriginal.line>0&&aOriginal.column>=0&&aSource)return;else throw new Error("Invalid mapping: "+JSON.stringify({generated:aGenerated,source:aSource,original:aOriginal,name:aName}));};SourceMapGenerator.prototype._serializeMappings=function SourceMapGenerator_serializeMappings(){var previousGeneratedColumn=
0;var previousGeneratedLine=1;var previousOriginalColumn=0;var previousOriginalLine=0;var previousName=0;var previousSource=0;var result="";var next;var mapping;var nameIdx;var sourceIdx;var mappings=this._mappings.toArray();for(var i=0,len=mappings.length;i<len;i++){mapping=mappings[i];next="";if(mapping.generatedLine!==previousGeneratedLine){previousGeneratedColumn=0;while(mapping.generatedLine!==previousGeneratedLine){next+=";";previousGeneratedLine++}}else if(i>0){if(!util.compareByGeneratedPositionsInflated(mapping,
mappings[i-1]))continue;next+=","}next+=base64VLQ.encode(mapping.generatedColumn-previousGeneratedColumn);previousGeneratedColumn=mapping.generatedColumn;if(mapping.source!=null){sourceIdx=this._sources.indexOf(mapping.source);next+=base64VLQ.encode(sourceIdx-previousSource);previousSource=sourceIdx;next+=base64VLQ.encode(mapping.originalLine-1-previousOriginalLine);previousOriginalLine=mapping.originalLine-1;next+=base64VLQ.encode(mapping.originalColumn-previousOriginalColumn);previousOriginalColumn=
mapping.originalColumn;if(mapping.name!=null){nameIdx=this._names.indexOf(mapping.name);next+=base64VLQ.encode(nameIdx-previousName);previousName=nameIdx}}result+=next}return result};SourceMapGenerator.prototype._generateSourcesContent=function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){return aSources.map(function(source){if(!this._sourcesContents)return null;if(aSourceRoot!=null)source=util.relative(aSourceRoot,source);var key=util.toSetString(source);return Object.prototype.hasOwnProperty.call(this._sourcesContents,
key)?this._sourcesContents[key]:null},this)};SourceMapGenerator.prototype.toJSON=function SourceMapGenerator_toJSON(){var map={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};if(this._file!=null)map.file=this._file;if(this._sourceRoot!=null)map.sourceRoot=this._sourceRoot;if(this._sourcesContents)map.sourcesContent=this._generateSourcesContent(map.sources,map.sourceRoot);return map};SourceMapGenerator.prototype.toString=function SourceMapGenerator_toString(){return JSON.stringify(this.toJSON())};
exports.SourceMapGenerator=SourceMapGenerator},function(module,exports,__webpack_require__){var base64=__webpack_require__(283);var VLQ_BASE_SHIFT=5;var VLQ_BASE=1<<VLQ_BASE_SHIFT;var VLQ_BASE_MASK=VLQ_BASE-1;var VLQ_CONTINUATION_BIT=VLQ_BASE;function toVLQSigned(aValue){return aValue<0?(-aValue<<1)+1:(aValue<<1)+0}function fromVLQSigned(aValue){var isNegative=(aValue&1)===1;var shifted=aValue>>1;return isNegative?-shifted:shifted}exports.encode=function base64VLQ_encode(aValue){var encoded="";var digit;
var vlq=toVLQSigned(aValue);do{digit=vlq&VLQ_BASE_MASK;vlq>>>=VLQ_BASE_SHIFT;if(vlq>0)digit|=VLQ_CONTINUATION_BIT;encoded+=base64.encode(digit)}while(vlq>0);return encoded};exports.decode=function base64VLQ_decode(aStr,aIndex,aOutParam){var strLen=aStr.length;var result=0;var shift=0;var continuation,digit;do{if(aIndex>=strLen)throw new Error("Expected more digits in base 64 VLQ value.");digit=base64.decode(aStr.charCodeAt(aIndex++));if(digit===-1)throw new Error("Invalid base64 digit: "+aStr.charAt(aIndex-
1));continuation=!!(digit&VLQ_CONTINUATION_BIT);digit&=VLQ_BASE_MASK;result=result+(digit<<shift);shift+=VLQ_BASE_SHIFT}while(continuation);aOutParam.value=fromVLQSigned(result);aOutParam.rest=aIndex}},function(module,exports){var intToCharMap="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");exports.encode=function(number){if(0<=number&&number<intToCharMap.length)return intToCharMap[number];throw new TypeError("Must be between 0 and 63: "+number);};exports.decode=function(charCode){var bigA=
65;var bigZ=90;var littleA=97;var littleZ=122;var zero=48;var nine=57;var plus=43;var slash=47;var littleOffset=26;var numberOffset=52;if(bigA<=charCode&&charCode<=bigZ)return charCode-bigA;if(littleA<=charCode&&charCode<=littleZ)return charCode-littleA+littleOffset;if(zero<=charCode&&charCode<=nine)return charCode-zero+numberOffset;if(charCode==plus)return 62;if(charCode==slash)return 63;return-1}},function(module,exports){function getArg(aArgs,aName,aDefaultValue){if(aName in aArgs)return aArgs[aName];
else if(arguments.length===3)return aDefaultValue;else throw new Error('"'+aName+'" is a required argument.');}exports.getArg=getArg;var urlRegexp=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/;var dataUrlRegexp=/^data:.+,.+$/;function urlParse(aUrl){var match=aUrl.match(urlRegexp);if(!match)return null;return{scheme:match[1],auth:match[2],host:match[3],port:match[4],path:match[5]}}exports.urlParse=urlParse;function urlGenerate(aParsedUrl){var url="";if(aParsedUrl.scheme)url+=aParsedUrl.scheme+
":";url+="//";if(aParsedUrl.auth)url+=aParsedUrl.auth+"@";if(aParsedUrl.host)url+=aParsedUrl.host;if(aParsedUrl.port)url+=":"+aParsedUrl.port;if(aParsedUrl.path)url+=aParsedUrl.path;return url}exports.urlGenerate=urlGenerate;function normalize(aPath){var path=aPath;var url=urlParse(aPath);if(url){if(!url.path)return aPath;path=url.path}var isAbsolute=exports.isAbsolute(path);var parts=path.split(/\/+/);for(var part,up=0,i=parts.length-1;i>=0;i--){part=parts[i];if(part===".")parts.splice(i,1);else if(part===
"..")up++;else if(up>0)if(part===""){parts.splice(i+1,up);up=0}else{parts.splice(i,2);up--}}path=parts.join("/");if(path==="")path=isAbsolute?"/":".";if(url){url.path=path;return urlGenerate(url)}return path}exports.normalize=normalize;function join(aRoot,aPath){if(aRoot==="")aRoot=".";if(aPath==="")aPath=".";var aPathUrl=urlParse(aPath);var aRootUrl=urlParse(aRoot);if(aRootUrl)aRoot=aRootUrl.path||"/";if(aPathUrl&&!aPathUrl.scheme){if(aRootUrl)aPathUrl.scheme=aRootUrl.scheme;return urlGenerate(aPathUrl)}if(aPathUrl||
aPath.match(dataUrlRegexp))return aPath;if(aRootUrl&&!aRootUrl.host&&!aRootUrl.path){aRootUrl.host=aPath;return urlGenerate(aRootUrl)}var joined=aPath.charAt(0)==="/"?aPath:normalize(aRoot.replace(/\/+$/,"")+"/"+aPath);if(aRootUrl){aRootUrl.path=joined;return urlGenerate(aRootUrl)}return joined}exports.join=join;exports.isAbsolute=function(aPath){return aPath.charAt(0)==="/"||!!aPath.match(urlRegexp)};function relative(aRoot,aPath){if(aRoot==="")aRoot=".";aRoot=aRoot.replace(/\/$/,"");var level=0;
while(aPath.indexOf(aRoot+"/")!==0){var index=aRoot.lastIndexOf("/");if(index<0)return aPath;aRoot=aRoot.slice(0,index);if(aRoot.match(/^([^\/]+:\/)?\/*$/))return aPath;++level}return Array(level+1).join("../")+aPath.substr(aRoot.length+1)}exports.relative=relative;var supportsNullProto=function(){var obj=Object.create(null);return!("__proto__"in obj)}();function identity(s){return s}function toSetString(aStr){if(isProtoString(aStr))return"$"+aStr;return aStr}exports.toSetString=supportsNullProto?
identity:toSetString;function fromSetString(aStr){if(isProtoString(aStr))return aStr.slice(1);return aStr}exports.fromSetString=supportsNullProto?identity:fromSetString;function isProtoString(s){if(!s)return false;var length=s.length;if(length<9)return false;if(s.charCodeAt(length-1)!==95||s.charCodeAt(length-2)!==95||s.charCodeAt(length-3)!==111||s.charCodeAt(length-4)!==116||s.charCodeAt(length-5)!==111||s.charCodeAt(length-6)!==114||s.charCodeAt(length-7)!==112||s.charCodeAt(length-8)!==95||s.charCodeAt(length-
9)!==95)return false;for(var i=length-10;i>=0;i--)if(s.charCodeAt(i)!==36)return false;return true}function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){var cmp=mappingA.source-mappingB.source;if(cmp!==0)return cmp;cmp=mappingA.originalLine-mappingB.originalLine;if(cmp!==0)return cmp;cmp=mappingA.originalColumn-mappingB.originalColumn;if(cmp!==0||onlyCompareOriginal)return cmp;cmp=mappingA.generatedColumn-mappingB.generatedColumn;if(cmp!==0)return cmp;cmp=mappingA.generatedLine-
mappingB.generatedLine;if(cmp!==0)return cmp;return mappingA.name-mappingB.name}exports.compareByOriginalPositions=compareByOriginalPositions;function compareByGeneratedPositionsDeflated(mappingA,mappingB,onlyCompareGenerated){var cmp=mappingA.generatedLine-mappingB.generatedLine;if(cmp!==0)return cmp;cmp=mappingA.generatedColumn-mappingB.generatedColumn;if(cmp!==0||onlyCompareGenerated)return cmp;cmp=mappingA.source-mappingB.source;if(cmp!==0)return cmp;cmp=mappingA.originalLine-mappingB.originalLine;
if(cmp!==0)return cmp;cmp=mappingA.originalColumn-mappingB.originalColumn;if(cmp!==0)return cmp;return mappingA.name-mappingB.name}exports.compareByGeneratedPositionsDeflated=compareByGeneratedPositionsDeflated;function strcmp(aStr1,aStr2){if(aStr1===aStr2)return 0;if(aStr1>aStr2)return 1;return-1}function compareByGeneratedPositionsInflated(mappingA,mappingB){var cmp=mappingA.generatedLine-mappingB.generatedLine;if(cmp!==0)return cmp;cmp=mappingA.generatedColumn-mappingB.generatedColumn;if(cmp!==
0)return cmp;cmp=strcmp(mappingA.source,mappingB.source);if(cmp!==0)return cmp;cmp=mappingA.originalLine-mappingB.originalLine;if(cmp!==0)return cmp;cmp=mappingA.originalColumn-mappingB.originalColumn;if(cmp!==0)return cmp;return strcmp(mappingA.name,mappingB.name)}exports.compareByGeneratedPositionsInflated=compareByGeneratedPositionsInflated},function(module,exports,__webpack_require__){var util=__webpack_require__(284);var has=Object.prototype.hasOwnProperty;var hasNativeMap=typeof Map!=="undefined";
function ArraySet(){this._array=[];this._set=hasNativeMap?new Map:Object.create(null)}ArraySet.fromArray=function ArraySet_fromArray(aArray,aAllowDuplicates){var set=new ArraySet;for(var i=0,len=aArray.length;i<len;i++)set.add(aArray[i],aAllowDuplicates);return set};ArraySet.prototype.size=function ArraySet_size(){return hasNativeMap?this._set.size:Object.getOwnPropertyNames(this._set).length};ArraySet.prototype.add=function ArraySet_add(aStr,aAllowDuplicates){var sStr=hasNativeMap?aStr:util.toSetString(aStr);
var isDuplicate=hasNativeMap?this.has(aStr):has.call(this._set,sStr);var idx=this._array.length;if(!isDuplicate||aAllowDuplicates)this._array.push(aStr);if(!isDuplicate)if(hasNativeMap)this._set.set(aStr,idx);else this._set[sStr]=idx};ArraySet.prototype.has=function ArraySet_has(aStr){if(hasNativeMap)return this._set.has(aStr);else{var sStr=util.toSetString(aStr);return has.call(this._set,sStr)}};ArraySet.prototype.indexOf=function ArraySet_indexOf(aStr){if(hasNativeMap){var idx=this._set.get(aStr);
if(idx>=0)return idx}else{var sStr=util.toSetString(aStr);if(has.call(this._set,sStr))return this._set[sStr]}throw new Error('"'+aStr+'" is not in the set.');};ArraySet.prototype.at=function ArraySet_at(aIdx){if(aIdx>=0&&aIdx<this._array.length)return this._array[aIdx];throw new Error("No element indexed by "+aIdx);};ArraySet.prototype.toArray=function ArraySet_toArray(){return this._array.slice()};exports.ArraySet=ArraySet},function(module,exports,__webpack_require__){var util=__webpack_require__(284);
function generatedPositionAfter(mappingA,mappingB){var lineA=mappingA.generatedLine;var lineB=mappingB.generatedLine;var columnA=mappingA.generatedColumn;var columnB=mappingB.generatedColumn;return lineB>lineA||lineB==lineA&&columnB>=columnA||util.compareByGeneratedPositionsInflated(mappingA,mappingB)<=0}function MappingList(){this._array=[];this._sorted=true;this._last={generatedLine:-1,generatedColumn:0}}MappingList.prototype.unsortedForEach=function MappingList_forEach(aCallback,aThisArg){this._array.forEach(aCallback,
aThisArg)};MappingList.prototype.add=function MappingList_add(aMapping){if(generatedPositionAfter(this._last,aMapping)){this._last=aMapping;this._array.push(aMapping)}else{this._sorted=false;this._array.push(aMapping)}};MappingList.prototype.toArray=function MappingList_toArray(){if(!this._sorted){this._array.sort(util.compareByGeneratedPositionsInflated);this._sorted=true}return this._array};exports.MappingList=MappingList},function(module,exports,__webpack_require__){var util=__webpack_require__(284);
var binarySearch=__webpack_require__(288);var ArraySet=__webpack_require__(285).ArraySet;var base64VLQ=__webpack_require__(282);var quickSort=__webpack_require__(289).quickSort;function SourceMapConsumer(aSourceMap){var sourceMap=aSourceMap;if(typeof aSourceMap==="string")sourceMap=JSON.parse(aSourceMap.replace(/^\)\]\}'/,""));return sourceMap.sections!=null?new IndexedSourceMapConsumer(sourceMap):new BasicSourceMapConsumer(sourceMap)}SourceMapConsumer.fromSourceMap=function(aSourceMap){return BasicSourceMapConsumer.fromSourceMap(aSourceMap)};
SourceMapConsumer.prototype._version=3;SourceMapConsumer.prototype.__generatedMappings=null;Object.defineProperty(SourceMapConsumer.prototype,"_generatedMappings",{get:function(){if(!this.__generatedMappings)this._parseMappings(this._mappings,this.sourceRoot);return this.__generatedMappings}});SourceMapConsumer.prototype.__originalMappings=null;Object.defineProperty(SourceMapConsumer.prototype,"_originalMappings",{get:function(){if(!this.__originalMappings)this._parseMappings(this._mappings,this.sourceRoot);
return this.__originalMappings}});SourceMapConsumer.prototype._charIsMappingSeparator=function SourceMapConsumer_charIsMappingSeparator(aStr,index){var c=aStr.charAt(index);return c===";"||c===","};SourceMapConsumer.prototype._parseMappings=function SourceMapConsumer_parseMappings(aStr,aSourceRoot){throw new Error("Subclasses must implement _parseMappings");};SourceMapConsumer.GENERATED_ORDER=1;SourceMapConsumer.ORIGINAL_ORDER=2;SourceMapConsumer.GREATEST_LOWER_BOUND=1;SourceMapConsumer.LEAST_UPPER_BOUND=
2;SourceMapConsumer.prototype.eachMapping=function SourceMapConsumer_eachMapping(aCallback,aContext,aOrder){var context=aContext||null;var order=aOrder||SourceMapConsumer.GENERATED_ORDER;var mappings;switch(order){case SourceMapConsumer.GENERATED_ORDER:mappings=this._generatedMappings;break;case SourceMapConsumer.ORIGINAL_ORDER:mappings=this._originalMappings;break;default:throw new Error("Unknown order of iteration.");}var sourceRoot=this.sourceRoot;mappings.map(function(mapping){var source=mapping.source===
null?null:this._sources.at(mapping.source);if(source!=null&&sourceRoot!=null)source=util.join(sourceRoot,source);return{source:source,generatedLine:mapping.generatedLine,generatedColumn:mapping.generatedColumn,originalLine:mapping.originalLine,originalColumn:mapping.originalColumn,name:mapping.name===null?null:this._names.at(mapping.name)}},this).forEach(aCallback,context)};SourceMapConsumer.prototype.allGeneratedPositionsFor=function SourceMapConsumer_allGeneratedPositionsFor(aArgs){var line=util.getArg(aArgs,
"line");var needle={source:util.getArg(aArgs,"source"),originalLine:line,originalColumn:util.getArg(aArgs,"column",0)};if(this.sourceRoot!=null)needle.source=util.relative(this.sourceRoot,needle.source);if(!this._sources.has(needle.source))return[];needle.source=this._sources.indexOf(needle.source);var mappings=[];var index=this._findMapping(needle,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,binarySearch.LEAST_UPPER_BOUND);if(index>=0){var mapping=this._originalMappings[index];
if(aArgs.column===undefined){var originalLine=mapping.originalLine;while(mapping&&mapping.originalLine===originalLine){mappings.push({line:util.getArg(mapping,"generatedLine",null),column:util.getArg(mapping,"generatedColumn",null),lastColumn:util.getArg(mapping,"lastGeneratedColumn",null)});mapping=this._originalMappings[++index]}}else{var originalColumn=mapping.originalColumn;while(mapping&&mapping.originalLine===line&&mapping.originalColumn==originalColumn){mappings.push({line:util.getArg(mapping,
"generatedLine",null),column:util.getArg(mapping,"generatedColumn",null),lastColumn:util.getArg(mapping,"lastGeneratedColumn",null)});mapping=this._originalMappings[++index]}}}return mappings};exports.SourceMapConsumer=SourceMapConsumer;function BasicSourceMapConsumer(aSourceMap){var sourceMap=aSourceMap;if(typeof aSourceMap==="string")sourceMap=JSON.parse(aSourceMap.replace(/^\)\]\}'/,""));var version=util.getArg(sourceMap,"version");var sources=util.getArg(sourceMap,"sources");var names=util.getArg(sourceMap,
"names",[]);var sourceRoot=util.getArg(sourceMap,"sourceRoot",null);var sourcesContent=util.getArg(sourceMap,"sourcesContent",null);var mappings=util.getArg(sourceMap,"mappings");var file=util.getArg(sourceMap,"file",null);if(version!=this._version)throw new Error("Unsupported version: "+version);sources=sources.map(String).map(util.normalize).map(function(source){return sourceRoot&&util.isAbsolute(sourceRoot)&&util.isAbsolute(source)?util.relative(sourceRoot,source):source});this._names=ArraySet.fromArray(names.map(String),
true);this._sources=ArraySet.fromArray(sources,true);this.sourceRoot=sourceRoot;this.sourcesContent=sourcesContent;this._mappings=mappings;this.file=file}BasicSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype);BasicSourceMapConsumer.prototype.consumer=SourceMapConsumer;BasicSourceMapConsumer.fromSourceMap=function SourceMapConsumer_fromSourceMap(aSourceMap){var smc=Object.create(BasicSourceMapConsumer.prototype);var names=smc._names=ArraySet.fromArray(aSourceMap._names.toArray(),
true);var sources=smc._sources=ArraySet.fromArray(aSourceMap._sources.toArray(),true);smc.sourceRoot=aSourceMap._sourceRoot;smc.sourcesContent=aSourceMap._generateSourcesContent(smc._sources.toArray(),smc.sourceRoot);smc.file=aSourceMap._file;var generatedMappings=aSourceMap._mappings.toArray().slice();var destGeneratedMappings=smc.__generatedMappings=[];var destOriginalMappings=smc.__originalMappings=[];for(var i=0,length=generatedMappings.length;i<length;i++){var srcMapping=generatedMappings[i];
var destMapping=new Mapping;destMapping.generatedLine=srcMapping.generatedLine;destMapping.generatedColumn=srcMapping.generatedColumn;if(srcMapping.source){destMapping.source=sources.indexOf(srcMapping.source);destMapping.originalLine=srcMapping.originalLine;destMapping.originalColumn=srcMapping.originalColumn;if(srcMapping.name)destMapping.name=names.indexOf(srcMapping.name);destOriginalMappings.push(destMapping)}destGeneratedMappings.push(destMapping)}quickSort(smc.__originalMappings,util.compareByOriginalPositions);
return smc};BasicSourceMapConsumer.prototype._version=3;Object.defineProperty(BasicSourceMapConsumer.prototype,"sources",{get:function(){return this._sources.toArray().map(function(s){return this.sourceRoot!=null?util.join(this.sourceRoot,s):s},this)}});function Mapping(){this.generatedLine=0;this.generatedColumn=0;this.source=null;this.originalLine=null;this.originalColumn=null;this.name=null}BasicSourceMapConsumer.prototype._parseMappings=function SourceMapConsumer_parseMappings(aStr,aSourceRoot){var generatedLine=
1;var previousGeneratedColumn=0;var previousOriginalLine=0;var previousOriginalColumn=0;var previousSource=0;var previousName=0;var length=aStr.length;var index=0;var cachedSegments={};var temp={};var originalMappings=[];var generatedMappings=[];var mapping,str,segment,end,value;while(index<length)if(aStr.charAt(index)===";"){generatedLine++;index++;previousGeneratedColumn=0}else if(aStr.charAt(index)===",")index++;else{mapping=new Mapping;mapping.generatedLine=generatedLine;for(end=index;end<length;end++)if(this._charIsMappingSeparator(aStr,
end))break;str=aStr.slice(index,end);segment=cachedSegments[str];if(segment)index+=str.length;else{segment=[];while(index<end){base64VLQ.decode(aStr,index,temp);value=temp.value;index=temp.rest;segment.push(value)}if(segment.length===2)throw new Error("Found a source, but no line and column");if(segment.length===3)throw new Error("Found a source and line, but no column");cachedSegments[str]=segment}mapping.generatedColumn=previousGeneratedColumn+segment[0];previousGeneratedColumn=mapping.generatedColumn;
if(segment.length>1){mapping.source=previousSource+segment[1];previousSource+=segment[1];mapping.originalLine=previousOriginalLine+segment[2];previousOriginalLine=mapping.originalLine;mapping.originalLine+=1;mapping.originalColumn=previousOriginalColumn+segment[3];previousOriginalColumn=mapping.originalColumn;if(segment.length>4){mapping.name=previousName+segment[4];previousName+=segment[4]}}generatedMappings.push(mapping);if(typeof mapping.originalLine==="number")originalMappings.push(mapping)}quickSort(generatedMappings,
util.compareByGeneratedPositionsDeflated);this.__generatedMappings=generatedMappings;quickSort(originalMappings,util.compareByOriginalPositions);this.__originalMappings=originalMappings};BasicSourceMapConsumer.prototype._findMapping=function SourceMapConsumer_findMapping(aNeedle,aMappings,aLineName,aColumnName,aComparator,aBias){if(aNeedle[aLineName]<=0)throw new TypeError("Line must be greater than or equal to 1, got "+aNeedle[aLineName]);if(aNeedle[aColumnName]<0)throw new TypeError("Column must be greater than or equal to 0, got "+
aNeedle[aColumnName]);return binarySearch.search(aNeedle,aMappings,aComparator,aBias)};BasicSourceMapConsumer.prototype.computeColumnSpans=function SourceMapConsumer_computeColumnSpans(){for(var index=0;index<this._generatedMappings.length;++index){var mapping=this._generatedMappings[index];if(index+1<this._generatedMappings.length){var nextMapping=this._generatedMappings[index+1];if(mapping.generatedLine===nextMapping.generatedLine){mapping.lastGeneratedColumn=nextMapping.generatedColumn-1;continue}}mapping.lastGeneratedColumn=
Infinity}};BasicSourceMapConsumer.prototype.originalPositionFor=function SourceMapConsumer_originalPositionFor(aArgs){var needle={generatedLine:util.getArg(aArgs,"line"),generatedColumn:util.getArg(aArgs,"column")};var index=this._findMapping(needle,this._generatedMappings,"generatedLine","generatedColumn",util.compareByGeneratedPositionsDeflated,util.getArg(aArgs,"bias",SourceMapConsumer.GREATEST_LOWER_BOUND));if(index>=0){var mapping=this._generatedMappings[index];if(mapping.generatedLine===needle.generatedLine){var source=
util.getArg(mapping,"source",null);if(source!==null){source=this._sources.at(source);if(this.sourceRoot!=null)source=util.join(this.sourceRoot,source)}var name=util.getArg(mapping,"name",null);if(name!==null)name=this._names.at(name);return{source:source,line:util.getArg(mapping,"originalLine",null),column:util.getArg(mapping,"originalColumn",null),name:name}}}return{source:null,line:null,column:null,name:null}};BasicSourceMapConsumer.prototype.hasContentsOfAllSources=function BasicSourceMapConsumer_hasContentsOfAllSources(){if(!this.sourcesContent)return false;
return this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some(function(sc){return sc==null})};BasicSourceMapConsumer.prototype.sourceContentFor=function SourceMapConsumer_sourceContentFor(aSource,nullOnMissing){if(!this.sourcesContent)return null;if(this.sourceRoot!=null)aSource=util.relative(this.sourceRoot,aSource);if(this._sources.has(aSource))return this.sourcesContent[this._sources.indexOf(aSource)];var url;if(this.sourceRoot!=null&&(url=util.urlParse(this.sourceRoot))){var fileUriAbsPath=
aSource.replace(/^file:\/\//,"");if(url.scheme=="file"&&this._sources.has(fileUriAbsPath))return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];if((!url.path||url.path=="/")&&this._sources.has("/"+aSource))return this.sourcesContent[this._sources.indexOf("/"+aSource)]}if(nullOnMissing)return null;else throw new Error('"'+aSource+'" is not in the SourceMap.');};BasicSourceMapConsumer.prototype.generatedPositionFor=function SourceMapConsumer_generatedPositionFor(aArgs){var source=util.getArg(aArgs,
"source");if(this.sourceRoot!=null)source=util.relative(this.sourceRoot,source);if(!this._sources.has(source))return{line:null,column:null,lastColumn:null};source=this._sources.indexOf(source);var needle={source:source,originalLine:util.getArg(aArgs,"line"),originalColumn:util.getArg(aArgs,"column")};var index=this._findMapping(needle,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,util.getArg(aArgs,"bias",SourceMapConsumer.GREATEST_LOWER_BOUND));if(index>=0){var mapping=
this._originalMappings[index];if(mapping.source===needle.source)return{line:util.getArg(mapping,"generatedLine",null),column:util.getArg(mapping,"generatedColumn",null),lastColumn:util.getArg(mapping,"lastGeneratedColumn",null)}}return{line:null,column:null,lastColumn:null}};exports.BasicSourceMapConsumer=BasicSourceMapConsumer;function IndexedSourceMapConsumer(aSourceMap){var sourceMap=aSourceMap;if(typeof aSourceMap==="string")sourceMap=JSON.parse(aSourceMap.replace(/^\)\]\}'/,""));var version=
util.getArg(sourceMap,"version");var sections=util.getArg(sourceMap,"sections");if(version!=this._version)throw new Error("Unsupported version: "+version);this._sources=new ArraySet;this._names=new ArraySet;var lastOffset={line:-1,column:0};this._sections=sections.map(function(s){if(s.url)throw new Error("Support for url field in sections not implemented.");var offset=util.getArg(s,"offset");var offsetLine=util.getArg(offset,"line");var offsetColumn=util.getArg(offset,"column");if(offsetLine<lastOffset.line||
offsetLine===lastOffset.line&&offsetColumn<lastOffset.column)throw new Error("Section offsets must be ordered and non-overlapping.");lastOffset=offset;return{generatedOffset:{generatedLine:offsetLine+1,generatedColumn:offsetColumn+1},consumer:new SourceMapConsumer(util.getArg(s,"map"))}})}IndexedSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype);IndexedSourceMapConsumer.prototype.constructor=SourceMapConsumer;IndexedSourceMapConsumer.prototype._version=3;Object.defineProperty(IndexedSourceMapConsumer.prototype,
"sources",{get:function(){var sources=[];for(var i=0;i<this._sections.length;i++)for(var j=0;j<this._sections[i].consumer.sources.length;j++)sources.push(this._sections[i].consumer.sources[j]);return sources}});IndexedSourceMapConsumer.prototype.originalPositionFor=function IndexedSourceMapConsumer_originalPositionFor(aArgs){var needle={generatedLine:util.getArg(aArgs,"line"),generatedColumn:util.getArg(aArgs,"column")};var sectionIndex=binarySearch.search(needle,this._sections,function(needle,section){var cmp=
needle.generatedLine-section.generatedOffset.generatedLine;if(cmp)return cmp;return needle.generatedColumn-section.generatedOffset.generatedColumn});var section=this._sections[sectionIndex];if(!section)return{source:null,line:null,column:null,name:null};return section.consumer.originalPositionFor({line:needle.generatedLine-(section.generatedOffset.generatedLine-1),column:needle.generatedColumn-(section.generatedOffset.generatedLine===needle.generatedLine?section.generatedOffset.generatedColumn-1:
0),bias:aArgs.bias})};IndexedSourceMapConsumer.prototype.hasContentsOfAllSources=function IndexedSourceMapConsumer_hasContentsOfAllSources(){return this._sections.every(function(s){return s.consumer.hasContentsOfAllSources()})};IndexedSourceMapConsumer.prototype.sourceContentFor=function IndexedSourceMapConsumer_sourceContentFor(aSource,nullOnMissing){for(var i=0;i<this._sections.length;i++){var section=this._sections[i];var content=section.consumer.sourceContentFor(aSource,true);if(content)return content}if(nullOnMissing)return null;
else throw new Error('"'+aSource+'" is not in the SourceMap.');};IndexedSourceMapConsumer.prototype.generatedPositionFor=function IndexedSourceMapConsumer_generatedPositionFor(aArgs){for(var i=0;i<this._sections.length;i++){var section=this._sections[i];if(section.consumer.sources.indexOf(util.getArg(aArgs,"source"))===-1)continue;var generatedPosition=section.consumer.generatedPositionFor(aArgs);if(generatedPosition){var ret={line:generatedPosition.line+(section.generatedOffset.generatedLine-1),
column:generatedPosition.column+(section.generatedOffset.generatedLine===generatedPosition.line?section.generatedOffset.generatedColumn-1:0)};return ret}}return{line:null,column:null}};IndexedSourceMapConsumer.prototype._parseMappings=function IndexedSourceMapConsumer_parseMappings(aStr,aSourceRoot){this.__generatedMappings=[];this.__originalMappings=[];for(var i=0;i<this._sections.length;i++){var section=this._sections[i];var sectionMappings=section.consumer._generatedMappings;for(var j=0;j<sectionMappings.length;j++){var mapping=
sectionMappings[j];var source=section.consumer._sources.at(mapping.source);if(section.consumer.sourceRoot!==null)source=util.join(section.consumer.sourceRoot,source);this._sources.add(source);source=this._sources.indexOf(source);var name=section.consumer._names.at(mapping.name);this._names.add(name);name=this._names.indexOf(name);var adjustedMapping={source:source,generatedLine:mapping.generatedLine+(section.generatedOffset.generatedLine-1),generatedColumn:mapping.generatedColumn+(section.generatedOffset.generatedLine===
mapping.generatedLine?section.generatedOffset.generatedColumn-1:0),originalLine:mapping.originalLine,originalColumn:mapping.originalColumn,name:name};this.__generatedMappings.push(adjustedMapping);if(typeof adjustedMapping.originalLine==="number")this.__originalMappings.push(adjustedMapping)}}quickSort(this.__generatedMappings,util.compareByGeneratedPositionsDeflated);quickSort(this.__originalMappings,util.compareByOriginalPositions)};exports.IndexedSourceMapConsumer=IndexedSourceMapConsumer},function(module,
exports){exports.GREATEST_LOWER_BOUND=1;exports.LEAST_UPPER_BOUND=2;function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare,aBias){var mid=Math.floor((aHigh-aLow)/2)+aLow;var cmp=aCompare(aNeedle,aHaystack[mid],true);if(cmp===0)return mid;else if(cmp>0){if(aHigh-mid>1)return recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare,aBias);if(aBias==exports.LEAST_UPPER_BOUND)return aHigh<aHaystack.length?aHigh:-1;else return mid}else{if(mid-aLow>1)return recursiveSearch(aLow,mid,aNeedle,aHaystack,
aCompare,aBias);if(aBias==exports.LEAST_UPPER_BOUND)return mid;else return aLow<0?-1:aLow}}exports.search=function search(aNeedle,aHaystack,aCompare,aBias){if(aHaystack.length===0)return-1;var index=recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare,aBias||exports.GREATEST_LOWER_BOUND);if(index<0)return-1;while(index-1>=0){if(aCompare(aHaystack[index],aHaystack[index-1],true)!==0)break;--index}return index}},function(module,exports){function swap(ary,x,y){var temp=ary[x];ary[x]=ary[y];
ary[y]=temp}function randomIntInRange(low,high){return Math.round(low+Math.random()*(high-low))}function doQuickSort(ary,comparator,p,r){if(p<r){var pivotIndex=randomIntInRange(p,r);var i=p-1;swap(ary,pivotIndex,r);var pivot=ary[r];for(var j=p;j<r;j++)if(comparator(ary[j],pivot)<=0){i+=1;swap(ary,i,j)}swap(ary,i+1,j);var q=i+1;doQuickSort(ary,comparator,p,q-1);doQuickSort(ary,comparator,q+1,r)}}exports.quickSort=function(ary,comparator){doQuickSort(ary,comparator,0,ary.length-1)}},function(module,
exports,__webpack_require__){var SourceMapGenerator=__webpack_require__(281).SourceMapGenerator;var util=__webpack_require__(284);var REGEX_NEWLINE=/(\r?\n)/;var NEWLINE_CODE=10;var isSourceNode="$$$isSourceNode$$$";function SourceNode(aLine,aColumn,aSource,aChunks,aName){this.children=[];this.sourceContents={};this.line=aLine==null?null:aLine;this.column=aColumn==null?null:aColumn;this.source=aSource==null?null:aSource;this.name=aName==null?null:aName;this[isSourceNode]=true;if(aChunks!=null)this.add(aChunks)}
SourceNode.fromStringWithSourceMap=function SourceNode_fromStringWithSourceMap(aGeneratedCode,aSourceMapConsumer,aRelativePath){var node=new SourceNode;var remainingLines=aGeneratedCode.split(REGEX_NEWLINE);var remainingLinesIndex=0;var shiftNextLine=function(){var lineContents=getNextLine();var newLine=getNextLine()||"";return lineContents+newLine;function getNextLine(){return remainingLinesIndex<remainingLines.length?remainingLines[remainingLinesIndex++]:undefined}};var lastGeneratedLine=1,lastGeneratedColumn=
0;var lastMapping=null;aSourceMapConsumer.eachMapping(function(mapping){if(lastMapping!==null)if(lastGeneratedLine<mapping.generatedLine){addMappingWithCode(lastMapping,shiftNextLine());lastGeneratedLine++;lastGeneratedColumn=0}else{var nextLine=remainingLines[remainingLinesIndex];var code=nextLine.substr(0,mapping.generatedColumn-lastGeneratedColumn);remainingLines[remainingLinesIndex]=nextLine.substr(mapping.generatedColumn-lastGeneratedColumn);lastGeneratedColumn=mapping.generatedColumn;addMappingWithCode(lastMapping,
code);lastMapping=mapping;return}while(lastGeneratedLine<mapping.generatedLine){node.add(shiftNextLine());lastGeneratedLine++}if(lastGeneratedColumn<mapping.generatedColumn){var nextLine=remainingLines[remainingLinesIndex];node.add(nextLine.substr(0,mapping.generatedColumn));remainingLines[remainingLinesIndex]=nextLine.substr(mapping.generatedColumn);lastGeneratedColumn=mapping.generatedColumn}lastMapping=mapping},this);if(remainingLinesIndex<remainingLines.length){if(lastMapping)addMappingWithCode(lastMapping,
shiftNextLine());node.add(remainingLines.splice(remainingLinesIndex).join(""))}aSourceMapConsumer.sources.forEach(function(sourceFile){var content=aSourceMapConsumer.sourceContentFor(sourceFile);if(content!=null){if(aRelativePath!=null)sourceFile=util.join(aRelativePath,sourceFile);node.setSourceContent(sourceFile,content)}});return node;function addMappingWithCode(mapping,code){if(mapping===null||mapping.source===undefined)node.add(code);else{var source=aRelativePath?util.join(aRelativePath,mapping.source):
mapping.source;node.add(new SourceNode(mapping.originalLine,mapping.originalColumn,source,code,mapping.name))}}};SourceNode.prototype.add=function SourceNode_add(aChunk){if(Array.isArray(aChunk))aChunk.forEach(function(chunk){this.add(chunk)},this);else if(aChunk[isSourceNode]||typeof aChunk==="string"){if(aChunk)this.children.push(aChunk)}else throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);return this};SourceNode.prototype.prepend=function SourceNode_prepend(aChunk){if(Array.isArray(aChunk))for(var i=
aChunk.length-1;i>=0;i--)this.prepend(aChunk[i]);else if(aChunk[isSourceNode]||typeof aChunk==="string")this.children.unshift(aChunk);else throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);return this};SourceNode.prototype.walk=function SourceNode_walk(aFn){var chunk;for(var i=0,len=this.children.length;i<len;i++){chunk=this.children[i];if(chunk[isSourceNode])chunk.walk(aFn);else if(chunk!=="")aFn(chunk,{source:this.source,line:this.line,column:this.column,
name:this.name})}};SourceNode.prototype.join=function SourceNode_join(aSep){var newChildren;var i;var len=this.children.length;if(len>0){newChildren=[];for(i=0;i<len-1;i++){newChildren.push(this.children[i]);newChildren.push(aSep)}newChildren.push(this.children[i]);this.children=newChildren}return this};SourceNode.prototype.replaceRight=function SourceNode_replaceRight(aPattern,aReplacement){var lastChild=this.children[this.children.length-1];if(lastChild[isSourceNode])lastChild.replaceRight(aPattern,
aReplacement);else if(typeof lastChild==="string")this.children[this.children.length-1]=lastChild.replace(aPattern,aReplacement);else this.children.push("".replace(aPattern,aReplacement));return this};SourceNode.prototype.setSourceContent=function SourceNode_setSourceContent(aSourceFile,aSourceContent){this.sourceContents[util.toSetString(aSourceFile)]=aSourceContent};SourceNode.prototype.walkSourceContents=function SourceNode_walkSourceContents(aFn){for(var i=0,len=this.children.length;i<len;i++)if(this.children[i][isSourceNode])this.children[i].walkSourceContents(aFn);
var sources=Object.keys(this.sourceContents);for(var i=0,len=sources.length;i<len;i++)aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]])};SourceNode.prototype.toString=function SourceNode_toString(){var str="";this.walk(function(chunk){str+=chunk});return str};SourceNode.prototype.toStringWithSourceMap=function SourceNode_toStringWithSourceMap(aArgs){var generated={code:"",line:1,column:0};var map=new SourceMapGenerator(aArgs);var sourceMappingActive=false;var lastOriginalSource=
null;var lastOriginalLine=null;var lastOriginalColumn=null;var lastOriginalName=null;this.walk(function(chunk,original){generated.code+=chunk;if(original.source!==null&&original.line!==null&&original.column!==null){if(lastOriginalSource!==original.source||lastOriginalLine!==original.line||lastOriginalColumn!==original.column||lastOriginalName!==original.name)map.addMapping({source:original.source,original:{line:original.line,column:original.column},generated:{line:generated.line,column:generated.column},
name:original.name});lastOriginalSource=original.source;lastOriginalLine=original.line;lastOriginalColumn=original.column;lastOriginalName=original.name;sourceMappingActive=true}else if(sourceMappingActive){map.addMapping({generated:{line:generated.line,column:generated.column}});lastOriginalSource=null;sourceMappingActive=false}for(var idx=0,length=chunk.length;idx<length;idx++)if(chunk.charCodeAt(idx)===NEWLINE_CODE){generated.line++;generated.column=0;if(idx+1===length){lastOriginalSource=null;
sourceMappingActive=false}else if(sourceMappingActive)map.addMapping({source:original.source,original:{line:original.line,column:original.column},generated:{line:generated.line,column:generated.column},name:original.name})}else generated.column++});this.walkSourceContents(function(sourceFile,sourceContent){map.setSourceContent(sourceFile,sourceContent)});return{code:generated.code,map:map}};exports.SourceNode=SourceNode},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.isReactElement=isReactElement;exports.isReactPropsObject=isReactPropsObject;exports.getReactSymbol=getReactSymbol;exports.isTagName=isTagName;exports.isReactComponent=isReactComponent;exports.valueIsClassComponent=valueIsClassComponent;exports.valueIsKnownReactAbstraction=valueIsKnownReactAbstraction;exports.valueIsReactLibraryObject=valueIsReactLibraryObject;exports.valueIsLegacyCreateClassComponent=valueIsLegacyCreateClassComponent;exports.valueIsFactoryClassComponent=valueIsFactoryClassComponent;
exports.addKeyToReactElement=addKeyToReactElement;exports.getUniqueReactElementKey=getUniqueReactElementKey;exports.forEachArrayValue=forEachArrayValue;exports.mapArrayValue=mapArrayValue;exports.convertSimpleClassComponentToFunctionalComponent=convertSimpleClassComponentToFunctionalComponent;exports.convertFunctionalComponentToComplexClassComponent=convertFunctionalComponentToComplexClassComponent;exports.normalizeFunctionalComponentParamaters=normalizeFunctionalComponentParamaters;exports.createReactHintObject=
createReactHintObject;exports.getComponentTypeFromRootValue=getComponentTypeFromRootValue;exports.flagPropsWithNoPartialKeyOrRef=flagPropsWithNoPartialKeyOrRef;exports.hasNoPartialKeyOrRef=hasNoPartialKeyOrRef;exports.getMaxLength=getMaxLength;exports.flattenChildren=flattenChildren;exports.getProperty=getProperty;exports.createReactEvaluatedNode=createReactEvaluatedNode;exports.getComponentName=getComponentName;exports.convertConfigObjectToReactComponentTreeConfig=convertConfigObjectToReactComponentTreeConfig;
exports.getValueFromFunctionCall=getValueFromFunctionCall;exports.createNoopFunction=createNoopFunction;exports.doNotOptimizeComponent=doNotOptimizeComponent;exports.createDefaultPropsHelper=createDefaultPropsHelper;exports.createInternalReactElement=createInternalReactElement;exports.cloneProps=cloneProps;exports.applyObjectAssignConfigsForReactElement=applyObjectAssignConfigsForReactElement;exports.canExcludeReactElementObjectProperty=canExcludeReactElementObjectProperty;exports.cloneReactElement=
cloneReactElement;exports.hardModifyReactObjectPropertyBinding=hardModifyReactObjectPropertyBinding;var _realm=__webpack_require__(7);var _completions=__webpack_require__(18);var _parser=__webpack_require__(247);var _index=__webpack_require__(10);var _generator=__webpack_require__(237);var _index2=__webpack_require__(232);var _BinaryExpression=__webpack_require__(292);var _invariant=_interopRequireDefault(__webpack_require__(9));var _singletons=__webpack_require__(236);var _traverse=_interopRequireDefault(__webpack_require__(293));
var t=_interopRequireWildcard(__webpack_require__(21));var _errors=__webpack_require__(3);var _descriptors=__webpack_require__(268);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=
obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function isReactElement(val){if(!(val instanceof _index.ObjectValue))return false;let realm=val.$Realm;if(!realm.react.enabled)return false;if(realm.react.reactElements.has(val))return true;if(!val.properties.has("type")||!val.properties.has("props")||!val.properties.has("$$typeof"))return false;let $$typeof=getProperty(realm,val,"$$typeof");let globalObject=realm.$GlobalObject;let globalSymbolValue=
getProperty(realm,globalObject,"Symbol");if(globalSymbolValue===realm.intrinsics.undefined){if($$typeof instanceof _index.NumberValue)return $$typeof.value===60103}else if($$typeof instanceof _index.SymbolValue){let symbolFromRegistry=realm.globalSymbolRegistry.find((e)=>e.$Symbol===$$typeof);let _isReactElement=symbolFromRegistry!==undefined&&symbolFromRegistry.$Key==="react.element";if(_isReactElement){realm.react.reactElements.set(val,{createdDuringReconcilation:false,firstRenderOnly:false});return true}}return false}
function isReactPropsObject(val){if(!(val instanceof _index.ObjectValue))return false;let realm=val.$Realm;if(!realm.react.enabled)return false;if(realm.react.reactProps.has(val))return true;return false}function getReactSymbol(symbolKey,realm){let reactSymbol=realm.react.symbols.get(symbolKey);if(reactSymbol!==undefined)return reactSymbol;let SymbolFor=realm.intrinsics.Symbol.properties.get("for");if(SymbolFor!==undefined){let SymbolForDescriptor=SymbolFor.descriptor;if(SymbolForDescriptor!==undefined){(0,
_invariant.default)(SymbolForDescriptor instanceof _descriptors.PropertyDescriptor);let SymbolForValue=SymbolForDescriptor.value;if(SymbolForValue instanceof _index.ObjectValue&&typeof SymbolForValue.$Call==="function"){reactSymbol=SymbolForValue.$Call(realm.intrinsics.Symbol,[new _index.StringValue(realm,symbolKey)]);(0,_invariant.default)(reactSymbol instanceof _index.SymbolValue);realm.react.symbols.set(symbolKey,reactSymbol)}}}(0,_invariant.default)(reactSymbol instanceof _index.SymbolValue,`Symbol("${symbolKey}") could not be found in realm`);
return reactSymbol}function isTagName(ast){return ast.type==="JSXIdentifier"&&/^[a-z]|\-/.test(ast.name)}function isReactComponent(name){return name.length>0&&name[0]===name[0].toUpperCase()}function valueIsClassComponent(realm,value){if(!(value instanceof _index.FunctionValue))return false;let prototype=(0,_index2.Get)(realm,value,"prototype");if(prototype instanceof _index.ObjectValue)return _singletons.To.ToBooleanPartial(realm,(0,_index2.Get)(realm,prototype,"isReactComponent"));return false}
function valueIsKnownReactAbstraction(realm,value){return value instanceof _index.AbstractObjectValue&&realm.react.abstractHints.has(value)}function valueIsReactLibraryObject(realm,value,logger){if(realm.fbLibraries.react===value)return true;let reactVersion=logger.tryQuery(()=>(0,_index2.Get)(realm,value,"version"),undefined);if(!(reactVersion instanceof _index.StringValue))return false;let reactCreateElement=logger.tryQuery(()=>(0,_index2.Get)(realm,value,"createElement"),undefined);if(!(reactCreateElement instanceof
_index.FunctionValue))return false;let reactCloneElement=logger.tryQuery(()=>(0,_index2.Get)(realm,value,"cloneElement"),undefined);if(!(reactCloneElement instanceof _index.FunctionValue))return false;let reactIsValidElement=logger.tryQuery(()=>(0,_index2.Get)(realm,value,"isValidElement"),undefined);if(!(reactIsValidElement instanceof _index.FunctionValue))return false;let reactComponent=logger.tryQuery(()=>(0,_index2.Get)(realm,value,"Component"),undefined);if(!(reactComponent instanceof _index.FunctionValue))return false;
let reactChildren=logger.tryQuery(()=>(0,_index2.Get)(realm,value,"Children"),undefined);if(!(reactChildren instanceof _index.ObjectValue))return false;return false}function valueIsLegacyCreateClassComponent(realm,value){if(!(value instanceof _index.FunctionValue))return false;let prototype=(0,_index2.Get)(realm,value,"prototype");if(prototype instanceof _index.ObjectValue)return prototype.properties.has("__reactAutoBindPairs");return false}function valueIsFactoryClassComponent(realm,value){if(value instanceof
_index.ObjectValue&&!_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(value))return _singletons.To.ToBooleanPartial(realm,(0,_index2.Get)(realm,value,"render"));return false}function addKeyToReactElement(realm,reactElement){let typeValue=getProperty(realm,reactElement,"type");let refValue=getProperty(realm,reactElement,"ref");let propsValue=getProperty(realm,reactElement,"props");let currentKeyValue=getProperty(realm,reactElement,"key")||realm.intrinsics.null;let uniqueKey=getUniqueReactElementKey("",
realm.react.usedReactElementKeys);let newKeyValue=new _index.StringValue(realm,uniqueKey);if(currentKeyValue!==realm.intrinsics.null)newKeyValue=(0,_BinaryExpression.computeBinary)(realm,"+",currentKeyValue,newKeyValue);(0,_invariant.default)(propsValue instanceof _index.ObjectValue);return createInternalReactElement(realm,typeValue,newKeyValue,refValue,propsValue)}function getUniqueReactElementKey(index,usedReactElementKeys){let key;do key=Math.random().toString(36).replace(/[^a-z]+/g,"").substring(0,
2);while(usedReactElementKeys.has(key));usedReactElementKeys.add(key);if(index!==undefined)return`${key}${index}`;return key}function forEachArrayValue(realm,array,mapFunc){let lengthValue=(0,_index2.Get)(realm,array,"length");let isConditionalLength=lengthValue instanceof _index.AbstractValue&&lengthValue.kind==="conditional";let length;if(isConditionalLength)length=getMaxLength(lengthValue,0);else{(0,_invariant.default)(lengthValue instanceof _index.NumberValue,"TODO: support other types of array length value");
length=lengthValue.value}for(let i=0;i<length;i++){let elementProperty=array.properties.get(""+i);let elementPropertyDescriptor=elementProperty&&elementProperty.descriptor;if(elementPropertyDescriptor){(0,_invariant.default)(elementPropertyDescriptor instanceof _descriptors.PropertyDescriptor);let elementValue=elementPropertyDescriptor.value;if(isConditionalLength&&elementValue instanceof _index.AbstractValue&&elementValue.kind==="conditional"){(0,_invariant.default)(lengthValue instanceof _index.AbstractValue);
let lengthCondition=lengthValue.args[0];let elementCondition=elementValue.args[0];(0,_invariant.default)(lengthCondition.equals(elementCondition),"TODO: support cases where the condition is not the same")}(0,_invariant.default)(elementValue instanceof _index.Value);mapFunc(elementValue,i)}}}function mapArrayValue(realm,array,mapFunc){let returnTheNewArray=false;let newArray;const mapArray=(lengthValue)=>{let length=lengthValue.value;for(let i=0;i<length;i++){let elementProperty=array.properties.get(""+
i);let elementPropertyDescriptor=elementProperty&&elementProperty.descriptor;if(elementPropertyDescriptor){(0,_invariant.default)(elementPropertyDescriptor instanceof _descriptors.PropertyDescriptor);let elementValue=elementPropertyDescriptor.value;if(elementValue instanceof _index.Value){let newElement=mapFunc(elementValue,elementPropertyDescriptor);if(newElement!==elementValue)returnTheNewArray=true;_singletons.Create.CreateDataPropertyOrThrow(realm,newArray,""+i,newElement);continue}}_singletons.Create.CreateDataPropertyOrThrow(realm,
newArray,""+i,realm.intrinsics.undefined)}};let lengthValue=(0,_index2.Get)(realm,array,"length");if(lengthValue instanceof _index.AbstractValue&&lengthValue.kind==="conditional"){returnTheNewArray=true;let [condValue,consequentVal,alternateVal]=lengthValue.args;newArray=_singletons.Create.ArrayCreate(realm,0);realm.evaluateWithAbstractConditional(condValue,()=>{return realm.evaluateForEffects(()=>{(0,_invariant.default)(consequentVal instanceof _index.NumberValue);mapArray(consequentVal);return realm.intrinsics.undefined},
null,"mapArrayValue consequent")},()=>{return realm.evaluateForEffects(()=>{(0,_invariant.default)(alternateVal instanceof _index.NumberValue);mapArray(alternateVal);return realm.intrinsics.undefined},null,"mapArrayValue alternate")})}else if(lengthValue instanceof _index.NumberValue){newArray=_singletons.Create.ArrayCreate(realm,lengthValue.value);mapArray(lengthValue)}else(0,_invariant.default)(false,"TODO: support other types of array length value");return returnTheNewArray?newArray:array}function GetDescriptorForProperty(value,
propertyName){let object=value.properties.get(propertyName);(0,_invariant.default)(object);return object.descriptor}function convertSimpleClassComponentToFunctionalComponent(realm,complexComponentType,transforms){let prototype=complexComponentType.properties.get("prototype");(0,_invariant.default)(prototype);(0,_invariant.default)(prototype.descriptor instanceof _descriptors.PropertyDescriptor);prototype.descriptor.configurable=true;_singletons.Properties.DeletePropertyOrThrow(realm,complexComponentType,
"prototype");complexComponentType.$FunctionKind="normal";complexComponentType.$Prototype=realm.intrinsics.FunctionPrototype;complexComponentType.$FormalParameters=[t.identifier("props"),t.identifier("context")];transforms.push((body)=>{let funcNode=t.functionExpression(null,[],t.blockStatement(body));(0,_traverse.default)(t.file(t.program([t.expressionStatement(funcNode)])),{["Identifier|ThisExpression"](path){let node=path.node;if(t.isIdentifier(node)&&node.name==="this"||t.isThisExpression(node)){let parentPath=
path.parentPath;let parentNode=parentPath.node;if(t.isMemberExpression(parentNode))parentPath.replaceWith(parentNode.property);else throw new _errors.FatalError(`conversion of a simple class component to functional component failed due to "this" not being replaced`);}}},undefined,{},undefined);_traverse.default.cache.clear()})}function createBinding(descriptor,key,object){return{descriptor,key,object}}function cloneProperties(realm,properties,object){let newProperties=new Map;for(let [propertyName,
{descriptor}]of properties)newProperties.set(propertyName,createBinding((0,_descriptors.cloneDescriptor)(descriptor.throwIfNotConcrete(realm)),propertyName,object));return newProperties}function cloneSymbols(realm,symbols,object){let newSymbols=new Map;for(let [symbol,{descriptor}]of symbols)newSymbols.set(symbol,createBinding((0,_descriptors.cloneDescriptor)(descriptor.throwIfNotConcrete(realm)),symbol,object));return newSymbols}function cloneValue(realm,originalValue,_prototype,copyToObject){if(originalValue instanceof
_index.FunctionValue)return cloneFunction(realm,originalValue,_prototype,copyToObject);(0,_invariant.default)(false,"TODO: add support to cloneValue() for more value types")}function cloneFunction(realm,originalValue,_prototype,copyToObject){let newValue;if(originalValue instanceof _index.ECMAScriptSourceFunctionValue){newValue=copyToObject||new _index.ECMAScriptSourceFunctionValue(realm,originalValue.intrinsicName);(0,_invariant.default)(newValue instanceof _index.ECMAScriptSourceFunctionValue);
Object.assign(newValue,originalValue);let properties=cloneProperties(realm,originalValue.properties,newValue);newValue.properties=properties;let symbols=cloneSymbols(realm,originalValue.symbols,newValue);newValue.symbols=symbols;let originalPrototype=originalValue.$HomeObject;(0,_invariant.default)(originalPrototype instanceof _index.ObjectValue);let prototype=_prototype||clonePrototype(realm,originalPrototype);newValue.$HomeObject=prototype;if(originalPrototype.properties.has("constructor"))_singletons.Properties.Set(realm,
prototype,"constructor",newValue,false);if(originalValue.properties.has("prototype"))_singletons.Properties.Set(realm,newValue,"prototype",prototype,false)}(0,_invariant.default)(newValue instanceof _index.FunctionValue,"TODO: add support to cloneValue() for more function types");return newValue}function clonePrototype(realm,prototype){(0,_invariant.default)(prototype instanceof _index.ObjectValue);let newPrototype=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,prototype.intrinsicName);
Object.assign(newPrototype,prototype);for(let [propertyName]of prototype.properties)if(propertyName!=="constructor"){let originalValue=(0,_index2.Get)(realm,prototype,propertyName);let newValue=cloneValue(realm,originalValue,prototype);_singletons.Properties.Set(realm,newPrototype,propertyName,newValue,false)}for(let [symbol]of prototype.symbols){let originalValue=(0,_index2.Get)(realm,prototype,symbol);let newValue=cloneValue(realm,originalValue,prototype);_singletons.Properties.Set(realm,newPrototype,
symbol,newValue,false)}return newPrototype}const skipFunctionProperties=new Set(["length","prototype","arguments","name","caller"]);function convertFunctionalComponentToComplexClassComponent(realm,functionalComponentType,complexComponentType,transforms){(0,_invariant.default)(complexComponentType instanceof _index.ECMAScriptSourceFunctionValue||complexComponentType instanceof _index.BoundFunctionValue);let userCodePropertiesToAdd=new Map([["defaultProps",createBinding(undefined,"defaultProps",functionalComponentType)],
["propTypes",createBinding(undefined,"propTypes",functionalComponentType)]]);let userCodeSymbolsToAdd=new Map;for(let [propertyName,binding]of functionalComponentType.properties)if(!skipFunctionProperties.has(propertyName))userCodePropertiesToAdd.set(propertyName,binding);for(let [symbol,binding]of functionalComponentType.symbols)userCodeSymbolsToAdd.set(symbol,binding);cloneValue(realm,complexComponentType,null,functionalComponentType);for(let [propertyName,binding]of userCodePropertiesToAdd)functionalComponentType.properties.set(propertyName,
binding);for(let [symbol,binding]of userCodeSymbolsToAdd)functionalComponentType.symbols.set(symbol,binding);transforms.push((body)=>{body.unshift(t.variableDeclaration("var",[t.variableDeclarator(t.identifier("props"),t.memberExpression(t.thisExpression(),t.identifier("props"))),t.variableDeclarator(t.identifier("context"),t.memberExpression(t.thisExpression(),t.identifier("context")))]))})}function normalizeFunctionalComponentParamaters(func){let lengthProperty=GetDescriptorForProperty(func,"length");
(0,_invariant.default)(lengthProperty instanceof _descriptors.PropertyDescriptor);lengthProperty.writable=false;lengthProperty.enumerable=false;lengthProperty.configurable=true;func.$FormalParameters=func.$FormalParameters.map((param,i)=>{if(i===0)return t.isIdentifier(param)?param:t.identifier("props");else return t.isIdentifier(param)?param:t.identifier("context")});if(func.$FormalParameters.length===1)func.$FormalParameters.push(t.identifier("context"));let lengthValue=lengthProperty.value;(0,
_invariant.default)(lengthValue instanceof _index.NumberValue);lengthValue.value=func.$FormalParameters.length}function createReactHintObject(object,propertyName,args,firstRenderValue){return{firstRenderValue,object,propertyName,args}}function getComponentTypeFromRootValue(realm,value){let _valueIsKnownReactAbstraction=valueIsKnownReactAbstraction(realm,value);if(!(value instanceof _index.ECMAScriptSourceFunctionValue||value instanceof _index.BoundFunctionValue||_valueIsKnownReactAbstraction))return null;
if(_valueIsKnownReactAbstraction){(0,_invariant.default)(value instanceof _index.AbstractValue);let reactHint=realm.react.abstractHints.get(value);(0,_invariant.default)(reactHint);if(typeof reactHint!=="string"&&reactHint.object===realm.fbLibraries.reactRelay)switch(reactHint.propertyName){case "createFragmentContainer":case "createPaginationContainer":case "createRefetchContainer":(0,_invariant.default)(Array.isArray(reactHint.args));let componentType=reactHint.args[0];(0,_invariant.default)(componentType instanceof
_index.ECMAScriptSourceFunctionValue||componentType instanceof _index.BoundFunctionValue);return componentType;default:(0,_invariant.default)(false,`unsupported known React abstraction - ReactRelay property "${reactHint.propertyName}" not supported`)}(0,_invariant.default)(false,"unsupported known React abstraction")}else{(0,_invariant.default)(value instanceof _index.ECMAScriptSourceFunctionValue||value instanceof _index.BoundFunctionValue);return value}}function flagPropsWithNoPartialKeyOrRef(realm,
props){realm.react.propsWithNoPartialKeyOrRef.add(props)}function hasNoPartialKeyOrRef(realm,props){if(realm.react.propsWithNoPartialKeyOrRef.has(props))return true;if(props instanceof _index.ObjectValue&&!props.isPartialObject())return true;if(props instanceof _index.AbstractObjectValue){if(props.values.isTop())return false;let elements=props.values.getElements();for(let element of elements){(0,_invariant.default)(element instanceof _index.ObjectValue);let wasSafe=hasNoPartialKeyOrRef(realm,element);
if(!wasSafe)return false}return true}if(props instanceof _index.ObjectValue&&props.properties.has("key")&&props.properties.has("ref"))return true;return false}function getMaxLength(value,maxLength){if(value instanceof _index.NumberValue)if(value.value>maxLength)return value.value;else return maxLength;else if(value instanceof _index.AbstractValue&&value.kind==="conditional"){let [,consequentVal,alternateVal]=value.args;let consequentMaxVal=getMaxLength(consequentVal,maxLength);let alternateMaxVal=
getMaxLength(alternateVal,maxLength);if(consequentMaxVal>maxLength&&consequentMaxVal>=alternateMaxVal)return consequentMaxVal;else if(alternateMaxVal>maxLength&&alternateMaxVal>=consequentMaxVal)return alternateMaxVal;return maxLength}(0,_invariant.default)(false,"TODO: support other types of array length value")}function recursivelyFlattenArray(realm,array,targetArray,noHoles){forEachArrayValue(realm,array,(_item)=>{let element=_item;if(element instanceof _index.ArrayValue&&!element.intrinsicName)recursivelyFlattenArray(realm,
element,targetArray,noHoles);else{let lengthValue=(0,_index2.Get)(realm,targetArray,"length");(0,_invariant.default)(lengthValue instanceof _index.NumberValue);if(noHoles&&element instanceof _index.EmptyValue)return;else if(noHoles&&element instanceof _index.AbstractValue&&element.kind==="conditional"){let [condValue,consequentVal,alternateVal]=element.args;(0,_invariant.default)(condValue instanceof _index.AbstractValue);let consquentIsHolely=consequentVal instanceof _index.EmptyValue;let alternateIsHolely=
alternateVal instanceof _index.EmptyValue;if(consquentIsHolely&&alternateIsHolely)return;if(consquentIsHolely)element=_index.AbstractValue.createFromLogicalOp(realm,"&&",_index.AbstractValue.createFromUnaryOp(realm,"!",condValue),alternateVal);if(alternateIsHolely)element=_index.AbstractValue.createFromLogicalOp(realm,"&&",condValue,consequentVal)}_singletons.Properties.Set(realm,targetArray,""+lengthValue.value,element,true)}})}function flattenChildren(realm,array,noHoles){let flattenedChildren=
_singletons.Create.ArrayCreate(realm,0);recursivelyFlattenArray(realm,array,flattenedChildren,noHoles);flattenedChildren.makeFinal();return flattenedChildren}function getProperty(realm,object,property){if(object instanceof _index.AbstractObjectValue){if(object.values.isTop())return realm.intrinsics.undefined;let elements=object.values.getElements();(0,_invariant.default)(elements.size===1,"TODO: deal with multiple elements");for(let element of elements){(0,_invariant.default)(element instanceof _index.ObjectValue,
"TODO: deal with object set templates");object=element}(0,_invariant.default)(object instanceof _index.ObjectValue)}let binding;if(typeof property==="string")binding=object.properties.get(property);else binding=object.symbols.get(property);if(!binding)return realm.intrinsics.undefined;let descriptor=binding.descriptor;if(!descriptor)return realm.intrinsics.undefined;(0,_invariant.default)(descriptor instanceof _descriptors.PropertyDescriptor);let value=descriptor.value;if(value===undefined){_index.AbstractValue.reportIntrospectionError(object,
`react/utils/getProperty unsupported getter/setter property`);throw new _errors.FatalError;}(0,_invariant.default)(value instanceof _index.Value,`react/utils/getProperty should not be called on internal properties`);return value}function createReactEvaluatedNode(status,name){return{children:[],message:"",name,status}}function getComponentName(realm,componentType){if(componentType instanceof _index.SymbolValue&&componentType===getReactSymbol("react.fragment",realm))return"React.Fragment";else if(componentType instanceof
_index.SymbolValue)return"unknown symbol";if(isReactComponent(componentType))return"ReactElement";if(componentType===realm.intrinsics.undefined||componentType===realm.intrinsics.null)return"no name";(0,_invariant.default)(componentType instanceof _index.ECMAScriptSourceFunctionValue||componentType instanceof _index.BoundFunctionValue||componentType instanceof _index.AbstractObjectValue||componentType instanceof _index.AbstractValue||componentType instanceof _index.ObjectValue);let boundText=componentType instanceof
_index.BoundFunctionValue?"bound ":"";if(componentType.__originalName)return boundText+componentType.__originalName;if(realm.fbLibraries.reactRelay!==undefined)if(componentType===(0,_index2.Get)(realm,realm.fbLibraries.reactRelay,"QueryRenderer"))return boundText+"QueryRenderer";if(componentType instanceof _index.ECMAScriptSourceFunctionValue&&componentType.$Prototype!==undefined){let name=(0,_index2.Get)(realm,componentType,"name");if(name instanceof _index.StringValue)return boundText+name.value}if(componentType instanceof
_index.ObjectValue){let $$typeof=getProperty(realm,componentType,"$$typeof");if($$typeof===getReactSymbol("react.forward_ref",realm))return"forwarded ref"}if(componentType instanceof _index.FunctionValue)return boundText+"anonymous";return"unknown"}function convertConfigObjectToReactComponentTreeConfig(realm,config){let firstRenderOnly=false;let isRoot=false;let modelString;if(!(config instanceof _index.UndefinedValue))for(let [key]of config.properties){let propValue=getProperty(realm,config,key);
if(propValue instanceof _index.StringValue||propValue instanceof _index.NumberValue||propValue instanceof _index.BooleanValue){let value=propValue.value;if(typeof value==="boolean")if(key==="firstRenderOnly")firstRenderOnly=value;else{if(key==="isRoot")isRoot=value}else if(typeof value==="string"){try{JSON.parse(value)}catch(e){let componentModelError=new _errors.CompilerDiagnostic("Failed to parse model for component",realm.currentLocation,"PP1008","FatalError");if(realm.handleError(componentModelError)!==
"Recover")throw new _errors.FatalError;}if(key==="model")modelString=value}}else{let diagnostic=new _errors.CompilerDiagnostic("__optimizeReactComponentTree(rootComponent, config) has been called with invalid arguments",realm.currentLocation,"PP0024","FatalError");realm.handleError(diagnostic);if(realm.handleError(diagnostic)==="Fail")throw new _errors.FatalError;}}return{firstRenderOnly,isRoot,modelString}}function getValueFromFunctionCall(realm,func,funcThis,args,isConstructor=false){(0,_invariant.default)(func.$Call,
"Expected function to be a FunctionValue with $Call method");let funcCall=func.$Call;let newCall=func.$Construct;let completion;try{let value;if(isConstructor){(0,_invariant.default)(newCall);value=newCall(args,func)}else value=funcCall(funcThis,args);completion=new _completions.SimpleNormalCompletion(value)}catch(error){if(error instanceof _completions.AbruptCompletion)completion=error;else throw error;}return realm.returnOrThrowCompletion(completion)}function isEventProp(name){return name.length>
2&&name[0].toLowerCase()==="o"&&name[1].toLowerCase()==="n"}function createNoopFunction(realm){if(realm.react.noopFunction!==undefined)return realm.react.noopFunction;let noOpFunc=new _index.ECMAScriptSourceFunctionValue(realm);noOpFunc.initialize([],t.blockStatement([]));realm.react.noopFunction=noOpFunc;return noOpFunc}function doNotOptimizeComponent(realm,componentType){if(componentType instanceof _index.ObjectValue){let doNotOptimize=(0,_index2.Get)(realm,componentType,"__reactCompilerDoNotOptimize");
if(doNotOptimize instanceof _index.BooleanValue)return doNotOptimize.value}return false}function createDefaultPropsHelper(realm){let defaultPropsHelper=`
    function defaultPropsHelper(props, defaultProps) {
      for (var propName in defaultProps) {
        if (props[propName] === undefined) {
          props[propName] = defaultProps[propName];
        }
      }
      return props;
    }
  `;let escapeHelperAst=(0,_parser.parseExpression)(defaultPropsHelper,{plugins:["flow"]});let helper=new _index.ECMAScriptSourceFunctionValue(realm);helper.initialize(escapeHelperAst.params,escapeHelperAst.body);return helper}function createInternalReactElement(realm,type,key,ref,props){let obj=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);if(type instanceof _index.AbstractValue&&type.kind==="conditional")(0,_invariant.default)(false,"createInternalReactElement should never encounter a conditional type");
_singletons.Create.CreateDataPropertyOrThrow(realm,obj,"$$typeof",getReactSymbol("react.element",realm));_singletons.Create.CreateDataPropertyOrThrow(realm,obj,"type",type);_singletons.Create.CreateDataPropertyOrThrow(realm,obj,"key",key);_singletons.Create.CreateDataPropertyOrThrow(realm,obj,"ref",ref);_singletons.Create.CreateDataPropertyOrThrow(realm,obj,"props",props);_singletons.Create.CreateDataPropertyOrThrow(realm,obj,"_owner",realm.intrinsics.null);obj.makeFinal();let activeReconciler=realm.react.activeReconciler;
let createdDuringReconcilation=activeReconciler!==undefined;let firstRenderOnly=createdDuringReconcilation?activeReconciler.componentTreeConfig.firstRenderOnly:false;realm.react.reactElements.set(obj,{createdDuringReconcilation,firstRenderOnly});(0,_invariant.default)(realm.react.reactProps.has(props)&&props.mightBeFinalObject(),"React props object is not correctly setup");return obj}function applyClonedTemporalAlias(realm,props,clonedProps){let temporalAlias=props.temporalAlias;(0,_invariant.default)(temporalAlias!==
undefined);if(temporalAlias.kind==="conditional")(0,_invariant.default)(false,"TODO applyClonedTemporalAlias conditional");let temporalOperationEntry=realm.getTemporalOperationEntryFromDerivedValue(temporalAlias);if(!(temporalOperationEntry instanceof _generator.TemporalObjectAssignEntry))(0,_invariant.default)(false,"TODO nont TemporalObjectAssignEntry");(0,_invariant.default)(temporalOperationEntry!==undefined);let temporalArgs=temporalOperationEntry.args;let [to,...sources]=temporalArgs.map((arg)=>
arg===props?clonedProps:arg);(0,_invariant.default)(to instanceof _index.ObjectValue||to instanceof _index.AbstractObjectValue);_index.AbstractValue.createTemporalObjectAssign(realm,to,sources)}function cloneProps(realm,props,newChildren){let clonedProps=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype);for(let [propName,binding]of props.properties)if(binding&&binding.descriptor){(0,_invariant.default)(binding.descriptor instanceof _descriptors.PropertyDescriptor);if(binding.descriptor.enumerable)if(newChildren!==
undefined&&propName==="children")_singletons.Properties.Set(realm,clonedProps,propName,newChildren,true);else _singletons.Properties.Set(realm,clonedProps,propName,getProperty(realm,props,propName),true)}if(props.isPartialObject())clonedProps.makePartial();if(props.isSimpleObject())clonedProps.makeSimple();if(realm.react.propsWithNoPartialKeyOrRef.has(props))flagPropsWithNoPartialKeyOrRef(realm,clonedProps);if(props.temporalAlias!==undefined)applyClonedTemporalAlias(realm,props,clonedProps);clonedProps.makeFinal();
realm.react.reactProps.add(clonedProps);return clonedProps}function applyObjectAssignConfigsForReactElement(realm,to,sources){let globalObj=(0,_index2.Get)(realm,realm.$GlobalObject,"Object");(0,_invariant.default)(globalObj instanceof _index.ObjectValue);let objAssign=(0,_index2.Get)(realm,globalObj,"assign");(0,_invariant.default)(objAssign instanceof _index.ECMAScriptFunctionValue);let objectAssignCall=objAssign.$Call;(0,_invariant.default)(objectAssignCall!==undefined);objectAssignCall(realm.intrinsics.undefined,
[to,...sources])}function canExcludeReactElementObjectProperty(realm,reactElement,name,value){let reactElementData=realm.react.reactElements.get(reactElement);(0,_invariant.default)(reactElementData!==undefined);let {firstRenderOnly}=reactElementData;let isHostComponent=getProperty(realm,reactElement,"type")instanceof _index.StringValue;return firstRenderOnly&&isHostComponent&&(isEventProp(name)||value instanceof _index.FunctionValue)}function cloneReactElement(realm,reactElement,shouldCloneProps){let typeValue=
getProperty(realm,reactElement,"type");let keyValue=getProperty(realm,reactElement,"key");let refValue=getProperty(realm,reactElement,"ref");let propsValue=getProperty(realm,reactElement,"props");(0,_invariant.default)(propsValue instanceof _index.ObjectValue);if(shouldCloneProps)propsValue=cloneProps(realm,propsValue);return createInternalReactElement(realm,typeValue,keyValue,refValue,propsValue)}function hardModifyReactObjectPropertyBinding(realm,object,propName,value){(0,_invariant.default)(object.mightBeFinalObject()&&
!object.mightNotBeFinalObject(),"hardModifyReactObjectPropertyBinding can only be used on final objects!");let binding=object.properties.get(propName);if(binding===undefined)binding={object,descriptor:new _descriptors.PropertyDescriptor({configurable:true,enumerable:true,value:undefined,writable:true}),key:propName};let descriptor=binding.descriptor;(0,_invariant.default)(descriptor instanceof _descriptors.PropertyDescriptor&&(0,_index2.IsDataDescriptor)(realm,descriptor));let newDescriptor=new _descriptors.PropertyDescriptor(descriptor);
newDescriptor.value=value;let newBinding=Object.assign({},binding,{descriptor:newDescriptor});object.properties.set(propName,newBinding)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;exports.getPureBinaryOperationResultType=getPureBinaryOperationResultType;exports.computeBinary=computeBinary;var _completions=__webpack_require__(18);var _index=__webpack_require__(15);var _errors=__webpack_require__(3);var _index2=__webpack_require__(10);
var _singletons=__webpack_require__(236);var _generator=__webpack_require__(237);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){let lref=env.evaluate(ast.left,strictCode);let lval=_singletons.Environment.GetValue(realm,lref);let rref=env.evaluate(ast.right,strictCode);let rval=_singletons.Environment.GetValue(realm,rref);return computeBinary(realm,ast.operator,
lval,rval,ast.left.loc,ast.right.loc,ast.loc)}let unknownValueOfOrToString="might be an object with an unknown valueOf or toString or Symbol.toPrimitive method";function getPureBinaryOperationResultType(realm,op,lval,rval,lloc,rloc){function reportErrorIfNotPure(purityTest,typeIfPure){let leftPure=purityTest(realm,lval);let rightPure=purityTest(realm,rval);if(leftPure&&rightPure)return typeIfPure;let loc=!leftPure?lloc:rloc;let error=new _errors.CompilerDiagnostic(unknownValueOfOrToString,loc,"PP0002",
"RecoverableError");if(realm.handleError(error)==="Recover")return typeIfPure;throw new _errors.FatalError;}if(op==="+"){let ltype=_singletons.To.GetToPrimitivePureResultType(realm,lval);let rtype=_singletons.To.GetToPrimitivePureResultType(realm,rval);if(ltype===_index2.StringValue||rtype===_index2.StringValue){if(!_singletons.To.IsToStringPure(realm,rval))rtype=undefined;if(!_singletons.To.IsToStringPure(realm,lval))ltype=undefined}else{if(!_singletons.To.IsToNumberPure(realm,rval))rtype=undefined;
if(!_singletons.To.IsToNumberPure(realm,lval))ltype=undefined}if(ltype===undefined||rtype===undefined){if(lval.getType()===_index2.SymbolValue||rval.getType()===_index2.SymbolValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let loc=ltype===undefined?lloc:rloc;let error=new _errors.CompilerDiagnostic(unknownValueOfOrToString,loc,"PP0002","RecoverableError");if(realm.handleError(error)==="Recover"){ltype=lval.getType();rtype=rval.getType();if(ltype===_index2.StringValue||rtype===
_index2.StringValue)return _index2.StringValue;if(ltype===_index2.IntegralValue&&rtype===_index2.IntegralValue)return _index2.IntegralValue;if((ltype===_index2.NumberValue||ltype===_index2.IntegralValue)&&(rtype===_index2.NumberValue||rtype===_index2.IntegralValue))return _index2.NumberValue;return _index2.Value}throw new _errors.FatalError;}if(ltype===_index2.StringValue||rtype===_index2.StringValue)return _index2.StringValue;return _index2.NumberValue}else if(op==="<"||op===">"||op===">="||op===
"<=")return reportErrorIfNotPure(_singletons.To.IsToPrimitivePure.bind(_singletons.To),_index2.BooleanValue);else if(op==="!="||op==="=="){let ltype=lval.getType();let rtype=rval.getType();if(ltype===_index2.NullValue||ltype===_index2.UndefinedValue||rtype===_index2.NullValue||rtype===_index2.UndefinedValue)return _index2.BooleanValue;return reportErrorIfNotPure(_singletons.To.IsToPrimitivePure.bind(_singletons.To),_index2.BooleanValue)}else if(op==="==="||op==="!==")return _index2.BooleanValue;else if(op===
">>>"||op==="<<"||op===">>"||op==="&"||op==="|"||op==="^"||op==="**"||op==="%"||op==="/"||op==="*"||op==="-"){if(lval.getType()===_index2.SymbolValue||rval.getType()===_index2.SymbolValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return reportErrorIfNotPure(_singletons.To.IsToNumberPure.bind(_singletons.To),_index2.NumberValue)}else if(op==="in"||op==="instanceof"){if(rval.mightNotBeObject()){let error=new _errors.CompilerDiagnostic(`might not be an object, hence the ${op} operator might throw a TypeError`,
rloc,"PP0003","RecoverableError");if(realm.handleError(error)==="Recover")return _index2.BooleanValue;throw new _errors.FatalError;}if(!rval.mightNotBeObject())if(rval.isSimpleObject())return _index2.BooleanValue;let error=new _errors.CompilerDiagnostic(`might be an object that behaves badly for the ${op} operator`,rloc,"PP0004","RecoverableError");if(realm.handleError(error)==="Recover")return _index2.BooleanValue;throw new _errors.FatalError;}(0,_invariant.default)(false,"unimplemented "+op)}function computeBinary(realm,
op,lval,rval,lloc,rloc,loc){if(realm.useAbstractInterpretation&&(op==="=="||op==="==="||op==="!="||op==="!=="))if(!lval.mightNotBeObject()&&(rval instanceof _index2.NullValue||rval instanceof _index2.UndefinedValue)||(lval instanceof _index2.NullValue||lval instanceof _index2.UndefinedValue)&&!rval.mightNotBeObject())return new _index2.BooleanValue(realm,op[0]!=="=");let resultType;const compute=()=>{let lvalIsAbstract=lval instanceof _index2.AbstractValue;let rvalIsAbstract=rval instanceof _index2.AbstractValue;
if(lvalIsAbstract||rvalIsAbstract){if(op==="instanceof"&&_index2.Value.isTypeCompatibleWith(lval.getType(),_index2.PrimitiveValue)&&rval instanceof _index2.AbstractObjectValue&&rval.isSimpleObject())return realm.intrinsics.false;try{resultType=getPureBinaryOperationResultType(realm,op,lval,rval,lloc,rloc);let result=_index2.AbstractValue.createFromBinaryOp(realm,op,lval,rval,loc);if((op==="in"||op==="instanceof")&&result instanceof _index2.AbstractValue&&rvalIsAbstract)result=_index2.AbstractValue.convertToTemporalIfArgsAreTemporal(realm,
result,[rval]);return result}catch(x){if(x instanceof _errors.FatalError){if(lval instanceof _index2.AbstractValue&&lval.kind==="conditional"){let [condition,consequentL,alternateL]=lval.args;(0,_invariant.default)(condition instanceof _index2.AbstractValue);return realm.evaluateWithAbstractConditional(condition,()=>realm.evaluateForEffects(()=>computeBinary(realm,op,consequentL,rval,lloc,rloc,loc),undefined,"ConditionalBinaryExpression/1"),()=>realm.evaluateForEffects(()=>computeBinary(realm,op,
alternateL,rval,lloc,rloc,loc),undefined,"ConditionalBinaryExpression/2"))}if(rval instanceof _index2.AbstractValue&&rval.kind==="conditional"){let [condition,consequentR,alternateR]=rval.args;(0,_invariant.default)(condition instanceof _index2.AbstractValue);return realm.evaluateWithAbstractConditional(condition,()=>realm.evaluateForEffects(()=>computeBinary(realm,op,lval,consequentR,lloc,rloc,loc),undefined,"ConditionalBinaryExpression/3"),()=>realm.evaluateForEffects(()=>computeBinary(realm,op,
lval,alternateR,lloc,rloc,loc),undefined,"ConditionalBinaryExpression/4"))}}throw x;}}else{if(op==="in"&&!(rval instanceof _index2.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(lval instanceof _index2.ConcreteValue);(0,_invariant.default)(rval instanceof _index2.ConcreteValue);const result=_index.ValuesDomain.computeBinary(realm,op,lval,rval);resultType=result.getType();return result}};if(realm.isInPureScope()){const previousErrorHandler=realm.errorHandler;
let isPure=true;realm.errorHandler=(diagnostic)=>{isPure=false;return"Recover"};let effects;try{effects=realm.evaluateForEffects(compute,undefined,"computeBinary")}catch(x){if(x instanceof _errors.FatalError)isPure=false;else throw x;}finally{realm.errorHandler=previousErrorHandler}if(isPure&&effects){realm.applyEffects(effects);if(effects.result instanceof _completions.SimpleNormalCompletion)return effects.result.value}_singletons.Leak.value(realm,lval,loc);if(op!=="in")_singletons.Leak.value(realm,
rval,loc);return realm.evaluateWithPossibleThrowCompletion(()=>_index2.AbstractValue.createTemporalFromBuildFunction(realm,resultType,[lval,rval],(0,_generator.createOperationDescriptor)("BINARY_EXPRESSION",{binaryOperator:op}),{isPure:true}),_index.TypesDomain.topVal,_index.ValuesDomain.topVal)}return compute()}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=traverse;Object.defineProperty(exports,"NodePath",{enumerable:true,
get:function(){return _path.default}});Object.defineProperty(exports,"Scope",{enumerable:true,get:function(){return _scope.default}});Object.defineProperty(exports,"Hub",{enumerable:true,get:function(){return _hub.default}});exports.visitors=void 0;var _context=_interopRequireDefault(__webpack_require__(294));var visitors=_interopRequireWildcard(__webpack_require__(374));exports.visitors=visitors;function _includes(){const data=_interopRequireDefault(__webpack_require__(306));_includes=function(){return data};
return data}function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}var cache=_interopRequireWildcard(__webpack_require__(334));var _path=_interopRequireDefault(__webpack_require__(295));var _scope=_interopRequireDefault(__webpack_require__(305));var _hub=_interopRequireDefault(__webpack_require__(375));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function traverse(parent,opts,scope,state,parentPath){if(!parent)return;if(!opts)opts={};if(!opts.noScope&&!scope)if(parent.type!=="Program"&&parent.type!=="File")throw new Error("You must pass a scope and parentPath unless traversing a Program/File. "+
`Instead of that you tried to traverse a ${parent.type} node without `+"passing scope and parentPath.");visitors.explode(opts);traverse.node(parent,opts,scope,state,parentPath)}traverse.visitors=visitors;traverse.verify=visitors.verify;traverse.explode=visitors.explode;traverse.cheap=function(node,enter){return t().traverseFast(node,enter)};traverse.node=function(node,opts,scope,state,parentPath,skipKeys){const keys=t().VISITOR_KEYS[node.type];if(!keys)return;const context=new _context.default(scope,
opts,state,parentPath);for(const key of keys){if(skipKeys&&skipKeys[key])continue;if(context.visit(node,key))return}};traverse.clearNode=function(node,opts){t().removeProperties(node,opts);cache.path.delete(node)};traverse.removeProperties=function(tree,opts){t().traverseFast(tree,traverse.clearNode,opts);return tree};function hasBlacklistedType(path,state){if(path.node.type===state.type){state.has=true;path.stop()}}traverse.hasType=function(tree,type,blacklistTypes){if((0,_includes().default)(blacklistTypes,
tree.type))return false;if(tree.type===type)return true;const state={has:false,type:type};traverse(tree,{noScope:true,blacklist:blacklistTypes,enter:hasBlacklistedType},null,state);return state.has};traverse.cache=cache},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _path=_interopRequireDefault(__webpack_require__(295));function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};
return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const testing=
"none"==="test";class TraversalContext{constructor(scope,opts,state,parentPath){this.queue=null;this.parentPath=parentPath;this.scope=scope;this.state=state;this.opts=opts}shouldVisit(node){const opts=this.opts;if(opts.enter||opts.exit)return true;if(opts[node.type])return true;const keys=t().VISITOR_KEYS[node.type];if(!keys||!keys.length)return false;for(const key of keys)if(node[key])return true;return false}create(node,obj,key,listKey){return _path.default.get({parentPath:this.parentPath,parent:node,
container:obj,key:key,listKey})}maybeQueue(path,notPriority){if(this.trap)throw new Error("Infinite cycle detected");if(this.queue)if(notPriority)this.queue.push(path);else this.priorityQueue.push(path)}visitMultiple(container,parent,listKey){if(container.length===0)return false;const queue=[];for(let key=0;key<container.length;key++){const node=container[key];if(node&&this.shouldVisit(node))queue.push(this.create(parent,container,key,listKey))}return this.visitQueue(queue)}visitSingle(node,key){if(this.shouldVisit(node[key]))return this.visitQueue([this.create(node,
node,key)]);else return false}visitQueue(queue){this.queue=queue;this.priorityQueue=[];const visited=[];let stop=false;for(const path of queue){path.resync();if(path.contexts.length===0||path.contexts[path.contexts.length-1]!==this)path.pushContext(this);if(path.key===null)continue;if(testing&&queue.length>=1E4)this.trap=true;if(visited.indexOf(path.node)>=0)continue;visited.push(path.node);if(path.visit()){stop=true;break}if(this.priorityQueue.length){stop=this.visitQueue(this.priorityQueue);this.priorityQueue=
[];this.queue=queue;if(stop)break}}for(const path of queue)path.popContext();this.queue=null;return stop}visit(node,key){const nodes=node[key];if(!nodes)return false;if(Array.isArray(nodes))return this.visitMultiple(nodes,node,key);else return this.visitSingle(node,key)}}exports.default=TraversalContext},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var virtualTypes=_interopRequireWildcard(__webpack_require__(296));function _debug(){const data=
_interopRequireDefault(__webpack_require__(297));_debug=function(){return data};return data}var _index=_interopRequireDefault(__webpack_require__(293));var _scope=_interopRequireDefault(__webpack_require__(305));function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}var _cache=__webpack_require__(334);function _generator(){const data=_interopRequireDefault(__webpack_require__(335));_generator=function(){return data};return data}var NodePath_ancestry=
_interopRequireWildcard(__webpack_require__(357));var NodePath_inference=_interopRequireWildcard(__webpack_require__(358));var NodePath_replacement=_interopRequireWildcard(__webpack_require__(361));var NodePath_evaluation=_interopRequireWildcard(__webpack_require__(362));var NodePath_conversion=_interopRequireWildcard(__webpack_require__(363));var NodePath_introspection=_interopRequireWildcard(__webpack_require__(366));var NodePath_context=_interopRequireWildcard(__webpack_require__(367));var NodePath_removal=
_interopRequireWildcard(__webpack_require__(368));var NodePath_modification=_interopRequireWildcard(__webpack_require__(370));var NodePath_family=_interopRequireWildcard(__webpack_require__(372));var NodePath_comments=_interopRequireWildcard(__webpack_require__(373));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const debug=(0,_debug().default)("babel");class NodePath{constructor(hub,parent){this.parent=parent;this.hub=hub;this.contexts=[];this.data={};this.shouldSkip=false;this.shouldStop=false;this.removed=false;this.state=null;this.opts=null;this.skipKeys=null;this.parentPath=
null;this.context=null;this.container=null;this.listKey=null;this.inList=false;this.parentKey=null;this.key=null;this.node=null;this.scope=null;this.type=null;this.typeAnnotation=null}static get({hub,parentPath,parent,container,listKey,key}){if(!hub&&parentPath)hub=parentPath.hub;if(!parent)throw new Error("To get a node path the parent needs to exist");const targetNode=container[key];const paths=_cache.path.get(parent)||[];if(!_cache.path.has(parent))_cache.path.set(parent,paths);let path;for(let i=
0;i<paths.length;i++){const pathCheck=paths[i];if(pathCheck.node===targetNode){path=pathCheck;break}}if(!path){path=new NodePath(hub,parent);paths.push(path)}path.setup(parentPath,container,listKey,key);return path}getScope(scope){return this.isScope()?new _scope.default(this):scope}setData(key,val){return this.data[key]=val}getData(key,def){let val=this.data[key];if(!val&&def)val=this.data[key]=def;return val}buildCodeFrameError(msg,Error=SyntaxError){return this.hub.buildError(this.node,msg,Error)}traverse(visitor,
state){(0,_index.default)(this.node,visitor,this.scope,state,this)}set(key,node){t().validate(this.node,key,node);this.node[key]=node}getPathLocation(){const parts=[];let path=this;do{let key=path.key;if(path.inList)key=`${path.listKey}[${key}]`;parts.unshift(key)}while(path=path.parentPath);return parts.join(".")}debug(message){if(!debug.enabled)return;debug(`${this.getPathLocation()} ${this.type}: ${message}`)}toString(){return(0,_generator().default)(this.node).code}}exports.default=NodePath;Object.assign(NodePath.prototype,
NodePath_ancestry,NodePath_inference,NodePath_replacement,NodePath_evaluation,NodePath_conversion,NodePath_introspection,NodePath_context,NodePath_removal,NodePath_modification,NodePath_family,NodePath_comments);for(const type of t().TYPES){const typeKey=`is${type}`;const fn=t()[typeKey];NodePath.prototype[typeKey]=function(opts){return fn(this.node,opts)};NodePath.prototype[`assert${type}`]=function(opts){if(!fn(this.node,opts))throw new TypeError(`Expected node path of type ${type}`);}}for(const type in virtualTypes){if(type[0]===
"_")continue;if(t().TYPES.indexOf(type)<0)t().TYPES.push(type);const virtualType=virtualTypes[type];NodePath.prototype[`is${type}`]=function(opts){return virtualType.checkPath(this,opts)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ForAwaitStatement=exports.NumericLiteralTypeAnnotation=exports.ExistentialTypeParam=exports.SpreadProperty=exports.RestProperty=exports.Flow=exports.Pure=exports.Generated=exports.User=exports.Var=exports.BlockScoped=
exports.Referenced=exports.Scope=exports.Expression=exports.Statement=exports.BindingIdentifier=exports.ReferencedMemberExpression=exports.ReferencedIdentifier=void 0;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?
Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const ReferencedIdentifier={types:["Identifier","JSXIdentifier"],checkPath({node,parent},opts){if(!t().isIdentifier(node,opts)&&!t().isJSXMemberExpression(parent,opts))if(t().isJSXIdentifier(node,opts)){if(t().react.isCompatTag(node.name))return false}else return false;return t().isReferenced(node,parent)}};exports.ReferencedIdentifier=
ReferencedIdentifier;const ReferencedMemberExpression={types:["MemberExpression"],checkPath({node,parent}){return t().isMemberExpression(node)&&t().isReferenced(node,parent)}};exports.ReferencedMemberExpression=ReferencedMemberExpression;const BindingIdentifier={types:["Identifier"],checkPath({node,parent}){return t().isIdentifier(node)&&t().isBinding(node,parent)}};exports.BindingIdentifier=BindingIdentifier;const Statement={types:["Statement"],checkPath({node,parent}){if(t().isStatement(node)){if(t().isVariableDeclaration(node)){if(t().isForXStatement(parent,
{left:node}))return false;if(t().isForStatement(parent,{init:node}))return false}return true}else return false}};exports.Statement=Statement;const Expression={types:["Expression"],checkPath(path){if(path.isIdentifier())return path.isReferencedIdentifier();else return t().isExpression(path.node)}};exports.Expression=Expression;const Scope={types:["Scopable"],checkPath(path){return t().isScope(path.node,path.parent)}};exports.Scope=Scope;const Referenced={checkPath(path){return t().isReferenced(path.node,
path.parent)}};exports.Referenced=Referenced;const BlockScoped={checkPath(path){return t().isBlockScoped(path.node)}};exports.BlockScoped=BlockScoped;const Var={types:["VariableDeclaration"],checkPath(path){return t().isVar(path.node)}};exports.Var=Var;const User={checkPath(path){return path.node&&!!path.node.loc}};exports.User=User;const Generated={checkPath(path){return!path.isUser()}};exports.Generated=Generated;const Pure={checkPath(path,opts){return path.scope.isPure(path.node,opts)}};exports.Pure=
Pure;const Flow={types:["Flow","ImportDeclaration","ExportDeclaration","ImportSpecifier"],checkPath({node}){if(t().isFlow(node))return true;else if(t().isImportDeclaration(node))return node.importKind==="type"||node.importKind==="typeof";else if(t().isExportDeclaration(node))return node.exportKind==="type";else if(t().isImportSpecifier(node))return node.importKind==="type"||node.importKind==="typeof";else return false}};exports.Flow=Flow;const RestProperty={types:["RestElement"],checkPath(path){return path.parentPath&&
path.parentPath.isObjectPattern()}};exports.RestProperty=RestProperty;const SpreadProperty={types:["RestElement"],checkPath(path){return path.parentPath&&path.parentPath.isObjectExpression()}};exports.SpreadProperty=SpreadProperty;const ExistentialTypeParam={types:["ExistsTypeAnnotation"]};exports.ExistentialTypeParam=ExistentialTypeParam;const NumericLiteralTypeAnnotation={types:["NumberLiteralTypeAnnotation"]};exports.NumericLiteralTypeAnnotation=NumericLiteralTypeAnnotation;const ForAwaitStatement=
{types:["ForOfStatement"],checkPath({node}){return node.await===true}};exports.ForAwaitStatement=ForAwaitStatement},function(module,exports,__webpack_require__){if(typeof process==="undefined"||process.type==="renderer"||process.browser===true||process.__nwjs)module.exports=__webpack_require__(298);else module.exports=__webpack_require__(301)},function(module,exports,__webpack_require__){exports.log=log;exports.formatArgs=formatArgs;exports.save=save;exports.load=load;exports.useColors=useColors;
exports.storage=localstorage();exports.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF",
"#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function useColors(){if(typeof window!=="undefined"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs))return true;if(typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return false;
return typeof document!=="undefined"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window!=="undefined"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}
function formatArgs(args){args[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+args[0]+(this.useColors?"%c ":" ")+"+"+module.exports.humanize(this.diff);if(!this.useColors)return;const c="color: "+this.color;args.splice(1,0,c,"color: inherit");let index=0;let lastC=0;args[0].replace(/%[a-zA-Z%]/g,(match)=>{if(match==="%%")return;index++;if(match==="%c")lastC=index});args.splice(lastC,0,c)}function log(...args){return typeof console==="object"&&console.log&&console.log(...args)}
function save(namespaces){try{if(namespaces)exports.storage.setItem("debug",namespaces);else exports.storage.removeItem("debug")}catch(error){}}function load(){let r;try{r=exports.storage.getItem("debug")}catch(error){}if(!r&&typeof process!=="undefined"&&"env"in process)r=process.env.DEBUG;return r}function localstorage(){try{return localStorage}catch(error){}}module.exports=__webpack_require__(299)(exports);const {formatters}=module.exports;formatters.j=function(v){try{return JSON.stringify(v)}catch(error){return"[UnexpectedJSONParseError]: "+
error.message}}},function(module,exports,__webpack_require__){function setup(env){createDebug.debug=createDebug;createDebug.default=createDebug;createDebug.coerce=coerce;createDebug.disable=disable;createDebug.enable=enable;createDebug.enabled=enabled;createDebug.humanize=__webpack_require__(300);Object.keys(env).forEach((key)=>{createDebug[key]=env[key]});createDebug.instances=[];createDebug.names=[];createDebug.skips=[];createDebug.formatters={};function selectColor(namespace){let hash=0;for(let i=
0;i<namespace.length;i++){hash=(hash<<5)-hash+namespace.charCodeAt(i);hash|=0}return createDebug.colors[Math.abs(hash)%createDebug.colors.length]}createDebug.selectColor=selectColor;function createDebug(namespace){let prevTime;function debug(...args){if(!debug.enabled)return;const self=debug;const curr=Number(new Date);const ms=curr-(prevTime||curr);self.diff=ms;self.prev=prevTime;self.curr=curr;prevTime=curr;args[0]=createDebug.coerce(args[0]);if(typeof args[0]!=="string")args.unshift("%O");let index=
0;args[0]=args[0].replace(/%([a-zA-Z%])/g,(match,format)=>{if(match==="%%")return match;index++;const formatter=createDebug.formatters[format];if(typeof formatter==="function"){const val=args[index];match=formatter.call(self,val);args.splice(index,1);index--}return match});createDebug.formatArgs.call(self,args);const logFn=self.log||createDebug.log;logFn.apply(self,args)}debug.namespace=namespace;debug.enabled=createDebug.enabled(namespace);debug.useColors=createDebug.useColors();debug.color=selectColor(namespace);
debug.destroy=destroy;debug.extend=extend;if(typeof createDebug.init==="function")createDebug.init(debug);createDebug.instances.push(debug);return debug}function destroy(){const index=createDebug.instances.indexOf(this);if(index!==-1){createDebug.instances.splice(index,1);return true}return false}function extend(namespace,delimiter){const newDebug=createDebug(this.namespace+(typeof delimiter==="undefined"?":":delimiter)+namespace);newDebug.log=this.log;return newDebug}function enable(namespaces){createDebug.save(namespaces);
createDebug.names=[];createDebug.skips=[];let i;const split=(typeof namespaces==="string"?namespaces:"").split(/[\s,]+/);const len=split.length;for(i=0;i<len;i++){if(!split[i])continue;namespaces=split[i].replace(/\*/g,".*?");if(namespaces[0]==="-")createDebug.skips.push(new RegExp("^"+namespaces.substr(1)+"$"));else createDebug.names.push(new RegExp("^"+namespaces+"$"))}for(i=0;i<createDebug.instances.length;i++){const instance=createDebug.instances[i];instance.enabled=createDebug.enabled(instance.namespace)}}
function disable(){const namespaces=[...createDebug.names.map(toNamespace),...createDebug.skips.map(toNamespace).map((namespace)=>"-"+namespace)].join(",");createDebug.enable("");return namespaces}function enabled(name){if(name[name.length-1]==="*")return true;let i;let len;for(i=0,len=createDebug.skips.length;i<len;i++)if(createDebug.skips[i].test(name))return false;for(i=0,len=createDebug.names.length;i<len;i++)if(createDebug.names[i].test(name))return true;return false}function toNamespace(regexp){return regexp.toString().substring(2,
regexp.toString().length-2).replace(/\.\*\?$/,"*")}function coerce(val){if(val instanceof Error)return val.stack||val.message;return val}createDebug.enable(createDebug.load());return createDebug}module.exports=setup},function(module,exports){var s=1E3;var m=s*60;var h=m*60;var d=h*24;var w=d*7;var y=d*365.25;module.exports=function(val,options){options=options||{};var type=typeof val;if(type==="string"&&val.length>0)return parse(val);else if(type==="number"&&isNaN(val)===false)return options.long?
fmtLong(val):fmtShort(val);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(val));};function parse(str){str=String(str);if(str.length>100)return;var match=/^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);if(!match)return;var n=parseFloat(match[1]);var type=(match[2]||"ms").toLowerCase();switch(type){case "years":case "year":case "yrs":case "yr":case "y":return n*y;
case "weeks":case "week":case "w":return n*w;case "days":case "day":case "d":return n*d;case "hours":case "hour":case "hrs":case "hr":case "h":return n*h;case "minutes":case "minute":case "mins":case "min":case "m":return n*m;case "seconds":case "second":case "secs":case "sec":case "s":return n*s;case "milliseconds":case "millisecond":case "msecs":case "msec":case "ms":return n;default:return undefined}}function fmtShort(ms){var msAbs=Math.abs(ms);if(msAbs>=d)return Math.round(ms/d)+"d";if(msAbs>=
h)return Math.round(ms/h)+"h";if(msAbs>=m)return Math.round(ms/m)+"m";if(msAbs>=s)return Math.round(ms/s)+"s";return ms+"ms"}function fmtLong(ms){var msAbs=Math.abs(ms);if(msAbs>=d)return plural(ms,msAbs,d,"day");if(msAbs>=h)return plural(ms,msAbs,h,"hour");if(msAbs>=m)return plural(ms,msAbs,m,"minute");if(msAbs>=s)return plural(ms,msAbs,s,"second");return ms+" ms"}function plural(ms,msAbs,n,name){var isPlural=msAbs>=n*1.5;return Math.round(ms/n)+" "+name+(isPlural?"s":"")}},function(module,exports,
__webpack_require__){const tty=__webpack_require__(302);const util=__webpack_require__(303);exports.init=init;exports.log=log;exports.formatArgs=formatArgs;exports.save=save;exports.load=load;exports.useColors=useColors;exports.colors=[6,2,3,4,5,1];try{const supportsColor=__webpack_require__(304);if(supportsColor&&(supportsColor.stderr||supportsColor).level>=2)exports.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,
149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221]}catch(error){}exports.inspectOpts=Object.keys(process.env).filter((key)=>{return/^debug_/i.test(key)}).reduce((obj,key)=>{const prop=key.substring(6).toLowerCase().replace(/_([a-z])/g,(_,k)=>{return k.toUpperCase()});let val=process.env[key];if(/^(yes|on|true|enabled)$/i.test(val))val=true;else if(/^(no|off|false|disabled)$/i.test(val))val=false;else if(val===
"null")val=null;else val=Number(val);obj[prop]=val;return obj},{});function useColors(){return"colors"in exports.inspectOpts?Boolean(exports.inspectOpts.colors):tty.isatty(process.stderr.fd)}function formatArgs(args){const {namespace:name,useColors}=this;if(useColors){const c=this.color;const colorCode="\u001b[3"+(c<8?c:"8;5;"+c);const prefix=`  ${colorCode};1m${name} \u001B[0m`;args[0]=prefix+args[0].split("\n").join("\n"+prefix);args.push(colorCode+"m+"+module.exports.humanize(this.diff)+"\u001b[0m")}else args[0]=
getDate()+name+" "+args[0]}function getDate(){if(exports.inspectOpts.hideDate)return"";return(new Date).toISOString()+" "}function log(...args){return process.stderr.write(util.format(...args)+"\n")}function save(namespaces){if(namespaces)process.env.DEBUG=namespaces;else delete process.env.DEBUG}function load(){return process.env.DEBUG}function init(debug){debug.inspectOpts={};const keys=Object.keys(exports.inspectOpts);for(let i=0;i<keys.length;i++)debug.inspectOpts[keys[i]]=exports.inspectOpts[keys[i]]}
module.exports=__webpack_require__(299)(exports);const {formatters}=module.exports;formatters.o=function(v){this.inspectOpts.colors=this.useColors;return util.inspect(v,this.inspectOpts).replace(/\s*\n\s*/g," ")};formatters.O=function(v){this.inspectOpts.colors=this.useColors;return util.inspect(v,this.inspectOpts)}},function(module,exports){module.exports=__WEBPACK_EXTERNAL_MODULE__302__},function(module,exports){module.exports=__WEBPACK_EXTERNAL_MODULE__303__},function(module,exports,__webpack_require__){var argv=
process.argv;var terminator=argv.indexOf("--");var hasFlag=function(flag){flag="--"+flag;var pos=argv.indexOf(flag);return pos!==-1&&(terminator!==-1?pos<terminator:true)};module.exports=function(){if("FORCE_COLOR"in process.env)return true;if(hasFlag("no-color")||hasFlag("no-colors")||hasFlag("color=false"))return false;if(hasFlag("color")||hasFlag("colors")||hasFlag("color=true")||hasFlag("color=always"))return true;if(process.stdout&&!process.stdout.isTTY)return false;if(process.platform==="win32")return true;
if("COLORTERM"in process.env)return true;if(process.env.TERM==="dumb")return false;if(/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM))return true;return false}()},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;function _includes(){const data=_interopRequireDefault(__webpack_require__(306));_includes=function(){return data};return data}function _repeat(){const data=_interopRequireDefault(__webpack_require__(315));
_repeat=function(){return data};return data}var _renamer=_interopRequireDefault(__webpack_require__(320));var _index=_interopRequireDefault(__webpack_require__(293));function _defaults(){const data=_interopRequireDefault(__webpack_require__(323));_defaults=function(){return data};return data}var _binding=_interopRequireDefault(__webpack_require__(321));function _globals(){const data=_interopRequireDefault(__webpack_require__(332));_globals=function(){return data};return data}function t(){const data=
_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}var _cache=__webpack_require__(334);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=
obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function gatherNodeParts(node,parts){if(t().isModuleDeclaration(node))if(node.source)gatherNodeParts(node.source,parts);else if(node.specifiers&&node.specifiers.length)for(const specifier of node.specifiers)gatherNodeParts(specifier,parts);else{if(node.declaration)gatherNodeParts(node.declaration,parts)}else if(t().isModuleSpecifier(node))gatherNodeParts(node.local,parts);else if(t().isMemberExpression(node)){gatherNodeParts(node.object,
parts);gatherNodeParts(node.property,parts)}else if(t().isIdentifier(node))parts.push(node.name);else if(t().isLiteral(node))parts.push(node.value);else if(t().isCallExpression(node))gatherNodeParts(node.callee,parts);else if(t().isObjectExpression(node)||t().isObjectPattern(node))for(const prop of node.properties)gatherNodeParts(prop.key||prop.argument,parts);else if(t().isPrivateName(node))gatherNodeParts(node.id,parts);else if(t().isThisExpression(node))parts.push("this");else if(t().isSuper(node))parts.push("super")}
const collectorVisitor={For(path){for(const key of t().FOR_INIT_KEYS){const declar=path.get(key);if(declar.isVar()){const parentScope=path.scope.getFunctionParent()||path.scope.getProgramParent();parentScope.registerBinding("var",declar)}}},Declaration(path){if(path.isBlockScoped())return;if(path.isExportDeclaration()&&path.get("declaration").isDeclaration())return;const parent=path.scope.getFunctionParent()||path.scope.getProgramParent();parent.registerDeclaration(path)},ReferencedIdentifier(path,
state){state.references.push(path)},ForXStatement(path,state){const left=path.get("left");if(left.isPattern()||left.isIdentifier())state.constantViolations.push(path)},ExportDeclaration:{exit(path){const {node,scope}=path;const declar=node.declaration;if(t().isClassDeclaration(declar)||t().isFunctionDeclaration(declar)){const id=declar.id;if(!id)return;const binding=scope.getBinding(id.name);if(binding)binding.reference(path)}else if(t().isVariableDeclaration(declar))for(const decl of declar.declarations){const ids=
t().getBindingIdentifiers(decl);for(const name in ids){const binding=scope.getBinding(name);if(binding)binding.reference(path)}}}},LabeledStatement(path){path.scope.getProgramParent().addGlobal(path.node);path.scope.getBlockParent().registerDeclaration(path)},AssignmentExpression(path,state){state.assignments.push(path)},UpdateExpression(path,state){state.constantViolations.push(path)},UnaryExpression(path,state){if(path.node.operator==="delete")state.constantViolations.push(path)},BlockScoped(path){let scope=
path.scope;if(scope.path===path)scope=scope.parent;scope.getBlockParent().registerDeclaration(path)},ClassDeclaration(path){const id=path.node.id;if(!id)return;const name=id.name;path.scope.bindings[name]=path.scope.getBinding(name)},Block(path){const paths=path.get("body");for(const bodyPath of paths)if(bodyPath.isFunctionDeclaration())path.scope.getBlockParent().registerDeclaration(bodyPath)}};let uid=0;class Scope{constructor(path){const {node}=path;const cached=_cache.scope.get(node);if(cached&&
cached.path===path)return cached;_cache.scope.set(node,this);this.uid=uid++;this.block=node;this.path=path;this.labels=new Map}get parent(){const parent=this.path.findParent((p)=>p.isScope());return parent&&parent.scope}get parentBlock(){return this.path.parent}get hub(){return this.path.hub}traverse(node,opts,state){(0,_index.default)(node,opts,this,state,this.path)}generateDeclaredUidIdentifier(name){const id=this.generateUidIdentifier(name);this.push({id});return t().cloneNode(id)}generateUidIdentifier(name){return t().identifier(this.generateUid(name))}generateUid(name=
"temp"){name=t().toIdentifier(name).replace(/^_+/,"").replace(/[0-9]+$/g,"");let uid;let i=0;do{uid=this._generateUid(name,i);i++}while(this.hasLabel(uid)||this.hasBinding(uid)||this.hasGlobal(uid)||this.hasReference(uid));const program=this.getProgramParent();program.references[uid]=true;program.uids[uid]=true;return uid}_generateUid(name,i){let id=name;if(i>1)id+=i;return`_${id}`}generateUidBasedOnNode(parent,defaultName){let node=parent;if(t().isAssignmentExpression(parent))node=parent.left;else if(t().isVariableDeclarator(parent))node=
parent.id;else if(t().isObjectProperty(node)||t().isObjectMethod(node))node=node.key;const parts=[];gatherNodeParts(node,parts);let id=parts.join("$");id=id.replace(/^_/,"")||defaultName||"ref";return this.generateUid(id.slice(0,20))}generateUidIdentifierBasedOnNode(parent,defaultName){return t().identifier(this.generateUidBasedOnNode(parent,defaultName))}isStatic(node){if(t().isThisExpression(node)||t().isSuper(node))return true;if(t().isIdentifier(node)){const binding=this.getBinding(node.name);
if(binding)return binding.constant;else return this.hasBinding(node.name)}return false}maybeGenerateMemoised(node,dontPush){if(this.isStatic(node))return null;else{const id=this.generateUidIdentifierBasedOnNode(node);if(!dontPush){this.push({id});return t().cloneNode(id)}return id}}checkBlockScopedCollisions(local,kind,name,id){if(kind==="param")return;if(local.kind==="local")return;if(kind==="hoisted"&&local.kind==="let")return;const duplicate=kind==="let"||local.kind==="let"||local.kind==="const"||
local.kind==="module"||local.kind==="param"&&(kind==="let"||kind==="const");if(duplicate)throw this.hub.buildError(id,`Duplicate declaration "${name}"`,TypeError);}rename(oldName,newName,block){const binding=this.getBinding(oldName);if(binding){newName=newName||this.generateUidIdentifier(oldName).name;return(new _renamer.default(binding,oldName,newName)).rename(block)}}_renameFromMap(map,oldName,newName,value){if(map[oldName]){map[newName]=value;map[oldName]=null}}dump(){const sep=(0,_repeat().default)("-",
60);console.log(sep);let scope=this;do{console.log("#",scope.block.type);for(const name in scope.bindings){const binding=scope.bindings[name];console.log(" -",name,{constant:binding.constant,references:binding.references,violations:binding.constantViolations.length,kind:binding.kind})}}while(scope=scope.parent);console.log(sep)}toArray(node,i){if(t().isIdentifier(node)){const binding=this.getBinding(node.name);if(binding&&binding.constant&&binding.path.isGenericType("Array"))return node}if(t().isArrayExpression(node))return node;
if(t().isIdentifier(node,{name:"arguments"}))return t().callExpression(t().memberExpression(t().memberExpression(t().memberExpression(t().identifier("Array"),t().identifier("prototype")),t().identifier("slice")),t().identifier("call")),[node]);let helperName;const args=[node];if(i===true)helperName="toConsumableArray";else if(i){args.push(t().numericLiteral(i));helperName="slicedToArray"}else helperName="toArray";return t().callExpression(this.hub.addHelper(helperName),args)}hasLabel(name){return!!this.getLabel(name)}getLabel(name){return this.labels.get(name)}registerLabel(path){this.labels.set(path.node.label.name,
path)}registerDeclaration(path){if(path.isLabeledStatement())this.registerLabel(path);else if(path.isFunctionDeclaration())this.registerBinding("hoisted",path.get("id"),path);else if(path.isVariableDeclaration()){const declarations=path.get("declarations");for(const declar of declarations)this.registerBinding(path.node.kind,declar)}else if(path.isClassDeclaration())this.registerBinding("let",path);else if(path.isImportDeclaration()){const specifiers=path.get("specifiers");for(const specifier of specifiers)this.registerBinding("module",
specifier)}else if(path.isExportDeclaration()){const declar=path.get("declaration");if(declar.isClassDeclaration()||declar.isFunctionDeclaration()||declar.isVariableDeclaration())this.registerDeclaration(declar)}else this.registerBinding("unknown",path)}buildUndefinedNode(){if(this.hasBinding("undefined"))return t().unaryExpression("void",t().numericLiteral(0),true);else return t().identifier("undefined")}registerConstantViolation(path){const ids=path.getBindingIdentifiers();for(const name in ids){const binding=
this.getBinding(name);if(binding)binding.reassign(path)}}registerBinding(kind,path,bindingPath=path){if(!kind)throw new ReferenceError("no `kind`");if(path.isVariableDeclaration()){const declarators=path.get("declarations");for(const declar of declarators)this.registerBinding(kind,declar);return}const parent=this.getProgramParent();const ids=path.getBindingIdentifiers(true);for(const name in ids)for(const id of ids[name]){const local=this.getOwnBinding(name);if(local){if(local.identifier===id)continue;
this.checkBlockScopedCollisions(local,kind,name,id)}parent.references[name]=true;if(local)this.registerConstantViolation(bindingPath);else this.bindings[name]=new _binding.default({identifier:id,scope:this,path:bindingPath,kind:kind})}}addGlobal(node){this.globals[node.name]=node}hasUid(name){let scope=this;do if(scope.uids[name])return true;while(scope=scope.parent);return false}hasGlobal(name){let scope=this;do if(scope.globals[name])return true;while(scope=scope.parent);return false}hasReference(name){let scope=
this;do if(scope.references[name])return true;while(scope=scope.parent);return false}isPure(node,constantsOnly){if(t().isIdentifier(node)){const binding=this.getBinding(node.name);if(!binding)return false;if(constantsOnly)return binding.constant;return true}else if(t().isClass(node)){if(node.superClass&&!this.isPure(node.superClass,constantsOnly))return false;return this.isPure(node.body,constantsOnly)}else if(t().isClassBody(node)){for(const method of node.body)if(!this.isPure(method,constantsOnly))return false;
return true}else if(t().isBinary(node))return this.isPure(node.left,constantsOnly)&&this.isPure(node.right,constantsOnly);else if(t().isArrayExpression(node)){for(const elem of node.elements)if(!this.isPure(elem,constantsOnly))return false;return true}else if(t().isObjectExpression(node)){for(const prop of node.properties)if(!this.isPure(prop,constantsOnly))return false;return true}else if(t().isClassMethod(node)){if(node.computed&&!this.isPure(node.key,constantsOnly))return false;if(node.kind===
"get"||node.kind==="set")return false;return true}else if(t().isProperty(node)){if(node.computed&&!this.isPure(node.key,constantsOnly))return false;return this.isPure(node.value,constantsOnly)}else if(t().isUnaryExpression(node))return this.isPure(node.argument,constantsOnly);else if(t().isTaggedTemplateExpression(node))return t().matchesPattern(node.tag,"String.raw")&&!this.hasBinding("String",true)&&this.isPure(node.quasi,constantsOnly);else if(t().isTemplateLiteral(node)){for(const expression of node.expressions)if(!this.isPure(expression,
constantsOnly))return false;return true}else return t().isPureish(node)}setData(key,val){return this.data[key]=val}getData(key){let scope=this;do{const data=scope.data[key];if(data!=null)return data}while(scope=scope.parent)}removeData(key){let scope=this;do{const data=scope.data[key];if(data!=null)scope.data[key]=null}while(scope=scope.parent)}init(){if(!this.references)this.crawl()}crawl(){const path=this.path;this.references=Object.create(null);this.bindings=Object.create(null);this.globals=Object.create(null);
this.uids=Object.create(null);this.data=Object.create(null);if(path.isLoop())for(const key of t().FOR_INIT_KEYS){const node=path.get(key);if(node.isBlockScoped())this.registerBinding(node.node.kind,node)}if(path.isFunctionExpression()&&path.has("id"))if(!path.get("id").node[t().NOT_LOCAL_BINDING])this.registerBinding("local",path.get("id"),path);if(path.isClassExpression()&&path.has("id"))if(!path.get("id").node[t().NOT_LOCAL_BINDING])this.registerBinding("local",path);if(path.isFunction()){const params=
path.get("params");for(const param of params)this.registerBinding("param",param)}if(path.isCatchClause())this.registerBinding("let",path);const parent=this.getProgramParent();if(parent.crawling)return;const state={references:[],constantViolations:[],assignments:[]};this.crawling=true;path.traverse(collectorVisitor,state);this.crawling=false;for(const path of state.assignments){const ids=path.getBindingIdentifiers();let programParent;for(const name in ids){if(path.scope.getBinding(name))continue;programParent=
programParent||path.scope.getProgramParent();programParent.addGlobal(ids[name])}path.scope.registerConstantViolation(path)}for(const ref of state.references){const binding=ref.scope.getBinding(ref.node.name);if(binding)binding.reference(ref);else ref.scope.getProgramParent().addGlobal(ref.node)}for(const path of state.constantViolations)path.scope.registerConstantViolation(path)}push(opts){let path=this.path;if(!path.isBlockStatement()&&!path.isProgram())path=this.getBlockParent().path;if(path.isSwitchStatement())path=
(this.getFunctionParent()||this.getProgramParent()).path;if(path.isLoop()||path.isCatchClause()||path.isFunction()){path.ensureBlock();path=path.get("body")}const unique=opts.unique;const kind=opts.kind||"var";const blockHoist=opts._blockHoist==null?2:opts._blockHoist;const dataKey=`declaration:${kind}:${blockHoist}`;let declarPath=!unique&&path.getData(dataKey);if(!declarPath){const declar=t().variableDeclaration(kind,[]);declar._blockHoist=blockHoist;[declarPath]=path.unshiftContainer("body",[declar]);
if(!unique)path.setData(dataKey,declarPath)}const declarator=t().variableDeclarator(opts.id,opts.init);declarPath.node.declarations.push(declarator);this.registerBinding(kind,declarPath.get("declarations").pop())}getProgramParent(){let scope=this;do if(scope.path.isProgram())return scope;while(scope=scope.parent);throw new Error("Couldn't find a Program");}getFunctionParent(){let scope=this;do if(scope.path.isFunctionParent())return scope;while(scope=scope.parent);return null}getBlockParent(){let scope=
this;do if(scope.path.isBlockParent())return scope;while(scope=scope.parent);throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");}getAllBindings(){const ids=Object.create(null);let scope=this;do{(0,_defaults().default)(ids,scope.bindings);scope=scope.parent}while(scope);return ids}getAllBindingsOfKind(){const ids=Object.create(null);for(const kind of arguments){let scope=this;do{for(const name in scope.bindings){const binding=scope.bindings[name];if(binding.kind===
kind)ids[name]=binding}scope=scope.parent}while(scope)}return ids}bindingIdentifierEquals(name,node){return this.getBindingIdentifier(name)===node}getBinding(name){let scope=this;do{const binding=scope.getOwnBinding(name);if(binding)return binding}while(scope=scope.parent)}getOwnBinding(name){return this.bindings[name]}getBindingIdentifier(name){const info=this.getBinding(name);return info&&info.identifier}getOwnBindingIdentifier(name){const binding=this.bindings[name];return binding&&binding.identifier}hasOwnBinding(name){return!!this.getOwnBinding(name)}hasBinding(name,
noGlobals){if(!name)return false;if(this.hasOwnBinding(name))return true;if(this.parentHasBinding(name,noGlobals))return true;if(this.hasUid(name))return true;if(!noGlobals&&(0,_includes().default)(Scope.globals,name))return true;if(!noGlobals&&(0,_includes().default)(Scope.contextVariables,name))return true;return false}parentHasBinding(name,noGlobals){return this.parent&&this.parent.hasBinding(name,noGlobals)}moveBindingTo(name,scope){const info=this.getBinding(name);if(info){info.scope.removeOwnBinding(name);
info.scope=scope;scope.bindings[name]=info}}removeOwnBinding(name){delete this.bindings[name]}removeBinding(name){const info=this.getBinding(name);if(info)info.scope.removeOwnBinding(name);let scope=this;do if(scope.uids[name])scope.uids[name]=false;while(scope=scope.parent)}}exports.default=Scope;Scope.globals=Object.keys(_globals().default.builtin);Scope.contextVariables=["arguments","undefined","Infinity","NaN"]},function(module,exports,__webpack_require__){var baseIndexOf=__webpack_require__(180),
isArrayLike=__webpack_require__(104),isString=__webpack_require__(307),toInteger=__webpack_require__(308),values=__webpack_require__(312);var nativeMax=Math.max;function includes(collection,value,fromIndex,guard){collection=isArrayLike(collection)?collection:values(collection);fromIndex=fromIndex&&!guard?toInteger(fromIndex):0;var length=collection.length;if(fromIndex<0)fromIndex=nativeMax(length+fromIndex,0);return isString(collection)?fromIndex<=length&&collection.indexOf(value,fromIndex)>-1:!!length&&
baseIndexOf(collection,value,fromIndex)>-1}module.exports=includes},function(module,exports,__webpack_require__){var baseGetTag=__webpack_require__(52),isArray=__webpack_require__(90),isObjectLike=__webpack_require__(89);var stringTag="[object String]";function isString(value){return typeof value=="string"||!isArray(value)&&isObjectLike(value)&&baseGetTag(value)==stringTag}module.exports=isString},function(module,exports,__webpack_require__){var toFinite=__webpack_require__(309);function toInteger(value){var result=
toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0}module.exports=toInteger},function(module,exports,__webpack_require__){var toNumber=__webpack_require__(310);var INFINITY=1/0,MAX_INTEGER=1.7976931348623157e+308;function toFinite(value){if(!value)return value===0?value:0;value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER}return value===value?value:0}module.exports=toFinite},function(module,exports,
__webpack_require__){var isObject=__webpack_require__(58),isSymbol=__webpack_require__(311);var NAN=0/0;var reTrim=/^\s+|\s+$/g;var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;var reIsBinary=/^0b[01]+$/i;var reIsOctal=/^0o[0-7]+$/i;var freeParseInt=parseInt;function toNumber(value){if(typeof value=="number")return value;if(isSymbol(value))return NAN;if(isObject(value)){var other=typeof value.valueOf=="function"?value.valueOf():value;value=isObject(other)?other+"":other}if(typeof value!="string")return value===
0?value:+value;value=value.replace(reTrim,"");var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value}module.exports=toNumber},function(module,exports,__webpack_require__){var baseGetTag=__webpack_require__(52),isObjectLike=__webpack_require__(89);var symbolTag="[object Symbol]";function isSymbol(value){return typeof value=="symbol"||isObjectLike(value)&&baseGetTag(value)==symbolTag}module.exports=isSymbol},
function(module,exports,__webpack_require__){var baseValues=__webpack_require__(313),keys=__webpack_require__(84);function values(object){return object==null?[]:baseValues(object,keys(object))}module.exports=values},function(module,exports,__webpack_require__){var arrayMap=__webpack_require__(314);function baseValues(object,props){return arrayMap(props,function(key){return object[key]})}module.exports=baseValues},function(module,exports){function arrayMap(array,iteratee){var index=-1,length=array==
null?0:array.length,result=Array(length);while(++index<length)result[index]=iteratee(array[index],index,array);return result}module.exports=arrayMap},function(module,exports,__webpack_require__){var baseRepeat=__webpack_require__(316),isIterateeCall=__webpack_require__(317),toInteger=__webpack_require__(308),toString=__webpack_require__(318);function repeat(string,n,guard){if(guard?isIterateeCall(string,n,guard):n===undefined)n=1;else n=toInteger(n);return baseRepeat(toString(string),n)}module.exports=
repeat},function(module,exports){var MAX_SAFE_INTEGER=9007199254740991;var nativeFloor=Math.floor;function baseRepeat(string,n){var result="";if(!string||n<1||n>MAX_SAFE_INTEGER)return result;do{if(n%2)result+=string;n=nativeFloor(n/2);if(n)string+=string}while(n);return result}module.exports=baseRepeat},function(module,exports,__webpack_require__){var eq=__webpack_require__(39),isArrayLike=__webpack_require__(104),isIndex=__webpack_require__(94),isObject=__webpack_require__(58);function isIterateeCall(value,
index,object){if(!isObject(object))return false;var type=typeof index;if(type=="number"?isArrayLike(object)&&isIndex(index,object.length):type=="string"&&index in object)return eq(object[index],value);return false}module.exports=isIterateeCall},function(module,exports,__webpack_require__){var baseToString=__webpack_require__(319);function toString(value){return value==null?"":baseToString(value)}module.exports=toString},function(module,exports,__webpack_require__){var Symbol=__webpack_require__(53),
arrayMap=__webpack_require__(314),isArray=__webpack_require__(90),isSymbol=__webpack_require__(311);var INFINITY=1/0;var symbolProto=Symbol?Symbol.prototype:undefined,symbolToString=symbolProto?symbolProto.toString:undefined;function baseToString(value){if(typeof value=="string")return value;if(isArray(value))return arrayMap(value,baseToString)+"";if(isSymbol(value))return symbolToString?symbolToString.call(value):"";var result=value+"";return result=="0"&&1/value==-INFINITY?"-0":result}module.exports=
baseToString},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _binding=_interopRequireDefault(__webpack_require__(321));function _helperSplitExportDeclaration(){const data=_interopRequireDefault(__webpack_require__(322));_helperSplitExportDeclaration=function(){return data};return data}function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&
obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const renameVisitor={ReferencedIdentifier({node},state){if(node.name===
state.oldName)node.name=state.newName},Scope(path,state){if(!path.scope.bindingIdentifierEquals(state.oldName,state.binding.identifier))path.skip()},["AssignmentExpression|Declaration"](path,state){const ids=path.getOuterBindingIdentifiers();for(const name in ids)if(name===state.oldName)ids[name].name=state.newName}};class Renamer{constructor(binding,oldName,newName){this.newName=newName;this.oldName=oldName;this.binding=binding}maybeConvertFromExportDeclaration(parentDeclar){const maybeExportDeclar=
parentDeclar.parentPath;if(!maybeExportDeclar.isExportDeclaration())return;if(maybeExportDeclar.isExportDefaultDeclaration()&&!maybeExportDeclar.get("declaration").node.id)return;(0,_helperSplitExportDeclaration().default)(maybeExportDeclar)}maybeConvertFromClassFunctionDeclaration(path){return;if(!path.isFunctionDeclaration()&&!path.isClassDeclaration())return;if(this.binding.kind!=="hoisted")return;path.node.id=t().identifier(this.oldName);path.node._blockHoist=3;path.replaceWith(t().variableDeclaration("let",
[t().variableDeclarator(t().identifier(this.newName),t().toExpression(path.node))]))}maybeConvertFromClassFunctionExpression(path){return;if(!path.isFunctionExpression()&&!path.isClassExpression())return;if(this.binding.kind!=="local")return;path.node.id=t().identifier(this.oldName);this.binding.scope.parent.push({id:t().identifier(this.newName)});path.replaceWith(t().assignmentExpression("=",t().identifier(this.newName),path.node))}rename(block){const {binding,oldName,newName}=this;const {scope,
path}=binding;const parentDeclar=path.find((path)=>path.isDeclaration()||path.isFunctionExpression()||path.isClassExpression());if(parentDeclar){const bindingIds=parentDeclar.getOuterBindingIdentifiers();if(bindingIds[oldName]===binding.identifier)this.maybeConvertFromExportDeclaration(parentDeclar)}scope.traverse(block||scope.block,renameVisitor,this);if(!block){scope.removeOwnBinding(oldName);scope.bindings[newName]=binding;this.binding.identifier.name=newName}if(binding.type==="hoisted");if(parentDeclar){this.maybeConvertFromClassFunctionDeclaration(parentDeclar);
this.maybeConvertFromClassFunctionExpression(parentDeclar)}}}exports.default=Renamer},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;class Binding{constructor({identifier,scope,path,kind}){this.identifier=identifier;this.scope=scope;this.path=path;this.kind=kind;this.constantViolations=[];this.constant=true;this.referencePaths=[];this.referenced=false;this.references=0;this.clearValue()}deoptValue(){this.clearValue();this.hasDeoptedValue=
true}setValue(value){if(this.hasDeoptedValue)return;this.hasValue=true;this.value=value}clearValue(){this.hasDeoptedValue=false;this.hasValue=false;this.value=null}reassign(path){this.constant=false;if(this.constantViolations.indexOf(path)!==-1)return;this.constantViolations.push(path)}reference(path){if(this.referencePaths.indexOf(path)!==-1)return;this.referenced=true;this.references++;this.referencePaths.push(path)}dereference(){this.references--;this.referenced=!!this.references}}exports.default=
Binding},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=splitExportDeclaration;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function splitExportDeclaration(exportDeclaration){if(!exportDeclaration.isExportDeclaration())throw new Error("Only export declarations can be splitted.");const isDefault=exportDeclaration.isExportDefaultDeclaration();const declaration=exportDeclaration.get("declaration");const isClassDeclaration=declaration.isClassDeclaration();if(isDefault){const standaloneDeclaration=
declaration.isFunctionDeclaration()||isClassDeclaration;const scope=declaration.isScope()?declaration.scope.parent:declaration.scope;let id=declaration.node.id;let needBindingRegistration=false;if(!id){needBindingRegistration=true;id=scope.generateUidIdentifier("default");if(standaloneDeclaration||declaration.isFunctionExpression()||declaration.isClassExpression())declaration.node.id=t().cloneNode(id)}const updatedDeclaration=standaloneDeclaration?declaration:t().variableDeclaration("var",[t().variableDeclarator(t().cloneNode(id),
declaration.node)]);const updatedExportDeclaration=t().exportNamedDeclaration(null,[t().exportSpecifier(t().cloneNode(id),t().identifier("default"))]);exportDeclaration.insertAfter(updatedExportDeclaration);exportDeclaration.replaceWith(updatedDeclaration);if(needBindingRegistration)scope.registerBinding(isClassDeclaration?"let":"var",exportDeclaration);return exportDeclaration}if(exportDeclaration.get("specifiers").length>0)throw new Error("It doesn't make sense to split exported specifiers.");const bindingIdentifiers=
declaration.getOuterBindingIdentifiers();const specifiers=Object.keys(bindingIdentifiers).map((name)=>{return t().exportSpecifier(t().identifier(name),t().identifier(name))});const aliasDeclar=t().exportNamedDeclaration(null,specifiers);exportDeclaration.insertAfter(aliasDeclar);exportDeclaration.replaceWith(declaration.node);return exportDeclaration}},function(module,exports,__webpack_require__){var baseRest=__webpack_require__(324),eq=__webpack_require__(39),isIterateeCall=__webpack_require__(317),
keysIn=__webpack_require__(106);var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;var defaults=baseRest(function(object,sources){object=Object(object);var index=-1;var length=sources.length;var guard=length>2?sources[2]:undefined;if(guard&&isIterateeCall(sources[0],sources[1],guard))length=1;while(++index<length){var source=sources[index];var props=keysIn(source);var propsIndex=-1;var propsLength=props.length;while(++propsIndex<propsLength){var key=props[propsIndex];var value=
object[key];if(value===undefined||eq(value,objectProto[key])&&!hasOwnProperty.call(object,key))object[key]=source[key]}}return object});module.exports=defaults},function(module,exports,__webpack_require__){var identity=__webpack_require__(325),overRest=__webpack_require__(326),setToString=__webpack_require__(328);function baseRest(func,start){return setToString(overRest(func,start,identity),func+"")}module.exports=baseRest},function(module,exports){function identity(value){return value}module.exports=
identity},function(module,exports,__webpack_require__){var apply=__webpack_require__(327);var nativeMax=Math.max;function overRest(func,start,transform){start=nativeMax(start===undefined?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length)array[index]=args[start+index];index=-1;var otherArgs=Array(start+1);while(++index<start)otherArgs[index]=args[index];otherArgs[start]=transform(array);return apply(func,
this,otherArgs)}}module.exports=overRest},function(module,exports){function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2])}return func.apply(thisArg,args)}module.exports=apply},function(module,exports,__webpack_require__){var baseSetToString=__webpack_require__(329),shortOut=__webpack_require__(331);var setToString=shortOut(baseSetToString);
module.exports=setToString},function(module,exports,__webpack_require__){var constant=__webpack_require__(330),defineProperty=__webpack_require__(81),identity=__webpack_require__(325);var baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,"toString",{"configurable":true,"enumerable":false,"value":constant(string),"writable":true})};module.exports=baseSetToString},function(module,exports){function constant(value){return function(){return value}}module.exports=
constant},function(module,exports){var HOT_COUNT=800,HOT_SPAN=16;var nativeNow=Date.now;function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT)return arguments[0]}else count=0;return func.apply(undefined,arguments)}}module.exports=shortOut},function(module,exports,__webpack_require__){module.exports=__webpack_require__(333)},function(module){module.exports={"builtin":{"Array":false,
"ArrayBuffer":false,"Atomics":false,"BigInt":false,"BigInt64Array":false,"BigUint64Array":false,"Boolean":false,"constructor":false,"DataView":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Float32Array":false,"Float64Array":false,"Function":false,"hasOwnProperty":false,"Infinity":false,"Int16Array":false,"Int32Array":false,"Int8Array":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,
"JSON":false,"Map":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"Promise":false,"propertyIsEnumerable":false,"Proxy":false,"RangeError":false,"ReferenceError":false,"Reflect":false,"RegExp":false,"Set":false,"SharedArrayBuffer":false,"String":false,"Symbol":false,"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"Uint16Array":false,"Uint32Array":false,"Uint8Array":false,"Uint8ClampedArray":false,"undefined":false,"unescape":false,
"URIError":false,"valueOf":false,"WeakMap":false,"WeakSet":false},"es5":{"Array":false,"Boolean":false,"constructor":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Function":false,"hasOwnProperty":false,"Infinity":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"propertyIsEnumerable":false,
"RangeError":false,"ReferenceError":false,"RegExp":false,"String":false,"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false},"es2015":{"Array":false,"ArrayBuffer":false,"Boolean":false,"constructor":false,"DataView":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Float32Array":false,"Float64Array":false,
"Function":false,"hasOwnProperty":false,"Infinity":false,"Int16Array":false,"Int32Array":false,"Int8Array":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Map":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"Promise":false,"propertyIsEnumerable":false,"Proxy":false,"RangeError":false,"ReferenceError":false,"Reflect":false,"RegExp":false,"Set":false,"String":false,"Symbol":false,"SyntaxError":false,"toLocaleString":false,"toString":false,
"TypeError":false,"Uint16Array":false,"Uint32Array":false,"Uint8Array":false,"Uint8ClampedArray":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false,"WeakMap":false,"WeakSet":false},"es2017":{"Array":false,"ArrayBuffer":false,"Atomics":false,"Boolean":false,"constructor":false,"DataView":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Float32Array":false,
"Float64Array":false,"Function":false,"hasOwnProperty":false,"Infinity":false,"Int16Array":false,"Int32Array":false,"Int8Array":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Map":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"Promise":false,"propertyIsEnumerable":false,"Proxy":false,"RangeError":false,"ReferenceError":false,"Reflect":false,"RegExp":false,"Set":false,"SharedArrayBuffer":false,"String":false,"Symbol":false,
"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"Uint16Array":false,"Uint32Array":false,"Uint8Array":false,"Uint8ClampedArray":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false,"WeakMap":false,"WeakSet":false},"browser":{"AbortController":false,"AbortSignal":false,"addEventListener":false,"alert":false,"AnalyserNode":false,"Animation":false,"AnimationEffectReadOnly":false,"AnimationEffectTiming":false,"AnimationEffectTimingReadOnly":false,"AnimationEvent":false,
"AnimationPlaybackEvent":false,"AnimationTimeline":false,"applicationCache":false,"ApplicationCache":false,"ApplicationCacheErrorEvent":false,"atob":false,"Attr":false,"Audio":false,"AudioBuffer":false,"AudioBufferSourceNode":false,"AudioContext":false,"AudioDestinationNode":false,"AudioListener":false,"AudioNode":false,"AudioParam":false,"AudioProcessingEvent":false,"AudioScheduledSourceNode":false,"AudioWorkletGlobalScope ":false,"AudioWorkletNode":false,"AudioWorkletProcessor":false,"BarProp":false,
"BaseAudioContext":false,"BatteryManager":false,"BeforeUnloadEvent":false,"BiquadFilterNode":false,"Blob":false,"BlobEvent":false,"blur":false,"BroadcastChannel":false,"btoa":false,"BudgetService":false,"ByteLengthQueuingStrategy":false,"Cache":false,"caches":false,"CacheStorage":false,"cancelAnimationFrame":false,"cancelIdleCallback":false,"CanvasCaptureMediaStreamTrack":false,"CanvasGradient":false,"CanvasPattern":false,"CanvasRenderingContext2D":false,"ChannelMergerNode":false,"ChannelSplitterNode":false,
"CharacterData":false,"clearInterval":false,"clearTimeout":false,"clientInformation":false,"ClipboardEvent":false,"close":false,"closed":false,"CloseEvent":false,"Comment":false,"CompositionEvent":false,"confirm":false,"console":false,"ConstantSourceNode":false,"ConvolverNode":false,"CountQueuingStrategy":false,"createImageBitmap":false,"Credential":false,"CredentialsContainer":false,"crypto":false,"Crypto":false,"CryptoKey":false,"CSS":false,"CSSConditionRule":false,"CSSFontFaceRule":false,"CSSGroupingRule":false,
"CSSImportRule":false,"CSSKeyframeRule":false,"CSSKeyframesRule":false,"CSSMediaRule":false,"CSSNamespaceRule":false,"CSSPageRule":false,"CSSRule":false,"CSSRuleList":false,"CSSStyleDeclaration":false,"CSSStyleRule":false,"CSSStyleSheet":false,"CSSSupportsRule":false,"CustomElementRegistry":false,"customElements":false,"CustomEvent":false,"DataTransfer":false,"DataTransferItem":false,"DataTransferItemList":false,"defaultstatus":false,"defaultStatus":false,"DelayNode":false,"DeviceMotionEvent":false,
"DeviceOrientationEvent":false,"devicePixelRatio":false,"dispatchEvent":false,"document":false,"Document":false,"DocumentFragment":false,"DocumentType":false,"DOMError":false,"DOMException":false,"DOMImplementation":false,"DOMMatrix":false,"DOMMatrixReadOnly":false,"DOMParser":false,"DOMPoint":false,"DOMPointReadOnly":false,"DOMQuad":false,"DOMRect":false,"DOMRectReadOnly":false,"DOMStringList":false,"DOMStringMap":false,"DOMTokenList":false,"DragEvent":false,"DynamicsCompressorNode":false,"Element":false,
"ErrorEvent":false,"event":false,"Event":false,"EventSource":false,"EventTarget":false,"external":false,"fetch":false,"File":false,"FileList":false,"FileReader":false,"find":false,"focus":false,"FocusEvent":false,"FontFace":false,"FontFaceSetLoadEvent":false,"FormData":false,"frameElement":false,"frames":false,"GainNode":false,"Gamepad":false,"GamepadButton":false,"GamepadEvent":false,"getComputedStyle":false,"getSelection":false,"HashChangeEvent":false,"Headers":false,"history":false,"History":false,
"HTMLAllCollection":false,"HTMLAnchorElement":false,"HTMLAreaElement":false,"HTMLAudioElement":false,"HTMLBaseElement":false,"HTMLBodyElement":false,"HTMLBRElement":false,"HTMLButtonElement":false,"HTMLCanvasElement":false,"HTMLCollection":false,"HTMLContentElement":false,"HTMLDataElement":false,"HTMLDataListElement":false,"HTMLDetailsElement":false,"HTMLDialogElement":false,"HTMLDirectoryElement":false,"HTMLDivElement":false,"HTMLDListElement":false,"HTMLDocument":false,"HTMLElement":false,"HTMLEmbedElement":false,
"HTMLFieldSetElement":false,"HTMLFontElement":false,"HTMLFormControlsCollection":false,"HTMLFormElement":false,"HTMLFrameElement":false,"HTMLFrameSetElement":false,"HTMLHeadElement":false,"HTMLHeadingElement":false,"HTMLHRElement":false,"HTMLHtmlElement":false,"HTMLIFrameElement":false,"HTMLImageElement":false,"HTMLInputElement":false,"HTMLLabelElement":false,"HTMLLegendElement":false,"HTMLLIElement":false,"HTMLLinkElement":false,"HTMLMapElement":false,"HTMLMarqueeElement":false,"HTMLMediaElement":false,
"HTMLMenuElement":false,"HTMLMetaElement":false,"HTMLMeterElement":false,"HTMLModElement":false,"HTMLObjectElement":false,"HTMLOListElement":false,"HTMLOptGroupElement":false,"HTMLOptionElement":false,"HTMLOptionsCollection":false,"HTMLOutputElement":false,"HTMLParagraphElement":false,"HTMLParamElement":false,"HTMLPictureElement":false,"HTMLPreElement":false,"HTMLProgressElement":false,"HTMLQuoteElement":false,"HTMLScriptElement":false,"HTMLSelectElement":false,"HTMLShadowElement":false,"HTMLSlotElement":false,
"HTMLSourceElement":false,"HTMLSpanElement":false,"HTMLStyleElement":false,"HTMLTableCaptionElement":false,"HTMLTableCellElement":false,"HTMLTableColElement":false,"HTMLTableElement":false,"HTMLTableRowElement":false,"HTMLTableSectionElement":false,"HTMLTemplateElement":false,"HTMLTextAreaElement":false,"HTMLTimeElement":false,"HTMLTitleElement":false,"HTMLTrackElement":false,"HTMLUListElement":false,"HTMLUnknownElement":false,"HTMLVideoElement":false,"IDBCursor":false,"IDBCursorWithValue":false,
"IDBDatabase":false,"IDBFactory":false,"IDBIndex":false,"IDBKeyRange":false,"IDBObjectStore":false,"IDBOpenDBRequest":false,"IDBRequest":false,"IDBTransaction":false,"IDBVersionChangeEvent":false,"IdleDeadline":false,"IIRFilterNode":false,"Image":false,"ImageBitmap":false,"ImageBitmapRenderingContext":false,"ImageCapture":false,"ImageData":false,"indexedDB":false,"innerHeight":false,"innerWidth":false,"InputEvent":false,"IntersectionObserver":false,"IntersectionObserverEntry":false,"Intl":false,"isSecureContext":false,
"KeyboardEvent":false,"KeyframeEffect":false,"KeyframeEffectReadOnly":false,"length":false,"localStorage":false,"location":true,"Location":false,"locationbar":false,"matchMedia":false,"MediaDeviceInfo":false,"MediaDevices":false,"MediaElementAudioSourceNode":false,"MediaEncryptedEvent":false,"MediaError":false,"MediaKeyMessageEvent":false,"MediaKeySession":false,"MediaKeyStatusMap":false,"MediaKeySystemAccess":false,"MediaList":false,"MediaQueryList":false,"MediaQueryListEvent":false,"MediaRecorder":false,
"MediaSettingsRange":false,"MediaSource":false,"MediaStream":false,"MediaStreamAudioDestinationNode":false,"MediaStreamAudioSourceNode":false,"MediaStreamEvent":false,"MediaStreamTrack":false,"MediaStreamTrackEvent":false,"menubar":false,"MessageChannel":false,"MessageEvent":false,"MessagePort":false,"MIDIAccess":false,"MIDIConnectionEvent":false,"MIDIInput":false,"MIDIInputMap":false,"MIDIMessageEvent":false,"MIDIOutput":false,"MIDIOutputMap":false,"MIDIPort":false,"MimeType":false,"MimeTypeArray":false,
"MouseEvent":false,"moveBy":false,"moveTo":false,"MutationEvent":false,"MutationObserver":false,"MutationRecord":false,"name":false,"NamedNodeMap":false,"NavigationPreloadManager":false,"navigator":false,"Navigator":false,"NetworkInformation":false,"Node":false,"NodeFilter":false,"NodeIterator":false,"NodeList":false,"Notification":false,"OfflineAudioCompletionEvent":false,"OfflineAudioContext":false,"offscreenBuffering":false,"OffscreenCanvas":true,"onabort":true,"onafterprint":true,"onanimationend":true,
"onanimationiteration":true,"onanimationstart":true,"onappinstalled":true,"onauxclick":true,"onbeforeinstallprompt":true,"onbeforeprint":true,"onbeforeunload":true,"onblur":true,"oncancel":true,"oncanplay":true,"oncanplaythrough":true,"onchange":true,"onclick":true,"onclose":true,"oncontextmenu":true,"oncuechange":true,"ondblclick":true,"ondevicemotion":true,"ondeviceorientation":true,"ondeviceorientationabsolute":true,"ondrag":true,"ondragend":true,"ondragenter":true,"ondragleave":true,"ondragover":true,
"ondragstart":true,"ondrop":true,"ondurationchange":true,"onemptied":true,"onended":true,"onerror":true,"onfocus":true,"ongotpointercapture":true,"onhashchange":true,"oninput":true,"oninvalid":true,"onkeydown":true,"onkeypress":true,"onkeyup":true,"onlanguagechange":true,"onload":true,"onloadeddata":true,"onloadedmetadata":true,"onloadstart":true,"onlostpointercapture":true,"onmessage":true,"onmessageerror":true,"onmousedown":true,"onmouseenter":true,"onmouseleave":true,"onmousemove":true,"onmouseout":true,
"onmouseover":true,"onmouseup":true,"onmousewheel":true,"onoffline":true,"ononline":true,"onpagehide":true,"onpageshow":true,"onpause":true,"onplay":true,"onplaying":true,"onpointercancel":true,"onpointerdown":true,"onpointerenter":true,"onpointerleave":true,"onpointermove":true,"onpointerout":true,"onpointerover":true,"onpointerup":true,"onpopstate":true,"onprogress":true,"onratechange":true,"onrejectionhandled":true,"onreset":true,"onresize":true,"onscroll":true,"onsearch":true,"onseeked":true,
"onseeking":true,"onselect":true,"onstalled":true,"onstorage":true,"onsubmit":true,"onsuspend":true,"ontimeupdate":true,"ontoggle":true,"ontransitionend":true,"onunhandledrejection":true,"onunload":true,"onvolumechange":true,"onwaiting":true,"onwheel":true,"open":false,"openDatabase":false,"opener":false,"Option":false,"origin":false,"OscillatorNode":false,"outerHeight":false,"outerWidth":false,"PageTransitionEvent":false,"pageXOffset":false,"pageYOffset":false,"PannerNode":false,"parent":false,"Path2D":false,
"PaymentAddress":false,"PaymentRequest":false,"PaymentRequestUpdateEvent":false,"PaymentResponse":false,"performance":false,"Performance":false,"PerformanceEntry":false,"PerformanceLongTaskTiming":false,"PerformanceMark":false,"PerformanceMeasure":false,"PerformanceNavigation":false,"PerformanceNavigationTiming":false,"PerformanceObserver":false,"PerformanceObserverEntryList":false,"PerformancePaintTiming":false,"PerformanceResourceTiming":false,"PerformanceTiming":false,"PeriodicWave":false,"Permissions":false,
"PermissionStatus":false,"personalbar":false,"PhotoCapabilities":false,"Plugin":false,"PluginArray":false,"PointerEvent":false,"PopStateEvent":false,"postMessage":false,"Presentation":false,"PresentationAvailability":false,"PresentationConnection":false,"PresentationConnectionAvailableEvent":false,"PresentationConnectionCloseEvent":false,"PresentationConnectionList":false,"PresentationReceiver":false,"PresentationRequest":false,"print":false,"ProcessingInstruction":false,"ProgressEvent":false,"PromiseRejectionEvent":false,
"prompt":false,"PushManager":false,"PushSubscription":false,"PushSubscriptionOptions":false,"queueMicrotask":false,"RadioNodeList":false,"Range":false,"ReadableStream":false,"registerProcessor":false,"RemotePlayback":false,"removeEventListener":false,"Request":false,"requestAnimationFrame":false,"requestIdleCallback":false,"resizeBy":false,"ResizeObserver":false,"ResizeObserverEntry":false,"resizeTo":false,"Response":false,"RTCCertificate":false,"RTCDataChannel":false,"RTCDataChannelEvent":false,
"RTCDtlsTransport":false,"RTCIceCandidate":false,"RTCIceGatherer":false,"RTCIceTransport":false,"RTCPeerConnection":false,"RTCPeerConnectionIceEvent":false,"RTCRtpContributingSource":false,"RTCRtpReceiver":false,"RTCRtpSender":false,"RTCSctpTransport":false,"RTCSessionDescription":false,"RTCStatsReport":false,"RTCTrackEvent":false,"screen":false,"Screen":false,"screenLeft":false,"ScreenOrientation":false,"screenTop":false,"screenX":false,"screenY":false,"ScriptProcessorNode":false,"scroll":false,
"scrollbars":false,"scrollBy":false,"scrollTo":false,"scrollX":false,"scrollY":false,"SecurityPolicyViolationEvent":false,"Selection":false,"self":false,"ServiceWorker":false,"ServiceWorkerContainer":false,"ServiceWorkerRegistration":false,"sessionStorage":false,"setInterval":false,"setTimeout":false,"ShadowRoot":false,"SharedWorker":false,"SourceBuffer":false,"SourceBufferList":false,"speechSynthesis":false,"SpeechSynthesisEvent":false,"SpeechSynthesisUtterance":false,"StaticRange":false,"status":false,
"statusbar":false,"StereoPannerNode":false,"stop":false,"Storage":false,"StorageEvent":false,"StorageManager":false,"styleMedia":false,"StyleSheet":false,"StyleSheetList":false,"SubtleCrypto":false,"SVGAElement":false,"SVGAngle":false,"SVGAnimatedAngle":false,"SVGAnimatedBoolean":false,"SVGAnimatedEnumeration":false,"SVGAnimatedInteger":false,"SVGAnimatedLength":false,"SVGAnimatedLengthList":false,"SVGAnimatedNumber":false,"SVGAnimatedNumberList":false,"SVGAnimatedPreserveAspectRatio":false,"SVGAnimatedRect":false,
"SVGAnimatedString":false,"SVGAnimatedTransformList":false,"SVGAnimateElement":false,"SVGAnimateMotionElement":false,"SVGAnimateTransformElement":false,"SVGAnimationElement":false,"SVGCircleElement":false,"SVGClipPathElement":false,"SVGComponentTransferFunctionElement":false,"SVGDefsElement":false,"SVGDescElement":false,"SVGDiscardElement":false,"SVGElement":false,"SVGEllipseElement":false,"SVGFEBlendElement":false,"SVGFEColorMatrixElement":false,"SVGFEComponentTransferElement":false,"SVGFECompositeElement":false,
"SVGFEConvolveMatrixElement":false,"SVGFEDiffuseLightingElement":false,"SVGFEDisplacementMapElement":false,"SVGFEDistantLightElement":false,"SVGFEDropShadowElement":false,"SVGFEFloodElement":false,"SVGFEFuncAElement":false,"SVGFEFuncBElement":false,"SVGFEFuncGElement":false,"SVGFEFuncRElement":false,"SVGFEGaussianBlurElement":false,"SVGFEImageElement":false,"SVGFEMergeElement":false,"SVGFEMergeNodeElement":false,"SVGFEMorphologyElement":false,"SVGFEOffsetElement":false,"SVGFEPointLightElement":false,
"SVGFESpecularLightingElement":false,"SVGFESpotLightElement":false,"SVGFETileElement":false,"SVGFETurbulenceElement":false,"SVGFilterElement":false,"SVGForeignObjectElement":false,"SVGGElement":false,"SVGGeometryElement":false,"SVGGradientElement":false,"SVGGraphicsElement":false,"SVGImageElement":false,"SVGLength":false,"SVGLengthList":false,"SVGLinearGradientElement":false,"SVGLineElement":false,"SVGMarkerElement":false,"SVGMaskElement":false,"SVGMatrix":false,"SVGMetadataElement":false,"SVGMPathElement":false,
"SVGNumber":false,"SVGNumberList":false,"SVGPathElement":false,"SVGPatternElement":false,"SVGPoint":false,"SVGPointList":false,"SVGPolygonElement":false,"SVGPolylineElement":false,"SVGPreserveAspectRatio":false,"SVGRadialGradientElement":false,"SVGRect":false,"SVGRectElement":false,"SVGScriptElement":false,"SVGSetElement":false,"SVGStopElement":false,"SVGStringList":false,"SVGStyleElement":false,"SVGSVGElement":false,"SVGSwitchElement":false,"SVGSymbolElement":false,"SVGTextContentElement":false,
"SVGTextElement":false,"SVGTextPathElement":false,"SVGTextPositioningElement":false,"SVGTitleElement":false,"SVGTransform":false,"SVGTransformList":false,"SVGTSpanElement":false,"SVGUnitTypes":false,"SVGUseElement":false,"SVGViewElement":false,"TaskAttributionTiming":false,"Text":false,"TextDecoder":false,"TextEncoder":false,"TextEvent":false,"TextMetrics":false,"TextTrack":false,"TextTrackCue":false,"TextTrackCueList":false,"TextTrackList":false,"TimeRanges":false,"toolbar":false,"top":false,"Touch":false,
"TouchEvent":false,"TouchList":false,"TrackEvent":false,"TransitionEvent":false,"TreeWalker":false,"UIEvent":false,"URL":false,"URLSearchParams":false,"ValidityState":false,"visualViewport":false,"VisualViewport":false,"VTTCue":false,"WaveShaperNode":false,"WebAssembly":false,"WebGL2RenderingContext":false,"WebGLActiveInfo":false,"WebGLBuffer":false,"WebGLContextEvent":false,"WebGLFramebuffer":false,"WebGLProgram":false,"WebGLQuery":false,"WebGLRenderbuffer":false,"WebGLRenderingContext":false,"WebGLSampler":false,
"WebGLShader":false,"WebGLShaderPrecisionFormat":false,"WebGLSync":false,"WebGLTexture":false,"WebGLTransformFeedback":false,"WebGLUniformLocation":false,"WebGLVertexArrayObject":false,"WebSocket":false,"WheelEvent":false,"window":false,"Window":false,"Worker":false,"WritableStream":false,"XMLDocument":false,"XMLHttpRequest":false,"XMLHttpRequestEventTarget":false,"XMLHttpRequestUpload":false,"XMLSerializer":false,"XPathEvaluator":false,"XPathExpression":false,"XPathResult":false,"XSLTProcessor":false},
"worker":{"addEventListener":false,"applicationCache":false,"atob":false,"Blob":false,"BroadcastChannel":false,"btoa":false,"Cache":false,"caches":false,"clearInterval":false,"clearTimeout":false,"close":true,"console":false,"fetch":false,"FileReaderSync":false,"FormData":false,"Headers":false,"IDBCursor":false,"IDBCursorWithValue":false,"IDBDatabase":false,"IDBFactory":false,"IDBIndex":false,"IDBKeyRange":false,"IDBObjectStore":false,"IDBOpenDBRequest":false,"IDBRequest":false,"IDBTransaction":false,
"IDBVersionChangeEvent":false,"ImageData":false,"importScripts":true,"indexedDB":false,"location":false,"MessageChannel":false,"MessagePort":false,"name":false,"navigator":false,"Notification":false,"onclose":true,"onconnect":true,"onerror":true,"onlanguagechange":true,"onmessage":true,"onoffline":true,"ononline":true,"onrejectionhandled":true,"onunhandledrejection":true,"performance":false,"Performance":false,"PerformanceEntry":false,"PerformanceMark":false,"PerformanceMeasure":false,"PerformanceNavigation":false,
"PerformanceResourceTiming":false,"PerformanceTiming":false,"postMessage":true,"Promise":false,"queueMicrotask":false,"removeEventListener":false,"Request":false,"Response":false,"self":true,"ServiceWorkerRegistration":false,"setInterval":false,"setTimeout":false,"TextDecoder":false,"TextEncoder":false,"URL":false,"URLSearchParams":false,"WebSocket":false,"Worker":false,"WorkerGlobalScope":false,"XMLHttpRequest":false},"node":{"__dirname":false,"__filename":false,"Buffer":false,"clearImmediate":false,
"clearInterval":false,"clearTimeout":false,"console":false,"exports":true,"global":false,"Intl":false,"module":false,"process":false,"queueMicrotask":false,"require":false,"setImmediate":false,"setInterval":false,"setTimeout":false,"TextDecoder":false,"TextEncoder":false,"URL":false,"URLSearchParams":false},"commonjs":{"exports":true,"global":false,"module":false,"require":false},"amd":{"define":false,"require":false},"mocha":{"after":false,"afterEach":false,"before":false,"beforeEach":false,"context":false,
"describe":false,"it":false,"mocha":false,"run":false,"setup":false,"specify":false,"suite":false,"suiteSetup":false,"suiteTeardown":false,"teardown":false,"test":false,"xcontext":false,"xdescribe":false,"xit":false,"xspecify":false},"jasmine":{"afterAll":false,"afterEach":false,"beforeAll":false,"beforeEach":false,"describe":false,"expect":false,"fail":false,"fdescribe":false,"fit":false,"it":false,"jasmine":false,"pending":false,"runs":false,"spyOn":false,"spyOnProperty":false,"waits":false,"waitsFor":false,
"xdescribe":false,"xit":false},"jest":{"afterAll":false,"afterEach":false,"beforeAll":false,"beforeEach":false,"describe":false,"expect":false,"fdescribe":false,"fit":false,"it":false,"jest":false,"pit":false,"require":false,"test":false,"xdescribe":false,"xit":false,"xtest":false},"qunit":{"asyncTest":false,"deepEqual":false,"equal":false,"expect":false,"module":false,"notDeepEqual":false,"notEqual":false,"notOk":false,"notPropEqual":false,"notStrictEqual":false,"ok":false,"propEqual":false,"QUnit":false,
"raises":false,"start":false,"stop":false,"strictEqual":false,"test":false,"throws":false},"phantomjs":{"console":true,"exports":true,"phantom":true,"require":true,"WebPage":true},"couch":{"emit":false,"exports":false,"getRow":false,"log":false,"module":false,"provides":false,"require":false,"respond":false,"send":false,"start":false,"sum":false},"rhino":{"defineClass":false,"deserialize":false,"gc":false,"help":false,"importClass":false,"importPackage":false,"java":false,"load":false,"loadClass":false,
"Packages":false,"print":false,"quit":false,"readFile":false,"readUrl":false,"runCommand":false,"seal":false,"serialize":false,"spawn":false,"sync":false,"toint32":false,"version":false},"nashorn":{"__DIR__":false,"__FILE__":false,"__LINE__":false,"com":false,"edu":false,"exit":false,"java":false,"Java":false,"javafx":false,"JavaImporter":false,"javax":false,"JSAdapter":false,"load":false,"loadWithNewGlobal":false,"org":false,"Packages":false,"print":false,"quit":false},"wsh":{"ActiveXObject":true,
"Enumerator":true,"GetObject":true,"ScriptEngine":true,"ScriptEngineBuildVersion":true,"ScriptEngineMajorVersion":true,"ScriptEngineMinorVersion":true,"VBArray":true,"WScript":true,"WSH":true,"XDomainRequest":true},"jquery":{"$":false,"jQuery":false},"yui":{"YAHOO":false,"YAHOO_config":false,"YUI":false,"YUI_config":false},"shelljs":{"cat":false,"cd":false,"chmod":false,"config":false,"cp":false,"dirs":false,"echo":false,"env":false,"error":false,"exec":false,"exit":false,"find":false,"grep":false,
"ln":false,"ls":false,"mkdir":false,"mv":false,"popd":false,"pushd":false,"pwd":false,"rm":false,"sed":false,"set":false,"target":false,"tempdir":false,"test":false,"touch":false,"which":false},"prototypejs":{"$":false,"$$":false,"$A":false,"$break":false,"$continue":false,"$F":false,"$H":false,"$R":false,"$w":false,"Abstract":false,"Ajax":false,"Autocompleter":false,"Builder":false,"Class":false,"Control":false,"Draggable":false,"Draggables":false,"Droppables":false,"Effect":false,"Element":false,
"Enumerable":false,"Event":false,"Field":false,"Form":false,"Hash":false,"Insertion":false,"ObjectRange":false,"PeriodicalExecuter":false,"Position":false,"Prototype":false,"Scriptaculous":false,"Selector":false,"Sortable":false,"SortableObserver":false,"Sound":false,"Template":false,"Toggle":false,"Try":false},"meteor":{"_":false,"$":false,"Accounts":false,"AccountsClient":false,"AccountsCommon":false,"AccountsServer":false,"App":false,"Assets":false,"Blaze":false,"check":false,"Cordova":false,"DDP":false,
"DDPRateLimiter":false,"DDPServer":false,"Deps":false,"EJSON":false,"Email":false,"HTTP":false,"Log":false,"Match":false,"Meteor":false,"Mongo":false,"MongoInternals":false,"Npm":false,"Package":false,"Plugin":false,"process":false,"Random":false,"ReactiveDict":false,"ReactiveVar":false,"Router":false,"ServiceConfiguration":false,"Session":false,"share":false,"Spacebars":false,"Template":false,"Tinytest":false,"Tracker":false,"UI":false,"Utils":false,"WebApp":false,"WebAppInternals":false},"mongo":{"_isWindows":false,
"_rand":false,"BulkWriteResult":false,"cat":false,"cd":false,"connect":false,"db":false,"getHostName":false,"getMemInfo":false,"hostname":false,"ISODate":false,"listFiles":false,"load":false,"ls":false,"md5sumFile":false,"mkdir":false,"Mongo":false,"NumberInt":false,"NumberLong":false,"ObjectId":false,"PlanCache":false,"print":false,"printjson":false,"pwd":false,"quit":false,"removeFile":false,"rs":false,"sh":false,"UUID":false,"version":false,"WriteResult":false},"applescript":{"$":false,"Application":false,
"Automation":false,"console":false,"delay":false,"Library":false,"ObjC":false,"ObjectSpecifier":false,"Path":false,"Progress":false,"Ref":false},"serviceworker":{"addEventListener":false,"applicationCache":false,"atob":false,"Blob":false,"BroadcastChannel":false,"btoa":false,"Cache":false,"caches":false,"CacheStorage":false,"clearInterval":false,"clearTimeout":false,"Client":false,"clients":false,"Clients":false,"close":true,"console":false,"ExtendableEvent":false,"ExtendableMessageEvent":false,"fetch":false,
"FetchEvent":false,"FileReaderSync":false,"FormData":false,"Headers":false,"IDBCursor":false,"IDBCursorWithValue":false,"IDBDatabase":false,"IDBFactory":false,"IDBIndex":false,"IDBKeyRange":false,"IDBObjectStore":false,"IDBOpenDBRequest":false,"IDBRequest":false,"IDBTransaction":false,"IDBVersionChangeEvent":false,"ImageData":false,"importScripts":false,"indexedDB":false,"location":false,"MessageChannel":false,"MessagePort":false,"name":false,"navigator":false,"Notification":false,"onclose":true,
"onconnect":true,"onerror":true,"onfetch":true,"oninstall":true,"onlanguagechange":true,"onmessage":true,"onmessageerror":true,"onnotificationclick":true,"onnotificationclose":true,"onoffline":true,"ononline":true,"onpush":true,"onpushsubscriptionchange":true,"onrejectionhandled":true,"onsync":true,"onunhandledrejection":true,"performance":false,"Performance":false,"PerformanceEntry":false,"PerformanceMark":false,"PerformanceMeasure":false,"PerformanceNavigation":false,"PerformanceResourceTiming":false,
"PerformanceTiming":false,"postMessage":true,"Promise":false,"queueMicrotask":false,"registration":false,"removeEventListener":false,"Request":false,"Response":false,"self":false,"ServiceWorker":false,"ServiceWorkerContainer":false,"ServiceWorkerGlobalScope":false,"ServiceWorkerMessageEvent":false,"ServiceWorkerRegistration":false,"setInterval":false,"setTimeout":false,"skipWaiting":false,"TextDecoder":false,"TextEncoder":false,"URL":false,"URLSearchParams":false,"WebSocket":false,"WindowClient":false,
"Worker":false,"WorkerGlobalScope":false,"XMLHttpRequest":false},"atomtest":{"advanceClock":false,"fakeClearInterval":false,"fakeClearTimeout":false,"fakeSetInterval":false,"fakeSetTimeout":false,"resetTimeouts":false,"waitsForPromise":false},"embertest":{"andThen":false,"click":false,"currentPath":false,"currentRouteName":false,"currentURL":false,"fillIn":false,"find":false,"findAll":false,"findWithAssert":false,"keyEvent":false,"pauseTest":false,"resumeTest":false,"triggerEvent":false,"visit":false,
"wait":false},"protractor":{"$":false,"$$":false,"browser":false,"by":false,"By":false,"DartObject":false,"element":false,"protractor":false},"shared-node-browser":{"clearInterval":false,"clearTimeout":false,"console":false,"setInterval":false,"setTimeout":false,"URL":false,"URLSearchParams":false},"webextensions":{"browser":false,"chrome":false,"opr":false},"greasemonkey":{"cloneInto":false,"createObjectIn":false,"exportFunction":false,"GM":false,"GM_addStyle":false,"GM_deleteValue":false,"GM_getResourceText":false,
"GM_getResourceURL":false,"GM_getValue":false,"GM_info":false,"GM_listValues":false,"GM_log":false,"GM_openInTab":false,"GM_registerMenuCommand":false,"GM_setClipboard":false,"GM_setValue":false,"GM_xmlhttpRequest":false,"unsafeWindow":false},"devtools":{"$":false,"$_":false,"$$":false,"$0":false,"$1":false,"$2":false,"$3":false,"$4":false,"$x":false,"chrome":false,"clear":false,"copy":false,"debug":false,"dir":false,"dirxml":false,"getEventListeners":false,"inspect":false,"keys":false,"monitor":false,
"monitorEvents":false,"profile":false,"profileEnd":false,"queryObjects":false,"table":false,"undebug":false,"unmonitor":false,"unmonitorEvents":false,"values":false}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.clear=clear;exports.clearPath=clearPath;exports.clearScope=clearScope;exports.scope=exports.path=void 0;let path=new WeakMap;exports.path=path;let scope=new WeakMap;exports.scope=scope;function clear(){clearPath();clearScope()}
function clearPath(){exports.path=path=new WeakMap}function clearScope(){exports.scope=scope=new WeakMap}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;exports.CodeGenerator=void 0;var _sourceMap=_interopRequireDefault(__webpack_require__(336));var _printer=_interopRequireDefault(__webpack_require__(337));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Generator extends _printer.default{constructor(ast,
opts={},code){const format=normalizeOptions(code,opts);const map=opts.sourceMaps?new _sourceMap.default(opts,code):null;super(format,map);this.ast=ast}generate(){return super.generate(this.ast)}}function normalizeOptions(code,opts){const format={auxiliaryCommentBefore:opts.auxiliaryCommentBefore,auxiliaryCommentAfter:opts.auxiliaryCommentAfter,shouldPrintComment:opts.shouldPrintComment,retainLines:opts.retainLines,retainFunctionParens:opts.retainFunctionParens,comments:opts.comments==null||opts.comments,
compact:opts.compact,minified:opts.minified,concise:opts.concise,jsonCompatibleStrings:opts.jsonCompatibleStrings,indent:{adjustMultilineComment:true,style:"  ",base:0},decoratorsBeforeExport:!!opts.decoratorsBeforeExport,jsescOption:Object.assign({quotes:"double",wrap:true},opts.jsescOption)};if(format.minified){format.compact=true;format.shouldPrintComment=format.shouldPrintComment||(()=>format.comments)}else format.shouldPrintComment=format.shouldPrintComment||((value)=>format.comments||value.indexOf("@license")>=
0||value.indexOf("@preserve")>=0);if(format.compact==="auto"){format.compact=code.length>5E5;if(format.compact)console.error("[BABEL] Note: The code generator has deoptimised the styling of "+`${opts.filename} as it exceeds the max of ${"500KB"}.`)}if(format.compact)format.indent.adjustMultilineComment=false;return format}class CodeGenerator{constructor(ast,opts,code){this._generator=new Generator(ast,opts,code)}generate(){return this._generator.generate()}}exports.CodeGenerator=CodeGenerator;function _default(ast,
opts,code){const gen=new Generator(ast,opts,code);return gen.generate()}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;function _sourceMap(){const data=_interopRequireDefault(__webpack_require__(280));_sourceMap=function(){return data};return data}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class SourceMap{constructor(opts,code){this._cachedMap=null;this._code=code;this._opts=opts;
this._rawMappings=[]}get(){if(!this._cachedMap){const map=this._cachedMap=new (_sourceMap().default.SourceMapGenerator)({sourceRoot:this._opts.sourceRoot});const code=this._code;if(typeof code==="string")map.setSourceContent(this._opts.sourceFileName,code);else if(typeof code==="object")Object.keys(code).forEach((sourceFileName)=>{map.setSourceContent(sourceFileName,code[sourceFileName])});this._rawMappings.forEach(map.addMapping,map)}return this._cachedMap.toJSON()}getRawMappings(){return this._rawMappings.slice()}mark(generatedLine,
generatedColumn,line,column,identifierName,filename,force){if(this._lastGenLine!==generatedLine&&line===null)return;if(!force&&this._lastGenLine===generatedLine&&this._lastSourceLine===line&&this._lastSourceColumn===column)return;this._cachedMap=null;this._lastGenLine=generatedLine;this._lastSourceLine=line;this._lastSourceColumn=column;this._rawMappings.push({name:identifierName||undefined,generated:{line:generatedLine,column:generatedColumn},source:line==null?undefined:filename||this._opts.sourceFileName,
original:line==null?undefined:{line:line,column:column}})}}exports.default=SourceMap},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;function _isInteger(){const data=_interopRequireDefault(__webpack_require__(338));_isInteger=function(){return data};return data}function _repeat(){const data=_interopRequireDefault(__webpack_require__(315));_repeat=function(){return data};return data}var _buffer=_interopRequireDefault(__webpack_require__(339));
var n=_interopRequireWildcard(__webpack_require__(341));function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}var generatorFunctions=_interopRequireWildcard(__webpack_require__(344));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const SCIENTIFIC_NOTATION=/e/i;const ZERO_DECIMAL_INTEGER=/\.0+$/;const NON_DECIMAL_LITERAL=/^0[box]/;class Printer{constructor(format,map){this.inForStatementInitCounter=0;this._printStack=[];this._indent=0;this._insideAux=false;this._printedCommentStarts={};this._parenPushNewlineState=null;
this._noLineTerminator=false;this._printAuxAfterOnNextUserNode=false;this._printedComments=new WeakSet;this._endsWithInteger=false;this._endsWithWord=false;this.format=format||{};this._buf=new _buffer.default(map)}generate(ast){this.print(ast);this._maybeAddAuxComment();return this._buf.get()}indent(){if(this.format.compact||this.format.concise)return;this._indent++}dedent(){if(this.format.compact||this.format.concise)return;this._indent--}semicolon(force=false){this._maybeAddAuxComment();this._append(";",
!force)}rightBrace(){if(this.format.minified)this._buf.removeLastSemicolon();this.token("}")}space(force=false){if(this.format.compact)return;if(this._buf.hasContent()&&!this.endsWith(" ")&&!this.endsWith("\n")||force)this._space()}word(str){if(this._endsWithWord||this.endsWith("/")&&str.indexOf("/")===0)this._space();this._maybeAddAuxComment();this._append(str);this._endsWithWord=true}number(str){this.word(str);this._endsWithInteger=(0,_isInteger().default)(+str)&&!NON_DECIMAL_LITERAL.test(str)&&
!SCIENTIFIC_NOTATION.test(str)&&!ZERO_DECIMAL_INTEGER.test(str)&&str[str.length-1]!=="."}token(str){if(str==="--"&&this.endsWith("!")||str[0]==="+"&&this.endsWith("+")||str[0]==="-"&&this.endsWith("-")||str[0]==="."&&this._endsWithInteger)this._space();this._maybeAddAuxComment();this._append(str)}newline(i){if(this.format.retainLines||this.format.compact)return;if(this.format.concise){this.space();return}if(this.endsWith("\n\n"))return;if(typeof i!=="number")i=1;i=Math.min(2,i);if(this.endsWith("{\n")||
this.endsWith(":\n"))i--;if(i<=0)return;for(let j=0;j<i;j++)this._newline()}endsWith(str){return this._buf.endsWith(str)}removeTrailingNewline(){this._buf.removeTrailingNewline()}exactSource(loc,cb){this._catchUp("start",loc);this._buf.exactSource(loc,cb)}source(prop,loc){this._catchUp(prop,loc);this._buf.source(prop,loc)}withSource(prop,loc,cb){this._catchUp(prop,loc);this._buf.withSource(prop,loc,cb)}_space(){this._append(" ",true)}_newline(){this._append("\n",true)}_append(str,queue=false){this._maybeAddParen(str);
this._maybeIndent(str);if(queue)this._buf.queue(str);else this._buf.append(str);this._endsWithWord=false;this._endsWithInteger=false}_maybeIndent(str){if(this._indent&&this.endsWith("\n")&&str[0]!=="\n")this._buf.queue(this._getIndent())}_maybeAddParen(str){const parenPushNewlineState=this._parenPushNewlineState;if(!parenPushNewlineState)return;this._parenPushNewlineState=null;let i;for(i=0;i<str.length&&str[i]===" ";i++)continue;if(i===str.length)return;const cha=str[i];if(cha!=="\n"){if(cha!=="/")return;
if(i+1===str.length)return;const chaPost=str[i+1];if(chaPost!=="/"&&chaPost!=="*")return}this.token("(");this.indent();parenPushNewlineState.printed=true}_catchUp(prop,loc){if(!this.format.retainLines)return;const pos=loc?loc[prop]:null;if(pos&&pos.line!==null){const count=pos.line-this._buf.getCurrentLine();for(let i=0;i<count;i++)this._newline()}}_getIndent(){return(0,_repeat().default)(this.format.indent.style,this._indent)}startTerminatorless(isLabel=false){if(isLabel){this._noLineTerminator=
true;return null}else return this._parenPushNewlineState={printed:false}}endTerminatorless(state){this._noLineTerminator=false;if(state&&state.printed){this.dedent();this.newline();this.token(")")}}print(node,parent){if(!node)return;const oldConcise=this.format.concise;if(node._compact)this.format.concise=true;const printMethod=this[node.type];if(!printMethod)throw new ReferenceError(`unknown node of type ${JSON.stringify(node.type)} with constructor ${JSON.stringify(node&&node.constructor.name)}`);
this._printStack.push(node);const oldInAux=this._insideAux;this._insideAux=!node.loc;this._maybeAddAuxComment(this._insideAux&&!oldInAux);let needsParens=n.needsParens(node,parent,this._printStack);if(this.format.retainFunctionParens&&node.type==="FunctionExpression"&&node.extra&&node.extra.parenthesized)needsParens=true;if(needsParens)this.token("(");this._printLeadingComments(node);const loc=t().isProgram(node)||t().isFile(node)?null:node.loc;this.withSource("start",loc,()=>{this[node.type](node,
parent)});this._printTrailingComments(node);if(needsParens)this.token(")");this._printStack.pop();this.format.concise=oldConcise;this._insideAux=oldInAux}_maybeAddAuxComment(enteredPositionlessNode){if(enteredPositionlessNode)this._printAuxBeforeComment();if(!this._insideAux)this._printAuxAfterComment()}_printAuxBeforeComment(){if(this._printAuxAfterOnNextUserNode)return;this._printAuxAfterOnNextUserNode=true;const comment=this.format.auxiliaryCommentBefore;if(comment)this._printComment({type:"CommentBlock",
value:comment})}_printAuxAfterComment(){if(!this._printAuxAfterOnNextUserNode)return;this._printAuxAfterOnNextUserNode=false;const comment=this.format.auxiliaryCommentAfter;if(comment)this._printComment({type:"CommentBlock",value:comment})}getPossibleRaw(node){const extra=node.extra;if(extra&&extra.raw!=null&&extra.rawValue!=null&&node.value===extra.rawValue)return extra.raw}printJoin(nodes,parent,opts={}){if(!nodes||!nodes.length)return;if(opts.indent)this.indent();const newlineOpts={addNewlines:opts.addNewlines};
for(let i=0;i<nodes.length;i++){const node=nodes[i];if(!node)continue;if(opts.statement)this._printNewline(true,node,parent,newlineOpts);this.print(node,parent);if(opts.iterator)opts.iterator(node,i);if(opts.separator&&i<nodes.length-1)opts.separator.call(this);if(opts.statement)this._printNewline(false,node,parent,newlineOpts)}if(opts.indent)this.dedent()}printAndIndentOnComments(node,parent){const indent=node.leadingComments&&node.leadingComments.length>0;if(indent)this.indent();this.print(node,
parent);if(indent)this.dedent()}printBlock(parent){const node=parent.body;if(!t().isEmptyStatement(node))this.space();this.print(node,parent)}_printTrailingComments(node){this._printComments(this._getComments(false,node))}_printLeadingComments(node){this._printComments(this._getComments(true,node))}printInnerComments(node,indent=true){if(!node.innerComments||!node.innerComments.length)return;if(indent)this.indent();this._printComments(node.innerComments);if(indent)this.dedent()}printSequence(nodes,
parent,opts={}){opts.statement=true;return this.printJoin(nodes,parent,opts)}printList(items,parent,opts={}){if(opts.separator==null)opts.separator=commaSeparator;return this.printJoin(items,parent,opts)}_printNewline(leading,node,parent,opts){if(this.format.retainLines||this.format.compact)return;if(this.format.concise){this.space();return}let lines=0;if(this._buf.hasContent()){if(!leading)lines++;if(opts.addNewlines)lines+=opts.addNewlines(leading,node)||0;const needs=leading?n.needsWhitespaceBefore:
n.needsWhitespaceAfter;if(needs(node,parent))lines++}this.newline(lines)}_getComments(leading,node){return node&&(leading?node.leadingComments:node.trailingComments)||[]}_printComment(comment){if(!this.format.shouldPrintComment(comment.value))return;if(comment.ignore)return;if(this._printedComments.has(comment))return;this._printedComments.add(comment);if(comment.start!=null){if(this._printedCommentStarts[comment.start])return;this._printedCommentStarts[comment.start]=true}const isBlockComment=comment.type===
"CommentBlock";this.newline(this._buf.hasContent()&&!this._noLineTerminator&&isBlockComment?1:0);if(!this.endsWith("[")&&!this.endsWith("{"))this.space();let val=!isBlockComment&&!this._noLineTerminator?`//${comment.value}\n`:`/*${comment.value}*/`;if(isBlockComment&&this.format.indent.adjustMultilineComment){const offset=comment.loc&&comment.loc.start.column;if(offset){const newlineRegex=new RegExp("\\n\\s{1,"+offset+"}","g");val=val.replace(newlineRegex,"\n")}const indentSize=Math.max(this._getIndent().length,
this._buf.getCurrentColumn());val=val.replace(/\n(?!$)/g,`\n${(0,_repeat().default)(" ",indentSize)}`)}if(this.endsWith("/"))this._space();this.withSource("start",comment.loc,()=>{this._append(val)});this.newline(isBlockComment&&!this._noLineTerminator?1:0)}_printComments(comments){if(!comments||!comments.length)return;for(const comment of comments)this._printComment(comment)}}exports.default=Printer;Object.assign(Printer.prototype,generatorFunctions);function commaSeparator(){this.token(",");this.space()}
},function(module,exports,__webpack_require__){var toInteger=__webpack_require__(308);function isInteger(value){return typeof value=="number"&&value==toInteger(value)}module.exports=isInteger},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;function _trimRight(){const data=_interopRequireDefault(__webpack_require__(340));_trimRight=function(){return data};return data}function _interopRequireDefault(obj){return obj&&obj.__esModule?
obj:{default:obj}}const SPACES_RE=/^[ \t]+$/;class Buffer{constructor(map){this._map=null;this._buf=[];this._last="";this._queue=[];this._position={line:1,column:0};this._sourcePosition={identifierName:null,line:null,column:null,filename:null};this._disallowedPop=null;this._map=map}get(){this._flush();const map=this._map;const result={code:(0,_trimRight().default)(this._buf.join("")),map:null,rawMappings:map&&map.getRawMappings()};if(map)Object.defineProperty(result,"map",{configurable:true,enumerable:true,
get(){return this.map=map.get()},set(value){Object.defineProperty(this,"map",{value,writable:true})}});return result}append(str){this._flush();const {line,column,filename,identifierName,force}=this._sourcePosition;this._append(str,line,column,identifierName,filename,force)}queue(str){if(str==="\n")while(this._queue.length>0&&SPACES_RE.test(this._queue[0][0]))this._queue.shift();const {line,column,filename,identifierName,force}=this._sourcePosition;this._queue.unshift([str,line,column,identifierName,
filename,force])}_flush(){let item;while(item=this._queue.pop())this._append(...item)}_append(str,line,column,identifierName,filename,force){if(this._map&&str[0]!=="\n")this._map.mark(this._position.line,this._position.column,line,column,identifierName,filename,force);this._buf.push(str);this._last=str[str.length-1];for(let i=0;i<str.length;i++)if(str[i]==="\n"){this._position.line++;this._position.column=0}else this._position.column++}removeTrailingNewline(){if(this._queue.length>0&&this._queue[0][0]===
"\n")this._queue.shift()}removeLastSemicolon(){if(this._queue.length>0&&this._queue[0][0]===";")this._queue.shift()}endsWith(suffix){if(suffix.length===1){let last;if(this._queue.length>0){const str=this._queue[0][0];last=str[str.length-1]}else last=this._last;return last===suffix}const end=this._last+this._queue.reduce((acc,item)=>item[0]+acc,"");if(suffix.length<=end.length)return end.slice(-suffix.length)===suffix;return false}hasContent(){return this._queue.length>0||!!this._last}exactSource(loc,
cb){this.source("start",loc,true);cb();this.source("end",loc);this._disallowPop("start",loc)}source(prop,loc,force){if(prop&&!loc)return;this._normalizePosition(prop,loc,this._sourcePosition,force)}withSource(prop,loc,cb){if(!this._map)return cb();const originalLine=this._sourcePosition.line;const originalColumn=this._sourcePosition.column;const originalFilename=this._sourcePosition.filename;const originalIdentifierName=this._sourcePosition.identifierName;this.source(prop,loc);cb();if((!this._sourcePosition.force||
this._sourcePosition.line!==originalLine||this._sourcePosition.column!==originalColumn||this._sourcePosition.filename!==originalFilename)&&(!this._disallowedPop||this._disallowedPop.line!==originalLine||this._disallowedPop.column!==originalColumn||this._disallowedPop.filename!==originalFilename)){this._sourcePosition.line=originalLine;this._sourcePosition.column=originalColumn;this._sourcePosition.filename=originalFilename;this._sourcePosition.identifierName=originalIdentifierName;this._sourcePosition.force=
false;this._disallowedPop=null}}_disallowPop(prop,loc){if(prop&&!loc)return;this._disallowedPop=this._normalizePosition(prop,loc)}_normalizePosition(prop,loc,targetObj,force){const pos=loc?loc[prop]:null;if(targetObj===undefined)targetObj={identifierName:null,line:null,column:null,filename:null,force:false};const origLine=targetObj.line;const origColumn=targetObj.column;const origFilename=targetObj.filename;targetObj.identifierName=prop==="start"&&loc&&loc.identifierName||null;targetObj.line=pos?
pos.line:null;targetObj.column=pos?pos.column:null;targetObj.filename=loc&&loc.filename||null;if(force||targetObj.line!==origLine||targetObj.column!==origColumn||targetObj.filename!==origFilename)targetObj.force=force;return targetObj}getCurrentColumn(){const extra=this._queue.reduce((acc,item)=>item[0]+acc,"");const lastIndex=extra.lastIndexOf("\n");return lastIndex===-1?this._position.column+extra.length:extra.length-1-lastIndex}getCurrentLine(){const extra=this._queue.reduce((acc,item)=>item[0]+
acc,"");let count=0;for(let i=0;i<extra.length;i++)if(extra[i]==="\n")count++;return this._position.line+count}}exports.default=Buffer},function(module,exports,__webpack_require__){module.exports=function(str){var tail=str.length;while(/[\s\uFEFF\u00A0]/.test(str[tail-1]))tail--;return str.slice(0,tail)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.needsWhitespace=needsWhitespace;exports.needsWhitespaceBefore=needsWhitespaceBefore;
exports.needsWhitespaceAfter=needsWhitespaceAfter;exports.needsParens=needsParens;var whitespace=_interopRequireWildcard(__webpack_require__(342));var parens=_interopRequireWildcard(__webpack_require__(343));function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=
Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function expandAliases(obj){const newObj={};function add(type,func){const fn=newObj[type];newObj[type]=fn?function(node,parent,stack){const result=fn(node,parent,stack);return result==null?func(node,parent,stack):result}:func}for(const type of Object.keys(obj)){const aliases=t().FLIPPED_ALIAS_KEYS[type];
if(aliases)for(const alias of aliases)add(alias,obj[type]);else add(type,obj[type])}return newObj}const expandedParens=expandAliases(parens);const expandedWhitespaceNodes=expandAliases(whitespace.nodes);const expandedWhitespaceList=expandAliases(whitespace.list);function find(obj,node,parent,printStack){const fn=obj[node.type];return fn?fn(node,parent,printStack):null}function isOrHasCallExpression(node){if(t().isCallExpression(node))return true;if(t().isMemberExpression(node))return isOrHasCallExpression(node.object)||
!node.computed&&isOrHasCallExpression(node.property);else return false}function needsWhitespace(node,parent,type){if(!node)return 0;if(t().isExpressionStatement(node))node=node.expression;let linesInfo=find(expandedWhitespaceNodes,node,parent);if(!linesInfo){const items=find(expandedWhitespaceList,node,parent);if(items)for(let i=0;i<items.length;i++){linesInfo=needsWhitespace(items[i],node,type);if(linesInfo)break}}if(typeof linesInfo==="object"&&linesInfo!==null)return linesInfo[type]||0;return 0}
function needsWhitespaceBefore(node,parent){return needsWhitespace(node,parent,"before")}function needsWhitespaceAfter(node,parent){return needsWhitespace(node,parent,"after")}function needsParens(node,parent,printStack){if(!parent)return false;if(t().isNewExpression(parent)&&parent.callee===node)if(isOrHasCallExpression(node))return true;return find(expandedParens,node,parent,printStack)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.list=
exports.nodes=void 0;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=
obj;return newObj}}function crawl(node,state={}){if(t().isMemberExpression(node)){crawl(node.object,state);if(node.computed)crawl(node.property,state)}else if(t().isBinary(node)||t().isAssignmentExpression(node)){crawl(node.left,state);crawl(node.right,state)}else if(t().isCallExpression(node)){state.hasCall=true;crawl(node.callee,state)}else if(t().isFunction(node))state.hasFunction=true;else if(t().isIdentifier(node))state.hasHelper=state.hasHelper||isHelper(node.callee);return state}function isHelper(node){if(t().isMemberExpression(node))return isHelper(node.object)||
isHelper(node.property);else if(t().isIdentifier(node))return node.name==="require"||node.name[0]==="_";else if(t().isCallExpression(node))return isHelper(node.callee);else if(t().isBinary(node)||t().isAssignmentExpression(node))return t().isIdentifier(node.left)&&isHelper(node.left)||isHelper(node.right);else return false}function isType(node){return t().isLiteral(node)||t().isObjectExpression(node)||t().isArrayExpression(node)||t().isIdentifier(node)||t().isMemberExpression(node)}const nodes={AssignmentExpression(node){const state=
crawl(node.right);if(state.hasCall&&state.hasHelper||state.hasFunction)return{before:state.hasFunction,after:true}},SwitchCase(node,parent){return{before:node.consequent.length||parent.cases[0]===node,after:!node.consequent.length&&parent.cases[parent.cases.length-1]===node}},LogicalExpression(node){if(t().isFunction(node.left)||t().isFunction(node.right))return{after:true}},Literal(node){if(node.value==="use strict")return{after:true}},CallExpression(node){if(t().isFunction(node.callee)||isHelper(node))return{before:true,
after:true}},VariableDeclaration(node){for(let i=0;i<node.declarations.length;i++){const declar=node.declarations[i];let enabled=isHelper(declar.id)&&!isType(declar.init);if(!enabled){const state=crawl(declar.init);enabled=isHelper(declar.init)&&state.hasCall||state.hasFunction}if(enabled)return{before:true,after:true}}},IfStatement(node){if(t().isBlockStatement(node.consequent))return{before:true,after:true}}};exports.nodes=nodes;nodes.ObjectProperty=nodes.ObjectTypeProperty=nodes.ObjectMethod=function(node,
parent){if(parent.properties[0]===node)return{before:true}};nodes.ObjectTypeCallProperty=function(node,parent){if(parent.callProperties[0]===node&&(!parent.properties||!parent.properties.length))return{before:true}};nodes.ObjectTypeIndexer=function(node,parent){if(parent.indexers[0]===node&&(!parent.properties||!parent.properties.length)&&(!parent.callProperties||!parent.callProperties.length))return{before:true}};nodes.ObjectTypeInternalSlot=function(node,parent){if(parent.internalSlots[0]===node&&
(!parent.properties||!parent.properties.length)&&(!parent.callProperties||!parent.callProperties.length)&&(!parent.indexers||!parent.indexers.length))return{before:true}};const list={VariableDeclaration(node){return node.declarations.map((decl)=>decl.init)},ArrayExpression(node){return node.elements},ObjectExpression(node){return node.properties}};exports.list=list;[["Function",true],["Class",true],["Loop",true],["LabeledStatement",true],["SwitchStatement",true],["TryStatement",true]].forEach(function([type,
amounts]){if(typeof amounts==="boolean")amounts={after:amounts,before:amounts};[type].concat(t().FLIPPED_ALIAS_KEYS[type]||[]).forEach(function(type){nodes[type]=function(){return amounts}})})},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.FunctionTypeAnnotation=exports.NullableTypeAnnotation=NullableTypeAnnotation;exports.UpdateExpression=UpdateExpression;exports.ObjectExpression=ObjectExpression;exports.DoExpression=DoExpression;exports.Binary=
Binary;exports.IntersectionTypeAnnotation=exports.UnionTypeAnnotation=UnionTypeAnnotation;exports.TSAsExpression=TSAsExpression;exports.TSTypeAssertion=TSTypeAssertion;exports.BinaryExpression=BinaryExpression;exports.SequenceExpression=SequenceExpression;exports.AwaitExpression=exports.YieldExpression=YieldExpression;exports.ClassExpression=ClassExpression;exports.UnaryLike=UnaryLike;exports.FunctionExpression=FunctionExpression;exports.ArrowFunctionExpression=ArrowFunctionExpression;exports.ConditionalExpression=
ConditionalExpression;exports.OptionalMemberExpression=OptionalMemberExpression;exports.AssignmentExpression=AssignmentExpression;exports.NewExpression=NewExpression;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?
Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const PRECEDENCE={"||":0,"&&":1,"|":2,"^":3,"&":4,"==":5,"===":5,"!=":5,"!==":5,"<":6,">":6,"<=":6,">=":6,in:6,instanceof:6,">>":7,"<<":7,">>>":7,"+":8,"-":8,"*":9,"/":9,"%":9,"**":10};const isClassExtendsClause=(node,parent)=>(t().isClassDeclaration(parent)||t().isClassExpression(parent))&&parent.superClass===node;function NullableTypeAnnotation(node,
parent){return t().isArrayTypeAnnotation(parent)}function UpdateExpression(node,parent){return t().isMemberExpression(parent,{object:node})||t().isCallExpression(parent,{callee:node})||t().isNewExpression(parent,{callee:node})||isClassExtendsClause(node,parent)}function ObjectExpression(node,parent,printStack){return isFirstInStatement(printStack,{considerArrow:true})}function DoExpression(node,parent,printStack){return isFirstInStatement(printStack)}function Binary(node,parent){if(node.operator===
"**"&&t().isBinaryExpression(parent,{operator:"**"}))return parent.left===node;if(isClassExtendsClause(node,parent))return true;if((t().isCallExpression(parent)||t().isNewExpression(parent))&&parent.callee===node||t().isUnaryLike(parent)||t().isMemberExpression(parent)&&parent.object===node||t().isAwaitExpression(parent))return true;if(t().isBinary(parent)){const parentOp=parent.operator;const parentPos=PRECEDENCE[parentOp];const nodeOp=node.operator;const nodePos=PRECEDENCE[nodeOp];if(parentPos===
nodePos&&parent.right===node&&!t().isLogicalExpression(parent)||parentPos>nodePos)return true}return false}function UnionTypeAnnotation(node,parent){return t().isArrayTypeAnnotation(parent)||t().isNullableTypeAnnotation(parent)||t().isIntersectionTypeAnnotation(parent)||t().isUnionTypeAnnotation(parent)}function TSAsExpression(){return true}function TSTypeAssertion(){return true}function BinaryExpression(node,parent){return node.operator==="in"&&(t().isVariableDeclarator(parent)||t().isFor(parent))}
function SequenceExpression(node,parent){if(t().isForStatement(parent)||t().isThrowStatement(parent)||t().isReturnStatement(parent)||t().isIfStatement(parent)&&parent.test===node||t().isWhileStatement(parent)&&parent.test===node||t().isForInStatement(parent)&&parent.right===node||t().isSwitchStatement(parent)&&parent.discriminant===node||t().isExpressionStatement(parent)&&parent.expression===node)return false;return true}function YieldExpression(node,parent){return t().isBinary(parent)||t().isUnaryLike(parent)||
t().isCallExpression(parent)||t().isMemberExpression(parent)||t().isNewExpression(parent)||t().isAwaitExpression(parent)&&t().isYieldExpression(node)||t().isConditionalExpression(parent)&&node===parent.test||isClassExtendsClause(node,parent)}function ClassExpression(node,parent,printStack){return isFirstInStatement(printStack,{considerDefaultExports:true})}function UnaryLike(node,parent){return t().isMemberExpression(parent,{object:node})||t().isCallExpression(parent,{callee:node})||t().isNewExpression(parent,
{callee:node})||t().isBinaryExpression(parent,{operator:"**",left:node})||isClassExtendsClause(node,parent)}function FunctionExpression(node,parent,printStack){return isFirstInStatement(printStack,{considerDefaultExports:true})}function ArrowFunctionExpression(node,parent){return t().isExportDeclaration(parent)||ConditionalExpression(node,parent)}function ConditionalExpression(node,parent){if(t().isUnaryLike(parent)||t().isBinary(parent)||t().isConditionalExpression(parent,{test:node})||t().isAwaitExpression(parent)||
t().isOptionalMemberExpression(parent)||t().isTaggedTemplateExpression(parent)||t().isTSTypeAssertion(parent)||t().isTSAsExpression(parent))return true;return UnaryLike(node,parent)}function OptionalMemberExpression(node,parent){return t().isCallExpression(parent)||t().isMemberExpression(parent)}function AssignmentExpression(node){if(t().isObjectPattern(node.left))return true;else return ConditionalExpression(...arguments)}function NewExpression(node,parent){return isClassExtendsClause(node,parent)}
function isFirstInStatement(printStack,{considerArrow=false,considerDefaultExports=false}={}){let i=printStack.length-1;let node=printStack[i];i--;let parent=printStack[i];while(i>0){if(t().isExpressionStatement(parent,{expression:node})||t().isTaggedTemplateExpression(parent)||considerDefaultExports&&t().isExportDefaultDeclaration(parent,{declaration:node})||considerArrow&&t().isArrowFunctionExpression(parent,{body:node}))return true;if(t().isCallExpression(parent,{callee:node})||t().isSequenceExpression(parent)&&
parent.expressions[0]===node||t().isMemberExpression(parent,{object:node})||t().isConditional(parent,{test:node})||t().isBinary(parent,{left:node})||t().isAssignmentExpression(parent,{left:node})){node=parent;i--;parent=printStack[i]}else return false}return false}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var _templateLiterals=__webpack_require__(345);Object.keys(_templateLiterals).forEach(function(key){if(key==="default"||key==="__esModule")return;
Object.defineProperty(exports,key,{enumerable:true,get:function(){return _templateLiterals[key]}})});var _expressions=__webpack_require__(346);Object.keys(_expressions).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _expressions[key]}})});var _statements=__webpack_require__(347);Object.keys(_statements).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,
{enumerable:true,get:function(){return _statements[key]}})});var _classes=__webpack_require__(348);Object.keys(_classes).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _classes[key]}})});var _methods=__webpack_require__(349);Object.keys(_methods).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _methods[key]}})});
var _modules=__webpack_require__(350);Object.keys(_modules).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _modules[key]}})});var _types=__webpack_require__(351);Object.keys(_types).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _types[key]}})});var _flow=__webpack_require__(353);Object.keys(_flow).forEach(function(key){if(key===
"default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _flow[key]}})});var _base=__webpack_require__(354);Object.keys(_base).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _base[key]}})});var _jsx=__webpack_require__(355);Object.keys(_jsx).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,
get:function(){return _jsx[key]}})});var _typescript=__webpack_require__(356);Object.keys(_typescript).forEach(function(key){if(key==="default"||key==="__esModule")return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _typescript[key]}})})},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.TaggedTemplateExpression=TaggedTemplateExpression;exports.TemplateElement=TemplateElement;exports.TemplateLiteral=TemplateLiteral;
function TaggedTemplateExpression(node){this.print(node.tag,node);this.print(node.typeParameters,node);this.print(node.quasi,node)}function TemplateElement(node,parent){const isFirst=parent.quasis[0]===node;const isLast=parent.quasis[parent.quasis.length-1]===node;const value=(isFirst?"`":"}")+node.value.raw+(isLast?"`":"${");this.token(value)}function TemplateLiteral(node){const quasis=node.quasis;for(let i=0;i<quasis.length;i++){this.print(quasis[i],node);if(i+1<quasis.length)this.print(node.expressions[i],
node)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.UnaryExpression=UnaryExpression;exports.DoExpression=DoExpression;exports.ParenthesizedExpression=ParenthesizedExpression;exports.UpdateExpression=UpdateExpression;exports.ConditionalExpression=ConditionalExpression;exports.NewExpression=NewExpression;exports.SequenceExpression=SequenceExpression;exports.ThisExpression=ThisExpression;exports.Super=Super;exports.Decorator=Decorator;
exports.OptionalMemberExpression=OptionalMemberExpression;exports.OptionalCallExpression=OptionalCallExpression;exports.CallExpression=CallExpression;exports.Import=Import;exports.EmptyStatement=EmptyStatement;exports.ExpressionStatement=ExpressionStatement;exports.AssignmentPattern=AssignmentPattern;exports.LogicalExpression=exports.BinaryExpression=exports.AssignmentExpression=AssignmentExpression;exports.BindExpression=BindExpression;exports.MemberExpression=MemberExpression;exports.MetaProperty=
MetaProperty;exports.PrivateName=PrivateName;exports.AwaitExpression=exports.YieldExpression=void 0;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}var n=_interopRequireWildcard(__webpack_require__(341));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?
Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function UnaryExpression(node){if(node.operator==="void"||node.operator==="delete"||node.operator==="typeof"||node.operator==="throw"){this.word(node.operator);this.space()}else this.token(node.operator);this.print(node.argument,node)}function DoExpression(node){this.word("do");this.space();this.print(node.body,node)}function ParenthesizedExpression(node){this.token("(");
this.print(node.expression,node);this.token(")")}function UpdateExpression(node){if(node.prefix){this.token(node.operator);this.print(node.argument,node)}else{this.startTerminatorless(true);this.print(node.argument,node);this.endTerminatorless();this.token(node.operator)}}function ConditionalExpression(node){this.print(node.test,node);this.space();this.token("?");this.space();this.print(node.consequent,node);this.space();this.token(":");this.space();this.print(node.alternate,node)}function NewExpression(node,
parent){this.word("new");this.space();this.print(node.callee,node);if(this.format.minified&&node.arguments.length===0&&!node.optional&&!t().isCallExpression(parent,{callee:node})&&!t().isMemberExpression(parent)&&!t().isNewExpression(parent))return;this.print(node.typeArguments,node);this.print(node.typeParameters,node);if(node.optional)this.token("?.");this.token("(");this.printList(node.arguments,node);this.token(")")}function SequenceExpression(node){this.printList(node.expressions,node)}function ThisExpression(){this.word("this")}
function Super(){this.word("super")}function Decorator(node){this.token("@");this.print(node.expression,node);this.newline()}function OptionalMemberExpression(node){this.print(node.object,node);if(!node.computed&&t().isMemberExpression(node.property))throw new TypeError("Got a MemberExpression for MemberExpression property");let computed=node.computed;if(t().isLiteral(node.property)&&typeof node.property.value==="number")computed=true;if(node.optional)this.token("?.");if(computed){this.token("[");
this.print(node.property,node);this.token("]")}else{if(!node.optional)this.token(".");this.print(node.property,node)}}function OptionalCallExpression(node){this.print(node.callee,node);this.print(node.typeArguments,node);this.print(node.typeParameters,node);if(node.optional)this.token("?.");this.token("(");this.printList(node.arguments,node);this.token(")")}function CallExpression(node){this.print(node.callee,node);this.print(node.typeArguments,node);this.print(node.typeParameters,node);this.token("(");
this.printList(node.arguments,node);this.token(")")}function Import(){this.word("import")}function buildYieldAwait(keyword){return function(node){this.word(keyword);if(node.delegate)this.token("*");if(node.argument){this.space();const terminatorState=this.startTerminatorless();this.print(node.argument,node);this.endTerminatorless(terminatorState)}}}const YieldExpression=buildYieldAwait("yield");exports.YieldExpression=YieldExpression;const AwaitExpression=buildYieldAwait("await");exports.AwaitExpression=
AwaitExpression;function EmptyStatement(){this.semicolon(true)}function ExpressionStatement(node){this.print(node.expression,node);this.semicolon()}function AssignmentPattern(node){this.print(node.left,node);if(node.left.optional)this.token("?");this.print(node.left.typeAnnotation,node);this.space();this.token("=");this.space();this.print(node.right,node)}function AssignmentExpression(node,parent){const parens=this.inForStatementInitCounter&&node.operator==="in"&&!n.needsParens(node,parent);if(parens)this.token("(");
this.print(node.left,node);this.space();if(node.operator==="in"||node.operator==="instanceof")this.word(node.operator);else this.token(node.operator);this.space();this.print(node.right,node);if(parens)this.token(")")}function BindExpression(node){this.print(node.object,node);this.token("::");this.print(node.callee,node)}function MemberExpression(node){this.print(node.object,node);if(!node.computed&&t().isMemberExpression(node.property))throw new TypeError("Got a MemberExpression for MemberExpression property");
let computed=node.computed;if(t().isLiteral(node.property)&&typeof node.property.value==="number")computed=true;if(computed){this.token("[");this.print(node.property,node);this.token("]")}else{this.token(".");this.print(node.property,node)}}function MetaProperty(node){this.print(node.meta,node);this.token(".");this.print(node.property,node)}function PrivateName(node){this.token("#");this.print(node.id,node)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.WithStatement=WithStatement;exports.IfStatement=IfStatement;exports.ForStatement=ForStatement;exports.WhileStatement=WhileStatement;exports.DoWhileStatement=DoWhileStatement;exports.LabeledStatement=LabeledStatement;exports.TryStatement=TryStatement;exports.CatchClause=CatchClause;exports.SwitchStatement=SwitchStatement;exports.SwitchCase=SwitchCase;exports.DebuggerStatement=DebuggerStatement;exports.VariableDeclaration=VariableDeclaration;exports.VariableDeclarator=VariableDeclarator;
exports.ThrowStatement=exports.BreakStatement=exports.ReturnStatement=exports.ContinueStatement=exports.ForOfStatement=exports.ForInStatement=void 0;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function WithStatement(node){this.word("with");this.space();this.token("(");this.print(node.object,node);this.token(")");this.printBlock(node)}function IfStatement(node){this.word("if");this.space();this.token("(");this.print(node.test,node);this.token(")");this.space();const needsBlock=node.alternate&&t().isIfStatement(getLastStatement(node.consequent));if(needsBlock){this.token("{");
this.newline();this.indent()}this.printAndIndentOnComments(node.consequent,node);if(needsBlock){this.dedent();this.newline();this.token("}")}if(node.alternate){if(this.endsWith("}"))this.space();this.word("else");this.space();this.printAndIndentOnComments(node.alternate,node)}}function getLastStatement(statement){if(!t().isStatement(statement.body))return statement;return getLastStatement(statement.body)}function ForStatement(node){this.word("for");this.space();this.token("(");this.inForStatementInitCounter++;
this.print(node.init,node);this.inForStatementInitCounter--;this.token(";");if(node.test){this.space();this.print(node.test,node)}this.token(";");if(node.update){this.space();this.print(node.update,node)}this.token(")");this.printBlock(node)}function WhileStatement(node){this.word("while");this.space();this.token("(");this.print(node.test,node);this.token(")");this.printBlock(node)}const buildForXStatement=function(op){return function(node){this.word("for");this.space();if(op==="of"&&node.await){this.word("await");
this.space()}this.token("(");this.print(node.left,node);this.space();this.word(op);this.space();this.print(node.right,node);this.token(")");this.printBlock(node)}};const ForInStatement=buildForXStatement("in");exports.ForInStatement=ForInStatement;const ForOfStatement=buildForXStatement("of");exports.ForOfStatement=ForOfStatement;function DoWhileStatement(node){this.word("do");this.space();this.print(node.body,node);this.space();this.word("while");this.space();this.token("(");this.print(node.test,
node);this.token(")");this.semicolon()}function buildLabelStatement(prefix,key="label"){return function(node){this.word(prefix);const label=node[key];if(label){this.space();const isLabel=key=="label";const terminatorState=this.startTerminatorless(isLabel);this.print(label,node);this.endTerminatorless(terminatorState)}this.semicolon()}}const ContinueStatement=buildLabelStatement("continue");exports.ContinueStatement=ContinueStatement;const ReturnStatement=buildLabelStatement("return","argument");exports.ReturnStatement=
ReturnStatement;const BreakStatement=buildLabelStatement("break");exports.BreakStatement=BreakStatement;const ThrowStatement=buildLabelStatement("throw","argument");exports.ThrowStatement=ThrowStatement;function LabeledStatement(node){this.print(node.label,node);this.token(":");this.space();this.print(node.body,node)}function TryStatement(node){this.word("try");this.space();this.print(node.block,node);this.space();if(node.handlers)this.print(node.handlers[0],node);else this.print(node.handler,node);
if(node.finalizer){this.space();this.word("finally");this.space();this.print(node.finalizer,node)}}function CatchClause(node){this.word("catch");this.space();if(node.param){this.token("(");this.print(node.param,node);this.token(")");this.space()}this.print(node.body,node)}function SwitchStatement(node){this.word("switch");this.space();this.token("(");this.print(node.discriminant,node);this.token(")");this.space();this.token("{");this.printSequence(node.cases,node,{indent:true,addNewlines(leading,
cas){if(!leading&&node.cases[node.cases.length-1]===cas)return-1}});this.token("}")}function SwitchCase(node){if(node.test){this.word("case");this.space();this.print(node.test,node);this.token(":")}else{this.word("default");this.token(":")}if(node.consequent.length){this.newline();this.printSequence(node.consequent,node,{indent:true})}}function DebuggerStatement(){this.word("debugger");this.semicolon()}function variableDeclarationIndent(){this.token(",");this.newline();if(this.endsWith("\n"))for(let i=
0;i<4;i++)this.space(true)}function constDeclarationIndent(){this.token(",");this.newline();if(this.endsWith("\n"))for(let i=0;i<6;i++)this.space(true)}function VariableDeclaration(node,parent){if(node.declare){this.word("declare");this.space()}this.word(node.kind);this.space();let hasInits=false;if(!t().isFor(parent))for(const declar of node.declarations)if(declar.init)hasInits=true;let separator;if(hasInits)separator=node.kind==="const"?constDeclarationIndent:variableDeclarationIndent;this.printList(node.declarations,
node,{separator});if(t().isFor(parent))if(parent.left===node||parent.init===node)return;this.semicolon()}function VariableDeclarator(node){this.print(node.id,node);if(node.definite)this.token("!");this.print(node.id.typeAnnotation,node);if(node.init){this.space();this.token("=");this.space();this.print(node.init,node)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ClassExpression=exports.ClassDeclaration=ClassDeclaration;exports.ClassBody=
ClassBody;exports.ClassProperty=ClassProperty;exports.ClassPrivateProperty=ClassPrivateProperty;exports.ClassMethod=ClassMethod;exports.ClassPrivateMethod=ClassPrivateMethod;exports._classMethodHead=_classMethodHead;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=
Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function ClassDeclaration(node,parent){if(!this.format.decoratorsBeforeExport||!t().isExportDefaultDeclaration(parent)&&!t().isExportNamedDeclaration(parent))this.printJoin(node.decorators,node);if(node.declare){this.word("declare");this.space()}if(node.abstract){this.word("abstract");
this.space()}this.word("class");if(node.id){this.space();this.print(node.id,node)}this.print(node.typeParameters,node);if(node.superClass){this.space();this.word("extends");this.space();this.print(node.superClass,node);this.print(node.superTypeParameters,node)}if(node.implements){this.space();this.word("implements");this.space();this.printList(node.implements,node)}this.space();this.print(node.body,node)}function ClassBody(node){this.token("{");this.printInnerComments(node);if(node.body.length===
0)this.token("}");else{this.newline();this.indent();this.printSequence(node.body,node);this.dedent();if(!this.endsWith("\n"))this.newline();this.rightBrace()}}function ClassProperty(node){this.printJoin(node.decorators,node);if(node.accessibility){this.word(node.accessibility);this.space()}if(node.static){this.word("static");this.space()}if(node.abstract){this.word("abstract");this.space()}if(node.readonly){this.word("readonly");this.space()}if(node.computed){this.token("[");this.print(node.key,node);
this.token("]")}else{this._variance(node);this.print(node.key,node)}if(node.optional)this.token("?");if(node.definite)this.token("!");this.print(node.typeAnnotation,node);if(node.value){this.space();this.token("=");this.space();this.print(node.value,node)}this.semicolon()}function ClassPrivateProperty(node){if(node.static){this.word("static");this.space()}this.print(node.key,node);this.print(node.typeAnnotation,node);if(node.value){this.space();this.token("=");this.space();this.print(node.value,node)}this.semicolon()}
function ClassMethod(node){this._classMethodHead(node);this.space();this.print(node.body,node)}function ClassPrivateMethod(node){this._classMethodHead(node);this.space();this.print(node.body,node)}function _classMethodHead(node){this.printJoin(node.decorators,node);if(node.accessibility){this.word(node.accessibility);this.space()}if(node.abstract){this.word("abstract");this.space()}if(node.static){this.word("static");this.space()}this._methodHead(node)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports._params=_params;exports._parameters=_parameters;exports._param=_param;exports._methodHead=_methodHead;exports._predicate=_predicate;exports._functionHead=_functionHead;exports.FunctionDeclaration=exports.FunctionExpression=FunctionExpression;exports.ArrowFunctionExpression=ArrowFunctionExpression;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;
else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _params(node){this.print(node.typeParameters,node);this.token("(");this._parameters(node.params,node);this.token(")");this.print(node.returnType,node)}function _parameters(parameters,
parent){for(let i=0;i<parameters.length;i++){this._param(parameters[i],parent);if(i<parameters.length-1){this.token(",");this.space()}}}function _param(parameter,parent){this.printJoin(parameter.decorators,parameter);this.print(parameter,parent);if(parameter.optional)this.token("?");this.print(parameter.typeAnnotation,parameter)}function _methodHead(node){const kind=node.kind;const key=node.key;if(kind==="get"||kind==="set"){this.word(kind);this.space()}if(node.async){this.word("async");this.space()}if(kind===
"method"||kind==="init")if(node.generator)this.token("*");if(node.computed){this.token("[");this.print(key,node);this.token("]")}else this.print(key,node);if(node.optional)this.token("?");this._params(node)}function _predicate(node){if(node.predicate){if(!node.returnType)this.token(":");this.space();this.print(node.predicate,node)}}function _functionHead(node){if(node.async){this.word("async");this.space()}this.word("function");if(node.generator)this.token("*");this.space();if(node.id)this.print(node.id,
node);this._params(node);this._predicate(node)}function FunctionExpression(node){this._functionHead(node);this.space();this.print(node.body,node)}function ArrowFunctionExpression(node){if(node.async){this.word("async");this.space()}const firstParam=node.params[0];if(node.params.length===1&&t().isIdentifier(firstParam)&&!hasTypes(node,firstParam))if(this.format.retainLines&&node.loc&&node.body.loc&&node.loc.start.line<node.body.loc.start.line){this.token("(");if(firstParam.loc&&firstParam.loc.start.line>
node.loc.start.line){this.indent();this.print(firstParam,node);this.dedent();this._catchUp("start",node.body.loc)}else this.print(firstParam,node);this.token(")")}else this.print(firstParam,node);else this._params(node);this._predicate(node);this.space();this.token("=>");this.space();this.print(node.body,node)}function hasTypes(node,param){return node.typeParameters||node.returnType||param.typeAnnotation||param.optional||param.trailingComments}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.ImportSpecifier=ImportSpecifier;exports.ImportDefaultSpecifier=ImportDefaultSpecifier;exports.ExportDefaultSpecifier=ExportDefaultSpecifier;exports.ExportSpecifier=ExportSpecifier;exports.ExportNamespaceSpecifier=ExportNamespaceSpecifier;exports.ExportAllDeclaration=ExportAllDeclaration;exports.ExportNamedDeclaration=ExportNamedDeclaration;exports.ExportDefaultDeclaration=ExportDefaultDeclaration;exports.ImportDeclaration=ImportDeclaration;exports.ImportNamespaceSpecifier=
ImportNamespaceSpecifier;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=
obj;return newObj}}function ImportSpecifier(node){if(node.importKind==="type"||node.importKind==="typeof"){this.word(node.importKind);this.space()}this.print(node.imported,node);if(node.local&&node.local.name!==node.imported.name){this.space();this.word("as");this.space();this.print(node.local,node)}}function ImportDefaultSpecifier(node){this.print(node.local,node)}function ExportDefaultSpecifier(node){this.print(node.exported,node)}function ExportSpecifier(node){this.print(node.local,node);if(node.exported&&
node.local.name!==node.exported.name){this.space();this.word("as");this.space();this.print(node.exported,node)}}function ExportNamespaceSpecifier(node){this.token("*");this.space();this.word("as");this.space();this.print(node.exported,node)}function ExportAllDeclaration(node){this.word("export");this.space();if(node.exportKind==="type"){this.word("type");this.space()}this.token("*");this.space();this.word("from");this.space();this.print(node.source,node);this.semicolon()}function ExportNamedDeclaration(node){if(this.format.decoratorsBeforeExport&&
t().isClassDeclaration(node.declaration))this.printJoin(node.declaration.decorators,node);this.word("export");this.space();ExportDeclaration.apply(this,arguments)}function ExportDefaultDeclaration(node){if(this.format.decoratorsBeforeExport&&t().isClassDeclaration(node.declaration))this.printJoin(node.declaration.decorators,node);this.word("export");this.space();this.word("default");this.space();ExportDeclaration.apply(this,arguments)}function ExportDeclaration(node){if(node.declaration){const declar=
node.declaration;this.print(declar,node);if(!t().isStatement(declar))this.semicolon()}else{if(node.exportKind==="type"){this.word("type");this.space()}const specifiers=node.specifiers.slice(0);let hasSpecial=false;while(true){const first=specifiers[0];if(t().isExportDefaultSpecifier(first)||t().isExportNamespaceSpecifier(first)){hasSpecial=true;this.print(specifiers.shift(),node);if(specifiers.length){this.token(",");this.space()}}else break}if(specifiers.length||!specifiers.length&&!hasSpecial){this.token("{");
if(specifiers.length){this.space();this.printList(specifiers,node);this.space()}this.token("}")}if(node.source){this.space();this.word("from");this.space();this.print(node.source,node)}this.semicolon()}}function ImportDeclaration(node){this.word("import");this.space();if(node.importKind==="type"||node.importKind==="typeof"){this.word(node.importKind);this.space()}const specifiers=node.specifiers.slice(0);if(specifiers&&specifiers.length){while(true){const first=specifiers[0];if(t().isImportDefaultSpecifier(first)||
t().isImportNamespaceSpecifier(first)){this.print(specifiers.shift(),node);if(specifiers.length){this.token(",");this.space()}}else break}if(specifiers.length){this.token("{");this.space();this.printList(specifiers,node);this.space();this.token("}")}this.space();this.word("from");this.space()}this.print(node.source,node);this.semicolon()}function ImportNamespaceSpecifier(node){this.token("*");this.space();this.word("as");this.space();this.print(node.local,node)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.Identifier=Identifier;exports.SpreadElement=exports.RestElement=RestElement;exports.ObjectPattern=exports.ObjectExpression=ObjectExpression;exports.ObjectMethod=ObjectMethod;exports.ObjectProperty=ObjectProperty;exports.ArrayPattern=exports.ArrayExpression=ArrayExpression;exports.RegExpLiteral=RegExpLiteral;exports.BooleanLiteral=BooleanLiteral;exports.NullLiteral=NullLiteral;exports.NumericLiteral=NumericLiteral;exports.StringLiteral=StringLiteral;exports.BigIntLiteral=
BigIntLiteral;exports.PipelineTopicExpression=PipelineTopicExpression;exports.PipelineBareFunction=PipelineBareFunction;exports.PipelinePrimaryTopicReference=PipelinePrimaryTopicReference;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _jsesc(){const data=_interopRequireDefault(__webpack_require__(352));_jsesc=function(){return data};return data}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function Identifier(node){this.exactSource(node.loc,()=>{this.word(node.name)})}function RestElement(node){this.token("...");
this.print(node.argument,node)}function ObjectExpression(node){const props=node.properties;this.token("{");this.printInnerComments(node);if(props.length){this.space();this.printList(props,node,{indent:true,statement:true});this.space()}this.token("}")}function ObjectMethod(node){this.printJoin(node.decorators,node);this._methodHead(node);this.space();this.print(node.body,node)}function ObjectProperty(node){this.printJoin(node.decorators,node);if(node.computed){this.token("[");this.print(node.key,
node);this.token("]")}else{if(t().isAssignmentPattern(node.value)&&t().isIdentifier(node.key)&&node.key.name===node.value.left.name){this.print(node.value,node);return}this.print(node.key,node);if(node.shorthand&&t().isIdentifier(node.key)&&t().isIdentifier(node.value)&&node.key.name===node.value.name)return}this.token(":");this.space();this.print(node.value,node)}function ArrayExpression(node){const elems=node.elements;const len=elems.length;this.token("[");this.printInnerComments(node);for(let i=
0;i<elems.length;i++){const elem=elems[i];if(elem){if(i>0)this.space();this.print(elem,node);if(i<len-1)this.token(",")}else this.token(",")}this.token("]")}function RegExpLiteral(node){this.word(`/${node.pattern}/${node.flags}`)}function BooleanLiteral(node){this.word(node.value?"true":"false")}function NullLiteral(){this.word("null")}function NumericLiteral(node){const raw=this.getPossibleRaw(node);const value=node.value+"";if(raw==null)this.number(value);else if(this.format.minified)this.number(raw.length<
value.length?raw:value);else this.number(raw)}function StringLiteral(node){const raw=this.getPossibleRaw(node);if(!this.format.minified&&raw!=null){this.token(raw);return}const opts=this.format.jsescOption;if(this.format.jsonCompatibleStrings)opts.json=true;const val=(0,_jsesc().default)(node.value,opts);return this.token(val)}function BigIntLiteral(node){const raw=this.getPossibleRaw(node);if(!this.format.minified&&raw!=null){this.token(raw);return}this.token(node.value)}function PipelineTopicExpression(node){this.print(node.expression,
node)}function PipelineBareFunction(node){this.print(node.callee,node)}function PipelinePrimaryTopicReference(){this.token("#")}},function(module,exports,__webpack_require__){const object={};const hasOwnProperty=object.hasOwnProperty;const forOwn=(object,callback)=>{for(const key in object)if(hasOwnProperty.call(object,key))callback(key,object[key])};const extend=(destination,source)=>{if(!source)return destination;forOwn(source,(key,value)=>{destination[key]=value});return destination};const forEach=
(array,callback)=>{const length=array.length;let index=-1;while(++index<length)callback(array[index])};const toString=object.toString;const isArray=Array.isArray;const isBuffer=Buffer.isBuffer;const isObject=(value)=>{return toString.call(value)=="[object Object]"};const isString=(value)=>{return typeof value=="string"||toString.call(value)=="[object String]"};const isNumber=(value)=>{return typeof value=="number"||toString.call(value)=="[object Number]"};const isFunction=(value)=>{return typeof value==
"function"};const isMap=(value)=>{return toString.call(value)=="[object Map]"};const isSet=(value)=>{return toString.call(value)=="[object Set]"};const singleEscapes={'"':'\\"',"'":"\\'","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};const regexSingleEscape=/["'\\\b\f\n\r\t]/;const regexDigit=/[0-9]/;const regexWhitelist=/[ !#-&\(-\[\]-_a-~]/;const jsesc=(argument,options)=>{const increaseIndentation=()=>{oldIndent=indent;++options.indentLevel;indent=options.indent.repeat(options.indentLevel)};
const defaults={"escapeEverything":false,"minimal":false,"isScriptContext":false,"quotes":"single","wrap":false,"es6":false,"json":false,"compact":true,"lowercaseHex":false,"numbers":"decimal","indent":"\t","indentLevel":0,"__inline1__":false,"__inline2__":false};const json=options&&options.json;if(json){defaults.quotes="double";defaults.wrap=true}options=extend(defaults,options);if(options.quotes!="single"&&options.quotes!="double"&&options.quotes!="backtick")options.quotes="single";const quote=
options.quotes=="double"?'"':options.quotes=="backtick"?"`":"'";const compact=options.compact;const lowercaseHex=options.lowercaseHex;let indent=options.indent.repeat(options.indentLevel);let oldIndent="";const inline1=options.__inline1__;const inline2=options.__inline2__;const newLine=compact?"":"\n";let result;let isEmpty=true;const useBinNumbers=options.numbers=="binary";const useOctNumbers=options.numbers=="octal";const useDecNumbers=options.numbers=="decimal";const useHexNumbers=options.numbers==
"hexadecimal";if(json&&argument&&isFunction(argument.toJSON))argument=argument.toJSON();if(!isString(argument)){if(isMap(argument)){if(argument.size==0)return"new Map()";if(!compact){options.__inline1__=true;options.__inline2__=false}return"new Map("+jsesc(Array.from(argument),options)+")"}if(isSet(argument)){if(argument.size==0)return"new Set()";return"new Set("+jsesc(Array.from(argument),options)+")"}if(isBuffer(argument)){if(argument.length==0)return"Buffer.from([])";return"Buffer.from("+jsesc(Array.from(argument),
options)+")"}if(isArray(argument)){result=[];options.wrap=true;if(inline1){options.__inline1__=false;options.__inline2__=true}if(!inline2)increaseIndentation();forEach(argument,(value)=>{isEmpty=false;if(inline2)options.__inline2__=false;result.push((compact||inline2?"":indent)+jsesc(value,options))});if(isEmpty)return"[]";if(inline2)return"["+result.join(", ")+"]";return"["+newLine+result.join(","+newLine)+newLine+(compact?"":oldIndent)+"]"}else if(isNumber(argument)){if(json)return JSON.stringify(argument);
if(useDecNumbers)return String(argument);if(useHexNumbers){let hexadecimal=argument.toString(16);if(!lowercaseHex)hexadecimal=hexadecimal.toUpperCase();return"0x"+hexadecimal}if(useBinNumbers)return"0b"+argument.toString(2);if(useOctNumbers)return"0o"+argument.toString(8)}else if(!isObject(argument)){if(json)return JSON.stringify(argument)||"null";return String(argument)}else{result=[];options.wrap=true;increaseIndentation();forOwn(argument,(key,value)=>{isEmpty=false;result.push((compact?"":indent)+
jsesc(key,options)+":"+(compact?"":" ")+jsesc(value,options))});if(isEmpty)return"{}";return"{"+newLine+result.join(","+newLine)+newLine+(compact?"":oldIndent)+"}"}}const string=argument;let index=-1;const length=string.length;result="";while(++index<length){const character=string.charAt(index);if(options.es6){const first=string.charCodeAt(index);if(first>=55296&&first<=56319&&length>index+1){const second=string.charCodeAt(index+1);if(second>=56320&&second<=57343){const codePoint=(first-55296)*1024+
second-56320+65536;let hexadecimal=codePoint.toString(16);if(!lowercaseHex)hexadecimal=hexadecimal.toUpperCase();result+="\\u{"+hexadecimal+"}";++index;continue}}}if(!options.escapeEverything){if(regexWhitelist.test(character)){result+=character;continue}if(character=='"'){result+=quote==character?'\\"':character;continue}if(character=="`"){result+=quote==character?"\\`":character;continue}if(character=="'"){result+=quote==character?"\\'":character;continue}}if(character=="\x00"&&!json&&!regexDigit.test(string.charAt(index+
1))){result+="\\0";continue}if(regexSingleEscape.test(character)){result+=singleEscapes[character];continue}const charCode=character.charCodeAt(0);if(options.minimal&&charCode!=8232&&charCode!=8233){result+=character;continue}let hexadecimal=charCode.toString(16);if(!lowercaseHex)hexadecimal=hexadecimal.toUpperCase();const longhand=hexadecimal.length>2||json;const escaped="\\"+(longhand?"u":"x")+("0000"+hexadecimal).slice(longhand?-4:-2);result+=escaped;continue}if(options.wrap)result=quote+result+
quote;if(quote=="`")result=result.replace(/\$\{/g,"\\${");if(options.isScriptContext)return result.replace(/<\/(script|style)/gi,"<\\/$1").replace(/\x3c!--/g,json?"\\u003C!--":"\\x3C!--");return result};jsesc.version="2.5.2";module.exports=jsesc},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.AnyTypeAnnotation=AnyTypeAnnotation;exports.ArrayTypeAnnotation=ArrayTypeAnnotation;exports.BooleanTypeAnnotation=BooleanTypeAnnotation;exports.BooleanLiteralTypeAnnotation=
BooleanLiteralTypeAnnotation;exports.NullLiteralTypeAnnotation=NullLiteralTypeAnnotation;exports.DeclareClass=DeclareClass;exports.DeclareFunction=DeclareFunction;exports.InferredPredicate=InferredPredicate;exports.DeclaredPredicate=DeclaredPredicate;exports.DeclareInterface=DeclareInterface;exports.DeclareModule=DeclareModule;exports.DeclareModuleExports=DeclareModuleExports;exports.DeclareTypeAlias=DeclareTypeAlias;exports.DeclareOpaqueType=DeclareOpaqueType;exports.DeclareVariable=DeclareVariable;
exports.DeclareExportDeclaration=DeclareExportDeclaration;exports.DeclareExportAllDeclaration=DeclareExportAllDeclaration;exports.ExistsTypeAnnotation=ExistsTypeAnnotation;exports.FunctionTypeAnnotation=FunctionTypeAnnotation;exports.FunctionTypeParam=FunctionTypeParam;exports.GenericTypeAnnotation=exports.ClassImplements=exports.InterfaceExtends=InterfaceExtends;exports._interfaceish=_interfaceish;exports._variance=_variance;exports.InterfaceDeclaration=InterfaceDeclaration;exports.InterfaceTypeAnnotation=
InterfaceTypeAnnotation;exports.IntersectionTypeAnnotation=IntersectionTypeAnnotation;exports.MixedTypeAnnotation=MixedTypeAnnotation;exports.EmptyTypeAnnotation=EmptyTypeAnnotation;exports.NullableTypeAnnotation=NullableTypeAnnotation;exports.NumberTypeAnnotation=NumberTypeAnnotation;exports.StringTypeAnnotation=StringTypeAnnotation;exports.ThisTypeAnnotation=ThisTypeAnnotation;exports.TupleTypeAnnotation=TupleTypeAnnotation;exports.TypeofTypeAnnotation=TypeofTypeAnnotation;exports.TypeAlias=TypeAlias;
exports.TypeAnnotation=TypeAnnotation;exports.TypeParameterDeclaration=exports.TypeParameterInstantiation=TypeParameterInstantiation;exports.TypeParameter=TypeParameter;exports.OpaqueType=OpaqueType;exports.ObjectTypeAnnotation=ObjectTypeAnnotation;exports.ObjectTypeInternalSlot=ObjectTypeInternalSlot;exports.ObjectTypeCallProperty=ObjectTypeCallProperty;exports.ObjectTypeIndexer=ObjectTypeIndexer;exports.ObjectTypeProperty=ObjectTypeProperty;exports.ObjectTypeSpreadProperty=ObjectTypeSpreadProperty;
exports.QualifiedTypeIdentifier=QualifiedTypeIdentifier;exports.UnionTypeAnnotation=UnionTypeAnnotation;exports.TypeCastExpression=TypeCastExpression;exports.Variance=Variance;exports.VoidTypeAnnotation=VoidTypeAnnotation;Object.defineProperty(exports,"NumberLiteralTypeAnnotation",{enumerable:true,get:function(){return _types2.NumericLiteral}});Object.defineProperty(exports,"StringLiteralTypeAnnotation",{enumerable:true,get:function(){return _types2.StringLiteral}});function t(){const data=_interopRequireWildcard(__webpack_require__(21));
t=function(){return data};return data}var _modules=__webpack_require__(350);var _types2=__webpack_require__(351);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}
function AnyTypeAnnotation(){this.word("any")}function ArrayTypeAnnotation(node){this.print(node.elementType,node);this.token("[");this.token("]")}function BooleanTypeAnnotation(){this.word("boolean")}function BooleanLiteralTypeAnnotation(node){this.word(node.value?"true":"false")}function NullLiteralTypeAnnotation(){this.word("null")}function DeclareClass(node,parent){if(!t().isDeclareExportDeclaration(parent)){this.word("declare");this.space()}this.word("class");this.space();this._interfaceish(node)}
function DeclareFunction(node,parent){if(!t().isDeclareExportDeclaration(parent)){this.word("declare");this.space()}this.word("function");this.space();this.print(node.id,node);this.print(node.id.typeAnnotation.typeAnnotation,node);if(node.predicate){this.space();this.print(node.predicate,node)}this.semicolon()}function InferredPredicate(){this.token("%");this.word("checks")}function DeclaredPredicate(node){this.token("%");this.word("checks");this.token("(");this.print(node.value,node);this.token(")")}
function DeclareInterface(node){this.word("declare");this.space();this.InterfaceDeclaration(node)}function DeclareModule(node){this.word("declare");this.space();this.word("module");this.space();this.print(node.id,node);this.space();this.print(node.body,node)}function DeclareModuleExports(node){this.word("declare");this.space();this.word("module");this.token(".");this.word("exports");this.print(node.typeAnnotation,node)}function DeclareTypeAlias(node){this.word("declare");this.space();this.TypeAlias(node)}
function DeclareOpaqueType(node,parent){if(!t().isDeclareExportDeclaration(parent)){this.word("declare");this.space()}this.OpaqueType(node)}function DeclareVariable(node,parent){if(!t().isDeclareExportDeclaration(parent)){this.word("declare");this.space()}this.word("var");this.space();this.print(node.id,node);this.print(node.id.typeAnnotation,node);this.semicolon()}function DeclareExportDeclaration(node){this.word("declare");this.space();this.word("export");this.space();if(node.default){this.word("default");
this.space()}FlowExportDeclaration.apply(this,arguments)}function DeclareExportAllDeclaration(){this.word("declare");this.space();_modules.ExportAllDeclaration.apply(this,arguments)}function FlowExportDeclaration(node){if(node.declaration){const declar=node.declaration;this.print(declar,node);if(!t().isStatement(declar))this.semicolon()}else{this.token("{");if(node.specifiers.length){this.space();this.printList(node.specifiers,node);this.space()}this.token("}");if(node.source){this.space();this.word("from");
this.space();this.print(node.source,node)}this.semicolon()}}function ExistsTypeAnnotation(){this.token("*")}function FunctionTypeAnnotation(node,parent){this.print(node.typeParameters,node);this.token("(");this.printList(node.params,node);if(node.rest){if(node.params.length){this.token(",");this.space()}this.token("...");this.print(node.rest,node)}this.token(")");if(parent.type==="ObjectTypeCallProperty"||parent.type==="DeclareFunction"||parent.type==="ObjectTypeProperty"&&parent.method)this.token(":");
else{this.space();this.token("=>")}this.space();this.print(node.returnType,node)}function FunctionTypeParam(node){this.print(node.name,node);if(node.optional)this.token("?");if(node.name){this.token(":");this.space()}this.print(node.typeAnnotation,node)}function InterfaceExtends(node){this.print(node.id,node);this.print(node.typeParameters,node)}function _interfaceish(node){this.print(node.id,node);this.print(node.typeParameters,node);if(node.extends.length){this.space();this.word("extends");this.space();
this.printList(node.extends,node)}if(node.mixins&&node.mixins.length){this.space();this.word("mixins");this.space();this.printList(node.mixins,node)}if(node.implements&&node.implements.length){this.space();this.word("implements");this.space();this.printList(node.implements,node)}this.space();this.print(node.body,node)}function _variance(node){if(node.variance)if(node.variance.kind==="plus")this.token("+");else if(node.variance.kind==="minus")this.token("-")}function InterfaceDeclaration(node){this.word("interface");
this.space();this._interfaceish(node)}function andSeparator(){this.space();this.token("&");this.space()}function InterfaceTypeAnnotation(node){this.word("interface");if(node.extends&&node.extends.length){this.space();this.word("extends");this.space();this.printList(node.extends,node)}this.space();this.print(node.body,node)}function IntersectionTypeAnnotation(node){this.printJoin(node.types,node,{separator:andSeparator})}function MixedTypeAnnotation(){this.word("mixed")}function EmptyTypeAnnotation(){this.word("empty")}
function NullableTypeAnnotation(node){this.token("?");this.print(node.typeAnnotation,node)}function NumberTypeAnnotation(){this.word("number")}function StringTypeAnnotation(){this.word("string")}function ThisTypeAnnotation(){this.word("this")}function TupleTypeAnnotation(node){this.token("[");this.printList(node.types,node);this.token("]")}function TypeofTypeAnnotation(node){this.word("typeof");this.space();this.print(node.argument,node)}function TypeAlias(node){this.word("type");this.space();this.print(node.id,
node);this.print(node.typeParameters,node);this.space();this.token("=");this.space();this.print(node.right,node);this.semicolon()}function TypeAnnotation(node){this.token(":");this.space();if(node.optional)this.token("?");this.print(node.typeAnnotation,node)}function TypeParameterInstantiation(node){this.token("<");this.printList(node.params,node,{});this.token(">")}function TypeParameter(node){this._variance(node);this.word(node.name);if(node.bound)this.print(node.bound,node);if(node.default){this.space();
this.token("=");this.space();this.print(node.default,node)}}function OpaqueType(node){this.word("opaque");this.space();this.word("type");this.space();this.print(node.id,node);this.print(node.typeParameters,node);if(node.supertype){this.token(":");this.space();this.print(node.supertype,node)}if(node.impltype){this.space();this.token("=");this.space();this.print(node.impltype,node)}this.semicolon()}function ObjectTypeAnnotation(node){if(node.exact)this.token("{|");else this.token("{");const props=node.properties.concat(node.callProperties||
[],node.indexers||[],node.internalSlots||[]);if(props.length){this.space();this.printJoin(props,node,{addNewlines(leading){if(leading&&!props[0])return 1},indent:true,statement:true,iterator:()=>{if(props.length!==1){this.token(",");this.space()}}});this.space()}if(node.exact)this.token("|}");else this.token("}")}function ObjectTypeInternalSlot(node){if(node.static){this.word("static");this.space()}this.token("[");this.token("[");this.print(node.id,node);this.token("]");this.token("]");if(node.optional)this.token("?");
if(!node.method){this.token(":");this.space()}this.print(node.value,node)}function ObjectTypeCallProperty(node){if(node.static){this.word("static");this.space()}this.print(node.value,node)}function ObjectTypeIndexer(node){if(node.static){this.word("static");this.space()}this._variance(node);this.token("[");if(node.id){this.print(node.id,node);this.token(":");this.space()}this.print(node.key,node);this.token("]");this.token(":");this.space();this.print(node.value,node)}function ObjectTypeProperty(node){if(node.proto){this.word("proto");
this.space()}if(node.static){this.word("static");this.space()}this._variance(node);this.print(node.key,node);if(node.optional)this.token("?");if(!node.method){this.token(":");this.space()}this.print(node.value,node)}function ObjectTypeSpreadProperty(node){this.token("...");this.print(node.argument,node)}function QualifiedTypeIdentifier(node){this.print(node.qualification,node);this.token(".");this.print(node.id,node)}function orSeparator(){this.space();this.token("|");this.space()}function UnionTypeAnnotation(node){this.printJoin(node.types,
node,{separator:orSeparator})}function TypeCastExpression(node){this.token("(");this.print(node.expression,node);this.print(node.typeAnnotation,node);this.token(")")}function Variance(node){if(node.kind==="plus")this.token("+");else this.token("-")}function VoidTypeAnnotation(){this.word("void")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.File=File;exports.Program=Program;exports.BlockStatement=BlockStatement;exports.Noop=Noop;exports.Directive=
Directive;exports.DirectiveLiteral=DirectiveLiteral;exports.InterpreterDirective=InterpreterDirective;function File(node){if(node.program)this.print(node.program.interpreter,node);this.print(node.program,node)}function Program(node){this.printInnerComments(node,false);this.printSequence(node.directives,node);if(node.directives&&node.directives.length)this.newline();this.printSequence(node.body,node)}function BlockStatement(node){this.token("{");this.printInnerComments(node);const hasDirectives=node.directives&&
node.directives.length;if(node.body.length||hasDirectives){this.newline();this.printSequence(node.directives,node,{indent:true});if(hasDirectives)this.newline();this.printSequence(node.body,node,{indent:true});this.removeTrailingNewline();this.source("end",node.loc);if(!this.endsWith("\n"))this.newline();this.rightBrace()}else{this.source("end",node.loc);this.token("}")}}function Noop(){}function Directive(node){this.print(node.value,node);this.semicolon()}const unescapedSingleQuoteRE=/(?:^|[^\\])(?:\\\\)*'/;
const unescapedDoubleQuoteRE=/(?:^|[^\\])(?:\\\\)*"/;function DirectiveLiteral(node){const raw=this.getPossibleRaw(node);if(raw!=null){this.token(raw);return}const {value}=node;if(!unescapedDoubleQuoteRE.test(value))this.token(`"${value}"`);else if(!unescapedSingleQuoteRE.test(value))this.token(`'${value}'`);else throw new Error("Malformed AST: it is not possible to print a directive containing"+" both unescaped single and double quotes.");}function InterpreterDirective(node){this.token(`#!${node.value}\n`)}
},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.JSXAttribute=JSXAttribute;exports.JSXIdentifier=JSXIdentifier;exports.JSXNamespacedName=JSXNamespacedName;exports.JSXMemberExpression=JSXMemberExpression;exports.JSXSpreadAttribute=JSXSpreadAttribute;exports.JSXExpressionContainer=JSXExpressionContainer;exports.JSXSpreadChild=JSXSpreadChild;exports.JSXText=JSXText;exports.JSXElement=JSXElement;exports.JSXOpeningElement=JSXOpeningElement;
exports.JSXClosingElement=JSXClosingElement;exports.JSXEmptyExpression=JSXEmptyExpression;exports.JSXFragment=JSXFragment;exports.JSXOpeningFragment=JSXOpeningFragment;exports.JSXClosingFragment=JSXClosingFragment;function JSXAttribute(node){this.print(node.name,node);if(node.value){this.token("=");this.print(node.value,node)}}function JSXIdentifier(node){this.word(node.name)}function JSXNamespacedName(node){this.print(node.namespace,node);this.token(":");this.print(node.name,node)}function JSXMemberExpression(node){this.print(node.object,
node);this.token(".");this.print(node.property,node)}function JSXSpreadAttribute(node){this.token("{");this.token("...");this.print(node.argument,node);this.token("}")}function JSXExpressionContainer(node){this.token("{");this.print(node.expression,node);this.token("}")}function JSXSpreadChild(node){this.token("{");this.token("...");this.print(node.expression,node);this.token("}")}function JSXText(node){const raw=this.getPossibleRaw(node);if(raw!=null)this.token(raw);else this.token(node.value)}function JSXElement(node){const open=
node.openingElement;this.print(open,node);if(open.selfClosing)return;this.indent();for(const child of node.children)this.print(child,node);this.dedent();this.print(node.closingElement,node)}function spaceSeparator(){this.space()}function JSXOpeningElement(node){this.token("<");this.print(node.name,node);this.print(node.typeParameters,node);if(node.attributes.length>0){this.space();this.printJoin(node.attributes,node,{separator:spaceSeparator})}if(node.selfClosing){this.space();this.token("/>")}else this.token(">")}
function JSXClosingElement(node){this.token("</");this.print(node.name,node);this.token(">")}function JSXEmptyExpression(node){this.printInnerComments(node)}function JSXFragment(node){this.print(node.openingFragment,node);this.indent();for(const child of node.children)this.print(child,node);this.dedent();this.print(node.closingFragment,node)}function JSXOpeningFragment(){this.token("<");this.token(">")}function JSXClosingFragment(){this.token("</");this.token(">")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.TSTypeAnnotation=TSTypeAnnotation;exports.TSTypeParameterDeclaration=exports.TSTypeParameterInstantiation=TSTypeParameterInstantiation;exports.TSTypeParameter=TSTypeParameter;exports.TSParameterProperty=TSParameterProperty;exports.TSDeclareFunction=TSDeclareFunction;exports.TSDeclareMethod=TSDeclareMethod;exports.TSQualifiedName=TSQualifiedName;exports.TSCallSignatureDeclaration=TSCallSignatureDeclaration;exports.TSConstructSignatureDeclaration=TSConstructSignatureDeclaration;
exports.TSPropertySignature=TSPropertySignature;exports.tsPrintPropertyOrMethodName=tsPrintPropertyOrMethodName;exports.TSMethodSignature=TSMethodSignature;exports.TSIndexSignature=TSIndexSignature;exports.TSAnyKeyword=TSAnyKeyword;exports.TSUnknownKeyword=TSUnknownKeyword;exports.TSNumberKeyword=TSNumberKeyword;exports.TSObjectKeyword=TSObjectKeyword;exports.TSBooleanKeyword=TSBooleanKeyword;exports.TSStringKeyword=TSStringKeyword;exports.TSSymbolKeyword=TSSymbolKeyword;exports.TSVoidKeyword=TSVoidKeyword;
exports.TSUndefinedKeyword=TSUndefinedKeyword;exports.TSNullKeyword=TSNullKeyword;exports.TSNeverKeyword=TSNeverKeyword;exports.TSThisType=TSThisType;exports.TSFunctionType=TSFunctionType;exports.TSConstructorType=TSConstructorType;exports.tsPrintFunctionOrConstructorType=tsPrintFunctionOrConstructorType;exports.TSTypeReference=TSTypeReference;exports.TSTypePredicate=TSTypePredicate;exports.TSTypeQuery=TSTypeQuery;exports.TSTypeLiteral=TSTypeLiteral;exports.tsPrintTypeLiteralOrInterfaceBody=tsPrintTypeLiteralOrInterfaceBody;
exports.tsPrintBraced=tsPrintBraced;exports.TSArrayType=TSArrayType;exports.TSTupleType=TSTupleType;exports.TSOptionalType=TSOptionalType;exports.TSRestType=TSRestType;exports.TSUnionType=TSUnionType;exports.TSIntersectionType=TSIntersectionType;exports.tsPrintUnionOrIntersectionType=tsPrintUnionOrIntersectionType;exports.TSConditionalType=TSConditionalType;exports.TSInferType=TSInferType;exports.TSParenthesizedType=TSParenthesizedType;exports.TSTypeOperator=TSTypeOperator;exports.TSIndexedAccessType=
TSIndexedAccessType;exports.TSMappedType=TSMappedType;exports.TSLiteralType=TSLiteralType;exports.TSExpressionWithTypeArguments=TSExpressionWithTypeArguments;exports.TSInterfaceDeclaration=TSInterfaceDeclaration;exports.TSInterfaceBody=TSInterfaceBody;exports.TSTypeAliasDeclaration=TSTypeAliasDeclaration;exports.TSAsExpression=TSAsExpression;exports.TSTypeAssertion=TSTypeAssertion;exports.TSEnumDeclaration=TSEnumDeclaration;exports.TSEnumMember=TSEnumMember;exports.TSModuleDeclaration=TSModuleDeclaration;
exports.TSModuleBlock=TSModuleBlock;exports.TSImportType=TSImportType;exports.TSImportEqualsDeclaration=TSImportEqualsDeclaration;exports.TSExternalModuleReference=TSExternalModuleReference;exports.TSNonNullExpression=TSNonNullExpression;exports.TSExportAssignment=TSExportAssignment;exports.TSNamespaceExportDeclaration=TSNamespaceExportDeclaration;exports.tsPrintSignatureDeclarationBase=tsPrintSignatureDeclarationBase;function TSTypeAnnotation(node){this.token(":");this.space();if(node.optional)this.token("?");
this.print(node.typeAnnotation,node)}function TSTypeParameterInstantiation(node){this.token("<");this.printList(node.params,node,{});this.token(">")}function TSTypeParameter(node){this.word(node.name);if(node.constraint){this.space();this.word("extends");this.space();this.print(node.constraint,node)}if(node.default){this.space();this.token("=");this.space();this.print(node.default,node)}}function TSParameterProperty(node){if(node.accessibility){this.word(node.accessibility);this.space()}if(node.readonly){this.word("readonly");
this.space()}this._param(node.parameter)}function TSDeclareFunction(node){if(node.declare){this.word("declare");this.space()}this._functionHead(node);this.token(";")}function TSDeclareMethod(node){this._classMethodHead(node);this.token(";")}function TSQualifiedName(node){this.print(node.left,node);this.token(".");this.print(node.right,node)}function TSCallSignatureDeclaration(node){this.tsPrintSignatureDeclarationBase(node)}function TSConstructSignatureDeclaration(node){this.word("new");this.space();
this.tsPrintSignatureDeclarationBase(node)}function TSPropertySignature(node){const {readonly,initializer}=node;if(readonly){this.word("readonly");this.space()}this.tsPrintPropertyOrMethodName(node);this.print(node.typeAnnotation,node);if(initializer){this.space();this.token("=");this.space();this.print(initializer,node)}this.token(";")}function tsPrintPropertyOrMethodName(node){if(node.computed)this.token("[");this.print(node.key,node);if(node.computed)this.token("]");if(node.optional)this.token("?")}
function TSMethodSignature(node){this.tsPrintPropertyOrMethodName(node);this.tsPrintSignatureDeclarationBase(node);this.token(";")}function TSIndexSignature(node){const {readonly}=node;if(readonly){this.word("readonly");this.space()}this.token("[");this._parameters(node.parameters,node);this.token("]");this.print(node.typeAnnotation,node);this.token(";")}function TSAnyKeyword(){this.word("any")}function TSUnknownKeyword(){this.word("unknown")}function TSNumberKeyword(){this.word("number")}function TSObjectKeyword(){this.word("object")}
function TSBooleanKeyword(){this.word("boolean")}function TSStringKeyword(){this.word("string")}function TSSymbolKeyword(){this.word("symbol")}function TSVoidKeyword(){this.word("void")}function TSUndefinedKeyword(){this.word("undefined")}function TSNullKeyword(){this.word("null")}function TSNeverKeyword(){this.word("never")}function TSThisType(){this.word("this")}function TSFunctionType(node){this.tsPrintFunctionOrConstructorType(node)}function TSConstructorType(node){this.word("new");this.space();
this.tsPrintFunctionOrConstructorType(node)}function tsPrintFunctionOrConstructorType(node){const {typeParameters,parameters}=node;this.print(typeParameters,node);this.token("(");this._parameters(parameters,node);this.token(")");this.space();this.token("=>");this.space();this.print(node.typeAnnotation.typeAnnotation,node)}function TSTypeReference(node){this.print(node.typeName,node);this.print(node.typeParameters,node)}function TSTypePredicate(node){this.print(node.parameterName);this.space();this.word("is");
this.space();this.print(node.typeAnnotation.typeAnnotation)}function TSTypeQuery(node){this.word("typeof");this.space();this.print(node.exprName)}function TSTypeLiteral(node){this.tsPrintTypeLiteralOrInterfaceBody(node.members,node)}function tsPrintTypeLiteralOrInterfaceBody(members,node){this.tsPrintBraced(members,node)}function tsPrintBraced(members,node){this.token("{");if(members.length){this.indent();this.newline();for(const member of members){this.print(member,node);this.newline()}this.dedent();
this.rightBrace()}else this.token("}")}function TSArrayType(node){this.print(node.elementType);this.token("[]")}function TSTupleType(node){this.token("[");this.printList(node.elementTypes,node);this.token("]")}function TSOptionalType(node){this.print(node.typeAnnotation,node);this.token("?")}function TSRestType(node){this.token("...");this.print(node.typeAnnotation,node)}function TSUnionType(node){this.tsPrintUnionOrIntersectionType(node,"|")}function TSIntersectionType(node){this.tsPrintUnionOrIntersectionType(node,
"&")}function tsPrintUnionOrIntersectionType(node,sep){this.printJoin(node.types,node,{separator(){this.space();this.token(sep);this.space()}})}function TSConditionalType(node){this.print(node.checkType);this.space();this.word("extends");this.space();this.print(node.extendsType);this.space();this.token("?");this.space();this.print(node.trueType);this.space();this.token(":");this.space();this.print(node.falseType)}function TSInferType(node){this.token("infer");this.space();this.print(node.typeParameter)}
function TSParenthesizedType(node){this.token("(");this.print(node.typeAnnotation,node);this.token(")")}function TSTypeOperator(node){this.token(node.operator);this.space();this.print(node.typeAnnotation,node)}function TSIndexedAccessType(node){this.print(node.objectType,node);this.token("[");this.print(node.indexType,node);this.token("]")}function TSMappedType(node){const {readonly,typeParameter,optional}=node;this.token("{");this.space();if(readonly){tokenIfPlusMinus(this,readonly);this.word("readonly");
this.space()}this.token("[");this.word(typeParameter.name);this.space();this.word("in");this.space();this.print(typeParameter.constraint,typeParameter);this.token("]");if(optional){tokenIfPlusMinus(this,optional);this.token("?")}this.token(":");this.space();this.print(node.typeAnnotation,node);this.space();this.token("}")}function tokenIfPlusMinus(self,tok){if(tok!==true)self.token(tok)}function TSLiteralType(node){this.print(node.literal,node)}function TSExpressionWithTypeArguments(node){this.print(node.expression,
node);this.print(node.typeParameters,node)}function TSInterfaceDeclaration(node){const {declare,id,typeParameters,extends:extendz,body}=node;if(declare){this.word("declare");this.space()}this.word("interface");this.space();this.print(id,node);this.print(typeParameters,node);if(extendz){this.space();this.word("extends");this.space();this.printList(extendz,node)}this.space();this.print(body,node)}function TSInterfaceBody(node){this.tsPrintTypeLiteralOrInterfaceBody(node.body,node)}function TSTypeAliasDeclaration(node){const {declare,
id,typeParameters,typeAnnotation}=node;if(declare){this.word("declare");this.space()}this.word("type");this.space();this.print(id,node);this.print(typeParameters,node);this.space();this.token("=");this.space();this.print(typeAnnotation,node);this.token(";")}function TSAsExpression(node){const {expression,typeAnnotation}=node;this.print(expression,node);this.space();this.word("as");this.space();this.print(typeAnnotation,node)}function TSTypeAssertion(node){const {typeAnnotation,expression}=node;this.token("<");
this.print(typeAnnotation,node);this.token(">");this.space();this.print(expression,node)}function TSEnumDeclaration(node){const {declare,const:isConst,id,members}=node;if(declare){this.word("declare");this.space()}if(isConst){this.word("const");this.space()}this.word("enum");this.space();this.print(id,node);this.space();this.tsPrintBraced(members,node)}function TSEnumMember(node){const {id,initializer}=node;this.print(id,node);if(initializer){this.space();this.token("=");this.space();this.print(initializer,
node)}this.token(",")}function TSModuleDeclaration(node){const {declare,id}=node;if(declare){this.word("declare");this.space()}if(!node.global){this.word(id.type==="Identifier"?"namespace":"module");this.space()}this.print(id,node);if(!node.body){this.token(";");return}let body=node.body;while(body.type==="TSModuleDeclaration"){this.token(".");this.print(body.id,body);body=body.body}this.space();this.print(body,node)}function TSModuleBlock(node){this.tsPrintBraced(node.body,node)}function TSImportType(node){const {argument,
qualifier,typeParameters}=node;this.word("import");this.token("(");this.print(argument,node);this.token(")");if(qualifier){this.token(".");this.print(qualifier,node)}if(typeParameters)this.print(typeParameters,node)}function TSImportEqualsDeclaration(node){const {isExport,id,moduleReference}=node;if(isExport){this.word("export");this.space()}this.word("import");this.space();this.print(id,node);this.space();this.token("=");this.space();this.print(moduleReference,node);this.token(";")}function TSExternalModuleReference(node){this.token("require(");
this.print(node.expression,node);this.token(")")}function TSNonNullExpression(node){this.print(node.expression,node);this.token("!")}function TSExportAssignment(node){this.word("export");this.space();this.token("=");this.space();this.print(node.expression,node);this.token(";")}function TSNamespaceExportDeclaration(node){this.word("export");this.space();this.word("as");this.space();this.word("namespace");this.space();this.print(node.id,node)}function tsPrintSignatureDeclarationBase(node){const {typeParameters,
parameters}=node;this.print(typeParameters,node);this.token("(");this._parameters(parameters,node);this.token(")");this.print(node.typeAnnotation,node)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.findParent=findParent;exports.find=find;exports.getFunctionParent=getFunctionParent;exports.getStatementParent=getStatementParent;exports.getEarliestCommonAncestorFrom=getEarliestCommonAncestorFrom;exports.getDeepestCommonAncestorFrom=getDeepestCommonAncestorFrom;
exports.getAncestry=getAncestry;exports.isAncestor=isAncestor;exports.isDescendant=isDescendant;exports.inType=inType;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}var _index=_interopRequireDefault(__webpack_require__(295));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function findParent(callback){let path=this;while(path=path.parentPath)if(callback(path))return path;return null}function find(callback){let path=this;do if(callback(path))return path;while(path=path.parentPath);return null}function getFunctionParent(){return this.findParent((p)=>
p.isFunction())}function getStatementParent(){let path=this;do if(!path.parentPath||Array.isArray(path.container)&&path.isStatement())break;else path=path.parentPath;while(path);if(path&&(path.isProgram()||path.isFile()))throw new Error("File/Program node, we can't possibly find a statement parent to this");return path}function getEarliestCommonAncestorFrom(paths){return this.getDeepestCommonAncestorFrom(paths,function(deepest,i,ancestries){let earliest;const keys=t().VISITOR_KEYS[deepest.type];for(const ancestry of ancestries){const path=
ancestry[i+1];if(!earliest){earliest=path;continue}if(path.listKey&&earliest.listKey===path.listKey)if(path.key<earliest.key){earliest=path;continue}const earliestKeyIndex=keys.indexOf(earliest.parentKey);const currentKeyIndex=keys.indexOf(path.parentKey);if(earliestKeyIndex>currentKeyIndex)earliest=path}return earliest})}function getDeepestCommonAncestorFrom(paths,filter){if(!paths.length)return this;if(paths.length===1)return paths[0];let minDepth=Infinity;let lastCommonIndex,lastCommon;const ancestries=
paths.map((path)=>{const ancestry=[];do ancestry.unshift(path);while((path=path.parentPath)&&path!==this);if(ancestry.length<minDepth)minDepth=ancestry.length;return ancestry});const first=ancestries[0];depthLoop:for(let i=0;i<minDepth;i++){const shouldMatch=first[i];for(const ancestry of ancestries)if(ancestry[i]!==shouldMatch)break depthLoop;lastCommonIndex=i;lastCommon=shouldMatch}if(lastCommon)if(filter)return filter(lastCommon,lastCommonIndex,ancestries);else return lastCommon;else throw new Error("Couldn't find intersection");
}function getAncestry(){let path=this;const paths=[];do paths.push(path);while(path=path.parentPath);return paths}function isAncestor(maybeDescendant){return maybeDescendant.isDescendant(this)}function isDescendant(maybeAncestor){return!!this.findParent((parent)=>parent===maybeAncestor)}function inType(){let path=this;while(path){for(const type of arguments)if(path.node.type===type)return true;path=path.parentPath}return false}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.getTypeAnnotation=getTypeAnnotation;exports._getTypeAnnotation=_getTypeAnnotation;exports.isBaseType=isBaseType;exports.couldBeBaseType=couldBeBaseType;exports.baseTypeStrictlyMatches=baseTypeStrictlyMatches;exports.isGenericType=isGenericType;var inferers=_interopRequireWildcard(__webpack_require__(359));function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;
else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function getTypeAnnotation(){if(this.typeAnnotation)return this.typeAnnotation;let type=this._getTypeAnnotation()||t().anyTypeAnnotation();if(t().isTypeAnnotation(type))type=
type.typeAnnotation;return this.typeAnnotation=type}function _getTypeAnnotation(){const node=this.node;if(!node)if(this.key==="init"&&this.parentPath.isVariableDeclarator()){const declar=this.parentPath.parentPath;const declarParent=declar.parentPath;if(declar.key==="left"&&declarParent.isForInStatement())return t().stringTypeAnnotation();if(declar.key==="left"&&declarParent.isForOfStatement())return t().anyTypeAnnotation();return t().voidTypeAnnotation()}else return;if(node.typeAnnotation)return node.typeAnnotation;
let inferer=inferers[node.type];if(inferer)return inferer.call(this,node);inferer=inferers[this.parentPath.type];if(inferer&&inferer.validParent)return this.parentPath.getTypeAnnotation()}function isBaseType(baseName,soft){return _isBaseType(baseName,this.getTypeAnnotation(),soft)}function _isBaseType(baseName,type,soft){if(baseName==="string")return t().isStringTypeAnnotation(type);else if(baseName==="number")return t().isNumberTypeAnnotation(type);else if(baseName==="boolean")return t().isBooleanTypeAnnotation(type);
else if(baseName==="any")return t().isAnyTypeAnnotation(type);else if(baseName==="mixed")return t().isMixedTypeAnnotation(type);else if(baseName==="empty")return t().isEmptyTypeAnnotation(type);else if(baseName==="void")return t().isVoidTypeAnnotation(type);else if(soft)return false;else throw new Error(`Unknown base type ${baseName}`);}function couldBeBaseType(name){const type=this.getTypeAnnotation();if(t().isAnyTypeAnnotation(type))return true;if(t().isUnionTypeAnnotation(type)){for(const type2 of type.types)if(t().isAnyTypeAnnotation(type2)||
_isBaseType(name,type2,true))return true;return false}else return _isBaseType(name,type,true)}function baseTypeStrictlyMatches(right){const left=this.getTypeAnnotation();right=right.getTypeAnnotation();if(!t().isAnyTypeAnnotation(left)&&t().isFlowBaseAnnotation(left))return right.type===left.type}function isGenericType(genericName){const type=this.getTypeAnnotation();return t().isGenericTypeAnnotation(type)&&t().isIdentifier(type.id,{name:genericName})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.VariableDeclarator=VariableDeclarator;exports.TypeCastExpression=TypeCastExpression;exports.NewExpression=NewExpression;exports.TemplateLiteral=TemplateLiteral;exports.UnaryExpression=UnaryExpression;exports.BinaryExpression=BinaryExpression;exports.LogicalExpression=LogicalExpression;exports.ConditionalExpression=ConditionalExpression;exports.SequenceExpression=SequenceExpression;exports.AssignmentExpression=AssignmentExpression;exports.UpdateExpression=UpdateExpression;
exports.StringLiteral=StringLiteral;exports.NumericLiteral=NumericLiteral;exports.BooleanLiteral=BooleanLiteral;exports.NullLiteral=NullLiteral;exports.RegExpLiteral=RegExpLiteral;exports.ObjectExpression=ObjectExpression;exports.ArrayExpression=ArrayExpression;exports.RestElement=RestElement;exports.ClassDeclaration=exports.ClassExpression=exports.FunctionDeclaration=exports.ArrowFunctionExpression=exports.FunctionExpression=Func;exports.CallExpression=CallExpression;exports.TaggedTemplateExpression=
TaggedTemplateExpression;Object.defineProperty(exports,"Identifier",{enumerable:true,get:function(){return _infererReference.default}});function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}var _infererReference=_interopRequireDefault(__webpack_require__(360));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function VariableDeclarator(){const id=this.get("id");if(!id.isIdentifier())return;const init=this.get("init");let type=init.getTypeAnnotation();if(type&&type.type==="AnyTypeAnnotation")if(init.isCallExpression()&&init.get("callee").isIdentifier({name:"Array"})&&!init.scope.hasBinding("Array",
true))type=ArrayExpression();return type}function TypeCastExpression(node){return node.typeAnnotation}TypeCastExpression.validParent=true;function NewExpression(node){if(this.get("callee").isIdentifier())return t().genericTypeAnnotation(node.callee)}function TemplateLiteral(){return t().stringTypeAnnotation()}function UnaryExpression(node){const operator=node.operator;if(operator==="void")return t().voidTypeAnnotation();else if(t().NUMBER_UNARY_OPERATORS.indexOf(operator)>=0)return t().numberTypeAnnotation();
else if(t().STRING_UNARY_OPERATORS.indexOf(operator)>=0)return t().stringTypeAnnotation();else if(t().BOOLEAN_UNARY_OPERATORS.indexOf(operator)>=0)return t().booleanTypeAnnotation()}function BinaryExpression(node){const operator=node.operator;if(t().NUMBER_BINARY_OPERATORS.indexOf(operator)>=0)return t().numberTypeAnnotation();else if(t().BOOLEAN_BINARY_OPERATORS.indexOf(operator)>=0)return t().booleanTypeAnnotation();else if(operator==="+"){const right=this.get("right");const left=this.get("left");
if(left.isBaseType("number")&&right.isBaseType("number"))return t().numberTypeAnnotation();else if(left.isBaseType("string")||right.isBaseType("string"))return t().stringTypeAnnotation();return t().unionTypeAnnotation([t().stringTypeAnnotation(),t().numberTypeAnnotation()])}}function LogicalExpression(){return t().createUnionTypeAnnotation([this.get("left").getTypeAnnotation(),this.get("right").getTypeAnnotation()])}function ConditionalExpression(){return t().createUnionTypeAnnotation([this.get("consequent").getTypeAnnotation(),
this.get("alternate").getTypeAnnotation()])}function SequenceExpression(){return this.get("expressions").pop().getTypeAnnotation()}function AssignmentExpression(){return this.get("right").getTypeAnnotation()}function UpdateExpression(node){const operator=node.operator;if(operator==="++"||operator==="--")return t().numberTypeAnnotation()}function StringLiteral(){return t().stringTypeAnnotation()}function NumericLiteral(){return t().numberTypeAnnotation()}function BooleanLiteral(){return t().booleanTypeAnnotation()}
function NullLiteral(){return t().nullLiteralTypeAnnotation()}function RegExpLiteral(){return t().genericTypeAnnotation(t().identifier("RegExp"))}function ObjectExpression(){return t().genericTypeAnnotation(t().identifier("Object"))}function ArrayExpression(){return t().genericTypeAnnotation(t().identifier("Array"))}function RestElement(){return ArrayExpression()}RestElement.validParent=true;function Func(){return t().genericTypeAnnotation(t().identifier("Function"))}const isArrayFrom=t().buildMatchMemberExpression("Array.from");
const isObjectKeys=t().buildMatchMemberExpression("Object.keys");const isObjectValues=t().buildMatchMemberExpression("Object.values");const isObjectEntries=t().buildMatchMemberExpression("Object.entries");function CallExpression(){const {callee}=this.node;if(isObjectKeys(callee))return t().arrayTypeAnnotation(t().stringTypeAnnotation());else if(isArrayFrom(callee)||isObjectValues(callee))return t().arrayTypeAnnotation(t().anyTypeAnnotation());else if(isObjectEntries(callee))return t().arrayTypeAnnotation(t().tupleTypeAnnotation([t().stringTypeAnnotation(),
t().anyTypeAnnotation()]));return resolveCall(this.get("callee"))}function TaggedTemplateExpression(){return resolveCall(this.get("tag"))}function resolveCall(callee){callee=callee.resolve();if(callee.isFunction())if(callee.is("async"))if(callee.is("generator"))return t().genericTypeAnnotation(t().identifier("AsyncIterator"));else return t().genericTypeAnnotation(t().identifier("Promise"));else if(callee.node.returnType)return callee.node.returnType;else;}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);
else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _default(node){if(!this.isReferenced())return;const binding=this.scope.getBinding(node.name);if(binding)if(binding.identifier.typeAnnotation)return binding.identifier.typeAnnotation;else return getTypeAnnotationBindingConstantViolations(binding,this,node.name);if(node.name==="undefined")return t().voidTypeAnnotation();else if(node.name==="NaN"||node.name==="Infinity")return t().numberTypeAnnotation();else if(node.name==="arguments");
}function getTypeAnnotationBindingConstantViolations(binding,path,name){const types=[];const functionConstantViolations=[];let constantViolations=getConstantViolationsBefore(binding,path,functionConstantViolations);const testType=getConditionalAnnotation(binding,path,name);if(testType){const testConstantViolations=getConstantViolationsBefore(binding,testType.ifStatement);constantViolations=constantViolations.filter((path)=>testConstantViolations.indexOf(path)<0);types.push(testType.typeAnnotation)}if(constantViolations.length){constantViolations=
constantViolations.concat(functionConstantViolations);for(const violation of constantViolations)types.push(violation.getTypeAnnotation())}if(types.length)return t().createUnionTypeAnnotation(types)}function getConstantViolationsBefore(binding,path,functions){const violations=binding.constantViolations.slice();violations.unshift(binding.path);return violations.filter((violation)=>{violation=violation.resolve();const status=violation._guessExecutionStatusRelativeTo(path);if(functions&&status==="function")functions.push(violation);
return status==="before"})}function inferAnnotationFromBinaryExpression(name,path){const operator=path.node.operator;const right=path.get("right").resolve();const left=path.get("left").resolve();let target;if(left.isIdentifier({name}))target=right;else if(right.isIdentifier({name}))target=left;if(target){if(operator==="===")return target.getTypeAnnotation();if(t().BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator)>=0)return t().numberTypeAnnotation();return}if(operator!=="==="&&operator!=="==")return;
let typeofPath;let typePath;if(left.isUnaryExpression({operator:"typeof"})){typeofPath=left;typePath=right}else if(right.isUnaryExpression({operator:"typeof"})){typeofPath=right;typePath=left}if(!typeofPath)return;if(!typeofPath.get("argument").isIdentifier({name}))return;typePath=typePath.resolve();if(!typePath.isLiteral())return;const typeValue=typePath.node.value;if(typeof typeValue!=="string")return;return t().createTypeAnnotationBasedOnTypeof(typeValue)}function getParentConditionalPath(binding,
path,name){let parentPath;while(parentPath=path.parentPath){if(parentPath.isIfStatement()||parentPath.isConditionalExpression()){if(path.key==="test")return;return parentPath}if(parentPath.isFunction())if(parentPath.parentPath.scope.getBinding(name)!==binding)return;path=parentPath}}function getConditionalAnnotation(binding,path,name){const ifStatement=getParentConditionalPath(binding,path,name);if(!ifStatement)return;const test=ifStatement.get("test");const paths=[test];const types=[];for(let i=
0;i<paths.length;i++){const path=paths[i];if(path.isLogicalExpression()){if(path.node.operator==="&&"){paths.push(path.get("left"));paths.push(path.get("right"))}}else if(path.isBinaryExpression()){const type=inferAnnotationFromBinaryExpression(name,path);if(type)types.push(type)}}if(types.length)return{typeAnnotation:t().createUnionTypeAnnotation(types),ifStatement};return getConditionalAnnotation(ifStatement,name)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.replaceWithMultiple=replaceWithMultiple;exports.replaceWithSourceString=replaceWithSourceString;exports.replaceWith=replaceWith;exports._replaceWith=_replaceWith;exports.replaceExpressionWithStatements=replaceExpressionWithStatements;exports.replaceInline=replaceInline;function _codeFrame(){const data=__webpack_require__(248);_codeFrame=function(){return data};return data}var _index=_interopRequireDefault(__webpack_require__(293));var _index2=_interopRequireDefault(__webpack_require__(295));
function _parser(){const data=__webpack_require__(247);_parser=function(){return data};return data}function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||
desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const hoistVariablesVisitor={Function(path){path.skip()},VariableDeclaration(path){if(path.node.kind!=="var")return;const bindings=path.getBindingIdentifiers();for(const key in bindings)path.scope.push({id:bindings[key]});const exprs=[];for(const declar of path.node.declarations)if(declar.init)exprs.push(t().expressionStatement(t().assignmentExpression("=",
declar.id,declar.init)));path.replaceWithMultiple(exprs)}};function replaceWithMultiple(nodes){this.resync();nodes=this._verifyNodeList(nodes);t().inheritLeadingComments(nodes[0],this.node);t().inheritTrailingComments(nodes[nodes.length-1],this.node);this.node=this.container[this.key]=null;const paths=this.insertAfter(nodes);if(this.node)this.requeue();else this.remove();return paths}function replaceWithSourceString(replacement){this.resync();try{replacement=`(${replacement})`;replacement=(0,_parser().parse)(replacement)}catch(err){const loc=
err.loc;if(loc){err.message+=" - make sure this is an expression.\n"+(0,_codeFrame().codeFrameColumns)(replacement,{start:{line:loc.line,column:loc.column+1}});err.code="BABEL_REPLACE_SOURCE_ERROR"}throw err;}replacement=replacement.program.body[0].expression;_index.default.removeProperties(replacement);return this.replaceWith(replacement)}function replaceWith(replacement){this.resync();if(this.removed)throw new Error("You can't replace this node, we've already removed it");if(replacement instanceof
_index2.default)replacement=replacement.node;if(!replacement)throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");if(this.node===replacement)return[this];if(this.isProgram()&&!t().isProgram(replacement))throw new Error("You can only replace a Program root node with another Program node");if(Array.isArray(replacement))throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");if(typeof replacement==="string")throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");
let nodePath="";if(this.isNodeType("Statement")&&t().isExpression(replacement))if(!this.canHaveVariableDeclarationOrExpression()&&!this.canSwapBetweenExpressionAndStatement(replacement)&&!this.parentPath.isExportDefaultDeclaration()){replacement=t().expressionStatement(replacement);nodePath="expression"}if(this.isNodeType("Expression")&&t().isStatement(replacement))if(!this.canHaveVariableDeclarationOrExpression()&&!this.canSwapBetweenExpressionAndStatement(replacement))return this.replaceExpressionWithStatements([replacement]);
const oldNode=this.node;if(oldNode){t().inheritsComments(replacement,oldNode);t().removeComments(oldNode)}this._replaceWith(replacement);this.type=replacement.type;this.setScope();this.requeue();return[nodePath?this.get(nodePath):this]}function _replaceWith(node){if(!this.container)throw new ReferenceError("Container is falsy");if(this.inList)t().validate(this.parent,this.key,[node]);else t().validate(this.parent,this.key,node);this.debug(`Replace with ${node&&node.type}`);this.node=this.container[this.key]=
node}function replaceExpressionWithStatements(nodes){this.resync();const toSequenceExpression=t().toSequenceExpression(nodes,this.scope);if(toSequenceExpression)return this.replaceWith(toSequenceExpression)[0].get("expressions");const container=t().arrowFunctionExpression([],t().blockStatement(nodes));this.replaceWith(t().callExpression(container,[]));this.traverse(hoistVariablesVisitor);const completionRecords=this.get("callee").getCompletionRecords();for(const path of completionRecords){if(!path.isExpressionStatement())continue;
const loop=path.findParent((path)=>path.isLoop());if(loop){let uid=loop.getData("expressionReplacementReturnUid");if(!uid){const callee=this.get("callee");uid=callee.scope.generateDeclaredUidIdentifier("ret");callee.get("body").pushContainer("body",t().returnStatement(t().cloneNode(uid)));loop.setData("expressionReplacementReturnUid",uid)}else uid=t().identifier(uid.name);path.get("expression").replaceWith(t().assignmentExpression("=",t().cloneNode(uid),path.node.expression))}else path.replaceWith(t().returnStatement(path.node.expression))}const callee=
this.get("callee");callee.arrowFunctionToExpression();return callee.get("body.body")}function replaceInline(nodes){this.resync();if(Array.isArray(nodes))if(Array.isArray(this.container)){nodes=this._verifyNodeList(nodes);const paths=this._containerInsertAfter(nodes);this.remove();return paths}else return this.replaceWithMultiple(nodes);else return this.replaceWith(nodes)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.evaluateTruthy=
evaluateTruthy;exports.evaluate=evaluate;const VALID_CALLEES=["String","Number","Math"];const INVALID_METHODS=["random"];function evaluateTruthy(){const res=this.evaluate();if(res.confident)return!!res.value}function deopt(path,state){if(!state.confident)return;state.deoptPath=path;state.confident=false}function evaluateCached(path,state){const {node}=path;const {seen}=state;if(seen.has(node)){const existing=seen.get(node);if(existing.resolved)return existing.value;else{deopt(path,state);return}}else{const item=
{resolved:false};seen.set(node,item);const val=_evaluate(path,state);if(state.confident){item.resolved=true;item.value=val}return val}}function _evaluate(path,state){if(!state.confident)return;const {node}=path;if(path.isSequenceExpression()){const exprs=path.get("expressions");return evaluateCached(exprs[exprs.length-1],state)}if(path.isStringLiteral()||path.isNumericLiteral()||path.isBooleanLiteral())return node.value;if(path.isNullLiteral())return null;if(path.isTemplateLiteral())return evaluateQuasis(path,
node.quasis,state);if(path.isTaggedTemplateExpression()&&path.get("tag").isMemberExpression()){const object=path.get("tag.object");const {node:{name}}=object;const property=path.get("tag.property");if(object.isIdentifier()&&name==="String"&&!path.scope.getBinding(name,true)&&property.isIdentifier&&property.node.name==="raw")return evaluateQuasis(path,node.quasi.quasis,state,true)}if(path.isConditionalExpression()){const testResult=evaluateCached(path.get("test"),state);if(!state.confident)return;
if(testResult)return evaluateCached(path.get("consequent"),state);else return evaluateCached(path.get("alternate"),state)}if(path.isExpressionWrapper())return evaluateCached(path.get("expression"),state);if(path.isMemberExpression()&&!path.parentPath.isCallExpression({callee:node})){const property=path.get("property");const object=path.get("object");if(object.isLiteral()&&property.isIdentifier()){const value=object.node.value;const type=typeof value;if(type==="number"||type==="string")return value[property.node.name]}}if(path.isReferencedIdentifier()){const binding=
path.scope.getBinding(node.name);if(binding&&binding.constantViolations.length>0)return deopt(binding.path,state);if(binding&&path.node.start<binding.path.node.end)return deopt(binding.path,state);if(binding&&binding.hasValue)return binding.value;else{if(node.name==="undefined")return binding?deopt(binding.path,state):undefined;else if(node.name==="Infinity")return binding?deopt(binding.path,state):Infinity;else if(node.name==="NaN")return binding?deopt(binding.path,state):NaN;const resolved=path.resolve();
if(resolved===path)return deopt(path,state);else return evaluateCached(resolved,state)}}if(path.isUnaryExpression({prefix:true})){if(node.operator==="void")return undefined;const argument=path.get("argument");if(node.operator==="typeof"&&(argument.isFunction()||argument.isClass()))return"function";const arg=evaluateCached(argument,state);if(!state.confident)return;switch(node.operator){case "!":return!arg;case "+":return+arg;case "-":return-arg;case "~":return~arg;case "typeof":return typeof arg}}if(path.isArrayExpression()){const arr=
[];const elems=path.get("elements");for(const elem of elems){const elemValue=elem.evaluate();if(elemValue.confident)arr.push(elemValue.value);else return deopt(elem,state)}return arr}if(path.isObjectExpression()){const obj={};const props=path.get("properties");for(const prop of props){if(prop.isObjectMethod()||prop.isSpreadElement())return deopt(prop,state);const keyPath=prop.get("key");let key=keyPath;if(prop.node.computed){key=key.evaluate();if(!key.confident)return deopt(keyPath,state);key=key.value}else if(key.isIdentifier())key=
key.node.name;else key=key.node.value;const valuePath=prop.get("value");let value=valuePath.evaluate();if(!value.confident)return deopt(valuePath,state);value=value.value;obj[key]=value}return obj}if(path.isLogicalExpression()){const wasConfident=state.confident;const left=evaluateCached(path.get("left"),state);const leftConfident=state.confident;state.confident=wasConfident;const right=evaluateCached(path.get("right"),state);const rightConfident=state.confident;switch(node.operator){case "||":state.confident=
leftConfident&&(!!left||rightConfident);if(!state.confident)return;return left||right;case "&&":state.confident=leftConfident&&(!left||rightConfident);if(!state.confident)return;return left&&right}}if(path.isBinaryExpression()){const left=evaluateCached(path.get("left"),state);if(!state.confident)return;const right=evaluateCached(path.get("right"),state);if(!state.confident)return;switch(node.operator){case "-":return left-right;case "+":return left+right;case "/":return left/right;case "*":return left*
right;case "%":return left%right;case "**":return Math.pow(left,right);case "<":return left<right;case ">":return left>right;case "<=":return left<=right;case ">=":return left>=right;case "==":return left==right;case "!=":return left!=right;case "===":return left===right;case "!==":return left!==right;case "|":return left|right;case "&":return left&right;case "^":return left^right;case "<<":return left<<right;case ">>":return left>>right;case ">>>":return left>>>right}}if(path.isCallExpression()){const callee=
path.get("callee");let context;let func;if(callee.isIdentifier()&&!path.scope.getBinding(callee.node.name,true)&&VALID_CALLEES.indexOf(callee.node.name)>=0)func=global[node.callee.name];if(callee.isMemberExpression()){const object=callee.get("object");const property=callee.get("property");if(object.isIdentifier()&&property.isIdentifier()&&VALID_CALLEES.indexOf(object.node.name)>=0&&INVALID_METHODS.indexOf(property.node.name)<0){context=global[object.node.name];func=context[property.node.name]}if(object.isLiteral()&&
property.isIdentifier()){const type=typeof object.node.value;if(type==="string"||type==="number"){context=object.node.value;func=context[property.node.name]}}}if(func){const args=path.get("arguments").map((arg)=>evaluateCached(arg,state));if(!state.confident)return;return func.apply(context,args)}}deopt(path,state)}function evaluateQuasis(path,quasis,state,raw=false){let str="";let i=0;const exprs=path.get("expressions");for(const elem of quasis){if(!state.confident)break;str+=raw?elem.value.raw:
elem.value.cooked;const expr=exprs[i++];if(expr)str+=String(evaluateCached(expr,state))}if(!state.confident)return;return str}function evaluate(){const state={confident:true,deoptPath:null,seen:new Map};let value=evaluateCached(this,state);if(!state.confident)value=undefined;return{confident:state.confident,deopt:state.deoptPath,value:value}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.toComputedKey=toComputedKey;exports.ensureBlock=
ensureBlock;exports.arrowFunctionToShadowed=arrowFunctionToShadowed;exports.unwrapFunctionEnvironment=unwrapFunctionEnvironment;exports.arrowFunctionToExpression=arrowFunctionToExpression;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _helperFunctionName(){const data=_interopRequireDefault(__webpack_require__(364));_helperFunctionName=function(){return data};return data}function _interopRequireDefault(obj){return obj&&obj.__esModule?
obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function toComputedKey(){const node=this.node;let key;if(this.isMemberExpression())key=
node.property;else if(this.isProperty()||this.isMethod())key=node.key;else throw new ReferenceError("todo");if(!node.computed)if(t().isIdentifier(key))key=t().stringLiteral(key.name);return key}function ensureBlock(){const body=this.get("body");const bodyNode=body.node;if(Array.isArray(body))throw new Error("Can't convert array path to a block statement");if(!bodyNode)throw new Error("Can't convert node without a body");if(body.isBlockStatement())return bodyNode;const statements=[];let stringPath=
"body";let key;let listKey;if(body.isStatement()){listKey="body";key=0;statements.push(body.node)}else{stringPath+=".body.0";if(this.isFunction()){key="argument";statements.push(t().returnStatement(body.node))}else{key="expression";statements.push(t().expressionStatement(body.node))}}this.node.body=t().blockStatement(statements);const parentPath=this.get(stringPath);body.setup(parentPath,listKey?parentPath.node[listKey]:parentPath.node,listKey,key);return this.node}function arrowFunctionToShadowed(){if(!this.isArrowFunctionExpression())return;
this.arrowFunctionToExpression()}function unwrapFunctionEnvironment(){if(!this.isArrowFunctionExpression()&&!this.isFunctionExpression()&&!this.isFunctionDeclaration())throw this.buildCodeFrameError("Can only unwrap the environment of a function.");hoistFunctionEnvironment(this)}function arrowFunctionToExpression({allowInsertArrow=true,specCompliant=false}={}){if(!this.isArrowFunctionExpression())throw this.buildCodeFrameError("Cannot convert non-arrow function to a function expression.");const thisBinding=
hoistFunctionEnvironment(this,specCompliant,allowInsertArrow);this.ensureBlock();this.node.type="FunctionExpression";if(specCompliant){const checkBinding=thisBinding?null:this.parentPath.scope.generateUidIdentifier("arrowCheckId");if(checkBinding)this.parentPath.scope.push({id:checkBinding,init:t().objectExpression([])});this.get("body").unshiftContainer("body",t().expressionStatement(t().callExpression(this.hub.addHelper("newArrowCheck"),[t().thisExpression(),checkBinding?t().identifier(checkBinding.name):
t().identifier(thisBinding)])));this.replaceWith(t().callExpression(t().memberExpression((0,_helperFunctionName().default)(this,true)||this.node,t().identifier("bind")),[checkBinding?t().identifier(checkBinding.name):t().thisExpression()]))}}function hoistFunctionEnvironment(fnPath,specCompliant=false,allowInsertArrow=true){const thisEnvFn=fnPath.findParent((p)=>{return p.isFunction()&&!p.isArrowFunctionExpression()||p.isProgram()||p.isClassProperty({static:false})});const inConstructor=thisEnvFn&&
thisEnvFn.node.kind==="constructor";if(thisEnvFn.isClassProperty())throw fnPath.buildCodeFrameError("Unable to transform arrow inside class property");const {thisPaths,argumentsPaths,newTargetPaths,superProps,superCalls}=getScopeInformation(fnPath);if(inConstructor&&superCalls.length>0){if(!allowInsertArrow)throw superCalls[0].buildCodeFrameError("Unable to handle nested super() usage in arrow");const allSuperCalls=[];thisEnvFn.traverse({Function(child){if(child.isArrowFunctionExpression())return;
child.skip()},ClassProperty(child){if(child.node.static)return;child.skip()},CallExpression(child){if(!child.get("callee").isSuper())return;allSuperCalls.push(child)}});const superBinding=getSuperBinding(thisEnvFn);allSuperCalls.forEach((superCall)=>{const callee=t().identifier(superBinding);callee.loc=superCall.node.callee.loc;superCall.get("callee").replaceWith(callee)})}let thisBinding;if(thisPaths.length>0||specCompliant){thisBinding=getThisBinding(thisEnvFn,inConstructor);if(!specCompliant||
inConstructor&&hasSuperClass(thisEnvFn)){thisPaths.forEach((thisChild)=>{const thisRef=thisChild.isJSX()?t().jsxIdentifier(thisBinding):t().identifier(thisBinding);thisRef.loc=thisChild.node.loc;thisChild.replaceWith(thisRef)});if(specCompliant)thisBinding=null}}if(argumentsPaths.length>0){const argumentsBinding=getBinding(thisEnvFn,"arguments",()=>t().identifier("arguments"));argumentsPaths.forEach((argumentsChild)=>{const argsRef=t().identifier(argumentsBinding);argsRef.loc=argumentsChild.node.loc;
argumentsChild.replaceWith(argsRef)})}if(newTargetPaths.length>0){const newTargetBinding=getBinding(thisEnvFn,"newtarget",()=>t().metaProperty(t().identifier("new"),t().identifier("target")));newTargetPaths.forEach((targetChild)=>{const targetRef=t().identifier(newTargetBinding);targetRef.loc=targetChild.node.loc;targetChild.replaceWith(targetRef)})}if(superProps.length>0){if(!allowInsertArrow)throw superProps[0].buildCodeFrameError("Unable to handle nested super.prop usage");const flatSuperProps=
superProps.reduce((acc,superProp)=>acc.concat(standardizeSuperProperty(superProp)),[]);flatSuperProps.forEach((superProp)=>{const key=superProp.node.computed?"":superProp.get("property").node.name;if(superProp.parentPath.isCallExpression({callee:superProp.node})){const superBinding=getSuperPropCallBinding(thisEnvFn,key);if(superProp.node.computed){const prop=superProp.get("property").node;superProp.replaceWith(t().identifier(superBinding));superProp.parentPath.node.arguments.unshift(prop)}else superProp.replaceWith(t().identifier(superBinding))}else{const isAssignment=
superProp.parentPath.isAssignmentExpression({left:superProp.node});const superBinding=getSuperPropBinding(thisEnvFn,isAssignment,key);const args=[];if(superProp.node.computed)args.push(superProp.get("property").node);if(isAssignment){const value=superProp.parentPath.node.right;args.push(value);superProp.parentPath.replaceWith(t().callExpression(t().identifier(superBinding),args))}else superProp.replaceWith(t().callExpression(t().identifier(superBinding),args))}})}return thisBinding}function standardizeSuperProperty(superProp){if(superProp.parentPath.isAssignmentExpression()&&
superProp.parentPath.node.operator!=="="){const assignmentPath=superProp.parentPath;const op=assignmentPath.node.operator.slice(0,-1);const value=assignmentPath.node.right;assignmentPath.node.operator="=";if(superProp.node.computed){const tmp=superProp.scope.generateDeclaredUidIdentifier("tmp");assignmentPath.get("left").replaceWith(t().memberExpression(superProp.node.object,t().assignmentExpression("=",tmp,superProp.node.property),true));assignmentPath.get("right").replaceWith(t().binaryExpression(op,
t().memberExpression(superProp.node.object,t().identifier(tmp.name),true),value))}else{assignmentPath.get("left").replaceWith(t().memberExpression(superProp.node.object,superProp.node.property));assignmentPath.get("right").replaceWith(t().binaryExpression(op,t().memberExpression(superProp.node.object,t().identifier(superProp.node.property.name)),value))}return[assignmentPath.get("left"),assignmentPath.get("right").get("left")]}else if(superProp.parentPath.isUpdateExpression()){const updateExpr=superProp.parentPath;
const tmp=superProp.scope.generateDeclaredUidIdentifier("tmp");const computedKey=superProp.node.computed?superProp.scope.generateDeclaredUidIdentifier("prop"):null;const parts=[t().assignmentExpression("=",tmp,t().memberExpression(superProp.node.object,computedKey?t().assignmentExpression("=",computedKey,superProp.node.property):superProp.node.property,superProp.node.computed)),t().assignmentExpression("=",t().memberExpression(superProp.node.object,computedKey?t().identifier(computedKey.name):superProp.node.property,
superProp.node.computed),t().binaryExpression("+",t().identifier(tmp.name),t().numericLiteral(1)))];if(!superProp.parentPath.node.prefix)parts.push(t().identifier(tmp.name));updateExpr.replaceWith(t().sequenceExpression(parts));const left=updateExpr.get("expressions.0.right");const right=updateExpr.get("expressions.1.left");return[left,right]}return[superProp]}function hasSuperClass(thisEnvFn){return thisEnvFn.isClassMethod()&&!!thisEnvFn.parentPath.parentPath.node.superClass}function getThisBinding(thisEnvFn,
inConstructor){return getBinding(thisEnvFn,"this",(thisBinding)=>{if(!inConstructor||!hasSuperClass(thisEnvFn))return t().thisExpression();const supers=new WeakSet;thisEnvFn.traverse({Function(child){if(child.isArrowFunctionExpression())return;child.skip()},ClassProperty(child){if(child.node.static)return;child.skip()},CallExpression(child){if(!child.get("callee").isSuper())return;if(supers.has(child.node))return;supers.add(child.node);child.replaceWithMultiple([child.node,t().assignmentExpression("=",
t().identifier(thisBinding),t().identifier("this"))])}})})}function getSuperBinding(thisEnvFn){return getBinding(thisEnvFn,"supercall",()=>{const argsBinding=thisEnvFn.scope.generateUidIdentifier("args");return t().arrowFunctionExpression([t().restElement(argsBinding)],t().callExpression(t().super(),[t().spreadElement(t().identifier(argsBinding.name))]))})}function getSuperPropCallBinding(thisEnvFn,propName){return getBinding(thisEnvFn,`superprop_call:${propName||""}`,()=>{const argsBinding=thisEnvFn.scope.generateUidIdentifier("args");
const argsList=[t().restElement(argsBinding)];let fnBody;if(propName)fnBody=t().callExpression(t().memberExpression(t().super(),t().identifier(propName)),[t().spreadElement(t().identifier(argsBinding.name))]);else{const method=thisEnvFn.scope.generateUidIdentifier("prop");argsList.unshift(method);fnBody=t().callExpression(t().memberExpression(t().super(),t().identifier(method.name),true),[t().spreadElement(t().identifier(argsBinding.name))])}return t().arrowFunctionExpression(argsList,fnBody)})}function getSuperPropBinding(thisEnvFn,
isAssignment,propName){const op=isAssignment?"set":"get";return getBinding(thisEnvFn,`superprop_${op}:${propName||""}`,()=>{const argsList=[];let fnBody;if(propName)fnBody=t().memberExpression(t().super(),t().identifier(propName));else{const method=thisEnvFn.scope.generateUidIdentifier("prop");argsList.unshift(method);fnBody=t().memberExpression(t().super(),t().identifier(method.name),true)}if(isAssignment){const valueIdent=thisEnvFn.scope.generateUidIdentifier("value");argsList.push(valueIdent);
fnBody=t().assignmentExpression("=",fnBody,t().identifier(valueIdent.name))}return t().arrowFunctionExpression(argsList,fnBody)})}function getBinding(thisEnvFn,key,init){const cacheKey="binding:"+key;let data=thisEnvFn.getData(cacheKey);if(!data){const id=thisEnvFn.scope.generateUidIdentifier(key);data=id.name;thisEnvFn.setData(cacheKey,data);thisEnvFn.scope.push({id:id,init:init(data)})}return data}function getScopeInformation(fnPath){const thisPaths=[];const argumentsPaths=[];const newTargetPaths=
[];const superProps=[];const superCalls=[];fnPath.traverse({ClassProperty(child){if(child.node.static)return;child.skip()},Function(child){if(child.isArrowFunctionExpression())return;child.skip()},ThisExpression(child){thisPaths.push(child)},JSXIdentifier(child){if(child.node.name!=="this")return;if(!child.parentPath.isJSXMemberExpression({object:child.node})&&!child.parentPath.isJSXOpeningElement({name:child.node}))return;thisPaths.push(child)},CallExpression(child){if(child.get("callee").isSuper())superCalls.push(child)},
MemberExpression(child){if(child.get("object").isSuper())superProps.push(child)},ReferencedIdentifier(child){if(child.node.name!=="arguments")return;argumentsPaths.push(child)},MetaProperty(child){if(!child.get("meta").isIdentifier({name:"new"}))return;if(!child.get("property").isIdentifier({name:"target"}))return;newTargetPaths.push(child)}});return{thisPaths,argumentsPaths,newTargetPaths,superProps,superCalls}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.default=_default;function _helperGetFunctionArity(){const data=_interopRequireDefault(__webpack_require__(365));_helperGetFunctionArity=function(){return data};return data}function _template(){const data=_interopRequireDefault(__webpack_require__(241));_template=function(){return data};return data}function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;
else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const buildPropertyMethodAssignmentWrapper=(0,_template().default)(`
  (function (FUNCTION_KEY) {
    function FUNCTION_ID() {
      return FUNCTION_KEY.apply(this, arguments);
    }
    FUNCTION_ID.toString = function () {
      return FUNCTION_KEY.toString();
    }
    return FUNCTION_ID;
  })(FUNCTION)
`);const buildGeneratorPropertyMethodAssignmentWrapper=(0,_template().default)(`
  (function (FUNCTION_KEY) {
    function* FUNCTION_ID() {
      return yield* FUNCTION_KEY.apply(this, arguments);
    }
    FUNCTION_ID.toString = function () {
      return FUNCTION_KEY.toString();
    };
    return FUNCTION_ID;
  })(FUNCTION)
`);const visitor={["ReferencedIdentifier|BindingIdentifier"](path,state){if(path.node.name!==state.name)return;const localDeclar=path.scope.getBindingIdentifier(state.name);if(localDeclar!==state.outerDeclar)return;state.selfReference=true;path.stop()}};function getNameFromLiteralId(id){if(t().isNullLiteral(id))return"null";if(t().isRegExpLiteral(id))return`_${id.pattern}_${id.flags}`;if(t().isTemplateLiteral(id))return id.quasis.map((quasi)=>quasi.value.raw).join("");if(id.value!==undefined)return id.value+
"";return""}function wrap(state,method,id,scope){if(state.selfReference)if(scope.hasBinding(id.name)&&!scope.hasGlobal(id.name))scope.rename(id.name);else{if(!t().isFunction(method))return;let build=buildPropertyMethodAssignmentWrapper;if(method.generator)build=buildGeneratorPropertyMethodAssignmentWrapper;const template=build({FUNCTION:method,FUNCTION_ID:id,FUNCTION_KEY:scope.generateUidIdentifier(id.name)}).expression;const params=template.callee.body.body[0].params;for(let i=0,len=(0,_helperGetFunctionArity().default)(method);i<
len;i++)params.push(scope.generateUidIdentifier("x"));return template}method.id=id;scope.getProgramParent().references[id.name]=true}function visit(node,name,scope){const state={selfAssignment:false,selfReference:false,outerDeclar:scope.getBindingIdentifier(name),references:[],name:name};const binding=scope.getOwnBinding(name);if(binding)if(binding.kind==="param")state.selfReference=true;else;else if(state.outerDeclar||scope.hasGlobal(name))scope.traverse(node,visitor,state);return state}function _default({node,
parent,scope,id},localBinding=false){if(node.id)return;if((t().isObjectProperty(parent)||t().isObjectMethod(parent,{kind:"method"}))&&(!parent.computed||t().isLiteral(parent.key)))id=parent.key;else if(t().isVariableDeclarator(parent)){id=parent.id;if(t().isIdentifier(id)&&!localBinding){const binding=scope.parent.getBinding(id.name);if(binding&&binding.constant&&scope.getBinding(id.name)===binding){node.id=t().cloneNode(id);node.id[t().NOT_LOCAL_BINDING]=true;return}}}else if(t().isAssignmentExpression(parent))id=
parent.left;else if(!id)return;let name;if(id&&t().isLiteral(id))name=getNameFromLiteralId(id);else if(id&&t().isIdentifier(id))name=id.name;if(name===undefined)return;name=t().toBindingIdentifierName(name);id=t().identifier(name);id[t().NOT_LOCAL_BINDING]=true;const state=visit(node,name,scope);return wrap(state,node,id,scope)||node}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;function t(){const data=_interopRequireWildcard(__webpack_require__(21));
t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _default(node){const params=node.params;for(let i=0;i<
params.length;i++){const param=params[i];if(t().isAssignmentPattern(param)||t().isRestElement(param))return i}return params.length}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.matchesPattern=matchesPattern;exports.has=has;exports.isStatic=isStatic;exports.isnt=isnt;exports.equals=equals;exports.isNodeType=isNodeType;exports.canHaveVariableDeclarationOrExpression=canHaveVariableDeclarationOrExpression;exports.canSwapBetweenExpressionAndStatement=
canSwapBetweenExpressionAndStatement;exports.isCompletionRecord=isCompletionRecord;exports.isStatementOrBlock=isStatementOrBlock;exports.referencesImport=referencesImport;exports.getSource=getSource;exports.willIMaybeExecuteBefore=willIMaybeExecuteBefore;exports._guessExecutionStatusRelativeTo=_guessExecutionStatusRelativeTo;exports._guessExecutionStatusRelativeToDifferentFunctions=_guessExecutionStatusRelativeToDifferentFunctions;exports.resolve=resolve;exports._resolve=_resolve;exports.isConstantExpression=
isConstantExpression;exports.isInStrictMode=isInStrictMode;exports.is=void 0;function _includes(){const data=_interopRequireDefault(__webpack_require__(306));_includes=function(){return data};return data}function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&
Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function matchesPattern(pattern,allowPartial){return t().matchesPattern(this.node,pattern,allowPartial)}function has(key){const val=this.node&&this.node[key];if(val&&Array.isArray(val))return!!val.length;else return!!val}function isStatic(){return this.scope.isStatic(this.node)}
const is=has;exports.is=is;function isnt(key){return!this.has(key)}function equals(key,value){return this.node[key]===value}function isNodeType(type){return t().isType(this.type,type)}function canHaveVariableDeclarationOrExpression(){return(this.key==="init"||this.key==="left")&&this.parentPath.isFor()}function canSwapBetweenExpressionAndStatement(replacement){if(this.key!=="body"||!this.parentPath.isArrowFunctionExpression())return false;if(this.isExpression())return t().isBlockStatement(replacement);
else if(this.isBlockStatement())return t().isExpression(replacement);return false}function isCompletionRecord(allowInsideFunction){let path=this;let first=true;do{const container=path.container;if(path.isFunction()&&!first)return!!allowInsideFunction;first=false;if(Array.isArray(container)&&path.key!==container.length-1)return false}while((path=path.parentPath)&&!path.isProgram());return true}function isStatementOrBlock(){if(this.parentPath.isLabeledStatement()||t().isBlockStatement(this.container))return false;
else return(0,_includes().default)(t().STATEMENT_OR_BLOCK_KEYS,this.key)}function referencesImport(moduleSource,importName){if(!this.isReferencedIdentifier())return false;const binding=this.scope.getBinding(this.node.name);if(!binding||binding.kind!=="module")return false;const path=binding.path;const parent=path.parentPath;if(!parent.isImportDeclaration())return false;if(parent.node.source.value===moduleSource){if(!importName)return true}else return false;if(path.isImportDefaultSpecifier()&&importName===
"default")return true;if(path.isImportNamespaceSpecifier()&&importName==="*")return true;if(path.isImportSpecifier()&&path.node.imported.name===importName)return true;return false}function getSource(){const node=this.node;if(node.end){const code=this.hub.getCode();if(code)return code.slice(node.start,node.end)}return""}function willIMaybeExecuteBefore(target){return this._guessExecutionStatusRelativeTo(target)!=="after"}function _guessExecutionStatusRelativeTo(target){const targetFuncParent=target.scope.getFunctionParent()||
target.scope.getProgramParent();const selfFuncParent=this.scope.getFunctionParent()||target.scope.getProgramParent();if(targetFuncParent.node!==selfFuncParent.node){const status=this._guessExecutionStatusRelativeToDifferentFunctions(targetFuncParent);if(status)return status;else target=targetFuncParent.path}const targetPaths=target.getAncestry();if(targetPaths.indexOf(this)>=0)return"after";const selfPaths=this.getAncestry();let commonPath;let targetIndex;let selfIndex;for(selfIndex=0;selfIndex<selfPaths.length;selfIndex++){const selfPath=
selfPaths[selfIndex];targetIndex=targetPaths.indexOf(selfPath);if(targetIndex>=0){commonPath=selfPath;break}}if(!commonPath)return"before";const targetRelationship=targetPaths[targetIndex-1];const selfRelationship=selfPaths[selfIndex-1];if(!targetRelationship||!selfRelationship)return"before";if(targetRelationship.listKey&&targetRelationship.container===selfRelationship.container)return targetRelationship.key>selfRelationship.key?"before":"after";const keys=t().VISITOR_KEYS[commonPath.type];const targetKeyPosition=
keys.indexOf(targetRelationship.key);const selfKeyPosition=keys.indexOf(selfRelationship.key);return targetKeyPosition>selfKeyPosition?"before":"after"}function _guessExecutionStatusRelativeToDifferentFunctions(targetFuncParent){const targetFuncPath=targetFuncParent.path;if(!targetFuncPath.isFunctionDeclaration())return;const binding=targetFuncPath.scope.getBinding(targetFuncPath.node.id.name);if(!binding.references)return"before";const referencePaths=binding.referencePaths;for(const path of referencePaths)if(path.key!==
"callee"||!path.parentPath.isCallExpression())return;let allStatus;for(const path of referencePaths){const childOfFunction=!!path.find((path)=>path.node===targetFuncPath.node);if(childOfFunction)continue;const status=this._guessExecutionStatusRelativeTo(path);if(allStatus){if(allStatus!==status)return}else allStatus=status}return allStatus}function resolve(dangerous,resolved){return this._resolve(dangerous,resolved)||this}function _resolve(dangerous,resolved){if(resolved&&resolved.indexOf(this)>=
0)return;resolved=resolved||[];resolved.push(this);if(this.isVariableDeclarator())if(this.get("id").isIdentifier())return this.get("init").resolve(dangerous,resolved);else;else if(this.isReferencedIdentifier()){const binding=this.scope.getBinding(this.node.name);if(!binding)return;if(!binding.constant)return;if(binding.kind==="module")return;if(binding.path!==this){const ret=binding.path.resolve(dangerous,resolved);if(this.find((parent)=>parent.node===ret.node))return;return ret}}else if(this.isTypeCastExpression())return this.get("expression").resolve(dangerous,
resolved);else if(dangerous&&this.isMemberExpression()){const targetKey=this.toComputedKey();if(!t().isLiteral(targetKey))return;const targetName=targetKey.value;const target=this.get("object").resolve(dangerous,resolved);if(target.isObjectExpression()){const props=target.get("properties");for(const prop of props){if(!prop.isProperty())continue;const key=prop.get("key");let match=prop.isnt("computed")&&key.isIdentifier({name:targetName});match=match||key.isLiteral({value:targetName});if(match)return prop.get("value").resolve(dangerous,
resolved)}}else if(target.isArrayExpression()&&!isNaN(+targetName)){const elems=target.get("elements");const elem=elems[targetName];if(elem)return elem.resolve(dangerous,resolved)}}}function isConstantExpression(){if(this.isIdentifier()){const binding=this.scope.getBinding(this.node.name);if(!binding)return false;return binding.constant}if(this.isLiteral()){if(this.isRegExpLiteral())return false;if(this.isTemplateLiteral())return this.get("expressions").every((expression)=>expression.isConstantExpression());
return true}if(this.isUnaryExpression()){if(this.get("operator").node!=="void")return false;return this.get("argument").isConstantExpression()}if(this.isBinaryExpression())return this.get("left").isConstantExpression()&&this.get("right").isConstantExpression();return false}function isInStrictMode(){const start=this.isProgram()?this:this.parentPath;const strictParent=start.find((path)=>{if(path.isProgram({sourceType:"module"}))return true;if(path.isClass())return true;if(!path.isProgram()&&!path.isFunction())return false;
if(path.isArrowFunctionExpression()&&!path.get("body").isBlockStatement())return false;let {node}=path;if(path.isFunction())node=node.body;for(const directive of node.directives)if(directive.value.value==="use strict")return true});return!!strictParent}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.call=call;exports._call=_call;exports.isBlacklisted=isBlacklisted;exports.visit=visit;exports.skip=skip;exports.skipKey=skipKey;exports.stop=
stop;exports.setScope=setScope;exports.setContext=setContext;exports.resync=resync;exports._resyncParent=_resyncParent;exports._resyncKey=_resyncKey;exports._resyncList=_resyncList;exports._resyncRemoved=_resyncRemoved;exports.popContext=popContext;exports.pushContext=pushContext;exports.setup=setup;exports.setKey=setKey;exports.requeue=requeue;exports._getQueueContexts=_getQueueContexts;var _index=_interopRequireDefault(__webpack_require__(293));function _interopRequireDefault(obj){return obj&&obj.__esModule?
obj:{default:obj}}function call(key){const opts=this.opts;this.debug(key);if(this.node)if(this._call(opts[key]))return true;if(this.node)return this._call(opts[this.node.type]&&opts[this.node.type][key]);return false}function _call(fns){if(!fns)return false;for(const fn of fns){if(!fn)continue;const node=this.node;if(!node)return true;const ret=fn.call(this.state,this,this.state);if(ret&&typeof ret==="object"&&typeof ret.then==="function")throw new Error(`You appear to be using a plugin with an async traversal visitor, `+
`which your current version of Babel does not support.`+`If you're using a published plugin, you may need to upgrade `+`your @babel/core version.`);if(ret)throw new Error(`Unexpected return value from visitor method ${fn}`);if(this.node!==node)return true;if(this.shouldStop||this.shouldSkip||this.removed)return true}return false}function isBlacklisted(){const blacklist=this.opts.blacklist;return blacklist&&blacklist.indexOf(this.node.type)>-1}function visit(){if(!this.node)return false;if(this.isBlacklisted())return false;
if(this.opts.shouldSkip&&this.opts.shouldSkip(this))return false;if(this.call("enter")||this.shouldSkip){this.debug("Skip...");return this.shouldStop}this.debug("Recursing into...");_index.default.node(this.node,this.opts,this.scope,this.state,this,this.skipKeys);this.call("exit");return this.shouldStop}function skip(){this.shouldSkip=true}function skipKey(key){this.skipKeys[key]=true}function stop(){this.shouldStop=true;this.shouldSkip=true}function setScope(){if(this.opts&&this.opts.noScope)return;
let path=this.parentPath;let target;while(path&&!target){if(path.opts&&path.opts.noScope)return;target=path.scope;path=path.parentPath}this.scope=this.getScope(target);if(this.scope)this.scope.init()}function setContext(context){this.shouldSkip=false;this.shouldStop=false;this.removed=false;this.skipKeys={};if(context){this.context=context;this.state=context.state;this.opts=context.opts}this.setScope();return this}function resync(){if(this.removed)return;this._resyncParent();this._resyncList();this._resyncKey()}
function _resyncParent(){if(this.parentPath)this.parent=this.parentPath.node}function _resyncKey(){if(!this.container)return;if(this.node===this.container[this.key])return;if(Array.isArray(this.container))for(let i=0;i<this.container.length;i++){if(this.container[i]===this.node)return this.setKey(i)}else for(const key in this.container)if(this.container[key]===this.node)return this.setKey(key);this.key=null}function _resyncList(){if(!this.parent||!this.inList)return;const newContainer=this.parent[this.listKey];
if(this.container===newContainer)return;this.container=newContainer||null}function _resyncRemoved(){if(this.key==null||!this.container||this.container[this.key]!==this.node)this._markRemoved()}function popContext(){this.contexts.pop();if(this.contexts.length>0)this.setContext(this.contexts[this.contexts.length-1]);else this.setContext(undefined)}function pushContext(context){this.contexts.push(context);this.setContext(context)}function setup(parentPath,container,listKey,key){this.inList=!!listKey;
this.listKey=listKey;this.parentKey=listKey||key;this.container=container;this.parentPath=parentPath||this.parentPath;this.setKey(key)}function setKey(key){this.key=key;this.node=this.container[this.key];this.type=this.node&&this.node.type}function requeue(pathToQueue=this){if(pathToQueue.removed)return;const contexts=this.contexts;for(const context of contexts)context.maybeQueue(pathToQueue)}function _getQueueContexts(){let path=this;let contexts=this.contexts;while(!contexts.length){path=path.parentPath;
if(!path)break;contexts=path.contexts}return contexts}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.remove=remove;exports._removeFromScope=_removeFromScope;exports._callRemovalHooks=_callRemovalHooks;exports._remove=_remove;exports._markRemoved=_markRemoved;exports._assertUnremoved=_assertUnremoved;var _removalHooks=__webpack_require__(369);function remove(){this._assertUnremoved();this.resync();this._removeFromScope();if(this._callRemovalHooks()){this._markRemoved();
return}this.shareCommentsWithSiblings();this._remove();this._markRemoved()}function _removeFromScope(){const bindings=this.getBindingIdentifiers();Object.keys(bindings).forEach((name)=>this.scope.removeBinding(name))}function _callRemovalHooks(){for(const fn of _removalHooks.hooks)if(fn(this,this.parentPath))return true}function _remove(){if(Array.isArray(this.container)){this.container.splice(this.key,1);this.updateSiblingKeys(this.key,-1)}else this._replaceWith(null)}function _markRemoved(){this.shouldSkip=
true;this.removed=true;this.node=null}function _assertUnremoved(){if(this.removed)throw this.buildCodeFrameError("NodePath has been removed so is read-only.");}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.hooks=void 0;const hooks=[function(self,parent){const removeParent=self.key==="test"&&(parent.isWhile()||parent.isSwitchCase())||self.key==="declaration"&&parent.isExportDeclaration()||self.key==="body"&&parent.isLabeledStatement()||
self.listKey==="declarations"&&parent.isVariableDeclaration()&&parent.node.declarations.length===1||self.key==="expression"&&parent.isExpressionStatement();if(removeParent){parent.remove();return true}},function(self,parent){if(parent.isSequenceExpression()&&parent.node.expressions.length===1){parent.replaceWith(parent.node.expressions[0]);return true}},function(self,parent){if(parent.isBinary()){if(self.key==="left")parent.replaceWith(parent.node.right);else parent.replaceWith(parent.node.left);
return true}},function(self,parent){if(parent.isIfStatement()&&(self.key==="consequent"||self.key==="alternate")||self.key==="body"&&(parent.isLoop()||parent.isArrowFunctionExpression())){self.replaceWith({type:"BlockStatement",body:[]});return true}}];exports.hooks=hooks},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.insertBefore=insertBefore;exports._containerInsert=_containerInsert;exports._containerInsertBefore=_containerInsertBefore;
exports._containerInsertAfter=_containerInsertAfter;exports.insertAfter=insertAfter;exports.updateSiblingKeys=updateSiblingKeys;exports._verifyNodeList=_verifyNodeList;exports.unshiftContainer=unshiftContainer;exports.pushContainer=pushContainer;exports.hoist=hoist;var _cache=__webpack_require__(334);var _hoister=_interopRequireDefault(__webpack_require__(371));var _index=_interopRequireDefault(__webpack_require__(295));function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};
return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function insertBefore(nodes){this._assertUnremoved();
nodes=this._verifyNodeList(nodes);const {parentPath}=this;if(parentPath.isExpressionStatement()||parentPath.isLabeledStatement()||parentPath.isExportNamedDeclaration()||parentPath.isExportDefaultDeclaration()&&this.isDeclaration())return parentPath.insertBefore(nodes);else if(this.isNodeType("Expression")&&this.listKey!=="params"&&this.listKey!=="arguments"||parentPath.isForStatement()&&this.key==="init"){if(this.node)nodes.push(this.node);return this.replaceExpressionWithStatements(nodes)}else if(Array.isArray(this.container))return this._containerInsertBefore(nodes);
else if(this.isStatementOrBlock()){const shouldInsertCurrentNode=this.node&&(!this.isExpressionStatement()||this.node.expression!=null);this.replaceWith(t().blockStatement(shouldInsertCurrentNode?[this.node]:[]));return this.unshiftContainer("body",nodes)}else throw new Error("We don't know what to do with this node type. "+"We were previously a Statement but we can't fit in here?");}function _containerInsert(from,nodes){this.updateSiblingKeys(from,nodes.length);const paths=[];this.container.splice(from,
0,...nodes);for(let i=0;i<nodes.length;i++){const to=from+i;const path=this.getSibling(to);paths.push(path);if(this.context&&this.context.queue)path.pushContext(this.context)}const contexts=this._getQueueContexts();for(const path of paths){path.setScope();path.debug("Inserted.");for(const context of contexts)context.maybeQueue(path,true)}return paths}function _containerInsertBefore(nodes){return this._containerInsert(this.key,nodes)}function _containerInsertAfter(nodes){return this._containerInsert(this.key+
1,nodes)}function insertAfter(nodes){this._assertUnremoved();nodes=this._verifyNodeList(nodes);const {parentPath}=this;if(parentPath.isExpressionStatement()||parentPath.isLabeledStatement()||parentPath.isExportNamedDeclaration()||parentPath.isExportDefaultDeclaration()&&this.isDeclaration())return parentPath.insertAfter(nodes.map((node)=>{return t().isExpression(node)?t().expressionStatement(node):node}));else if(this.isNodeType("Expression")&&!this.isJSXElement()||parentPath.isForStatement()&&this.key===
"init"){if(this.node){let {scope}=this;if(parentPath.isMethod({computed:true,key:this.node}))scope=scope.parent;const temp=scope.generateDeclaredUidIdentifier();nodes.unshift(t().expressionStatement(t().assignmentExpression("=",t().cloneNode(temp),this.node)));nodes.push(t().expressionStatement(t().cloneNode(temp)))}return this.replaceExpressionWithStatements(nodes)}else if(Array.isArray(this.container))return this._containerInsertAfter(nodes);else if(this.isStatementOrBlock()){const shouldInsertCurrentNode=
this.node&&(!this.isExpressionStatement()||this.node.expression!=null);this.replaceWith(t().blockStatement(shouldInsertCurrentNode?[this.node]:[]));return this.pushContainer("body",nodes)}else throw new Error("We don't know what to do with this node type. "+"We were previously a Statement but we can't fit in here?");}function updateSiblingKeys(fromIndex,incrementBy){if(!this.parent)return;const paths=_cache.path.get(this.parent);for(let i=0;i<paths.length;i++){const path=paths[i];if(path.key>=fromIndex)path.key+=
incrementBy}}function _verifyNodeList(nodes){if(!nodes)return[];if(nodes.constructor!==Array)nodes=[nodes];for(let i=0;i<nodes.length;i++){const node=nodes[i];let msg;if(!node)msg="has falsy node";else if(typeof node!=="object")msg="contains a non-object node";else if(!node.type)msg="without a type";else if(node instanceof _index.default)msg="has a NodePath when it expected a raw object";if(msg){const type=Array.isArray(node)?"array":typeof node;throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);
}}return nodes}function unshiftContainer(listKey,nodes){this._assertUnremoved();nodes=this._verifyNodeList(nodes);const path=_index.default.get({parentPath:this,parent:this.node,container:this.node[listKey],listKey,key:0});return path.insertBefore(nodes)}function pushContainer(listKey,nodes){this._assertUnremoved();nodes=this._verifyNodeList(nodes);const container=this.node[listKey];const path=_index.default.get({parentPath:this,parent:this.node,container:container,listKey,key:container.length});
return path.replaceWithMultiple(nodes)}function hoist(scope=this.scope){const hoister=new _hoister.default(this,scope);return hoister.run()}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const referenceVisitor={ReferencedIdentifier(path,state){if(path.isJSXIdentifier()&&t().react.isCompatTag(path.node.name)&&!path.parentPath.isJSXMemberExpression())return;if(path.node.name==="this"){let scope=path.scope;do if(scope.path.isFunction()&&!scope.path.isArrowFunctionExpression())break;
while(scope=scope.parent);if(scope)state.breakOnScopePaths.push(scope.path)}const binding=path.scope.getBinding(path.node.name);if(!binding)return;if(binding!==state.scope.getBinding(path.node.name))return;state.bindings[path.node.name]=binding}};class PathHoister{constructor(path,scope){this.breakOnScopePaths=[];this.bindings={};this.scopes=[];this.scope=scope;this.path=path;this.attachAfter=false}isCompatibleScope(scope){for(const key in this.bindings){const binding=this.bindings[key];if(!scope.bindingIdentifierEquals(key,
binding.identifier))return false}return true}getCompatibleScopes(){let scope=this.path.scope;do{if(this.isCompatibleScope(scope))this.scopes.push(scope);else break;if(this.breakOnScopePaths.indexOf(scope.path)>=0)break}while(scope=scope.parent)}getAttachmentPath(){let path=this._getAttachmentPath();if(!path)return;let targetScope=path.scope;if(targetScope.path===path)targetScope=path.scope.parent;if(targetScope.path.isProgram()||targetScope.path.isFunction())for(const name in this.bindings){if(!targetScope.hasOwnBinding(name))continue;
const binding=this.bindings[name];if(binding.kind==="param"||binding.path.parentKey==="params")continue;const bindingParentPath=this.getAttachmentParentForPath(binding.path);if(bindingParentPath.key>=path.key){this.attachAfter=true;path=binding.path;for(const violationPath of binding.constantViolations)if(this.getAttachmentParentForPath(violationPath).key>path.key)path=violationPath}}return path}_getAttachmentPath(){const scopes=this.scopes;const scope=scopes.pop();if(!scope)return;if(scope.path.isFunction())if(this.hasOwnParamBindings(scope)){if(this.scope===
scope)return;const bodies=scope.path.get("body").get("body");for(let i=0;i<bodies.length;i++){if(bodies[i].node._blockHoist)continue;return bodies[i]}}else return this.getNextScopeAttachmentParent();else if(scope.path.isProgram())return this.getNextScopeAttachmentParent()}getNextScopeAttachmentParent(){const scope=this.scopes.pop();if(scope)return this.getAttachmentParentForPath(scope.path)}getAttachmentParentForPath(path){do if(!path.parentPath||Array.isArray(path.container)&&path.isStatement())return path;
while(path=path.parentPath)}hasOwnParamBindings(scope){for(const name in this.bindings){if(!scope.hasOwnBinding(name))continue;const binding=this.bindings[name];if(binding.kind==="param"&&binding.constant)return true}return false}run(){this.path.traverse(referenceVisitor,this);this.getCompatibleScopes();const attachTo=this.getAttachmentPath();if(!attachTo)return;if(attachTo.getFunctionParent()===this.path.getFunctionParent())return;let uid=attachTo.scope.generateUidIdentifier("ref");const declarator=
t().variableDeclarator(uid,this.path.node);const insertFn=this.attachAfter?"insertAfter":"insertBefore";const [attached]=attachTo[insertFn]([attachTo.isVariableDeclarator()?declarator:t().variableDeclaration("var",[declarator])]);const parent=this.path.parentPath;if(parent.isJSXElement()&&this.path.container===parent.node.children)uid=t().JSXExpressionContainer(uid);this.path.replaceWith(t().cloneNode(uid));return attachTo.isVariableDeclarator()?attached.get("init"):attached.get("declarations.0.init")}}
exports.default=PathHoister},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.getOpposite=getOpposite;exports.getCompletionRecords=getCompletionRecords;exports.getSibling=getSibling;exports.getPrevSibling=getPrevSibling;exports.getNextSibling=getNextSibling;exports.getAllNextSiblings=getAllNextSiblings;exports.getAllPrevSiblings=getAllPrevSiblings;exports.get=get;exports._getKey=_getKey;exports._getPattern=_getPattern;exports.getBindingIdentifiers=
getBindingIdentifiers;exports.getOuterBindingIdentifiers=getOuterBindingIdentifiers;exports.getBindingIdentifierPaths=getBindingIdentifierPaths;exports.getOuterBindingIdentifierPaths=getOuterBindingIdentifierPaths;var _index=_interopRequireDefault(__webpack_require__(295));function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function getOpposite(){if(this.key==="left")return this.getSibling("right");else if(this.key==="right")return this.getSibling("left")}function addCompletionRecords(path,paths){if(path)return paths.concat(path.getCompletionRecords());
return paths}function getCompletionRecords(){let paths=[];if(this.isIfStatement()){paths=addCompletionRecords(this.get("consequent"),paths);paths=addCompletionRecords(this.get("alternate"),paths)}else if(this.isDoExpression()||this.isFor()||this.isWhile())paths=addCompletionRecords(this.get("body"),paths);else if(this.isProgram()||this.isBlockStatement())paths=addCompletionRecords(this.get("body").pop(),paths);else if(this.isFunction())return this.get("body").getCompletionRecords();else if(this.isTryStatement()){paths=
addCompletionRecords(this.get("block"),paths);paths=addCompletionRecords(this.get("handler"),paths);paths=addCompletionRecords(this.get("finalizer"),paths)}else if(this.isCatchClause())paths=addCompletionRecords(this.get("body"),paths);else paths.push(this);return paths}function getSibling(key){return _index.default.get({parentPath:this.parentPath,parent:this.parent,container:this.container,listKey:this.listKey,key:key})}function getPrevSibling(){return this.getSibling(this.key-1)}function getNextSibling(){return this.getSibling(this.key+
1)}function getAllNextSiblings(){let _key=this.key;let sibling=this.getSibling(++_key);const siblings=[];while(sibling.node){siblings.push(sibling);sibling=this.getSibling(++_key)}return siblings}function getAllPrevSiblings(){let _key=this.key;let sibling=this.getSibling(--_key);const siblings=[];while(sibling.node){siblings.push(sibling);sibling=this.getSibling(--_key)}return siblings}function get(key,context){if(context===true)context=this.context;const parts=key.split(".");if(parts.length===1)return this._getKey(key,
context);else return this._getPattern(parts,context)}function _getKey(key,context){const node=this.node;const container=node[key];if(Array.isArray(container))return container.map((_,i)=>{return _index.default.get({listKey:key,parentPath:this,parent:node,container:container,key:i}).setContext(context)});else return _index.default.get({parentPath:this,parent:node,container:node,key:key}).setContext(context)}function _getPattern(parts,context){let path=this;for(const part of parts)if(part===".")path=
path.parentPath;else if(Array.isArray(path))path=path[part];else path=path.get(part,context);return path}function getBindingIdentifiers(duplicates){return t().getBindingIdentifiers(this.node,duplicates)}function getOuterBindingIdentifiers(duplicates){return t().getOuterBindingIdentifiers(this.node,duplicates)}function getBindingIdentifierPaths(duplicates=false,outerOnly=false){const path=this;let search=[].concat(path);const ids=Object.create(null);while(search.length){const id=search.shift();if(!id)continue;
if(!id.node)continue;const keys=t().getBindingIdentifiers.keys[id.node.type];if(id.isIdentifier()){if(duplicates){const _ids=ids[id.node.name]=ids[id.node.name]||[];_ids.push(id)}else ids[id.node.name]=id;continue}if(id.isExportDeclaration()){const declaration=id.get("declaration");if(declaration.isDeclaration())search.push(declaration);continue}if(outerOnly){if(id.isFunctionDeclaration()){search.push(id.get("id"));continue}if(id.isFunctionExpression())continue}if(keys)for(let i=0;i<keys.length;i++){const key=
keys[i];const child=id.get(key);if(Array.isArray(child)||child.node)search=search.concat(child)}}return ids}function getOuterBindingIdentifierPaths(duplicates){return this.getBindingIdentifierPaths(duplicates,true)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.shareCommentsWithSiblings=shareCommentsWithSiblings;exports.addComment=addComment;exports.addComments=addComments;function t(){const data=_interopRequireWildcard(__webpack_require__(21));
t=function(){return data};return data}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function shareCommentsWithSiblings(){if(typeof this.key==="string")return;
const node=this.node;if(!node)return;const trailing=node.trailingComments;const leading=node.leadingComments;if(!trailing&&!leading)return;const prev=this.getSibling(this.key-1);const next=this.getSibling(this.key+1);const hasPrev=Boolean(prev.node);const hasNext=Boolean(next.node);if(hasPrev&&hasNext);else if(hasPrev)prev.addComments("trailing",trailing);else if(hasNext)next.addComments("leading",leading)}function addComment(type,content,line){t().addComment(this.node,type,content,line)}function addComments(type,
comments){t().addComments(this.node,type,comments)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.explode=explode;exports.verify=verify;exports.merge=merge;var virtualTypes=_interopRequireWildcard(__webpack_require__(296));function t(){const data=_interopRequireWildcard(__webpack_require__(21));t=function(){return data};return data}function _clone(){const data=_interopRequireDefault(__webpack_require__(32));_clone=function(){return data};
return data}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function explode(visitor){if(visitor._exploded)return visitor;
visitor._exploded=true;for(const nodeType in visitor){if(shouldIgnoreKey(nodeType))continue;const parts=nodeType.split("|");if(parts.length===1)continue;const fns=visitor[nodeType];delete visitor[nodeType];for(const part of parts)visitor[part]=fns}verify(visitor);delete visitor.__esModule;ensureEntranceObjects(visitor);ensureCallbackArrays(visitor);for(const nodeType of Object.keys(visitor)){if(shouldIgnoreKey(nodeType))continue;const wrapper=virtualTypes[nodeType];if(!wrapper)continue;const fns=
visitor[nodeType];for(const type in fns)fns[type]=wrapCheck(wrapper,fns[type]);delete visitor[nodeType];if(wrapper.types)for(const type of wrapper.types)if(visitor[type])mergePair(visitor[type],fns);else visitor[type]=fns;else mergePair(visitor,fns)}for(const nodeType in visitor){if(shouldIgnoreKey(nodeType))continue;const fns=visitor[nodeType];let aliases=t().FLIPPED_ALIAS_KEYS[nodeType];const deprecratedKey=t().DEPRECATED_KEYS[nodeType];if(deprecratedKey){console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecratedKey}`);
aliases=[deprecratedKey]}if(!aliases)continue;delete visitor[nodeType];for(const alias of aliases){const existing=visitor[alias];if(existing)mergePair(existing,fns);else visitor[alias]=(0,_clone().default)(fns)}}for(const nodeType in visitor){if(shouldIgnoreKey(nodeType))continue;ensureCallbackArrays(visitor[nodeType])}return visitor}function verify(visitor){if(visitor._verified)return;if(typeof visitor==="function")throw new Error("You passed `traverse()` a function when it expected a visitor object, "+
"are you sure you didn't mean `{ enter: Function }`?");for(const nodeType in visitor){if(nodeType==="enter"||nodeType==="exit")validateVisitorMethods(nodeType,visitor[nodeType]);if(shouldIgnoreKey(nodeType))continue;if(t().TYPES.indexOf(nodeType)<0)throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);const visitors=visitor[nodeType];if(typeof visitors==="object")for(const visitorKey in visitors)if(visitorKey==="enter"||visitorKey==="exit")validateVisitorMethods(`${nodeType}.${visitorKey}`,
visitors[visitorKey]);else throw new Error("You passed `traverse()` a visitor object with the property "+`${nodeType} that has the invalid property ${visitorKey}`);}visitor._verified=true}function validateVisitorMethods(path,val){const fns=[].concat(val);for(const fn of fns)if(typeof fn!=="function")throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);}function merge(visitors,states=[],wrapper){const rootVisitor={};for(let i=0;i<visitors.length;i++){const visitor=visitors[i];
const state=states[i];explode(visitor);for(const type in visitor){let visitorType=visitor[type];if(state||wrapper)visitorType=wrapWithStateOrWrapper(visitorType,state,wrapper);const nodeVisitor=rootVisitor[type]=rootVisitor[type]||{};mergePair(nodeVisitor,visitorType)}}return rootVisitor}function wrapWithStateOrWrapper(oldVisitor,state,wrapper){const newVisitor={};for(const key in oldVisitor){let fns=oldVisitor[key];if(!Array.isArray(fns))continue;fns=fns.map(function(fn){let newFn=fn;if(state)newFn=
function(path){return fn.call(state,path,state)};if(wrapper)newFn=wrapper(state.key,key,newFn);return newFn});newVisitor[key]=fns}return newVisitor}function ensureEntranceObjects(obj){for(const key in obj){if(shouldIgnoreKey(key))continue;const fns=obj[key];if(typeof fns==="function")obj[key]={enter:fns}}}function ensureCallbackArrays(obj){if(obj.enter&&!Array.isArray(obj.enter))obj.enter=[obj.enter];if(obj.exit&&!Array.isArray(obj.exit))obj.exit=[obj.exit]}function wrapCheck(wrapper,fn){const newFn=
function(path){if(wrapper.checkPath(path))return fn.apply(this,arguments)};newFn.toString=()=>fn.toString();return newFn}function shouldIgnoreKey(key){if(key[0]==="_")return true;if(key==="enter"||key==="exit"||key==="shouldSkip")return true;if(key==="blacklist"||key==="noScope"||key==="skipKeys")return true;return false}function mergePair(dest,src){for(const key in src)dest[key]=[].concat(dest[key]||[],src[key])}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.default=void 0;class Hub{getCode(){}getScope(){}addHelper(){throw new Error("Helpers are not supported by the default hub.");}buildError(node,msg,Error=TypeError){return new Error(msg)}}exports.default=Hub},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?
obj:{default:obj}}class FunctionValue extends _index.ObjectValue{constructor(realm,intrinsicName){super(realm,realm.intrinsics.FunctionPrototype,intrinsicName)}getName(){throw new Error("Abstract method");}getKind(){return"Function"}getLength(){let binding=this.properties.get("length");(0,_invariant.default)(binding);let desc=binding.descriptor;(0,_invariant.default)(desc);let value=desc.throwIfNotConcrete(this.$Realm).value;if(!(value instanceof _index.NumberValue))return undefined;return value.value}hasDefaultLength(){(0,
_invariant.default)(false,"abstract method; please override")}getDebugName(){return super.getDebugName()||this.getName()}}exports.default=FunctionValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);class ECMAScriptFunctionValue extends _index.FunctionValue{constructor(realm,intrinsicName){super(realm,intrinsicName);this.isCalledInMultipleContexts=false}}exports.default=ECMAScriptFunctionValue},
function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);var t=_interopRequireWildcard(__webpack_require__(21));var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}class ECMAScriptSourceFunctionValue extends _index.ECMAScriptFunctionValue{constructor(realm,intrinsicName){super(realm,intrinsicName)}initialize(params,body){let node=body;this.getHash();if(node.uniqueOrderedTag===undefined)node.uniqueOrderedTag=this.$Realm.functionBodyUniqueTagSeed++;
this.$ECMAScriptCode=body;this.$FormalParameters=params}getName(){const uniqueTag=this.$ECMAScriptCode.uniqueOrderedTag;(0,_invariant.default)(uniqueTag);return this.__originalName?this.__originalName:`function#${uniqueTag}`}hasDefaultLength(){let params=this.$FormalParameters;let expected=params.length;for(let i=0;i<params.length;i++){let param=params[i];if(t.isAssignmentPattern(param)||t.isRestElement(param)){expected=i;break}}return expected===this.getLength()}}exports.default=ECMAScriptSourceFunctionValue},
function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class BoundFunctionValue extends _index.FunctionValue{constructor(realm,intrinsicName){super(realm,intrinsicName)}getName(){return"Bound"}hasDefaultLength(){let f=this.$BoundTargetFunction;if(!(f instanceof
_index.FunctionValue)||!f.hasDefaultLength())return false;let fl=f.getLength();(0,_invariant.default)(fl!==undefined);return this.getLength()===Math.max(fl-this.$BoundArguments.length,0)}}exports.default=BoundFunctionValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _singletons=__webpack_require__(236);var _descriptors=__webpack_require__(268);
function _defineProperty(obj,key,value){if(key in obj)Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});else obj[key]=value;return obj}class NativeFunctionValue extends _index.ECMAScriptFunctionValue{constructor(realm,intrinsicName,name,length,callback,constructor=true){super(realm,intrinsicName);this.$ThisMode="strict";this.$HomeObject=undefined;this.$FunctionKind="normal";this.$Call=(thisArgument,argsList)=>{return _singletons.Functions.$Call(this.$Realm,
this,thisArgument,argsList)};if(constructor){this.$ConstructorKind="base";this.$Construct=(argumentsList,newTarget)=>{return _singletons.Functions.$Construct(this.$Realm,this,argumentsList,newTarget)}}this.$Environment=realm.$GlobalEnv;this.callback=callback;this.length=length;this.$DefineOwnProperty("length",new _descriptors.PropertyDescriptor({value:new _index.NumberValue(realm,length),writable:false,configurable:true,enumerable:false}));if(name!==undefined&&name!==""){if(name instanceof _index.SymbolValue)this.name=
name.$Description?`[${name.$Description.throwIfNotConcreteString().value}]`:"[native]";else this.name=name;this.$DefineOwnProperty("name",new _descriptors.PropertyDescriptor({value:new _index.StringValue(realm,this.name),writable:false,configurable:true,enumerable:false}))}else this.name="native"}getTrackedPropertyNames(){return NativeFunctionValue.trackedPropertyNames}hasDefaultLength(){return this.getLength()===this.length}getName(){return this.name}callCallback(context,originalArgsList,newTarget){let originalLength=
originalArgsList.length;let argsList=originalArgsList.slice();for(let i=0;i<this.length;i++)argsList[i]=originalArgsList[i]||this.$Realm.intrinsics.undefined;return new _completions.ReturnCompletion(this.callback(context,argsList,originalLength,newTarget),this.$Realm.currentLocation)}}exports.default=NativeFunctionValue;_defineProperty(NativeFunctionValue,"trackedPropertyNames",_index.ObjectValue.trackedPropertyNames.concat("$RevocableProxy"))},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);var _is=__webpack_require__(229);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _errors=__webpack_require__(3);var _descriptors=__webpack_require__(268);var _completions=__webpack_require__(18);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function evaluatePossibleNestedOptimizedFunctionsAndStoreEffects(realm,abstractArrayValue,
possibleNestedOptimizedFunctions){for(let _ref of possibleNestedOptimizedFunctions){let {func,thisValue}=_ref;let funcToModel=func;if(func instanceof _index.BoundFunctionValue){funcToModel=func.$BoundTargetFunction;thisValue=func.$BoundThis}(0,_invariant.default)(funcToModel instanceof _index.ECMAScriptSourceFunctionValue);if(funcToModel.isCalledInMultipleContexts)return;let previouslyComputedEffects=realm.collectedNestedOptimizedFunctionEffects.get(funcToModel);if(previouslyComputedEffects!==undefined)if(realm.instantRender.enabled)realm.instantRenderBailout("Array operators may only be optimized once",
funcToModel.expressionLocation);else{funcToModel.isCalledInMultipleContexts=true;_singletons.Leak.value(realm,func);return}let funcCall=_singletons.Utils.createModelledFunctionCall(realm,funcToModel,undefined,thisValue);let pureFuncCall=()=>realm.evaluatePure(funcCall,false,()=>{throw new _errors.NestedOptimizedFunctionSideEffect;});let effects;try{effects=realm.evaluateForEffects(pureFuncCall,null,"temporalArray nestedOptimizedFunction")}catch(e){if(e instanceof _errors.NestedOptimizedFunctionSideEffect){if(realm.instantRender.enabled)realm.instantRenderBailout("InstantRender does not support impure array operators",
funcCall.expressionLocation);_singletons.Leak.value(realm,func);return}throw e;}if(abstractArrayValue.nestedOptimizedFunctionEffects===undefined)abstractArrayValue.nestedOptimizedFunctionEffects=new Map;abstractArrayValue.nestedOptimizedFunctionEffects.set(funcToModel,effects);realm.collectedNestedOptimizedFunctionEffects.set(funcToModel,effects)}}function modelUnknownPropertyOfSpecializedArray(realm,args,array,possibleNestedOptimizedFunctions){let sentinelProperty={key:undefined,descriptor:new _descriptors.PropertyDescriptor({writable:true,
enumerable:true,configurable:true}),object:array};let mayAliasedObjects=new Set;if(realm.arrayNestedOptimizedFunctionsEnabled&&possibleNestedOptimizedFunctions){(0,_invariant.default)(possibleNestedOptimizedFunctions.length>0);if(possibleNestedOptimizedFunctions[0].kind==="map")for(let _ref2 of possibleNestedOptimizedFunctions){let {func}=_ref2;let funcToModel;if(func instanceof _index.BoundFunctionValue)funcToModel=func.$BoundTargetFunction;else funcToModel=func;(0,_invariant.default)(funcToModel instanceof
_index.ECMAScriptSourceFunctionValue);if(array.nestedOptimizedFunctionEffects!==undefined){let effects=array.nestedOptimizedFunctionEffects.get(funcToModel);if(effects!==undefined){(0,_invariant.default)(effects.result instanceof _completions.SimpleNormalCompletion);let reachableObjects=_singletons.Materialize.computeReachableObjects(realm,effects.result.value);for(let reachableObject of reachableObjects)if(!effects.createdObjects.has(reachableObject))mayAliasedObjects.add(reachableObject)}}}if(args.length>
0){let mappedArray=args[0];if(ArrayValue.isIntrinsicAndHasWidenedNumericProperty(mappedArray)){(0,_invariant.default)(mappedArray instanceof ArrayValue);(0,_invariant.default)(mappedArray.unknownProperty!==undefined);(0,_invariant.default)(mappedArray.unknownProperty.descriptor instanceof _descriptors.PropertyDescriptor);let unknownPropertyValue=mappedArray.unknownProperty.descriptor.value;(0,_invariant.default)(unknownPropertyValue instanceof _index.AbstractValue);let aliasSet=unknownPropertyValue.args[0];
(0,_invariant.default)(aliasSet instanceof _index.AbstractValue&&aliasSet.kind==="mayAliasSet");for(let aliasedObject of aliasSet.args){(0,_invariant.default)(aliasedObject instanceof _index.ObjectValue);mayAliasedObjects.add(aliasedObject)}}}}let aliasSet=_index.AbstractValue.createFromType(realm,_index.Value,"mayAliasSet",[...mayAliasedObjects]);sentinelProperty.descriptor.value=_index.AbstractValue.createFromType(realm,_index.Value,"widened numeric property",[aliasSet]);return sentinelProperty}
function createArrayWithWidenedNumericProperty(realm,args,intrinsicName,possibleNestedOptimizedFunctions){let abstractArrayValue=new ArrayValue(realm,intrinsicName);if(possibleNestedOptimizedFunctions!==undefined&&possibleNestedOptimizedFunctions.length>0)if(realm.arrayNestedOptimizedFunctionsEnabled&&(!realm.react.enabled||realm.react.optimizeNestedFunctions))evaluatePossibleNestedOptimizedFunctionsAndStoreEffects(realm,abstractArrayValue,possibleNestedOptimizedFunctions);else for(let _ref3 of possibleNestedOptimizedFunctions){let {func}=
_ref3;_singletons.Leak.value(realm,func)}abstractArrayValue.unknownProperty=modelUnknownPropertyOfSpecializedArray(realm,args,abstractArrayValue,possibleNestedOptimizedFunctions);return abstractArrayValue}class ArrayValue extends _index.ObjectValue{constructor(realm,intrinsicName){super(realm,realm.intrinsics.ArrayPrototype,intrinsicName)}getKind(){return"Array"}isSimpleObject(){return this.$TypedArrayName===undefined}$DefineOwnProperty(P,Desc){let A=this;(0,_invariant.default)((0,_is.IsPropertyKey)(this.$Realm,
P),"expected a property key");if(P==="length"||P instanceof _index.StringValue&&P.value==="length")return _singletons.Properties.ArraySetLength(this.$Realm,A,Desc);else if((0,_is.IsArrayIndex)(this.$Realm,P)){if(ArrayValue.isIntrinsicAndHasWidenedNumericProperty(this)){let succeeded=_singletons.Properties.OrdinaryDefineOwnProperty(this.$Realm,A,P,Desc);if(succeeded===false)return false;return true}let oldLenDesc=_singletons.Properties.OrdinaryGetOwnProperty(this.$Realm,A,"length");(0,_invariant.default)(oldLenDesc!==
undefined&&!(0,_is.IsAccessorDescriptor)(this.$Realm,oldLenDesc),"cannot be undefined or an accessor descriptor");_singletons.Properties.ThrowIfMightHaveBeenDeleted(oldLenDesc);oldLenDesc=oldLenDesc.throwIfNotConcrete(this.$Realm);let oldLen=oldLenDesc.value;(0,_invariant.default)(oldLen instanceof _index.Value);oldLen=oldLen.throwIfNotConcrete();(0,_invariant.default)(oldLen instanceof _index.NumberValue,"expected number value");oldLen=oldLen.value;let index=_singletons.To.ToUint32(this.$Realm,typeof P===
"string"?new _index.StringValue(this.$Realm,P):P);if(index>=oldLen&&oldLenDesc.writable===false)return false;let succeeded=_singletons.Properties.OrdinaryDefineOwnProperty(this.$Realm,A,P,Desc);if(succeeded===false)return false;if(index>=oldLen){oldLenDesc.value=new _index.NumberValue(this.$Realm,index+1);succeeded=_singletons.Properties.OrdinaryDefineOwnProperty(this.$Realm,A,"length",oldLenDesc);(0,_invariant.default)(succeeded,"expected length definition to succeed")}return true}return _singletons.Properties.OrdinaryDefineOwnProperty(this.$Realm,
A,P,Desc)}static createTemporalWithWidenedNumericProperty(realm,args,operationDescriptor,possibleNestedOptimizedFunctions){(0,_invariant.default)(realm.generator!==undefined);let value=realm.generator.deriveConcreteObject((intrinsicName)=>createArrayWithWidenedNumericProperty(realm,args,intrinsicName,possibleNestedOptimizedFunctions),args,operationDescriptor,{isPure:true});(0,_invariant.default)(value instanceof ArrayValue);return value}static isIntrinsicAndHasWidenedNumericProperty(obj){if(obj instanceof
ArrayValue&&obj.intrinsicName!==undefined&&obj.isScopedTemplate!==undefined){(0,_invariant.default)(_index.ObjectValue.isIntrinsicDerivedObject(obj));const prop=obj.unknownProperty;if(prop!==undefined&&prop.descriptor!==undefined){const desc=prop.descriptor.throwIfNotConcrete(obj.$Realm);return desc.value instanceof _index.AbstractValue&&desc.value.kind==="widened numeric property"}}return false}}exports.default=ArrayValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);class UndefinedValue extends _index.PrimitiveValue{_serialize(){return undefined}equals(x){return x instanceof UndefinedValue&&!(x instanceof _index.EmptyValue)}getHash(){return 792057514635681}mightBeFalse(){return true}toDisplayString(){return"undefined"}}exports.default=UndefinedValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=
__webpack_require__(10);class EmptyValue extends _index.UndefinedValue{getHash(){return 4523845144584502}equals(x){return x instanceof EmptyValue}}exports.default=EmptyValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);class NullValue extends _index.PrimitiveValue{_serialize(){return null}equals(x){return x instanceof NullValue}getHash(){return 5613143836447527}mightBeFalse(){return true}toDisplayString(){return"null"}}
exports.default=NullValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.IntegralValue=exports.NumberValue=void 0;var _index=__webpack_require__(10);class NumberValue extends _index.PrimitiveValue{constructor(realm,value,intrinsicName){super(realm,intrinsicName);this.value=value}equals(x){return x instanceof NumberValue&&Object.is(this.value,x.value)}getHash(){let num=Math.abs(this.value);if(num<100)num*=1E7;return num|0}mightBeFalse(){return this.value===
0||isNaN(this.value)}throwIfNotConcreteNumber(){return this}_serialize(){return this.value}toDisplayString(){return this.value.toString()}}exports.NumberValue=NumberValue;class IntegralValue extends NumberValue{constructor(realm,value,intrinsicName){super(realm,value,intrinsicName)}static createFromNumberValue(realm,value,intrinsicName){return Number.isInteger(value)?new IntegralValue(realm,value,intrinsicName):new NumberValue(realm,value,intrinsicName)}}exports.IntegralValue=IntegralValue},function(module,
exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var _abstract=__webpack_require__(233);var _get=__webpack_require__(230);var _is=__webpack_require__(229);var _singletons=__webpack_require__(236);var _call=__webpack_require__(234);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
function _defineProperty(obj,key,value){if(key in obj)Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});else obj[key]=value;return obj}function FindPropertyKey(realm,keys,key){for(let i=0;i<keys.length;++i)if((0,_abstract.SamePropertyKey)(realm,key,keys[i]))return i;return-1}class ProxyValue extends _index.ObjectValue{constructor(realm){super(realm)}getTrackedPropertyNames(){return ProxyValue.trackedPropertyNames}isSimpleObject(){return false}usesOrdinaryObjectInternalPrototypeMethods(){return false}$GetPrototypeOf(){let realm=
this.$Realm;let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected an object");let target=this.$ProxyTarget;(0,_invariant.default)(target instanceof _index.ObjectValue);let trap=(0,_get.GetMethod)(realm,handler,"getPrototypeOf");if(trap instanceof _index.UndefinedValue)return target.$GetPrototypeOf();let handlerProto=(0,_call.Call)(realm,trap,handler,
[target]);if(!(handlerProto instanceof _index.ObjectValue)&&!(handlerProto instanceof _index.NullValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let extensibleTarget=(0,_is.IsExtensible)(realm,target);if(extensibleTarget)return handlerProto;let targetProto=target.$GetPrototypeOf();if(!(0,_abstract.SameValuePartial)(realm,handlerProto,targetProto))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return handlerProto}$SetPrototypeOf(V){let realm=this.$Realm;
(0,_invariant.default)(V instanceof _index.ObjectValue||V instanceof _index.NullValue,"expected object or null");let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected object");let target=this.$ProxyTarget;(0,_invariant.default)(target instanceof _index.ObjectValue);let trap=(0,_get.GetMethod)(realm,handler,"setPrototypeOf");if(trap instanceof _index.UndefinedValue)return target.$SetPrototypeOf(V);
let booleanTrapResult=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,trap,handler,[target,V]));if(!booleanTrapResult)return false;let extensibleTarget=(0,_is.IsExtensible)(realm,target);if(extensibleTarget)return true;let targetProto=target.$GetPrototypeOf();if(!(0,_abstract.SameValuePartial)(realm,V,targetProto))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return true}$IsExtensible(){let realm=this.$Realm;let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected object");let target=this.$ProxyTarget;let trap=(0,_get.GetMethod)(realm,handler,"isExtensible");if(trap instanceof _index.UndefinedValue){(0,_invariant.default)(target instanceof _index.ObjectValue);return target.$IsExtensible()}let booleanTrapResult=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,trap,handler,[target]));(0,_invariant.default)(target instanceof _index.ObjectValue);let targetResult=target.$IsExtensible();
if(booleanTrapResult!==targetResult)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return booleanTrapResult}$PreventExtensions(){let realm=this.$Realm;let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected object");let target=this.$ProxyTarget;let trap=(0,_get.GetMethod)(realm,handler,"preventExtensions");if(trap instanceof _index.UndefinedValue){(0,
_invariant.default)(target instanceof _index.ObjectValue);return target.$PreventExtensions()}let booleanTrapResult=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,trap,handler,[target]));if(booleanTrapResult){(0,_invariant.default)(target instanceof _index.ObjectValue);let targetIsExtensible=target.$IsExtensible();if(targetIsExtensible)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}return booleanTrapResult}$GetOwnProperty(P){let realm=this.$Realm;(0,_invariant.default)((0,
_is.IsPropertyKey)(realm,P),"expected property key");let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected object");let target=this.$ProxyTarget;(0,_invariant.default)(target instanceof _index.ObjectValue);let trap=(0,_get.GetMethod)(realm,handler,"getOwnPropertyDescriptor");if(trap instanceof _index.UndefinedValue)return target.$GetOwnProperty(P);
let trapResultObj=(0,_call.Call)(realm,trap,handler,[target,typeof P==="string"?new _index.StringValue(realm,P):P]);if(!(trapResultObj instanceof _index.ObjectValue)&&!(trapResultObj instanceof _index.UndefinedValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let targetDesc=target.$GetOwnProperty(P);if(trapResultObj instanceof _index.UndefinedValue){if(!targetDesc)return undefined;_singletons.Properties.ThrowIfMightHaveBeenDeleted(targetDesc);targetDesc=targetDesc.throwIfNotConcrete(realm);
if(!targetDesc.configurable)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let extensibleTarget=(0,_is.IsExtensible)(realm,target);(0,_invariant.default)(typeof extensibleTarget==="boolean","expected boolean");if(!extensibleTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return undefined}let extensibleTarget=(0,_is.IsExtensible)(realm,target);let resultDesc=_singletons.To.ToPropertyDescriptor(realm,trapResultObj);_singletons.Properties.CompletePropertyDescriptor(realm,
resultDesc);let valid=_singletons.Properties.IsCompatiblePropertyDescriptor(realm,extensibleTarget,resultDesc,targetDesc);if(!valid)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);resultDesc=resultDesc.throwIfNotConcrete(realm);if(!resultDesc.configurable)if(!targetDesc||targetDesc.throwIfNotConcrete(realm).configurable)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return resultDesc}$DefineOwnProperty(P,Desc){let realm=this.$Realm;(0,_invariant.default)((0,
_is.IsPropertyKey)(realm,P),"expected property key");let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected object");let target=this.$ProxyTarget;(0,_invariant.default)(target instanceof _index.ObjectValue);let trap=(0,_get.GetMethod)(realm,handler,"defineProperty");if(trap instanceof _index.UndefinedValue)return target.$DefineOwnProperty(P,Desc);
let descObj=_singletons.Properties.FromPropertyDescriptor(realm,Desc);let booleanTrapResult=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,trap,handler,[target,typeof P==="string"?new _index.StringValue(realm,P):P,descObj]));if(!booleanTrapResult)return false;let targetDesc=target.$GetOwnProperty(P);let extensibleTarget=(0,_is.IsExtensible)(realm,target);let settingConfigFalse;if(Desc.throwIfNotConcrete(realm).configurable===false)settingConfigFalse=true;else settingConfigFalse=false;
if(!targetDesc){if(!extensibleTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(settingConfigFalse)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}else{_singletons.Properties.ThrowIfMightHaveBeenDeleted(targetDesc);if(!_singletons.Properties.IsCompatiblePropertyDescriptor(realm,extensibleTarget,Desc,targetDesc))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(settingConfigFalse&&targetDesc.throwIfNotConcrete(realm).configurable)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
}return true}$HasProperty(P){let realm=this.$Realm;(0,_invariant.default)((0,_is.IsPropertyKey)(realm,P),"expected property key");let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected object");let target=this.$ProxyTarget;(0,_invariant.default)(target instanceof _index.ObjectValue);let trap=(0,_get.GetMethod)(realm,handler,"has");if(trap instanceof
_index.UndefinedValue)return target.$HasProperty(P);let booleanTrapResult=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,trap,handler,[target,typeof P==="string"?new _index.StringValue(realm,P):P]));if(!booleanTrapResult){let targetDesc=target.$GetOwnProperty(P);if(targetDesc){_singletons.Properties.ThrowIfMightHaveBeenDeleted(targetDesc);targetDesc=targetDesc.throwIfNotConcrete(realm);if(!targetDesc.configurable)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let extensibleTarget=
(0,_is.IsExtensible)(realm,target);if(!extensibleTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}}return booleanTrapResult}$Get(P,Receiver){let realm=this.$Realm;(0,_invariant.default)((0,_is.IsPropertyKey)(realm,P),"expected property key");let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected object");let target=this.$ProxyTarget;
(0,_invariant.default)(target instanceof _index.ObjectValue);let trap=(0,_get.GetMethod)(realm,handler,"get");if(trap instanceof _index.UndefinedValue)return target.$Get(P,Receiver);let trapResult=(0,_call.Call)(realm,trap,handler,[target,typeof P==="string"?new _index.StringValue(realm,P):P,Receiver]);let targetDesc=target.$GetOwnProperty(P);if(targetDesc){_singletons.Properties.ThrowIfMightHaveBeenDeleted(targetDesc);if((0,_is.IsDataDescriptor)(realm,targetDesc)&&targetDesc.configurable===false&&
targetDesc.writable===false){let targetValue=targetDesc.value||realm.intrinsics.undefined;(0,_invariant.default)(targetValue instanceof _index.Value);if(!(0,_abstract.SameValuePartial)(realm,trapResult,targetValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}if((0,_is.IsAccessorDescriptor)(realm,targetDesc)&&targetDesc.configurable===false&&(!targetDesc.get||targetDesc.get instanceof _index.UndefinedValue))if(!(trapResult instanceof _index.UndefinedValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
}return trapResult}$Set(P,V,Receiver){let realm=this.$Realm;(0,_invariant.default)((0,_is.IsPropertyKey)(realm,P),"expected property key");let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected object");let target=this.$ProxyTarget;let trap=(0,_get.GetMethod)(realm,handler,"set");if(trap instanceof _index.UndefinedValue){(0,_invariant.default)(target instanceof
_index.ObjectValue);return target.$Set(P,V,Receiver)}let booleanTrapResult=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,trap,handler,[target,typeof P==="string"?new _index.StringValue(realm,P):P,V,Receiver]));if(!booleanTrapResult)return false;(0,_invariant.default)(target instanceof _index.ObjectValue);let targetDesc=target.$GetOwnProperty(P);if(targetDesc){_singletons.Properties.ThrowIfMightHaveBeenDeleted(targetDesc);if((0,_is.IsDataDescriptor)(realm,targetDesc)&&!targetDesc.configurable&&
!targetDesc.writable){let targetValue=targetDesc.value||realm.intrinsics.undefined;(0,_invariant.default)(targetValue instanceof _index.Value);if(!(0,_abstract.SameValuePartial)(realm,V,targetValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}if((0,_is.IsAccessorDescriptor)(realm,targetDesc)&&!targetDesc.configurable)if(!targetDesc.set||targetDesc.set instanceof _index.UndefinedValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}return true}$Delete(P){let realm=
this.$Realm;(0,_invariant.default)((0,_is.IsPropertyKey)(realm,P),"expected property key");let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected object");let target=this.$ProxyTarget;let trap=(0,_get.GetMethod)(realm,handler,"deleteProperty");if(trap instanceof _index.UndefinedValue){(0,_invariant.default)(target instanceof _index.ObjectValue);return target.$Delete(P)}let booleanTrapResult=
_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,trap,handler,[target,typeof P==="string"?new _index.StringValue(realm,P):P]));if(!booleanTrapResult)return false;(0,_invariant.default)(target instanceof _index.ObjectValue);let targetDesc=target.$GetOwnProperty(P);if(!targetDesc)return true;_singletons.Properties.ThrowIfMightHaveBeenDeleted(targetDesc);targetDesc=targetDesc.throwIfNotConcrete(realm);if(!targetDesc.configurable)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
return true}$OwnPropertyKeys(){let realm=this.$Realm;let handler=this.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected object");let target=this.$ProxyTarget;(0,_invariant.default)(target instanceof _index.ObjectValue);let trap=(0,_get.GetMethod)(realm,handler,"ownKeys");if(trap instanceof _index.UndefinedValue)return target.$OwnPropertyKeys();let trapResultArray=
(0,_call.Call)(realm,trap,handler,[target]);let trapResult=_singletons.Create.CreateListFromArrayLike(realm,trapResultArray,["String","Symbol"]);let extensibleTarget=(0,_is.IsExtensible)(realm,target);let targetKeys=target.$OwnPropertyKeys();for(let key of targetKeys)(0,_invariant.default)(key instanceof _index.SymbolValue||key instanceof _index.StringValue,"expected string or symbol");let targetConfigurableKeys=[];let targetNonconfigurableKeys=[];for(let key of targetKeys){let desc=target.$GetOwnProperty(key);
if(desc)_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);if(desc&&desc.throwIfNotConcrete(realm).configurable===false)targetNonconfigurableKeys.push(key);else targetConfigurableKeys.push(key)}if(extensibleTarget&&!targetNonconfigurableKeys.length)return trapResult;let uncheckedResultKeys=trapResult.slice();for(let key of targetNonconfigurableKeys){let index=FindPropertyKey(realm,uncheckedResultKeys,key);if(index<0)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"key is not an element of uncheckedResultKeys");
uncheckedResultKeys.splice(index,1)}if(extensibleTarget)return trapResult;for(let key of targetConfigurableKeys){let index=FindPropertyKey(realm,uncheckedResultKeys,key);if(index<0)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"key is not an element of uncheckedResultKeys");uncheckedResultKeys.splice(index,1)}if(uncheckedResultKeys.length)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return trapResult}}exports.default=ProxyValue;_defineProperty(ProxyValue,
"trackedPropertyNames",_index.ObjectValue.trackedPropertyNames.concat(["$ProxyTarget","$ProxyHandler"]))},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);var _is=__webpack_require__(229);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?
obj:{default:obj}}class StringExotic extends _index.ObjectValue{constructor(realm,intrinsicName){super(realm,realm.intrinsics.StringPrototype,intrinsicName)}$GetOwnProperty(P){let desc=_singletons.Properties.OrdinaryGetOwnProperty(this.$Realm,this,P);if(desc!==undefined){_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);return desc}if(typeof P!=="string"&&!(P instanceof _index.StringValue))return undefined;let index=_singletons.To.CanonicalNumericIndexString(this.$Realm,typeof P==="string"?
new _index.StringValue(this.$Realm,P):P);if(index===undefined||index===null)return undefined;if((0,_is.IsInteger)(this.$Realm,index)===false)return undefined;if(1/index===-Infinity)return undefined;let str=this.$StringData;(0,_invariant.default)(str);str=str.throwIfNotConcreteString();let len=str.value.length;if(index<0||len<=index)return undefined;let resultStr=new _index.StringValue(this.$Realm,str.value.charAt(index));return new _descriptors.PropertyDescriptor({value:resultStr,writable:false,enumerable:true,
configurable:false})}$OwnPropertyKeys(){let keys=[];let str=this.$StringData;(0,_invariant.default)(str);str=str.throwIfNotConcreteString();let len=str.value.length;let realm=this.$Realm;for(let i=0;i<len;++i)keys.push(new _index.StringValue(realm,_singletons.To.ToString(realm,new _index.NumberValue(realm,i))));let properties=_singletons.Properties.GetOwnPropertyKeysArray(realm,this,false,false);for(let key of properties.filter((x)=>(0,_is.IsArrayIndex)(realm,x)).map((x)=>parseInt(x,10)).filter((x)=>
_singletons.To.ToInteger(realm,x)>=len).sort((x,y)=>x-y))keys.push(new _index.StringValue(realm,key+""));for(let key of properties.filter((x)=>!(0,_is.IsArrayIndex)(realm,x)))keys.push(new _index.StringValue(realm,key));for(let key of this.symbols.keys())keys.push(key);return keys}}exports.default=StringExotic},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);var _is=__webpack_require__(229);
var _has=__webpack_require__(269);var _abstract=__webpack_require__(233);var _get=__webpack_require__(230);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ArgumentsExotic extends _index.ObjectValue{constructor(realm,intrinsicName){super(realm,realm.intrinsics.ObjectPrototype,intrinsicName)}$GetOwnProperty(P){let args=
this;let desc=_singletons.Properties.OrdinaryGetOwnProperty(this.$Realm,args,P);if(desc===undefined)return undefined;_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);desc=desc.throwIfNotConcrete(this.$Realm);let map=args.$ParameterMap;(0,_invariant.default)(map);let isMapped=(0,_has.HasOwnProperty)(this.$Realm,map,P);if(isMapped===true)desc.value=(0,_get.Get)(this.$Realm,map,P);return desc}$DefineOwnProperty(P,_Desc){let Desc=_Desc.throwIfNotConcrete(this.$Realm);let args=this;let map=args.$ParameterMap;
(0,_invariant.default)(map);let isMapped=(0,_has.HasOwnProperty)(this.$Realm,map,P);let newArgDesc=Desc;if(isMapped===true&&(0,_is.IsDataDescriptor)(this.$Realm,Desc)===true)if(Desc.value===undefined&&Desc.writable===false){newArgDesc=new _descriptors.PropertyDescriptor(Desc);newArgDesc.value=(0,_get.Get)(this.$Realm,map,P)}let allowed=_singletons.Properties.OrdinaryDefineOwnProperty(this.$Realm,args,P,newArgDesc);if(allowed===false)return false;if(isMapped===true)if((0,_is.IsAccessorDescriptor)(this.$Realm,
Desc)===true)map.$Delete(P);else{if(Desc.value!==undefined){(0,_invariant.default)(Desc.value instanceof _index.Value);let setStatus=_singletons.Properties.Set(this.$Realm,map,P,Desc.value,false);(0,_invariant.default)(setStatus===true)}if(Desc.writable===false)map.$Delete(P)}return true}$Get(P,Receiver){let args=this;let map=args.$ParameterMap;(0,_invariant.default)(map);let isMapped=(0,_has.HasOwnProperty)(this.$Realm,map,P);if(isMapped===false)return(0,_get.OrdinaryGet)(this.$Realm,args,P,Receiver);
else return(0,_get.Get)(this.$Realm,map,P)}$Set(P,V,Receiver){let args=this;let isMapped,map;if((0,_abstract.SameValuePartial)(this.$Realm,args,Receiver)===false)isMapped=false;else{map=args.$ParameterMap;(0,_invariant.default)(map);isMapped=(0,_has.HasOwnProperty)(this.$Realm,map,P)}if(isMapped===true){(0,_invariant.default)(map);let setStatus=_singletons.Properties.Set(this.$Realm,map,P,V,false);(0,_invariant.default)(setStatus===true)}return _singletons.Properties.OrdinarySet(this.$Realm,args,
P,V,Receiver)}$Delete(P){let args=this;let map=args.$ParameterMap;(0,_invariant.default)(map);let isMapped=(0,_has.HasOwnProperty)(this.$Realm,map,P);let result=_singletons.Properties.OrdinaryDelete(this.$Realm,args,P);if(result===true&&isMapped===true)map.$Delete(P);return result}}exports.default=ArgumentsExotic},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);var _is=__webpack_require__(229);
var _get=__webpack_require__(230);var _has=__webpack_require__(269);var _typedarray=__webpack_require__(390);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class IntegerIndexedExotic extends _index.ObjectValue{constructor(realm,intrinsicName){super(realm,realm.intrinsics.ObjectPrototype,intrinsicName)}$GetOwnProperty(P){let O=
this;(0,_invariant.default)((0,_is.IsPropertyKey)(this.$Realm,P),"IsPropertyKey(P) is true");(0,_invariant.default)(O instanceof _index.ObjectValue&&O.$ViewedArrayBuffer);if(typeof P==="string"||P instanceof _index.StringValue){let numericIndex=_singletons.To.CanonicalNumericIndexString(this.$Realm,typeof P==="string"?new _index.StringValue(this.$Realm,P):P);if(numericIndex!==undefined){let value=(0,_typedarray.IntegerIndexedElementGet)(this.$Realm,O,numericIndex);if(value instanceof _index.UndefinedValue)return undefined;
return new _descriptors.PropertyDescriptor({value:value,writable:true,enumerable:true,configurable:false})}}return _singletons.Properties.OrdinaryGetOwnProperty(this.$Realm,O,P)}$HasProperty(P){let O=this;(0,_invariant.default)((0,_is.IsPropertyKey)(this.$Realm,P),"IsPropertyKey(P) is true");(0,_invariant.default)(O instanceof _index.ObjectValue&&O.$ViewedArrayBuffer);if(typeof P==="string"||P instanceof _index.StringValue){let numericIndex=_singletons.To.CanonicalNumericIndexString(this.$Realm,typeof P===
"string"?new _index.StringValue(this.$Realm,P):P);if(numericIndex!==undefined){let buffer=O.$ViewedArrayBuffer;(0,_invariant.default)(buffer);if((0,_is.IsDetachedBuffer)(this.$Realm,buffer)===true)throw this.$Realm.createErrorThrowCompletion(this.$Realm.intrinsics.TypeError,"IsDetachedBuffer(buffer) is true");if((0,_is.IsInteger)(this.$Realm,numericIndex)===false)return false;if(Object.is(numericIndex,-0))return false;if(numericIndex<0)return false;(0,_invariant.default)(O.$ArrayLength!==undefined);
if(numericIndex>=O.$ArrayLength)return false;return true}}return(0,_has.OrdinaryHasProperty)(this.$Realm,O,P)}$DefineOwnProperty(P,_Desc){let O=this;(0,_invariant.default)((0,_is.IsPropertyKey)(this.$Realm,P),"IsPropertyKey(P) is true");(0,_invariant.default)(O instanceof _index.ObjectValue&&this.$ViewedArrayBuffer);if(typeof P==="string"||P instanceof _index.StringValue){let numericIndex=_singletons.To.CanonicalNumericIndexString(this.$Realm,typeof P==="string"?new _index.StringValue(this.$Realm,
P):P);if(numericIndex!==undefined){if((0,_is.IsInteger)(this.$Realm,numericIndex)===false)return false;if(Object.is(numericIndex,-0))return false;if(numericIndex<0)return false;let length=this.$ArrayLength;(0,_invariant.default)(typeof length==="number");if(numericIndex>=length)return false;let Desc=_Desc.throwIfNotConcrete(this.$Realm);if((0,_is.IsAccessorDescriptor)(this.$Realm,Desc)===true)return false;if(Desc.configurable===true)return false;if(Desc.enumerable===false)return false;if(Desc.writable===
false)return false;if(Desc.value){let value=Desc.value;(0,_invariant.default)(value===undefined||value instanceof _index.Value);return(0,_typedarray.IntegerIndexedElementSet)(this.$Realm,O,numericIndex,value)}return true}}return _singletons.Properties.OrdinaryDefineOwnProperty(this.$Realm,O,P,_Desc)}$Get(P,Receiver){let O=this;(0,_invariant.default)((0,_is.IsPropertyKey)(this.$Realm,P),"IsPropertyKey(P) is true");if(typeof P==="string"||P instanceof _index.StringValue){let numericIndex=_singletons.To.CanonicalNumericIndexString(this.$Realm,
typeof P==="string"?new _index.StringValue(this.$Realm,P):P);if(numericIndex!==undefined)return(0,_typedarray.IntegerIndexedElementGet)(this.$Realm,O,numericIndex)}return(0,_get.OrdinaryGet)(this.$Realm,O,P,Receiver)}$Set(P,V,Receiver){let O=this;(0,_invariant.default)((0,_is.IsPropertyKey)(this.$Realm,P),"IsPropertyKey(P) is true");if(typeof P==="string"||P instanceof _index.StringValue){let numericIndex=_singletons.To.CanonicalNumericIndexString(this.$Realm,typeof P==="string"?new _index.StringValue(this.$Realm,
P):P);if(numericIndex!==undefined)return(0,_typedarray.IntegerIndexedElementSet)(this.$Realm,O,numericIndex,V)}return _singletons.Properties.OrdinarySet(this.$Realm,O,P,V,Receiver)}$OwnPropertyKeys(){let O=this;let keys=[];(0,_invariant.default)(O instanceof _index.ObjectValue&&O.$ViewedArrayBuffer&&O.$ArrayLength!==undefined&&O.$ByteOffset!==undefined&&O.$TypedArrayName);let len=O.$ArrayLength;(0,_invariant.default)(typeof len==="number");for(let i=0;i<len;++i)keys.push(new _index.StringValue(this.$Realm,
_singletons.To.ToString(this.$Realm,new _index.NumberValue(this.$Realm,i))));let realm=this.$Realm;let properties=_singletons.Properties.GetOwnPropertyKeysArray(realm,O,false,false);for(let key of properties.filter((x)=>!(0,_is.IsArrayIndex)(realm,x)))keys.push(new _index.StringValue(realm,key));for(let key of O.symbols.keys())keys.push(key);return keys}}exports.default=IntegerIndexedExotic},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.IntegerIndexedObjectCreate=
IntegerIndexedObjectCreate;exports.IntegerIndexedElementGet=IntegerIndexedElementGet;exports.IntegerIndexedElementSet=IntegerIndexedElementSet;exports.ValidateTypedArray=ValidateTypedArray;exports.AllocateTypedArray=AllocateTypedArray;exports.AllocateTypedArrayBuffer=AllocateTypedArrayBuffer;exports.TypedArrayCreate=TypedArrayCreate;exports.TypedArraySpeciesCreate=TypedArraySpeciesCreate;exports.ArrayElementType=exports.ArrayElementSize=void 0;var _errors=__webpack_require__(3);var _index=__webpack_require__(10);
var _get=__webpack_require__(230);var _arraybuffer=__webpack_require__(278);var _is=__webpack_require__(229);var _construct=__webpack_require__(228);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const ArrayElementSize={Float32Array:4,Float64Array:8,Int8Array:1,Int16Array:2,Int32Array:4,Uint8Array:1,Uint16Array:2,Uint32Array:4,Uint8ClampedArray:1};exports.ArrayElementSize=
ArrayElementSize;const ArrayElementType={Float32Array:"Float32",Float64Array:"Float64",Int8Array:"Int8",Int16Array:"Int16",Int32Array:"Int32",Uint8Array:"Uint8",Uint16Array:"Uint16",Uint32Array:"Uint32",Uint8ClampedArray:"Uint8Clamped"};exports.ArrayElementType=ArrayElementType;function IntegerIndexedObjectCreate(realm,prototype,internalSlotsList){(0,_invariant.default)("$ViewedArrayBuffer"in internalSlotsList&&"$ArrayLength"in internalSlotsList&&"$ByteOffset"in internalSlotsList&&"$TypedArrayName"in
internalSlotsList);let A=new _index.IntegerIndexedExotic(realm);Object.assign(A,internalSlotsList);A.$Prototype=prototype;A.setExtensible(true);return A}function IntegerIndexedElementGet(realm,O,index){(0,_invariant.default)(typeof index==="number","Type(index) is Number");(0,_invariant.default)(O instanceof _index.ObjectValue&&O.$ViewedArrayBuffer&&O.$ArrayLength!==undefined&&O.$ByteOffset!==undefined&&O.$TypedArrayName);let buffer=O.$ViewedArrayBuffer;if((0,_is.IsDetachedBuffer)(realm,buffer)===
true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(buffer) is true");if((0,_is.IsInteger)(realm,index)===false)return realm.intrinsics.undefined;if(Object.is(index,-0))return realm.intrinsics.undefined;let length=O.$ArrayLength;(0,_invariant.default)(typeof length==="number");if(index<0||index>=length)return realm.intrinsics.undefined;let offset=O.$ByteOffset;(0,_invariant.default)(typeof offset==="number");let arrayTypeName=O.$TypedArrayName;(0,_invariant.default)(typeof arrayTypeName===
"string");let elementSize=ArrayElementSize[arrayTypeName];let indexedPosition=index*elementSize+offset;let elementType=ArrayElementType[arrayTypeName];return(0,_arraybuffer.GetValueFromBuffer)(realm,buffer,indexedPosition,elementType)}function IntegerIndexedElementSet(realm,O,index,value){(0,_invariant.default)(typeof index==="number","Type(index) is Number");(0,_invariant.default)(O instanceof _index.ObjectValue&&O.$ViewedArrayBuffer&&O.$ArrayLength!==undefined&&O.$ByteOffset!==undefined&&O.$TypedArrayName);
let numValue=_singletons.To.ToNumber(realm,value);let buffer=O.$ViewedArrayBuffer;(0,_invariant.default)(buffer);if((0,_is.IsDetachedBuffer)(realm,buffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(buffer) is true");if((0,_is.IsInteger)(realm,index)===false)return false;if(Object.is(index,-0))return false;let length=O.$ArrayLength;(0,_invariant.default)(typeof length==="number");if(index<0||index>=length)return false;let offset=O.$ByteOffset;(0,_invariant.default)(typeof offset===
"number");let arrayTypeName=O.$TypedArrayName;(0,_invariant.default)(typeof arrayTypeName==="string");let elementSize=ArrayElementSize[arrayTypeName];let indexedPosition=index*elementSize+offset;let elementType=ArrayElementType[arrayTypeName];(0,_arraybuffer.SetValueInBuffer)(realm,buffer,indexedPosition,elementType,numValue);return true}function ValidateTypedArray(realm,O){O=O.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"Type(O) is not Object");if(!O.$TypedArrayName)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");(0,_invariant.default)(O.$ViewedArrayBuffer,"O has a [[ViewedArrayBuffer]] internal slot");let buffer=O.$ViewedArrayBuffer;if((0,_is.IsDetachedBuffer)(realm,buffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(buffer) is true");return buffer}function AllocateTypedArray(realm,constructorName,newTarget,defaultProto,length){let proto=
(0,_get.GetPrototypeFromConstructor)(realm,newTarget,defaultProto);let obj=IntegerIndexedObjectCreate(realm,proto,{$ViewedArrayBuffer:undefined,$TypedArrayName:undefined,$ByteLength:undefined,$ByteOffset:undefined,$ArrayLength:undefined});(0,_invariant.default)(obj.$ViewedArrayBuffer===undefined);obj.$TypedArrayName=constructorName;if(length===undefined){obj.$ByteLength=0;obj.$ByteOffset=0;obj.$ArrayLength=0}else AllocateTypedArrayBuffer(realm,obj,length);return obj}function AllocateTypedArrayBuffer(realm,
O,length){(0,_invariant.default)(realm.isNewObject(O));(0,_invariant.default)(O instanceof _index.ObjectValue&&"$ViewedArrayBuffer"in O,"O is an Object that has a [[ViewedArrayBuffer]] internal slot");(0,_invariant.default)(O.$ViewedArrayBuffer===undefined,"O.[[ViewedArrayBuffer]] is undefined");(0,_invariant.default)(length>=0,"length \u2265 0");let constructorName=O.$TypedArrayName;(0,_invariant.default)(constructorName);let elementSize=ArrayElementSize[constructorName];let byteLength=elementSize*
length;let data=(0,_arraybuffer.AllocateArrayBuffer)(realm,realm.intrinsics.ArrayBuffer,byteLength);O.$ViewedArrayBuffer=data;O.$ByteLength=byteLength;O.$ByteOffset=0;O.$ArrayLength=length;return O}function TypedArrayCreate(realm,constructor,argumentList){let newTypedArray=(0,_construct.Construct)(realm,constructor,argumentList).throwIfNotConcreteObject();ValidateTypedArray(realm,newTypedArray);if(argumentList.length===1&&argumentList[0].mightBeNumber()){if(argumentList[0].mightNotBeNumber()){(0,
_invariant.default)(argumentList[0]instanceof _index.AbstractValue);_index.AbstractValue.reportIntrospectionError(argumentList[0]);throw new _errors.FatalError;}(0,_invariant.default)(typeof newTypedArray.$ArrayLength==="number");if(newTypedArray.$ArrayLength<argumentList[0].throwIfNotConcrete().value)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"newTypedArray.[[ArrayLength]] < argumentList[0]");}return newTypedArray}function TypedArraySpeciesCreate(realm,exemplar,argumentList){(0,
_invariant.default)(exemplar instanceof _index.ObjectValue&&typeof exemplar.$TypedArrayName==="string");(0,_invariant.default)(typeof exemplar.$TypedArrayName==="string");let defaultConstructor={Float32Array:realm.intrinsics.Float32Array,Float64Array:realm.intrinsics.Float64Array,Int8Array:realm.intrinsics.Int8Array,Int16Array:realm.intrinsics.Int16Array,Int32Array:realm.intrinsics.Int32Array,Uint8Array:realm.intrinsics.Uint8Array,Uint16Array:realm.intrinsics.Uint16Array,Uint32Array:realm.intrinsics.Uint32Array,
Uint8ClampedArray:realm.intrinsics.Uint8ClampedArray}[exemplar.$TypedArrayName];let constructor=(0,_construct.SpeciesConstructor)(realm,exemplar,defaultConstructor);return TypedArrayCreate(realm,constructor,argumentList)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);class BooleanValue extends _index.PrimitiveValue{constructor(realm,value,intrinsicName){super(realm,intrinsicName);this.value=
value;if(value&&realm.intrinsics.true)return realm.intrinsics.true;if(!value&&realm.intrinsics.false)return realm.intrinsics.false}equals(x){return x instanceof BooleanValue&&this.value===x.value}getHash(){return this.value?0x2c5a2f6b2570c8:0xd6b3831cea4d3}mightBeFalse(){return!this.value}throwIfNotConcreteBoolean(){return this}_serialize(){return this.value}toDisplayString(){return this.value.toString()}}exports.default=BooleanValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(232);var _index2=__webpack_require__(10);class StringValue extends _index2.PrimitiveValue{constructor(realm,value,intrinsicName){super(realm,intrinsicName);this.value=value}equals(x){return x instanceof StringValue&&this.value===x.value}getHash(){return(0,_index.hashString)(this.value)}mightBeFalse(){return this.value.length===0}throwIfNotConcreteString(){return this}_serialize(){return this.value}toDisplayString(){return JSON.stringify(this.value)}}
exports.default=StringValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _index=__webpack_require__(10);class SymbolValue extends _index.PrimitiveValue{constructor(realm,desc,intrinsicName){super(realm,intrinsicName);this.$Description=desc}equals(x){return this===x}getHash(){if(this.hashValue===undefined)this.hashValue=++this.$Realm.symbolCount;return this.hashValue}mightBeFalse(){return false}throwIfNotConcreteSymbol(){return this}_serialize(){return Symbol(this.$Description)}toDisplayString(){if(this.$Description)if(this.$Description instanceof
_index.PrimitiveValue)return`Symbol(${this.$Description.toDisplayString()})`;return"Symbol(to be supported)"}}exports.default=SymbolValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _completions=__webpack_require__(18);var _errors=__webpack_require__(3);var _generator=__webpack_require__(237);var _PreludeGenerator=__webpack_require__(238);var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _index3=
__webpack_require__(15);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class AbstractValue extends _index.Value{constructor(realm,types,values,hashValue,args,operationDescriptor,optionalArgs){(0,_invariant.default)(realm.useAbstractInterpretation);super(realm,optionalArgs?optionalArgs.intrinsicName:undefined);(0,_invariant.default)(!_index.Value.isTypeCompatibleWith(types.getType(),_index.ObjectValue)||
this instanceof _index.AbstractObjectValue);(0,_invariant.default)(types.getType()!==_index.NullValue&&types.getType()!==_index.UndefinedValue);this.types=types;this.values=values;this.mightBeEmpty=false;this.operationDescriptor=operationDescriptor;this.args=args;this.hashValue=hashValue;this.kind=optionalArgs?optionalArgs.kind:undefined;this.shape=optionalArgs?optionalArgs.shape:undefined}toDisplayString(){return"[Abstract "+this.hashValue.toString()+"]"}addSourceLocationsTo(locations,seenValues=
new Set){if(seenValues.has(this))return;seenValues.add(this);for(let val of this.args)if(val instanceof AbstractValue)val.addSourceLocationsTo(locations,seenValues)}addSourceNamesTo(names,visited=new Set){if(visited.has(this))return;visited.add(this);let realm=this.$Realm;function add_intrinsic(name){if(name.startsWith("_$")){let temporalOperationEntryArgs=realm.derivedIds.get(name);(0,_invariant.default)(temporalOperationEntryArgs!==undefined);add_args(temporalOperationEntryArgs.args)}else if(names.indexOf(name)<
0)names.push(name)}function add_args(args){if(args===undefined)return;for(let val of args)if(val.intrinsicName)add_intrinsic(val.intrinsicName);else if(val instanceof AbstractValue)val.addSourceNamesTo(names,visited);else if(val instanceof _index.StringValue)if(val.value.startsWith("__"))names.push(val.value.slice(2))}if(this.intrinsicName)add_intrinsic(this.intrinsicName);add_args(this.args)}equals(x){if(x instanceof _index.ConcreteValue)return false;let thisArgs=this.args;let n=thisArgs.length;
let argsAreEqual=()=>{(0,_invariant.default)(x instanceof AbstractValue);let xArgs=x.args;let m=xArgs.length;(0,_invariant.default)(n===m);for(let i=0;i<n;i++){let a=thisArgs[i];let b=xArgs[i];if(!a.equals(b))return false}return true};return this===x||x instanceof AbstractValue&&this.kind===x.kind&&this.hashValue===x.hashValue&&(this.intrinsicName&&this.intrinsicName.length>0&&this.intrinsicName===x.intrinsicName||n>0&&argsAreEqual())}getHash(){return this.hashValue}getType(){return this.types.getType()}getIdentifier(){(0,
_invariant.default)(this.hasIdentifier());(0,_invariant.default)(this.operationDescriptor!==undefined);let {id}=this.operationDescriptor.data;(0,_invariant.default)(id!==undefined);return id}hasIdentifier(){return this.operationDescriptor?this.operationDescriptor.type==="IDENTIFIER":false}implies(val,depth=0){if(depth>5)return false;if(this.equals(val))return true;if(this.kind==="||"){let [x,y]=this.args;let xi=x.implies(val,depth+1)||x instanceof AbstractValue&&this.$Realm.pathConditions.impliesNot(x,
depth+1);if(!xi)return false;let yi=y.implies(val,depth+1)||y instanceof AbstractValue&&this.$Realm.pathConditions.impliesNot(y,depth+1);return yi}else if(this.kind==="&&"){let [x,y]=this.args;let xi=x.implies(val,depth+1)||x instanceof AbstractValue&&this.$Realm.pathConditions.impliesNot(x,depth+1);if(xi)return true;let yi=y.implies(val,depth+1)||y instanceof AbstractValue&&this.$Realm.pathConditions.impliesNot(y,depth+1);return yi}else if(this.kind==="!"){let [nx]=this.args;(0,_invariant.default)(nx instanceof
AbstractValue);if(nx.kind==="!"){let [x]=nx.args;(0,_invariant.default)(x instanceof AbstractValue);return x.implies(val,depth+1)}}else if(this.kind==="conditional"){let [c,x,y]=this.args;if(!x.mightNotBeTrue()&&!y.mightNotBeFalse())return c.equals(val);if(val.kind==="!=="||val.kind==="!="){let [vx,vy]=val.args;if(!x.mightNotBeFalse()){if(vx instanceof AbstractValue&&(vy instanceof _index.NullValue||vy instanceof _index.UndefinedValue))return y.implies(vx,depth+1);if((vx instanceof _index.NullValue||
vx instanceof _index.UndefinedValue)&&vy instanceof AbstractValue)return y.implies(vy,depth+1)}else if(!y.mightNotBeFalse()){if(vx instanceof AbstractValue&&(vy instanceof _index.NullValue||vy instanceof _index.UndefinedValue))return x.implies(vx,depth+1);if((vx instanceof _index.NullValue||vx instanceof _index.UndefinedValue)&&vy instanceof AbstractValue)return x.implies(vy,depth+1)}}if(!y.mightNotBeFalse()){if(c.implies(val,depth+1))return true;if(x.implies(val,depth+1))return true}}else if(this.kind===
"!=="){let [x,y]=this.args;if(x instanceof _index.NumberValue&&x.value===0)return y.equals(val);if(y instanceof _index.NumberValue&&y.value===0)return x.equals(val)}else if((this.kind==="==="||this.kind==="==")&&(val.kind==="==="||val.kind==="==")){let [x,y]=this.args;let [vx,vy]=val.args;if(x instanceof _index.NullValue||x instanceof _index.UndefinedValue)if(val.kind==="=="){if(vx instanceof _index.NullValue||vx instanceof _index.UndefinedValue)return y.equals(vy);if(vy instanceof _index.NullValue||
vy instanceof _index.UndefinedValue)return y.equals(vx)}else{(0,_invariant.default)(val.kind==="===");if(x.equals(vx))return y.equals(vy);if(x.equals(vy))return y.equals(vx)}if(y instanceof _index.NullValue||y instanceof _index.UndefinedValue)if(val.kind==="=="){if(vx instanceof _index.NullValue||vx instanceof _index.UndefinedValue)return x.equals(vy);if(vy instanceof _index.NullValue||vy instanceof _index.UndefinedValue)return x.equals(vx)}else{(0,_invariant.default)(val.kind==="===");if(y.equals(vx))return x.equals(vy);
if(y.equals(vy))return x.equals(vx)}}if(val.kind==="!"){let [y]=val.args;(0,_invariant.default)(y instanceof AbstractValue);return y.impliesNot(this,depth+1)}return false}impliesNot(val,depth=0){if(depth>5)return false;if(this.equals(val))return false;if(this.kind==="||"){let [x,y]=this.args;let xi=x.impliesNot(val,depth+1);if(!xi)return false;let yi=y.impliesNot(val,depth+1);return yi}else if(this.kind==="&&"){let [x,y]=this.args;let xi=x.impliesNot(val,depth+1);if(xi)return true;let yi=y.impliesNot(val,
depth+1);return yi}else if(this.kind==="!"){let [nx]=this.args;(0,_invariant.default)(nx instanceof AbstractValue);if(nx.kind==="!"){let [x]=nx.args;(0,_invariant.default)(x instanceof AbstractValue);return x.impliesNot(val,depth+1)}if(nx.kind==="abstractConcreteUnion")return false;return val.implies(nx)}else if(this.kind==="conditional"){let [c,x,y]=this.args;if(!x.mightNotBeFalse()&&!y.mightNotBeTrue())return c.equals(val);if(val.kind==="==="||val.kind==="=="){let [vx,vy]=val.args;if(!x.mightNotBeFalse()){if(vx instanceof
AbstractValue&&(vy instanceof _index.NullValue||vy instanceof _index.UndefinedValue))return y.implies(vx,depth+1);if((vx instanceof _index.NullValue||vx instanceof _index.UndefinedValue)&&vy instanceof AbstractValue)return y.implies(vy,depth+1)}else if(!y.mightNotBeFalse()){if(vx instanceof AbstractValue&&(vy instanceof _index.NullValue||vy instanceof _index.UndefinedValue))return x.implies(vx,depth+1);if((vx instanceof _index.NullValue||vx instanceof _index.UndefinedValue)&&vy instanceof AbstractValue)return x.implies(vy,
depth+1)}}if(!y.mightNotBeFalse()){if(c.impliesNot(val,depth+1))return true;if(x.impliesNot(val,depth+1))return true}}else if(this.kind==="==="&&val.kind==="==="){let [x1,y1]=this.args;let [x2,y2]=val.args;if(x1.equals(x2)&&y1 instanceof _index.ConcreteValue&&y2 instanceof _index.ConcreteValue&&!y1.equals(y2))return true;if(y1.equals(y2)&&x1 instanceof _index.ConcreteValue&&x2 instanceof _index.ConcreteValue&&!x1.equals(x2))return true}return false}isTemporal(){return this.$Realm.getTemporalOperationEntryFromDerivedValue(this)!==
undefined}mightBeFalse(){let valueType=this.getType();if(valueType===_index.UndefinedValue)return true;if(valueType===_index.NullValue)return true;if(valueType===_index.SymbolValue)return false;if(_index.Value.isTypeCompatibleWith(valueType,_index.ObjectValue))return false;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightBeFalse())return true;return false}if(this.values.isTop())return true;return this.values.mightBeFalse()}mightNotBeFalse(){let valueType=this.getType();
if(valueType===_index.UndefinedValue)return false;if(valueType===_index.NullValue)return false;if(valueType===_index.SymbolValue)return true;if(_index.Value.isTypeCompatibleWith(valueType,_index.ObjectValue))return true;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightNotBeFalse())return true;return false}if(this.values.isTop())return true;return this.values.mightNotBeFalse()}mightBeNull(){let valueType=this.getType();if(valueType===_index.NullValue)return true;if(valueType!==
_index.PrimitiveValue&&valueType!==_index.Value)return false;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightBeNull())return true;return false}if(this.values.isTop())return true;return this.values.includesValueOfType(_index.NullValue)}mightNotBeNull(){let valueType=this.getType();if(valueType===_index.NullValue)return false;if(valueType!==_index.PrimitiveValue&&valueType!==_index.Value)return true;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightNotBeNull())return true;
return false}if(this.values.isTop())return true;return this.values.includesValueNotOfType(_index.NullValue)}mightBeNumber(){let valueType=this.getType();if(_index.Value.isTypeCompatibleWith(valueType,_index.NumberValue))return true;if(valueType!==_index.PrimitiveValue&&valueType!==_index.Value)return false;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightBeNumber())return true;return false}if(this.values.isTop())return true;return this.values.includesValueOfType(_index.NumberValue)}mightNotBeNumber(){let valueType=
this.getType();if(_index.Value.isTypeCompatibleWith(valueType,_index.NumberValue))return false;if(valueType!==_index.PrimitiveValue&&valueType!==_index.Value)return true;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightNotBeNumber())return true;return false}if(this.values.isTop())return true;return this.values.includesValueNotOfType(_index.NumberValue)}mightNotBeObject(){let valueType=this.getType();if(_index.Value.isTypeCompatibleWith(valueType,_index.PrimitiveValue))return true;
if(_index.Value.isTypeCompatibleWith(valueType,_index.ObjectValue))return false;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightNotBeObject())return true;return false}if(this.values.isTop())return true;return this.values.includesValueNotOfType(_index.ObjectValue)}mightBeObject(){let valueType=this.getType();if(_index.Value.isTypeCompatibleWith(valueType,_index.PrimitiveValue))return false;if(_index.Value.isTypeCompatibleWith(valueType,_index.ObjectValue))return true;if(this.kind===
"abstractConcreteUnion"){for(let arg of this.args)if(arg.mightBeObject())return true;return false}if(this.values.isTop())return true;return this.values.includesValueOfType(_index.ObjectValue)}mightBeString(){let valueType=this.getType();if(valueType===_index.StringValue)return true;if(valueType!==_index.PrimitiveValue&&valueType!==_index.Value)return false;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightBeString())return true;return false}if(this.values.isTop())return true;
return this.values.includesValueOfType(_index.StringValue)}mightNotBeString(){let valueType=this.getType();if(valueType===_index.StringValue)return false;if(valueType!==_index.PrimitiveValue&&valueType!==_index.Value)return true;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightNotBeString())return true;return false}if(this.values.isTop())return true;return this.values.includesValueNotOfType(_index.StringValue)}mightBeUndefined(){let valueType=this.getType();if(valueType===
_index.UndefinedValue)return true;if(valueType!==_index.PrimitiveValue&&valueType!==_index.Value)return false;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightBeUndefined())return true;return false}if(this.values.isTop())return true;return this.values.includesValueOfType(_index.UndefinedValue)}mightNotBeUndefined(){let valueType=this.getType();if(valueType===_index.UndefinedValue)return false;if(valueType===_index.EmptyValue)return false;if(valueType!==_index.PrimitiveValue&&
valueType!==_index.Value)return true;if(this.kind==="abstractConcreteUnion"){for(let arg of this.args)if(arg.mightNotBeUndefined())return true;return false}if(this.values.isTop())return true;return this.values.includesValueNotOfType(_index.UndefinedValue)}mightHaveBeenDeleted(){return this.mightBeEmpty}promoteEmptyToUndefined(){if(this.values.isTop())return this;if(!this.mightBeEmpty)return this;let cond=AbstractValue.createFromBinaryOp(this.$Realm,"===",this,this.$Realm.intrinsics.empty);let result=
AbstractValue.createFromConditionalOp(this.$Realm,cond,this.$Realm.intrinsics.undefined,this);if(result instanceof AbstractValue)result.values=this.values.promoteEmptyToUndefined();return result}throwIfNotConcrete(){AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;}throwIfNotConcreteNumber(){AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;}throwIfNotConcreteString(){AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;}throwIfNotConcreteBoolean(){AbstractValue.reportIntrospectionError(this);
throw new _errors.FatalError;}throwIfNotConcreteSymbol(){AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;}throwIfNotConcreteObject(){AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;}throwIfNotConcretePrimitive(){AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;}throwIfNotObject(){(0,_invariant.default)(!(this instanceof _index.AbstractObjectValue));AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;
}static createJoinConditionForSelectedCompletions(selector,completion){let jcw;let jc=completion.joinCondition;let realm=jc.$Realm;let njc=AbstractValue.createFromUnaryOp(realm,"!",jc,true,undefined,true);if(completion instanceof _completions.JoinedNormalAndAbruptCompletions&&completion.composedWith!==undefined){jcw=AbstractValue.createJoinConditionForSelectedCompletions(selector,completion.composedWith);jc=AbstractValue.createFromLogicalOp(realm,"&&",jcw,jc,undefined,true);njc=AbstractValue.createFromLogicalOp(realm,
"&&",jcw,njc,undefined,true)}let c=completion.consequent;let a=completion.alternate;let cContainsSelectedCompletion=c.containsSelectedCompletion(selector);let aContainsSelectedCompletion=a.containsSelectedCompletion(selector);if(!cContainsSelectedCompletion&&!aContainsSelectedCompletion){if(jcw!==undefined)return jcw;return realm.intrinsics.false}let cCond=jc;if(cContainsSelectedCompletion){if(c instanceof _completions.JoinedAbruptCompletions||c instanceof _completions.JoinedNormalAndAbruptCompletions){let jcc=
AbstractValue.createJoinConditionForSelectedCompletions(selector,c);cCond=AbstractValue.createFromLogicalOp(realm,"&&",cCond,jcc,undefined,true)}if(!aContainsSelectedCompletion)return cCond}let aCond=njc;if(aContainsSelectedCompletion){if(a instanceof _completions.JoinedAbruptCompletions||a instanceof _completions.JoinedNormalAndAbruptCompletions){let jac=AbstractValue.createJoinConditionForSelectedCompletions(selector,a);aCond=AbstractValue.createFromLogicalOp(realm,"&&",aCond,jac,undefined,true)}if(!cContainsSelectedCompletion)return aCond}let or=
AbstractValue.createFromLogicalOp(realm,"||",cCond,aCond,undefined,true);if(completion instanceof _completions.JoinedNormalAndAbruptCompletions&&completion.composedWith!==undefined){let composedCond=AbstractValue.createJoinConditionForSelectedCompletions(selector,completion.composedWith);let and=AbstractValue.createFromLogicalOp(realm,"&&",composedCond,or,undefined,true);return and}return or}static createFromBinaryOp(realm,op,left,right,loc,kind,isCondition,doNotSimplify){let leftTypes,leftValues;
if(left instanceof AbstractValue){leftTypes=left.types;leftValues=left.values}else{leftTypes=new _index3.TypesDomain(left.getType());(0,_invariant.default)(left instanceof _index.ConcreteValue);leftValues=new _index3.ValuesDomain(left)}let rightTypes,rightValues;if(right instanceof AbstractValue){rightTypes=right.types;rightValues=right.values}else{rightTypes=new _index3.TypesDomain(right.getType());(0,_invariant.default)(right instanceof _index.ConcreteValue);rightValues=new _index3.ValuesDomain(right)}let resultTypes=
_index3.TypesDomain.binaryOp(op,leftTypes,rightTypes);let resultValues=kind==="template for property name condition"?_index3.ValuesDomain.topVal:_index3.ValuesDomain.binaryOp(realm,op,leftValues,rightValues);let [hash,args]=kind===undefined?(0,_index2.hashBinary)(op,left,right):(0,_index2.hashCall)(kind,left,right);let operationDescriptor=(0,_generator.createOperationDescriptor)("BINARY_EXPRESSION",{binaryOperator:op});let result=new AbstractValue(realm,resultTypes,resultValues,hash,args,operationDescriptor);
result.kind=kind||op;result.expressionLocation=loc;if(doNotSimplify)return result;return isCondition?realm.simplifyAndRefineAbstractCondition(result):realm.simplifyAndRefineAbstractValue(result)}static createFromLogicalOp(realm,op,left,right,loc,isCondition,doNotSimplify){let leftTypes,leftValues;if(left instanceof AbstractValue){leftTypes=left.types;leftValues=left.values}else{leftTypes=new _index3.TypesDomain(left.getType());(0,_invariant.default)(left instanceof _index.ConcreteValue);leftValues=
new _index3.ValuesDomain(left)}let rightTypes,rightValues;if(right instanceof AbstractValue){rightTypes=right.types;rightValues=right.values}else{rightTypes=new _index3.TypesDomain(right.getType());(0,_invariant.default)(right instanceof _index.ConcreteValue);rightValues=new _index3.ValuesDomain(right)}let resultTypes=_index3.TypesDomain.logicalOp(op,leftTypes,rightTypes);let resultValues=_index3.ValuesDomain.logicalOp(realm,op,leftValues,rightValues);let [hash,args]=(0,_index2.hashCall)(op,left,
right);let Constructor=_index.Value.isTypeCompatibleWith(resultTypes.getType(),_index.ObjectValue)?_index.AbstractObjectValue:AbstractValue;let operationDescriptor=(0,_generator.createOperationDescriptor)("LOGICAL_EXPRESSION",{logicalOperator:op});let result=new Constructor(realm,resultTypes,resultValues,hash,args,operationDescriptor);result.kind=op;result.expressionLocation=loc;if(doNotSimplify)return result;return isCondition?realm.simplifyAndRefineAbstractCondition(result):realm.simplifyAndRefineAbstractValue(result)}static createFromConditionalOp(realm,
condition,left,right,loc,isCondition,doNotSimplify){if(left===right)return left||realm.intrinsics.undefined;if(!condition.mightNotBeTrue())return left||realm.intrinsics.undefined;if(!condition.mightNotBeFalse())return right||realm.intrinsics.undefined;let types=_index3.TypesDomain.joinValues(left,right);if(types.getType()===_index.NullValue)return realm.intrinsics.null;if(types.getType()===_index.UndefinedValue)return realm.intrinsics.undefined;let values=_index3.ValuesDomain.joinValues(realm,left,
right);let [hash,args]=(0,_index2.hashTernary)(condition,left||realm.intrinsics.undefined,right||realm.intrinsics.undefined);let Constructor=_index.Value.isTypeCompatibleWith(types.getType(),_index.ObjectValue)?_index.AbstractObjectValue:AbstractValue;let operationDescriptor=(0,_generator.createOperationDescriptor)("CONDITIONAL_EXPRESSION");let result=new Constructor(realm,types,values,hash,args,operationDescriptor,{kind:"conditional"});result.expressionLocation=loc;if(left)result.mightBeEmpty=left.mightHaveBeenDeleted();
if(right&&!result.mightBeEmpty)result.mightBeEmpty=right.mightHaveBeenDeleted();if(doNotSimplify||result.mightBeEmpty)return result;return isCondition?realm.simplifyAndRefineAbstractCondition(result):realm.simplifyAndRefineAbstractValue(result)}static createFromUnaryOp(realm,op,operand,prefix,loc,isCondition,doNotSimplify){(0,_invariant.default)(op!=="delete"&&op!=="++"&&op!=="--");let resultTypes=_index3.TypesDomain.unaryOp(op,new _index3.TypesDomain(operand.getType()));let resultValues=_index3.ValuesDomain.unaryOp(realm,
op,operand.values);let operationDescriptor=(0,_generator.createOperationDescriptor)("UNARY_EXPRESSION",{unaryOperator:op,prefix});let result=new AbstractValue(realm,resultTypes,resultValues,(0,_index2.hashUnary)(op,operand),[operand],operationDescriptor);result.kind=op;result.expressionLocation=loc;if(doNotSimplify)return result;return isCondition?realm.simplifyAndRefineAbstractCondition(result):realm.simplifyAndRefineAbstractValue(result)}static createFromTemplate(realm,templateSource,resultType,
operands,loc){let kind=AbstractValue.makeKind("template",templateSource);let resultTypes=new _index3.TypesDomain(resultType);let resultValues=_index3.ValuesDomain.topVal;let hash;[hash,operands]=(0,_index2.hashCall)(kind,...operands);let Constructor=_index.Value.isTypeCompatibleWith(resultType,_index.ObjectValue)?_index.AbstractObjectValue:AbstractValue;(0,_invariant.default)(_PreludeGenerator.Placeholders.length>=operands.length);let operationDescriptor=(0,_generator.createOperationDescriptor)("ABSTRACT_FROM_TEMPLATE",
{templateSource});if(_index.Value.isTypeCompatibleWith(resultType,_index.ObjectValue))hash=++realm.objectCount;let result=new Constructor(realm,resultTypes,resultValues,hash,operands,operationDescriptor);result.kind=kind;result.expressionLocation=loc||realm.currentLocation;return result}static createFromType(realm,resultType,kind,operands){let types=new _index3.TypesDomain(resultType);let Constructor=_index.Value.isTypeCompatibleWith(resultType,_index.ObjectValue)?_index.AbstractObjectValue:AbstractValue;
let [hash,args]=(0,_index2.hashCall)(resultType.name+(kind||""),...operands||[]);if(_index.Value.isTypeCompatibleWith(resultType,_index.ObjectValue))hash=++realm.objectCount;let result=new Constructor(realm,types,_index3.ValuesDomain.topVal,hash,args);if(kind)result.kind=kind;result.expressionLocation=realm.currentLocation;return result}static createTemporalFromTemplate(realm,templateSource,resultType,operands,optionalArgs){(0,_invariant.default)(resultType!==_index.UndefinedValue);let temp=AbstractValue.createFromTemplate(realm,
templateSource,resultType,operands);let types=temp.types;let values=temp.values;let args=temp.args;(0,_invariant.default)(realm.generator!==undefined);(0,_invariant.default)(temp.operationDescriptor!==undefined);return realm.generator.deriveAbstract(types,values,args,temp.operationDescriptor,optionalArgs)}static createFromBuildFunction(realm,resultType,args,operationDescriptor,optionalArgs){let types=new _index3.TypesDomain(resultType);let values=_index3.ValuesDomain.topVal;let Constructor=_index.Value.isTypeCompatibleWith(resultType,
_index.ObjectValue)?_index.AbstractObjectValue:AbstractValue;let kind=optionalArgs&&optionalArgs.kind||"build function";let hash;[hash,args]=(0,_index2.hashCall)(kind,...args);let result=new Constructor(realm,types,values,hash,args,operationDescriptor);result.kind=kind;return result}static createTemporalFromBuildFunction(realm,resultType,args,operationDescriptor,optionalArgs){let types=new _index3.TypesDomain(resultType);let values=_index3.ValuesDomain.topVal;(0,_invariant.default)(realm.generator!==
undefined);if(resultType===_index.UndefinedValue)return realm.generator.emitVoidExpression(types,values,args,operationDescriptor);else return realm.generator.deriveAbstract(types,values,args,operationDescriptor,optionalArgs)}static convertToTemporalIfArgsAreTemporal(realm,val,condArgs){if(condArgs===undefined)condArgs=val.args;let temporalArg=condArgs.find((arg)=>arg.isTemporal());if(temporalArg!==undefined){let realmGenerator=realm.generator;(0,_invariant.default)(realmGenerator!==undefined);(0,
_invariant.default)(val.operationDescriptor!==undefined);return realmGenerator.deriveAbstract(val.types,val.values,val.args,val.operationDescriptor)}else return val}static dischargeValuesFromUnion(realm,union){(0,_invariant.default)(union instanceof AbstractValue&&union.kind==="abstractConcreteUnion");let abstractValue=union.args[0];(0,_invariant.default)(abstractValue instanceof AbstractValue);let concreteValues=union.args.filter((e)=>e instanceof _index.ConcreteValue);(0,_invariant.default)(concreteValues.length===
union.args.length-1);if(!abstractValue.isTemporal()){let realmGenerator=realm.generator;(0,_invariant.default)(realmGenerator!==undefined);(0,_invariant.default)(abstractValue.operationDescriptor!==undefined);abstractValue=realmGenerator.deriveAbstract(abstractValue.types,abstractValue.values,abstractValue.args,abstractValue.operationDescriptor,{isPure:true,skipInvariant:true})}return[abstractValue,concreteValues]}static createAbstractConcreteUnion(realm,abstractValue,concreteValues){(0,_invariant.default)(concreteValues.length>
0);(0,_invariant.default)(abstractValue instanceof AbstractValue);let checkedConcreteValues=concreteValues.filter((e)=>e instanceof _index.ConcreteValue);(0,_invariant.default)(checkedConcreteValues.length===concreteValues.length);let concreteSet=new Set(checkedConcreteValues);let values;if(!abstractValue.values.isTop()){abstractValue.values.getElements().forEach((v)=>concreteSet.add(v));values=new _index3.ValuesDomain(concreteSet)}else values=_index3.ValuesDomain.topVal;let types=_index3.TypesDomain.topVal;
let [hash,operands]=(0,_index2.hashCall)("abstractConcreteUnion",abstractValue,...checkedConcreteValues);let result=new AbstractValue(realm,types,values,hash,operands,(0,_generator.createOperationDescriptor)("SINGLE_ARG"),{kind:"abstractConcreteUnion"});result.expressionLocation=realm.currentLocation;return result}static createFromWidenedProperty(realm,resultTemplate,args,operationDescriptor){let types=resultTemplate.types;let values=resultTemplate.values;let [hash]=(0,_index2.hashCall)("widened property",
...args);let Constructor=_index.Value.isTypeCompatibleWith(types.getType(),_index.ObjectValue)?_index.AbstractObjectValue:AbstractValue;let result=new Constructor(realm,types,values,hash,args,operationDescriptor);result.kind="widened property";result.mightBeEmpty=resultTemplate.mightBeEmpty;result.expressionLocation=resultTemplate.expressionLocation;return result}static createFromWidening(realm,value1,value2){let types=_index3.TypesDomain.joinValues(value1,value2);let values=_index3.ValuesDomain.topVal;
let [hash]=(0,_index2.hashCall)("widened");let Constructor=_index.Value.isTypeCompatibleWith(types.getType(),_index.ObjectValue)?_index.AbstractObjectValue:AbstractValue;let result=new Constructor(realm,types,values,hash,[]);result.kind="widened";result.mightBeEmpty=value1.mightHaveBeenDeleted()||value2.mightHaveBeenDeleted();result.expressionLocation=value1.expressionLocation;return result}static createAbstractArgument(realm,name,location,type=_index.Value,shape=undefined){if(!realm.useAbstractInterpretation)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"realm is not partial");let realmPreludeGenerator=realm.preludeGenerator;(0,_invariant.default)(realmPreludeGenerator);let types=new _index3.TypesDomain(type);let values=_index3.ValuesDomain.topVal;let Constructor=_index.Value.isTypeCompatibleWith(type,_index.ObjectValue)?_index.AbstractObjectValue:AbstractValue;let operationDescriptor=(0,_generator.createOperationDescriptor)("IDENTIFIER",{id:name});let result=new Constructor(realm,types,values,943586754858+(0,_index2.hashString)(name),[],operationDescriptor);
result.kind=AbstractValue.makeKind("abstractCounted",(realm.objectCount++).toString());result.expressionLocation=location;result.shape=shape;return result}static generateErrorInformationForAbstractVal(val){let names=[];val.addSourceNamesTo(names);return`abstract value${names.length>1?"s":""} ${names.join(" and ")}`}static describe(val,propertyName){let realm=val.$Realm;let identity;if(val===realm.$GlobalObject)identity="global";else if(val instanceof AbstractValue)identity=this.generateErrorInformationForAbstractVal(val);
else identity=val.intrinsicName||"(some value)";let source_locations=[];if(val instanceof AbstractValue)val.addSourceLocationsTo(source_locations);let location;if(propertyName instanceof _index.SymbolValue){let desc=propertyName.$Description;if(desc)location=`at symbol [${desc.throwIfNotConcreteString().value}]`;else location=`at symbol [${"(no description)"}]`}else if(propertyName instanceof _index.StringValue)location=`at ${propertyName.value}`;else if(typeof propertyName==="string")location=`at ${propertyName}`;
else location=source_locations.length===0?"":`at ${source_locations.join("\n")}`;return`${identity} ${location}`}static reportIntrospectionError(val,propertyName){let message="";if(!val.$Realm.suppressDiagnostics)message=`This operation is not yet supported on ${AbstractValue.describe(val,propertyName)}`;let realm=val.$Realm;return realm.reportIntrospectionError(message)}static createAbstractObject(realm,name,templateOrShape){let value;if(templateOrShape===undefined)templateOrShape=new _index.ObjectValue(realm,
realm.intrinsics.ObjectPrototype);value=AbstractValue.createFromTemplate(realm,name,_index.ObjectValue,[]);if(!realm.isNameStringUnique(name))value.hashValue=++realm.objectCount;else realm.saveNameString(name);value.intrinsicName=name;if(templateOrShape instanceof _index.ObjectValue){templateOrShape.makePartial();templateOrShape.makeSimple();value.values=new _index3.ValuesDomain(new Set([templateOrShape]));realm.rebuildNestedProperties(value,name)}else value.shape=templateOrShape;(0,_invariant.default)(value instanceof
_index.AbstractObjectValue);return value}static makeKind(prefix,suffix){return`${prefix}:${suffix}`}static createTemporalObjectAssign(realm,to,sources){let temporalArgs=[to,...sources];let preludeGenerator=realm.preludeGenerator;(0,_invariant.default)(preludeGenerator!==undefined);let temporalTo=AbstractValue.createTemporalFromBuildFunction(realm,_index.ObjectValue,temporalArgs,(0,_generator.createOperationDescriptor)("OBJECT_ASSIGN"),{skipInvariant:true,mutatesOnly:[to]});(0,_invariant.default)(temporalTo instanceof
_index.AbstractObjectValue);if(to instanceof _index.AbstractObjectValue)temporalTo.values=to.values;else{(0,_invariant.default)(to instanceof _index.ObjectValue);temporalTo.values=new _index3.ValuesDomain(to)}to.temporalAlias=temporalTo;return temporalTo}}exports.default=AbstractValue},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _errors=__webpack_require__(3);var _index=__webpack_require__(10);var _index2=__webpack_require__(15);
var _index3=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _generator=__webpack_require__(237);var _realm=__webpack_require__(7);var _completions=__webpack_require__(18);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class AbstractObjectValue extends _index.AbstractValue{constructor(realm,types,values,hashValue,args,operationDescriptor,optionalArgs){super(realm,
types,values,hashValue,args,operationDescriptor,optionalArgs);if(!values.isTop())for(let element of this.values.getElements())(0,_invariant.default)(element instanceof _index.ObjectValue)}getTemplate(){for(let element of this.values.getElements()){(0,_invariant.default)(element instanceof _index.ObjectValue);if(element.isPartialObject())return element;else break}_index.AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;}set temporalAlias(temporalValue){if(this.values.isTop()){_index.AbstractValue.reportIntrospectionError(this);
throw new _errors.FatalError;}for(let element of this.values.getElements()){(0,_invariant.default)(element instanceof _index.ObjectValue);element.temporalAlias=temporalValue}}hasStringOrSymbolProperties(){if(this.values.isTop())return false;for(let element of this.values.getElements()){(0,_invariant.default)(element instanceof _index.ObjectValue);if(element.hasStringOrSymbolProperties())return true}return false}isPartialObject(){return true}isSimpleObject(){if(this.cachedIsSimpleObject===undefined)this.cachedIsSimpleObject=
this._elementsAreSimpleObjects();return this.cachedIsSimpleObject}_elementsAreSimpleObjects(){if(this.values.isTop())return false;let result;for(let element of this.values.getElements()){(0,_invariant.default)(element instanceof _index.ObjectValue);if(result===undefined)result=element.isSimpleObject();else if(result!==element.isSimpleObject()){_index.AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;}}if(result===undefined){_index.AbstractValue.reportIntrospectionError(this);
throw new _errors.FatalError;}return result}mightBeFinalObject(){if(this.shape)return true;if(this.values.isTop())return false;for(let element of this.values.getElements()){(0,_invariant.default)(element instanceof _index.ObjectValue);if(element.mightBeFinalObject())return true}return false}mightNotBeFinalObject(){if(this.shape)return false;if(this.values.isTop())return false;for(let element of this.values.getElements()){(0,_invariant.default)(element instanceof _index.ObjectValue);if(element.mightNotBeFinalObject())return true}return false}mightBeFalse(){return false}mightNotBeFalse(){return true}makePartial(){if(this.values.isTop()){_index.AbstractValue.reportIntrospectionError(this);
throw new _errors.FatalError;}for(let element of this.values.getElements()){(0,_invariant.default)(element instanceof _index.ObjectValue);element.makePartial()}}makeSimple(option){if(this.values.isTop()&&this.getType()===_index.ObjectValue){let obj=new _index.ObjectValue(this.$Realm,this.$Realm.intrinsics.ObjectPrototype);obj.intrinsicName=this.intrinsicName;obj.intrinsicNameGenerated=true;obj.makePartial();obj._templateFor=this;this.values=new _index2.ValuesDomain(obj)}if(!this.values.isTop())for(let element of this.values.getElements()){(0,
_invariant.default)(element instanceof _index.ObjectValue);element.makeSimple(option)}this.cachedIsSimpleObject=true}getSnapshot(options){if(this.isIntrinsic())return this;if(this.values.isTop())return this;if(this.kind==="conditional"){let [c,l,r]=this.args;(0,_invariant.default)(l instanceof _index.ObjectValue||l instanceof AbstractObjectValue);let ls=l.getSnapshot(options);(0,_invariant.default)(r instanceof _index.ObjectValue||r instanceof AbstractObjectValue);let rs=r.getSnapshot(options);(0,
_invariant.default)(c instanceof _index.AbstractValue);let absVal=_index.AbstractValue.createFromConditionalOp(this.$Realm,c,ls,rs,this.expressionLocation);(0,_invariant.default)(absVal instanceof AbstractObjectValue);return absVal}this.makeFinal();return this}makeFinal(){if(this.shape)return;if(this.values.isTop()){_index.AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;}for(let element of this.values.getElements()){(0,_invariant.default)(element instanceof _index.ObjectValue);
element.makeFinal()}}throwIfNotObject(){return this}usesOrdinaryObjectInternalPrototypeMethods(){return true}$GetPrototypeOf(){let realm=this.$Realm;if(this.values.isTop()){let error=new _errors.CompilerDiagnostic("prototype access on unknown object",this.$Realm.currentLocation,"PP0032","FatalError");this.$Realm.handleError(error);throw new _errors.FatalError;}(0,_invariant.default)(this.kind!=="widened","widening currently always leads to top values");let elements=this.values.getElements();if(elements.size===
1){for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);return cv.$GetPrototypeOf()}(0,_invariant.default)(false)}else if(this.kind==="conditional"){let [cond,ob1,ob2]=this.args;(0,_invariant.default)(cond instanceof _index.AbstractValue);(0,_invariant.default)(ob1 instanceof _index.ObjectValue||ob1 instanceof AbstractObjectValue);(0,_invariant.default)(ob2 instanceof _index.ObjectValue||ob2 instanceof AbstractObjectValue);let p1=ob1.$GetPrototypeOf();let p2=ob2.$GetPrototypeOf();
let joinedObject=_index.AbstractValue.createFromConditionalOp(realm,cond,p1,p2);(0,_invariant.default)(joinedObject instanceof AbstractObjectValue||joinedObject instanceof _index.ObjectValue||joinedObject instanceof _index.NullValue);return joinedObject}else if(this.kind==="explicit conversion to object"){let primitiveValue=this.args[0];(0,_invariant.default)(!_index.Value.isTypeCompatibleWith(primitiveValue.getType(),_index.PrimitiveValue));let result=_index.AbstractValue.createFromBuildFunction(realm,
_index.ObjectValue,[primitiveValue],(0,_generator.createOperationDescriptor)("ABSTRACT_OBJECT_GET_PROTO_OF"));(0,_invariant.default)(result instanceof AbstractObjectValue);return result}else{let joinedObject;for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);let p=cv.$GetPrototypeOf();if(joinedObject===undefined)joinedObject=p;else{let cond=_index.AbstractValue.createFromBinaryOp(realm,"===",this,cv,this.expressionLocation);joinedObject=_index.AbstractValue.createFromConditionalOp(realm,
cond,p,joinedObject)}}(0,_invariant.default)(joinedObject instanceof AbstractObjectValue||joinedObject instanceof _index.ObjectValue||joinedObject instanceof _index.NullValue);return joinedObject}}$IsExtensible(){return false}$GetOwnProperty(_P){let P=_P;if(P instanceof _index.StringValue)P=P.value;if(this.values.isTop()){let error=new _errors.CompilerDiagnostic("property access on unknown object",this.$Realm.currentLocation,"PP0031","FatalError");this.$Realm.handleError(error);throw new _errors.FatalError;
}let elements=this.values.getElements();if(elements.size===1){for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);return cv.$GetOwnProperty(P)}(0,_invariant.default)(false)}else if(this.kind==="conditional"){let [cond,ob1,ob2]=this.args;(0,_invariant.default)(cond instanceof _index.AbstractValue);(0,_invariant.default)(ob1 instanceof _index.ObjectValue||ob1 instanceof AbstractObjectValue);(0,_invariant.default)(ob2 instanceof _index.ObjectValue||ob2 instanceof AbstractObjectValue);
let d1=ob1.$GetOwnProperty(P);let d2=ob2.$GetOwnProperty(P);return _singletons.Join.joinDescriptors(this.$Realm,cond,d1,d2)}else if(this.kind==="widened"){let [ob1,ob2]=this.args;(0,_invariant.default)(ob1 instanceof _index.ObjectValue);(0,_invariant.default)(ob2 instanceof _index.ObjectValue);let d1=ob1.$GetOwnProperty(P);let d2=ob2.$GetOwnProperty(P);if(d1===undefined||d2===undefined){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}d1=d1.throwIfNotConcrete(this.$Realm);
d2=d2.throwIfNotConcrete(this.$Realm);if(!(0,_descriptors.equalDescriptors)(d1,d2)){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}let desc=(0,_descriptors.cloneDescriptor)(d1);(0,_invariant.default)(desc!==undefined);if((0,_index3.IsDataDescriptor)(this.$Realm,desc)){let d1Value=d1.value;(0,_invariant.default)(d1Value instanceof _index.Value);let d2Value=d2.value;(0,_invariant.default)(d2Value instanceof _index.Value);let dValue=_singletons.Widen.widenValues(this.$Realm,
d1Value,d2Value);(0,_invariant.default)(dValue instanceof _index.Value);desc.value=dValue}else;return desc}else{let first=true;let joinedDescriptor;for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);let desc=cv.$GetOwnProperty(P);if(first){first=false;joinedDescriptor=desc}else{let cond=_index.AbstractValue.createFromBinaryOp(this.$Realm,"===",this,cv,this.expressionLocation);(0,_invariant.default)(cond instanceof _index.AbstractValue);joinedDescriptor=_singletons.Join.joinDescriptors(this.$Realm,
cond,desc,joinedDescriptor)}}return joinedDescriptor}}$DefineOwnProperty(_P,_Desc){let P=_P;if(P instanceof _index.StringValue)P=P.value;if(this.values.isTop()){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}let elements=this.values.getElements();if(elements.size===1){for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);return cv.$DefineOwnProperty(P,_Desc)}(0,_invariant.default)(false)}else{let Desc=_Desc.throwIfNotConcrete(this.$Realm);
if(!(0,_index3.IsDataDescriptor)(this.$Realm,Desc)){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}let firstExistingDesc;for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);firstExistingDesc=cv.$GetOwnProperty(P);if(firstExistingDesc)break}if(firstExistingDesc)firstExistingDesc=firstExistingDesc.throwIfNotConcrete(this.$Realm);let desc=new _descriptors.PropertyDescriptor({value:Desc.value!==undefined?Desc.value:this.$Realm.intrinsics.undefined,
writable:Desc.writable!==undefined?Desc.writable:firstExistingDesc?firstExistingDesc.writable:false,enumerable:Desc.enumerable!==undefined?Desc.enumerable:firstExistingDesc?firstExistingDesc.enumerable:false,configurable:Desc.configurable!==undefined?Desc.configurable:firstExistingDesc?firstExistingDesc.configurable:false});let newVal=desc.value;if(this.kind==="conditional"){let [cond,ob1,ob2]=this.args;(0,_invariant.default)(cond instanceof _index.AbstractValue);(0,_invariant.default)(ob1 instanceof
_index.ObjectValue||ob1 instanceof AbstractObjectValue);(0,_invariant.default)(ob2 instanceof _index.ObjectValue||ob2 instanceof AbstractObjectValue);let d1=ob1.$GetOwnProperty(P);let d2=ob2.$GetOwnProperty(P);if(d1!==undefined){d1=d1.throwIfNotConcrete(this.$Realm);if(!(0,_descriptors.equalDescriptors)(d1,desc)){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}}if(d2!==undefined){d2=d2.throwIfNotConcrete(this.$Realm);if(!(0,_descriptors.equalDescriptors)(d2,desc)){_index.AbstractValue.reportIntrospectionError(this,
P);throw new _errors.FatalError;}}let oldVal1=d1===undefined||d1.value===undefined?this.$Realm.intrinsics.empty:d1.value;let oldVal2=d2===undefined||d2.value===undefined?this.$Realm.intrinsics.empty:d2.value;(0,_invariant.default)(oldVal1 instanceof _index.Value);(0,_invariant.default)(oldVal2 instanceof _index.Value);let newVal1=_index.AbstractValue.createFromConditionalOp(this.$Realm,cond,newVal,oldVal1);let newVal2=_index.AbstractValue.createFromConditionalOp(this.$Realm,cond,oldVal2,newVal);desc.value=
newVal1;let result1=ob1.$DefineOwnProperty(P,desc);desc.value=newVal2;let result2=ob2.$DefineOwnProperty(P,desc);if(result1!==result2){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}return result1}else{(0,_invariant.default)(newVal instanceof _index.Value);let sawTrue=false;let sawFalse=false;for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);let d=cv.$GetOwnProperty(P);if(d!==undefined){d=d.throwIfNotConcrete(this.$Realm);if(!(0,
_descriptors.equalDescriptors)(d,desc)){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}}let dval=d===undefined||d.value===undefined?this.$Realm.intrinsics.empty:d.value;(0,_invariant.default)(dval instanceof _index.Value);let cond=_index.AbstractValue.createFromBinaryOp(this.$Realm,"===",this,cv,this.expressionLocation);desc.value=_index.AbstractValue.createFromConditionalOp(this.$Realm,cond,newVal,dval);if(cv.$DefineOwnProperty(P,desc))sawTrue=true;else sawFalse=
true}if(sawTrue&&sawFalse){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}return sawTrue}}}$HasProperty(_P){let P=_P;if(P instanceof _index.StringValue)P=P.value;if(this.values.isTop()){let error=new _errors.CompilerDiagnostic("property access on unknown object",this.$Realm.currentLocation,"PP0031","FatalError");this.$Realm.handleError(error);throw new _errors.FatalError;}let elements=this.values.getElements();if(elements.size===1){for(let cv of elements){(0,_invariant.default)(cv instanceof
_index.ObjectValue);return cv.$HasProperty(P)}(0,_invariant.default)(false)}else{let hasProp=false;let doesNotHaveProp=false;for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);if(cv.$HasProperty(P))hasProp=true;else doesNotHaveProp=true}if(hasProp&&doesNotHaveProp){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}return hasProp}}$Get(_P,Receiver){let P=_P;if(P instanceof _index.StringValue)P=P.value;if(this.values.isTop()){let generateAbstractGet=
()=>{let ob=Receiver;if(this.kind==="explicit conversion to object")ob=this.args[0];let type=_index.Value;if(P==="length"&&_index.Value.isTypeCompatibleWith(this.getType(),_index.ArrayValue))type=_index.NumberValue;let shapeContainer=this.kind==="explicit conversion to object"?this.args[0]:this;(0,_invariant.default)(shapeContainer instanceof _index.AbstractValue);let realm=this.$Realm;let shape=shapeContainer.shape;let propertyShape,propertyGetter;if((realm.instantRender.enabled||realm.react.enabled)&&
shape!==undefined&&(typeof P==="string"||P instanceof _index.StringValue)){propertyShape=shape.getPropertyShape(P instanceof _index.StringValue?P.value:P);if(propertyShape!==undefined){type=propertyShape.getAbstractType();propertyGetter=propertyShape.getGetter()}}if(typeof P==="string")P=new _index.StringValue(this.$Realm,P);if(type===_index.ArrayValue)return _index.ArrayValue.createTemporalWithWidenedNumericProperty(realm,[ob,P],(0,_generator.createOperationDescriptor)("ABSTRACT_OBJECT_GET",{propertyGetter}));
let propAbsVal=_index.AbstractValue.createTemporalFromBuildFunction(realm,type,[ob,P],(0,_generator.createOperationDescriptor)("ABSTRACT_OBJECT_GET",{propertyGetter}),{skipInvariant:true,isPure:true,shape:propertyShape});return propAbsVal};if(this.isSimpleObject()&&this.isIntrinsic())return generateAbstractGet();else if(this.$Realm.isInPureScope()){_singletons.Leak.value(this.$Realm,Receiver);return this.$Realm.evaluateWithPossibleThrowCompletion(generateAbstractGet,_index2.TypesDomain.topVal,_index2.ValuesDomain.topVal)}let error=
new _errors.CompilerDiagnostic("property access on unknown object",this.$Realm.currentLocation,"PP0031","FatalError");this.$Realm.handleError(error);throw new _errors.FatalError;}let realm=this.$Realm;let elements=this.values.getElements();if(elements.size===1){for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);return cv.$Get(P,Receiver)}(0,_invariant.default)(false)}else if(this.kind==="conditional"){let [cond,ob1,ob2]=this.args;(0,_invariant.default)(cond instanceof
_index.AbstractValue);(0,_invariant.default)(ob1 instanceof _index.ObjectValue||ob1 instanceof AbstractObjectValue);(0,_invariant.default)(ob2 instanceof _index.ObjectValue||ob2 instanceof AbstractObjectValue);return realm.evaluateWithAbstractConditional(cond,()=>realm.evaluateForEffects(()=>ob1.$Get(P,Receiver),undefined,"ConditionalGet/1"),()=>realm.evaluateForEffects(()=>ob2.$Get(P,Receiver),undefined,"ConditionalGet/2"))}else{let result;for(let cv of elements){(0,_invariant.default)(cv instanceof
_index.ObjectValue);let cond=_index.AbstractValue.createFromBinaryOp(this.$Realm,"===",this,cv,this.expressionLocation);(0,_invariant.default)(cond instanceof _index.AbstractValue);result=realm.evaluateWithAbstractConditional(cond,()=>realm.evaluateForEffects(()=>cv.$Get(P,Receiver),undefined,"AbstractGet"),()=>(0,_realm.construct_empty_effects)(realm,result===undefined?undefined:new _completions.SimpleNormalCompletion(result)))}(0,_invariant.default)(result!==undefined);return result}}$GetPartial(P,
Receiver){if(!(P instanceof _index.AbstractValue))return this.$Get(P,Receiver);if(this.values.isTop()||!this.isSimpleObject()){if(this.isSimpleObject()&&this.isIntrinsic())return _index.AbstractValue.createTemporalFromBuildFunction(this.$Realm,_index.Value,[this,P],(0,_generator.createOperationDescriptor)("ABSTRACT_OBJECT_GET_PARTIAL"),{skipInvariant:true,isPure:true});if(this.$Realm.isInPureScope()){_singletons.Leak.value(this.$Realm,Receiver);_singletons.Leak.value(this.$Realm,P);return _index.AbstractValue.createTemporalFromBuildFunction(this.$Realm,
_index.Value,[Receiver,P],(0,_generator.createOperationDescriptor)("ABSTRACT_OBJECT_GET_PARTIAL"),{skipInvariant:true,isPure:true})}let error=new _errors.CompilerDiagnostic("property access on unknown object",this.$Realm.currentLocation,"PP0031","FatalError");this.$Realm.handleError(error);throw new _errors.FatalError;}let realm=this.$Realm;let elements=this.values.getElements();if(elements.size===1){for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);return cv.$GetPartial(P,
Receiver)}(0,_invariant.default)(false)}else if(this.kind==="conditional"){let [cond,ob1,ob2]=this.args;(0,_invariant.default)(cond instanceof _index.AbstractValue);(0,_invariant.default)(ob1 instanceof _index.ObjectValue||ob1 instanceof AbstractObjectValue);(0,_invariant.default)(ob2 instanceof _index.ObjectValue||ob2 instanceof AbstractObjectValue);return realm.evaluateWithAbstractConditional(cond,()=>realm.evaluateForEffects(()=>ob1.$GetPartial(P,Receiver),undefined,"ConditionalGet/1"),()=>realm.evaluateForEffects(()=>
ob2.$GetPartial(P,Receiver),undefined,"ConditionalGet/2"))}else{let result;for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);let cond=_index.AbstractValue.createFromBinaryOp(this.$Realm,"===",this,cv,this.expressionLocation);(0,_invariant.default)(cond instanceof _index.AbstractValue);result=realm.evaluateWithAbstractConditional(cond,()=>realm.evaluateForEffects(()=>cv.$GetPartial(P,Receiver),undefined,"AbstractGet"),()=>(0,_realm.construct_empty_effects)(realm,result===
undefined?undefined:new _completions.SimpleNormalCompletion(result)))}(0,_invariant.default)(result!==undefined);return result}}$Set(P,V,Receiver){if(this.values.isTop())return this.$SetPartial(P,V,Receiver);let realm=this.$Realm;let elements=this.values.getElements();if(elements.size===1){for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);return cv.$Set(P,V,Receiver)}(0,_invariant.default)(false)}else if(this.kind==="conditional"){let [cond,ob1,ob2]=this.args;(0,_invariant.default)(cond instanceof
_index.AbstractValue);(0,_invariant.default)(ob1 instanceof _index.ObjectValue||ob1 instanceof AbstractObjectValue);(0,_invariant.default)(ob2 instanceof _index.ObjectValue||ob2 instanceof AbstractObjectValue);let result=realm.evaluateWithAbstractConditional(cond,()=>realm.evaluateForEffects(()=>new _index.BooleanValue(realm,ob1.$Set(P,V,Receiver)),undefined,"ConditionalSet/1"),()=>realm.evaluateForEffects(()=>new _index.BooleanValue(realm,ob2.$Set(P,V,Receiver)),undefined,"ConditionalSet/2"));if(!(result instanceof
_index.BooleanValue)){let error=new _errors.CompilerDiagnostic("object could have both succeeded and failed updating",realm.currentLocation,"PP0041","RecoverableError");if(realm.handleError(error)==="Recover")return true;throw new _errors.FatalError;}return result.value}else{let sawTrue=false;let sawFalse=false;for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);let cond=_index.AbstractValue.createFromBinaryOp(this.$Realm,"===",this,cv,this.expressionLocation);(0,_invariant.default)(cond instanceof
_index.AbstractValue);realm.evaluateWithAbstractConditional(cond,()=>realm.evaluateForEffects(()=>{if(cv.$Set(P,V,Receiver))sawTrue=true;else sawFalse=true;return realm.intrinsics.empty},undefined,"AbstractSet"),()=>(0,_realm.construct_empty_effects)(realm))}if(sawTrue&&sawFalse){let error=new _errors.CompilerDiagnostic("object could have both succeeded and failed updating",realm.currentLocation,"PP0041","RecoverableError");if(realm.handleError(error)==="Recover")return true}return sawTrue}}$SetPartial(_P,
V,Receiver){let P=_P;if(!this.values.isTop()&&!(P instanceof _index.AbstractValue))return this.$Set(P,V,Receiver);if(this.values.isTop()){if(this.$Realm.isInPureScope()){_singletons.Leak.value(this.$Realm,Receiver);_singletons.Leak.value(this.$Realm,V);this.$Realm.evaluateWithPossibleThrowCompletion(()=>{let generator=this.$Realm.generator;(0,_invariant.default)(generator);if(typeof P!=="string"&&!(P instanceof _index.StringValue))_singletons.Leak.value(this.$Realm,P);generator.emitPropertyAssignment(Receiver,
P,V);return this.$Realm.intrinsics.undefined},_index2.TypesDomain.topVal,_index2.ValuesDomain.topVal);return true}let error=new _errors.CompilerDiagnostic("property access on unknown object",this.$Realm.currentLocation,"PP0031","FatalError");this.$Realm.handleError(error);throw new _errors.FatalError;}let realm=this.$Realm;let elements=this.values.getElements();if(elements.size===1){for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);return cv.$SetPartial(P,V,Receiver)}(0,
_invariant.default)(false)}else if(this.kind==="conditional"){let [cond,ob1,ob2]=this.args;(0,_invariant.default)(cond instanceof _index.AbstractValue);(0,_invariant.default)(ob1 instanceof _index.ObjectValue||ob1 instanceof AbstractObjectValue);(0,_invariant.default)(ob2 instanceof _index.ObjectValue||ob2 instanceof AbstractObjectValue);let result=realm.evaluateWithAbstractConditional(cond,()=>realm.evaluateForEffects(()=>new _index.BooleanValue(realm,ob1.$SetPartial(P,V,Receiver)),undefined,"ConditionalSet/1"),
()=>realm.evaluateForEffects(()=>new _index.BooleanValue(realm,ob2.$SetPartial(P,V,Receiver)),undefined,"ConditionalSet/2"));if(!(result instanceof _index.BooleanValue)){let error=new _errors.CompilerDiagnostic("object could have both succeeded and failed updating",realm.currentLocation,"PP0041","RecoverableError");if(realm.handleError(error)==="Recover")return true;throw new _errors.FatalError;}return result.value}else{let sawTrue=false;let sawFalse=false;for(let cv of elements){(0,_invariant.default)(cv instanceof
_index.ObjectValue);let cond=_index.AbstractValue.createFromBinaryOp(this.$Realm,"===",this,cv,this.expressionLocation);(0,_invariant.default)(cond instanceof _index.AbstractValue);realm.evaluateWithAbstractConditional(cond,()=>realm.evaluateForEffects(()=>{if(cv.$SetPartial(P,V,Receiver))sawTrue=true;else sawFalse=true;return realm.intrinsics.empty},undefined,"AbstractSet"),()=>(0,_realm.construct_empty_effects)(realm))}if(sawTrue&&sawFalse){let error=new _errors.CompilerDiagnostic("object could have both succeeded and failed updating",
realm.currentLocation,"PP0041","RecoverableError");if(realm.handleError(error)==="Recover")return true}return sawTrue}}$Delete(_P){let P=_P;if(P instanceof _index.StringValue)P=P.value;if(this.values.isTop()){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}let elements=this.values.getElements();if(elements.size===1){for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);return cv.$Delete(P)}(0,_invariant.default)(false)}else if(this.kind===
"conditional"){let [cond,ob1,ob2]=this.args;(0,_invariant.default)(cond instanceof _index.AbstractValue);(0,_invariant.default)(ob1 instanceof _index.ObjectValue||ob1 instanceof AbstractObjectValue);(0,_invariant.default)(ob2 instanceof _index.ObjectValue||ob2 instanceof AbstractObjectValue);let d1=ob1.$GetOwnProperty(P);let d2=ob2.$GetOwnProperty(P);let oldVal1=d1===undefined?this.$Realm.intrinsics.empty:(0,_index3.IsDataDescriptor)(this.$Realm,d1)?d1.value:undefined;let oldVal2=d2===undefined?this.$Realm.intrinsics.empty:
(0,_index3.IsDataDescriptor)(this.$Realm,d2)?d2.value:undefined;if(oldVal1===undefined||oldVal2===undefined){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}(0,_invariant.default)(oldVal1 instanceof _index.Value);(0,_invariant.default)(oldVal2 instanceof _index.Value);let newVal1=_index.AbstractValue.createFromConditionalOp(this.$Realm,cond,this.$Realm.intrinsics.empty,oldVal1);let newVal2=_index.AbstractValue.createFromConditionalOp(this.$Realm,cond,oldVal2,this.$Realm.intrinsics.empty);
let result1=true;let result2=true;if(d1!==undefined){d1=d1.throwIfNotConcrete(this.$Realm);let newDesc1=(0,_descriptors.cloneDescriptor)(d1);(0,_invariant.default)(newDesc1);newDesc1=newDesc1.throwIfNotConcrete(this.$Realm);newDesc1.value=newVal1;result1=ob1.$DefineOwnProperty(P,newDesc1)}if(d2!==undefined){d2=d2.throwIfNotConcrete(this.$Realm);let newDesc2=(0,_descriptors.cloneDescriptor)(d2);(0,_invariant.default)(newDesc2);newDesc2=newDesc2.throwIfNotConcrete(this.$Realm);newDesc2.value=newVal2;
result2=ob2.$DefineOwnProperty(P,newDesc2)}if(result1!==result2){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}return result1}else{let sawTrue=false;let sawFalse=false;for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);let d=cv.$GetOwnProperty(P);if(d===undefined)continue;if(!(0,_index3.IsDataDescriptor)(this.$Realm,d)){_index.AbstractValue.reportIntrospectionError(this,P);throw new _errors.FatalError;}let cond=_index.AbstractValue.createFromBinaryOp(this.$Realm,
"===",this,cv,this.expressionLocation);let dval=d.value;(0,_invariant.default)(dval instanceof _index.Value);let v=_index.AbstractValue.createFromConditionalOp(this.$Realm,cond,this.$Realm.intrinsics.empty,dval);let newDesc=(0,_descriptors.cloneDescriptor)(d);(0,_invariant.default)(newDesc);newDesc.value=v;if(cv.$DefineOwnProperty(P,newDesc))sawTrue=true;else sawFalse=true}if(sawTrue&&sawFalse){let error=new _errors.CompilerDiagnostic("object could have both succeeded and failed updating",this.$Realm.currentLocation,
"PP0041","RecoverableError");if(this.$Realm.handleError(error)==="Recover")return true}return sawTrue}}$OwnPropertyKeys(getOwnPropertyKeysEvenIfPartial=false){if(this.values.isTop()){_index.AbstractValue.reportIntrospectionError(this);throw new _errors.FatalError;}let elements=this.values.getElements();if(elements.size===1){for(let cv of elements){(0,_invariant.default)(cv instanceof _index.ObjectValue);return cv.$OwnPropertyKeys(getOwnPropertyKeysEvenIfPartial)}(0,_invariant.default)(false)}else{_index.AbstractValue.reportIntrospectionError(this);
throw new _errors.FatalError;}}}exports.default=AbstractObjectValue},function(module,exports,__webpack_require__){var alea=__webpack_require__(397);var xor128=__webpack_require__(400);var xorwow=__webpack_require__(401);var xorshift7=__webpack_require__(402);var xor4096=__webpack_require__(403);var tychei=__webpack_require__(404);var sr=__webpack_require__(405);sr.alea=alea;sr.xor128=xor128;sr.xorwow=xorwow;sr.xorshift7=xorshift7;sr.xor4096=xor4096;sr.tychei=tychei;module.exports=sr},function(module,
exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_RESULT__;(function(global,module,define){function Alea(seed){var me=this,mash=Mash();me.next=function(){var t=2091639*me.s0+me.c*2.3283064365386963e-10;me.s0=me.s1;me.s1=me.s2;return me.s2=t-(me.c=t|0)};me.c=1;me.s0=mash(" ");me.s1=mash(" ");me.s2=mash(" ");me.s0-=mash(seed);if(me.s0<0)me.s0+=1;me.s1-=mash(seed);if(me.s1<0)me.s1+=1;me.s2-=mash(seed);if(me.s2<0)me.s2+=1;mash=null}function copy(f,t){t.c=f.c;t.s0=f.s0;t.s1=f.s1;
t.s2=f.s2;return t}function impl(seed,opts){var xg=new Alea(seed),state=opts&&opts.state,prng=xg.next;prng.int32=function(){return xg.next()*4294967296|0};prng.double=function(){return prng()+(prng()*2097152|0)*1.1102230246251565e-16};prng.quick=prng;if(state){if(typeof state=="object")copy(state,xg);prng.state=function(){return copy(xg,{})}}return prng}function Mash(){var n=4022871197;var mash=function(data){data=data.toString();for(var i=0;i<data.length;i++){n+=data.charCodeAt(i);var h=.02519603282416938*
n;n=h>>>0;h-=n;h*=n;n=h>>>0;h-=n;n+=h*4294967296}return(n>>>0)*2.3283064365386963e-10};return mash}if(module&&module.exports)module.exports=impl;else if(__webpack_require__(398)&&__webpack_require__(399))!(__WEBPACK_AMD_DEFINE_RESULT__=function(){return impl}.call(exports,__webpack_require__,exports,module),__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__));else this.alea=impl})(this,true&&module,__webpack_require__(398))}).call(this,__webpack_require__(92)(module))},
function(module,exports){module.exports=function(){throw new Error("define cannot be used indirect");}},function(module,exports){(function(__webpack_amd_options__){module.exports=__webpack_amd_options__}).call(this,{})},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_RESULT__;(function(global,module,define){function XorGen(seed){var me=this,strseed="";me.x=0;me.y=0;me.z=0;me.w=0;me.next=function(){var t=me.x^me.x<<11;me.x=me.y;me.y=me.z;me.z=me.w;return me.w^=
me.w>>>19^t^t>>>8};if(seed===(seed|0))me.x=seed;else strseed+=seed;for(var k=0;k<strseed.length+64;k++){me.x^=strseed.charCodeAt(k)|0;me.next()}}function copy(f,t){t.x=f.x;t.y=f.y;t.z=f.z;t.w=f.w;return t}function impl(seed,opts){var xg=new XorGen(seed),state=opts&&opts.state,prng=function(){return(xg.next()>>>0)/4294967296};prng.double=function(){do var top=xg.next()>>>11,bot=(xg.next()>>>0)/4294967296,result=(top+bot)/(1<<21);while(result===0);return result};prng.int32=xg.next;prng.quick=prng;if(state){if(typeof state==
"object")copy(state,xg);prng.state=function(){return copy(xg,{})}}return prng}if(module&&module.exports)module.exports=impl;else if(__webpack_require__(398)&&__webpack_require__(399))!(__WEBPACK_AMD_DEFINE_RESULT__=function(){return impl}.call(exports,__webpack_require__,exports,module),__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__));else this.xor128=impl})(this,true&&module,__webpack_require__(398))}).call(this,__webpack_require__(92)(module))},function(module,
exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_RESULT__;(function(global,module,define){function XorGen(seed){var me=this,strseed="";me.next=function(){var t=me.x^me.x>>>2;me.x=me.y;me.y=me.z;me.z=me.w;me.w=me.v;return(me.d=me.d+362437|0)+(me.v=me.v^me.v<<4^(t^t<<1))|0};me.x=0;me.y=0;me.z=0;me.w=0;me.v=0;if(seed===(seed|0))me.x=seed;else strseed+=seed;for(var k=0;k<strseed.length+64;k++){me.x^=strseed.charCodeAt(k)|0;if(k==strseed.length)me.d=me.x<<10^me.x>>>4;me.next()}}
function copy(f,t){t.x=f.x;t.y=f.y;t.z=f.z;t.w=f.w;t.v=f.v;t.d=f.d;return t}function impl(seed,opts){var xg=new XorGen(seed),state=opts&&opts.state,prng=function(){return(xg.next()>>>0)/4294967296};prng.double=function(){do var top=xg.next()>>>11,bot=(xg.next()>>>0)/4294967296,result=(top+bot)/(1<<21);while(result===0);return result};prng.int32=xg.next;prng.quick=prng;if(state){if(typeof state=="object")copy(state,xg);prng.state=function(){return copy(xg,{})}}return prng}if(module&&module.exports)module.exports=
impl;else if(__webpack_require__(398)&&__webpack_require__(399))!(__WEBPACK_AMD_DEFINE_RESULT__=function(){return impl}.call(exports,__webpack_require__,exports,module),__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__));else this.xorwow=impl})(this,true&&module,__webpack_require__(398))}).call(this,__webpack_require__(92)(module))},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_RESULT__;(function(global,module,define){function XorGen(seed){var me=
this;me.next=function(){var X=me.x,i=me.i,t,v,w;t=X[i];t^=t>>>7;v=t^t<<24;t=X[i+1&7];v^=t^t>>>10;t=X[i+3&7];v^=t^t>>>3;t=X[i+4&7];v^=t^t<<7;t=X[i+7&7];t=t^t<<13;v^=t^t<<9;X[i]=v;me.i=i+1&7;return v};function init(me,seed){var j,w,X=[];if(seed===(seed|0))w=X[0]=seed;else{seed=""+seed;for(j=0;j<seed.length;++j)X[j&7]=X[j&7]<<15^seed.charCodeAt(j)+X[j+1&7]<<13}while(X.length<8)X.push(0);for(j=0;j<8&&X[j]===0;++j);if(j==8)w=X[7]=-1;else w=X[j];me.x=X;me.i=0;for(j=256;j>0;--j)me.next()}init(me,seed)}function copy(f,
t){t.x=f.x.slice();t.i=f.i;return t}function impl(seed,opts){if(seed==null)seed=+new Date;var xg=new XorGen(seed),state=opts&&opts.state,prng=function(){return(xg.next()>>>0)/4294967296};prng.double=function(){do var top=xg.next()>>>11,bot=(xg.next()>>>0)/4294967296,result=(top+bot)/(1<<21);while(result===0);return result};prng.int32=xg.next;prng.quick=prng;if(state){if(state.x)copy(state,xg);prng.state=function(){return copy(xg,{})}}return prng}if(module&&module.exports)module.exports=impl;else if(__webpack_require__(398)&&
__webpack_require__(399))!(__WEBPACK_AMD_DEFINE_RESULT__=function(){return impl}.call(exports,__webpack_require__,exports,module),__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__));else this.xorshift7=impl})(this,true&&module,__webpack_require__(398))}).call(this,__webpack_require__(92)(module))},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_RESULT__;(function(global,module,define){function XorGen(seed){var me=this;
me.next=function(){var w=me.w,X=me.X,i=me.i,t,v;me.w=w=w+1640531527|0;v=X[i+34&127];t=X[i=i+1&127];v^=v<<13;t^=t<<17;v^=v>>>15;t^=t>>>12;v=X[i]=v^t;me.i=i;return v+(w^w>>>16)|0};function init(me,seed){var t,v,i,j,w,X=[],limit=128;if(seed===(seed|0)){v=seed;seed=null}else{seed=seed+"\x00";v=0;limit=Math.max(limit,seed.length)}for(i=0,j=-32;j<limit;++j){if(seed)v^=seed.charCodeAt((j+32)%seed.length);if(j===0)w=v;v^=v<<10;v^=v>>>15;v^=v<<4;v^=v>>>13;if(j>=0){w=w+1640531527|0;t=X[j&127]^=v+w;i=0==t?i+
1:0}}if(i>=128)X[(seed&&seed.length||0)&127]=-1;i=127;for(j=4*128;j>0;--j){v=X[i+34&127];t=X[i=i+1&127];v^=v<<13;t^=t<<17;v^=v>>>15;t^=t>>>12;X[i]=v^t}me.w=w;me.X=X;me.i=i}init(me,seed)}function copy(f,t){t.i=f.i;t.w=f.w;t.X=f.X.slice();return t}function impl(seed,opts){if(seed==null)seed=+new Date;var xg=new XorGen(seed),state=opts&&opts.state,prng=function(){return(xg.next()>>>0)/4294967296};prng.double=function(){do var top=xg.next()>>>11,bot=(xg.next()>>>0)/4294967296,result=(top+bot)/(1<<21);
while(result===0);return result};prng.int32=xg.next;prng.quick=prng;if(state){if(state.X)copy(state,xg);prng.state=function(){return copy(xg,{})}}return prng}if(module&&module.exports)module.exports=impl;else if(__webpack_require__(398)&&__webpack_require__(399))!(__WEBPACK_AMD_DEFINE_RESULT__=function(){return impl}.call(exports,__webpack_require__,exports,module),__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__));else this.xor4096=impl})(this,true&&module,
__webpack_require__(398))}).call(this,__webpack_require__(92)(module))},function(module,exports,__webpack_require__){(function(module){var __WEBPACK_AMD_DEFINE_RESULT__;(function(global,module,define){function XorGen(seed){var me=this,strseed="";me.next=function(){var b=me.b,c=me.c,d=me.d,a=me.a;b=b<<25^b>>>7^c;c=c-d|0;d=d<<24^d>>>8^a;a=a-b|0;me.b=b=b<<20^b>>>12^c;me.c=c=c-d|0;me.d=d<<16^c>>>16^a;return me.a=a-b|0};me.a=0;me.b=0;me.c=2654435769|0;me.d=1367130551;if(seed===Math.floor(seed)){me.a=seed/
4294967296|0;me.b=seed|0}else strseed+=seed;for(var k=0;k<strseed.length+20;k++){me.b^=strseed.charCodeAt(k)|0;me.next()}}function copy(f,t){t.a=f.a;t.b=f.b;t.c=f.c;t.d=f.d;return t}function impl(seed,opts){var xg=new XorGen(seed),state=opts&&opts.state,prng=function(){return(xg.next()>>>0)/4294967296};prng.double=function(){do var top=xg.next()>>>11,bot=(xg.next()>>>0)/4294967296,result=(top+bot)/(1<<21);while(result===0);return result};prng.int32=xg.next;prng.quick=prng;if(state){if(typeof state==
"object")copy(state,xg);prng.state=function(){return copy(xg,{})}}return prng}if(module&&module.exports)module.exports=impl;else if(__webpack_require__(398)&&__webpack_require__(399))!(__WEBPACK_AMD_DEFINE_RESULT__=function(){return impl}.call(exports,__webpack_require__,exports,module),__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__));else this.tychei=impl})(this,true&&module,__webpack_require__(398))}).call(this,__webpack_require__(92)(module))},function(module,
exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;(function(pool,math){var global=(0,eval)("this"),width=256,chunks=6,digits=52,rngname="random",startdenom=math.pow(width,chunks),significance=math.pow(2,digits),overflow=significance*2,mask=width-1,nodecrypto;function seedrandom(seed,options,callback){var key=[];options=options==true?{entropy:true}:options||{};var shortseed=mixkey(flatten(options.entropy?[seed,tostring(pool)]:seed==null?autoseed():seed,3),key);var arc4=new ARC4(key);var prng=
function(){var n=arc4.g(chunks),d=startdenom,x=0;while(n<significance){n=(n+x)*width;d*=width;x=arc4.g(1)}while(n>=overflow){n/=2;d/=2;x>>>=1}return(n+x)/d};prng.int32=function(){return arc4.g(4)|0};prng.quick=function(){return arc4.g(4)/4294967296};prng.double=prng;mixkey(tostring(arc4.S),pool);return(options.pass||callback||function(prng,seed,is_math_call,state){if(state){if(state.S)copy(state,arc4);prng.state=function(){return copy(arc4,{})}}if(is_math_call){math[rngname]=prng;return seed}else return prng})(prng,
shortseed,"global"in options?options.global:this==math,options.state)}math["seed"+rngname]=seedrandom;function ARC4(key){var t,keylen=key.length,me=this,i=0,j=me.i=me.j=0,s=me.S=[];if(!keylen)key=[keylen++];while(i<width)s[i]=i++;for(i=0;i<width;i++){s[i]=s[j=mask&j+key[i%keylen]+(t=s[i])];s[j]=t}(me.g=function(count){var t,r=0,i=me.i,j=me.j,s=me.S;while(count--){t=s[i=mask&i+1];r=r*width+s[mask&(s[i]=s[j=mask&j+t])+(s[j]=t)]}me.i=i;me.j=j;return r})(width)}function copy(f,t){t.i=f.i;t.j=f.j;t.S=
f.S.slice();return t}function flatten(obj,depth){var result=[],typ=typeof obj,prop;if(depth&&typ=="object")for(prop in obj)try{result.push(flatten(obj[prop],depth-1))}catch(e){}return result.length?result:typ=="string"?obj:obj+"\x00"}function mixkey(seed,key){var stringseed=seed+"",smear,j=0;while(j<stringseed.length)key[mask&j]=mask&(smear^=key[mask&j]*19)+stringseed.charCodeAt(j++);return tostring(key)}function autoseed(){try{var out;if(nodecrypto&&(out=nodecrypto.randomBytes))out=out(width);else{out=
new Uint8Array(width);(global.crypto||global.msCrypto).getRandomValues(out)}return tostring(out)}catch(e){var browser=global.navigator,plugins=browser&&browser.plugins;return[+new Date,global,plugins,global.screen,tostring(pool)]}}function tostring(a){return String.fromCharCode.apply(0,a)}mixkey(math.random(),pool);if(true&&module.exports){module.exports=seedrandom;try{nodecrypto=__webpack_require__(406)}catch(ex){}}else if(true)!(__WEBPACK_AMD_DEFINE_RESULT__=function(){return seedrandom}.call(exports,
__webpack_require__,exports,module),__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))})([],Math)},function(module,exports){if(typeof __WEBPACK_EXTERNAL_MODULE__406__==="undefined"){var e=new Error("Cannot find module 'crypto'");e.code="MODULE_NOT_FOUND";throw e;}module.exports=__WEBPACK_EXTERNAL_MODULE__406__},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.SerializerStatistics=void 0;var _statistics=
__webpack_require__(8);class SerializerStatistics extends _statistics.RealmStatistics{constructor(getTime,getMemory,forcingGC=false){super(getTime,getMemory);this.forcingGC=forcingGC;this.functions=0;this.delayedValues=0;this.initializedModules=0;this.acceleratedModules=0;this.delayedModules=0;this.totalModules=0;this.resetBeforePass();this.total=new _statistics.PerformanceTracker(getTime,getMemory);this.resolveInitializedModules=new _statistics.PerformanceTracker(getTime,getMemory);this.modulesToInitialize=
new _statistics.PerformanceTracker(getTime,getMemory);this.optimizeReactComponentTreeRoots=new _statistics.PerformanceTracker(getTime,getMemory);this.checkThatFunctionsAreIndependent=new _statistics.PerformanceTracker(getTime,getMemory);this.processCollectedNestedOptimizedFunctions=new _statistics.PerformanceTracker(getTime,getMemory);this.deepTraversal=new _statistics.PerformanceTracker(getTime,getMemory);this.referentialization=new _statistics.PerformanceTracker(getTime,getMemory);this.referenceCounts=
new _statistics.PerformanceTracker(getTime,getMemory);this.serializePass=new _statistics.PerformanceTracker(getTime,getMemory);this.babelGenerate=new _statistics.PerformanceTracker(getTime,getMemory);this.dumpIR=new _statistics.PerformanceTracker(getTime,getMemory)}resetBeforePass(){this.objects=0;this.objectProperties=0;this.functionClones=0;this.lazyObjects=0;this.referentialized=0;this.valueIds=0;this.valuesInlined=0;this.generators=0;this.requireCalls=0;this.requireCallsReplaced=0}getSerializerStatistics(){return{objects:this.objects,
objectProperties:this.objectProperties,functions:this.functions,functionClones:this.functionClones,lazyObjects:this.lazyObjects,referentialized:this.referentialized,valueIds:this.valueIds,valuesInlined:this.valuesInlined,delayedValues:this.delayedValues,initializedModules:this.initializedModules,acceleratedModules:this.acceleratedModules,delayedModules:this.delayedModules,totalModules:this.totalModules,generators:this.generators,requireCalls:this.requireCalls,requireCallsReplaced:this.requireCallsReplaced}}log(){super.log();
console.log(`=== serialization statistics`);console.log(`${this.objects} objects with ${this.objectProperties} properties`);console.log(`${this.functions} functions plus ${this.functionClones} clones due to captured variables; ${this.referentialized} captured mutable variables`);console.log(`${this.lazyObjects} objects are lazy.`);console.log(`${this.valueIds} eager and ${this.delayedValues} delayed value ids generated, and ${this.valuesInlined} values inlined.`);console.log(`${this.initializedModules} out of ${this.totalModules} modules initialized, with ${this.acceleratedModules} accelerated and ${this.delayedModules} delayed.`);
console.log(`${this.requireCallsReplaced} of ${this.requireCalls} require calls inlined.`);console.log(`${this.generators} generators`)}logSerializerPerformanceTrackers(title,note,format){console.log(`=== ${title}: ${format(this.total)} total`);if(note!==undefined)console.log(`NOTE: ${note}`);this.logPerformanceTrackers(format);console.log(`${format(this.resolveInitializedModules)} resolving initialized modules, ${format(this.modulesToInitialize)} initializing more modules, ${format(this.optimizeReactComponentTreeRoots)} optimizing react component tree roots, ${format(this.checkThatFunctionsAreIndependent)} evaluating functions to optimize, ${format(this.dumpIR)} dumping IR`);
console.log(`${format(this.deepTraversal)} visiting residual heap, ${format(this.referentialization)} referentializing functions, ${format(this.referenceCounts)} reference counting, ${format(this.serializePass)} generating AST, ${format(this.babelGenerate)} generating source code`)}}exports.SerializerStatistics=SerializerStatistics},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.AreSameResidualBinding=AreSameResidualBinding;exports.ReactStatistics=
exports.BodyReference=void 0;var _environment=__webpack_require__(20);var _index=__webpack_require__(10);var _abstract=__webpack_require__(233);var _realm=__webpack_require__(7);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function AreSameResidualBinding(realm,x,y){if(x.serializedValue===y.serializedValue)return true;if(x.value&&x.value===y.value)return true;if(x.value instanceof _index.ConcreteValue&&
y.value instanceof _index.ConcreteValue)return(0,_abstract.SameValue)(realm,x.value,y.value);return false}class BodyReference{constructor(body,index){(0,_invariant.default)(index>=0);this.body=body;this.index=index}isNotEarlierThan(other){return this.body===other.body&&this.index>=other.index}}exports.BodyReference=BodyReference;class ReactStatistics{constructor(){this.optimizedTrees=0;this.inlinedComponents=0;this.evaluatedRootNodes=[];this.componentsEvaluated=0;this.optimizedNestedClosures=0}}exports.ReactStatistics=
ReactStatistics},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.Functions=void 0;var _completions=__webpack_require__(18);var _errors=__webpack_require__(3);var _invariant=_interopRequireDefault(__webpack_require__(9));var _realm=__webpack_require__(7);var _errors2=__webpack_require__(410);var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _modules=__webpack_require__(411);var _utils=__webpack_require__(413);var _types=
__webpack_require__(408);var _utils2=__webpack_require__(291);var _optimizing=__webpack_require__(414);var _babelhelpers=__webpack_require__(239);var _singletons=__webpack_require__(236);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Functions{constructor(realm,moduleTracer){this.realm=realm;this.moduleTracer=moduleTracer;this._writeEffects=new Map;this._noopFunction=undefined;this._optimizedFunctionId=0;this.reactFunctionMap=
new Map}_unwrapAbstract(value){let elements=value.values.getElements();if(elements){let possibleValues=[...elements].filter((element)=>!(element instanceof _index.EmptyValue||element instanceof _index.UndefinedValue));if(possibleValues.length===1)return possibleValues[0]}return value}_optimizedFunctionEntryOfValue(value){let realm=this.realm;if(value instanceof _index.AbstractValue)value=this._unwrapAbstract(value);(0,_invariant.default)(value instanceof _index.ObjectValue);let config=(0,_index2.Get)(realm,
value,"config");let rootComponent=(0,_index2.Get)(realm,value,"rootComponent");let validConfig=config instanceof _index.ObjectValue||config===realm.intrinsics.undefined;let validRootComponent=rootComponent instanceof _index.ECMAScriptSourceFunctionValue||rootComponent instanceof _index.BoundFunctionValue||rootComponent instanceof _index.AbstractValue&&(0,_utils2.valueIsKnownReactAbstraction)(this.realm,rootComponent);if(validConfig&&validRootComponent)return{value:rootComponent,config:(0,_utils2.convertConfigObjectToReactComponentTreeConfig)(realm,
config)};let location=(0,_babelhelpers.optionalStringOfLocation)(value.expressionLocation);let result=realm.handleError(new _errors.CompilerDiagnostic(`Optimized Function Value ${location} is an not a function or react element`,realm.currentLocation,"PP0033","Warning"));if(result!=="Recover")throw new _errors.FatalError("Optimized Function Values must be functions or react elements");}_generateInitialAdditionalFunctions(globalKey){let recordedAdditionalFunctions=[];let realm=this.realm;let globalRecordedAdditionalFunctionsMap=
this.moduleTracer.modules.logger.tryQuery(()=>(0,_index2.Get)(realm,realm.$GlobalObject,globalKey),realm.intrinsics.undefined);(0,_invariant.default)(globalRecordedAdditionalFunctionsMap instanceof _index.ObjectValue);for(let funcId of _singletons.Properties.GetOwnPropertyKeysArray(realm,globalRecordedAdditionalFunctionsMap,true,false)){let property=globalRecordedAdditionalFunctionsMap.properties.get(funcId);if(property){(0,_invariant.default)(property.descriptor instanceof _descriptors.PropertyDescriptor);
let value=property.descriptor.value;(0,_invariant.default)(value!==undefined);let entry=this._optimizedFunctionEntryOfValue(value);if(entry)recordedAdditionalFunctions.push(entry)}}return recordedAdditionalFunctions}_generateOptimizedFunctionsFromRealm(){let realm=this.realm;let recordedAdditionalFunctions=[];for(let [valueToOptimize,argModel]of realm.optimizedFunctions){let value=valueToOptimize instanceof _index.AbstractValue?this._unwrapAbstract(valueToOptimize):valueToOptimize;(0,_invariant.default)(value instanceof
_index.ECMAScriptSourceFunctionValue);if(!value.isValid()){let error=new _errors.CompilerDiagnostic("Called __optimize on function in failed speculative context",value.expressionLocation,"PP1008","RecoverableError");if(realm.handleError(error)!=="Recover")throw new _errors.FatalError;}else recordedAdditionalFunctions.push({value,argModel})}return recordedAdditionalFunctions}optimizeReactComponentTreeRoots(statistics){let logger=this.moduleTracer.modules.logger;let recordedReactRootValues=this._generateInitialAdditionalFunctions("__reactComponentTrees");
if(this.realm.react.verbose)logger.logInformation(`Evaluating ${recordedReactRootValues.length} React component tree roots...`);let alreadyEvaluated=new Map;for(let _ref of recordedReactRootValues){let {value:componentRoot,config}=_ref;(0,_invariant.default)(config);(0,_optimizing.optimizeReactComponentTreeRoot)(this.realm,componentRoot,config,this._writeEffects,logger,statistics,alreadyEvaluated,this.reactFunctionMap)}}getDeclaringOptimizedFunction(functionValue){for(let [optimizedFunctionValue,
additionalEffects]of this._writeEffects){let createdObjects=additionalEffects.effects.createdObjects;if(createdObjects.has(functionValue))return optimizedFunctionValue}}processCollectedNestedOptimizedFunctions(){for(let [functionValue,effects]of this.realm.collectedNestedOptimizedFunctionEffects){let additionalFunctionEffects=(0,_utils.createAdditionalEffects)(this.realm,effects,true,"AdditionalFunctionEffects",this._writeEffects,this.reactFunctionMap,functionValue,this.getDeclaringOptimizedFunction(functionValue));
(0,_invariant.default)(additionalFunctionEffects!==null);this._writeEffects.set(functionValue,additionalFunctionEffects)}}_withEmptyOptimizedFunctionList({value,argModel},func){let oldRealmOptimizedFunctions=this.realm.optimizedFunctions;this.realm.optimizedFunctions=new Map;let currentOptimizedFunctionId=this._optimizedFunctionId++;(0,_invariant.default)(value instanceof _index.ECMAScriptSourceFunctionValue);for(let t1 of this.realm.tracers)t1.beginOptimizingFunction(currentOptimizedFunctionId,value);
this.realm.withNewOptimizedFunction(()=>func(value,argModel),value);for(let t2 of this.realm.tracers)t2.endOptimizingFunction(currentOptimizedFunctionId);for(let [oldValue,model]of oldRealmOptimizedFunctions)this.realm.optimizedFunctions.set(oldValue,model)}checkThatFunctionsAreIndependent(){let additionalFunctionsToProcess=this._generateOptimizedFunctionsFromRealm();let additionalFunctionStack=[];let additionalFunctions=new Set(additionalFunctionsToProcess.map((entry)=>entry.value));let recordWriteEffectsForOptimizedFunctionAndNestedFunctions=
(functionValue,argModel)=>{additionalFunctionStack.push(functionValue);let call=_singletons.Utils.createModelledFunctionCall(this.realm,functionValue,argModel);let realm=this.realm;let logCompilerDiagnostic=(msg,location)=>{let error=new _errors.CompilerDiagnostic(msg,location,"PP1007","Warning");realm.handleError(error)};let effects=realm.evaluatePure(()=>realm.evaluateForEffectsInGlobalEnv(call,undefined,"additional function"),true,(sideEffectType,binding,expressionLocation)=>(0,_utils.handleReportedSideEffect)(logCompilerDiagnostic,
sideEffectType,binding,expressionLocation));(0,_invariant.default)(effects);let additionalFunctionEffects=(0,_utils.createAdditionalEffects)(this.realm,effects,true,"AdditionalFunctionEffects",this._writeEffects,this.reactFunctionMap,functionValue,this.getDeclaringOptimizedFunction(functionValue));(0,_invariant.default)(additionalFunctionEffects);effects=additionalFunctionEffects.effects;if(this._writeEffects.has(functionValue)){let error=new _errors.CompilerDiagnostic("Trying to optimize a function with two parent optimized functions, which is not currently allowed.",
functionValue.expressionLocation,"PP1009","RecoverableError");if(realm.handleError(error)!=="Recover")throw new _errors.FatalError;}else this._writeEffects.set(functionValue,additionalFunctionEffects);this.realm.withEffectsAppliedInGlobalEnv(()=>{let newOptFuncs=this._generateOptimizedFunctionsFromRealm();for(let newEntry of newOptFuncs){additionalFunctions.add(newEntry.value);this._withEmptyOptimizedFunctionList(newEntry,recordWriteEffectsForOptimizedFunctionAndNestedFunctions)}return null},additionalFunctionEffects.effects);
(0,_invariant.default)(additionalFunctionStack.pop()===functionValue)};for(let funcObject of additionalFunctionsToProcess)this._withEmptyOptimizedFunctionList(funcObject,recordWriteEffectsForOptimizedFunctionAndNestedFunctions);(0,_invariant.default)(additionalFunctionStack.length===0);let conflicts=new Map;let isParentOf=(possibleParent,fun)=>{if(fun===undefined)return false;let effects=this._writeEffects.get(fun);(0,_invariant.default)(effects!==undefined);if(effects.parentAdditionalFunction!==
undefined){if(effects.parentAdditionalFunction===possibleParent)return true;return isParentOf(possibleParent,effects.parentAdditionalFunction)}return false};for(let fun1 of additionalFunctions){(0,_invariant.default)(fun1 instanceof _index.FunctionValue);let fun1Location=fun1.expressionLocation;let fun1Name=fun1.getDebugName()||(0,_babelhelpers.optionalStringOfLocation)(fun1Location);let additionalFunctionEffects=this._writeEffects.get(fun1);(0,_invariant.default)(additionalFunctionEffects!==undefined);
let e1=additionalFunctionEffects.effects;(0,_invariant.default)(e1!==undefined);if(e1.result instanceof _completions.AbruptCompletion){let error=new _errors.CompilerDiagnostic(`Additional function ${fun1Name} will terminate abruptly`,e1.result.location,"PP1002","RecoverableError");if(this.realm.handleError(error)!=="Recover")throw new _errors.FatalError;}for(let fun2 of additionalFunctions){if(fun1===fun2)continue;(0,_invariant.default)(fun2 instanceof _index.FunctionValue);let fun2Location=fun2.expressionLocation;
let fun2Name=fun2.getDebugName()||(0,_babelhelpers.optionalStringOfLocation)(fun2Location);let reportFn=()=>{this.reportWriteConflicts(fun1Name,fun2Name,conflicts,e1.modifiedProperties,isParentOf(fun1,fun2),_singletons.Utils.createModelledFunctionCall(this.realm,fun2));return null};let withPossibleParentEffectsApplied=(toExecute,optimizedFunction)=>{let funEffects=this._writeEffects.get(optimizedFunction);(0,_invariant.default)(funEffects!==undefined);let parentAdditionalFunction=funEffects.parentAdditionalFunction;
if(parentAdditionalFunction!==undefined){let parentEffects=this._writeEffects.get(parentAdditionalFunction);(0,_invariant.default)(parentEffects!==undefined);let newToExecute=()=>this.realm.withEffectsAppliedInGlobalEnv(toExecute,parentEffects.effects);withPossibleParentEffectsApplied(newToExecute,parentAdditionalFunction)}else toExecute()};withPossibleParentEffectsApplied(reportFn,fun2)}}if(conflicts.size>0)for(let diagnostic of conflicts.values())if(this.realm.handleError(diagnostic)!=="Recover")throw new _errors.FatalError;
}getAdditionalFunctionValuesToEffects(){return this._writeEffects}reportWriteConflicts(f1name,f2name,conflicts,pbs,f1IsParentOfF2,call2){let reportConflict=(location,object="",key,originalLocation)=>{let firstLocationString=(0,_babelhelpers.optionalStringOfLocation)(originalLocation);let secondLocationString=(0,_babelhelpers.optionalStringOfLocation)(location);let propString=key?` "${key}"`:"";let objectString=object?` on object "${object}" `:"";if(!objectString&&key)objectString=" on <unnamed object> ";
let error=new _errors.CompilerDiagnostic(`Write to property${propString}${objectString}at optimized function ${f1name}${firstLocationString} conflicts with access in function ${f2name}${secondLocationString}`,location,"PP1003","RecoverableError");conflicts.set(location,error)};let writtenObjects=new Set;pbs.forEach((val,key,m)=>{writtenObjects.add(key.object)});let oldReportObjectGetOwnProperties=this.realm.reportObjectGetOwnProperties;this.realm.reportObjectGetOwnProperties=(ob)=>{let location=this.realm.currentLocation;
(0,_invariant.default)(location);if(writtenObjects.has(ob)&&!conflicts.has(location))reportConflict(location,ob.getDebugName(),undefined,ob.expressionLocation)};let oldReportPropertyAccess=this.realm.reportPropertyAccess;this.realm.reportPropertyAccess=(pb,isWrite)=>{if(_index.ObjectValue.refuseSerializationOnPropertyBinding(pb))return;let location=this.realm.currentLocation;if(!location)return;if(pbs.has(pb)&&(!f1IsParentOfF2||isWrite)&&!conflicts.has(location)){let originalLocation=pb.descriptor instanceof
_descriptors.PropertyDescriptor&&pb.descriptor.value&&!Array.isArray(pb.descriptor.value)?pb.descriptor.value.expressionLocation:undefined;let keyString=pb.key instanceof _index.Value?pb.key.toDisplayString():pb.key;reportConflict(location,pb.object?pb.object.getDebugName():undefined,keyString,originalLocation)}};try{(0,_errors2.ignoreErrorsIn)(this.realm,()=>this.realm.evaluateForEffectsInGlobalEnv(call2))}finally{this.realm.reportPropertyAccess=oldReportPropertyAccess;this.realm.reportObjectGetOwnProperties=
oldReportObjectGetOwnProperties}}}exports.Functions=Functions},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ignoreErrorsIn=ignoreErrorsIn;var _errors=__webpack_require__(3);var _realm=__webpack_require__(7);function ignoreErrorsIn(realm,f){let savedHandler=realm.errorHandler;realm.errorHandler=(d)=>"Recover";try{return f()}catch(err){if(err instanceof _errors.FatalError)return undefined;throw err;}finally{realm.errorHandler=savedHandler}}
},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.Modules=exports.ModuleTracer=void 0;var _environment=__webpack_require__(20);var _errors=__webpack_require__(3);var _realm=__webpack_require__(7);var _index=__webpack_require__(232);var _singletons=__webpack_require__(236);var _index2=__webpack_require__(10);var t=_interopRequireWildcard(__webpack_require__(21));var _invariant=_interopRequireDefault(__webpack_require__(9));var _logger=__webpack_require__(412);
var _statistics=__webpack_require__(407);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,
desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function downgradeErrorsToWarnings(realm,f){let savedHandler=realm.errorHandler;function handler(e){e.severity="Warning";realm.errorHandler=savedHandler;try{return realm.handleError(e)}finally{realm.errorHandler=handler}}realm.errorHandler=handler;try{return f()}finally{realm.errorHandler=savedHandler}}class ModuleTracer extends _realm.Tracer{constructor(modules,logModules){super();this.modules=modules;this.evaluateForEffectsNesting=
0;this.requireStack=[];this.requireSequence=[];this.logModules=logModules;this.uninitializedModuleIdsRequiredInEvaluateForEffects=new Set}getStatistics(){return this.modules.getStatistics()}log(message){if(this.logModules)console.log(`[modules] ${this.requireStack.map((_)=>"  ").join("")}${message}`)}beginEvaluateForEffects(state){if(state!==this){this.log(">evaluate for effects");this.evaluateForEffectsNesting++;this.requireStack.push(undefined)}}endEvaluateForEffects(state,effects){if(state!==this){let popped=
this.requireStack.pop();(0,_invariant.default)(popped===undefined);this.evaluateForEffectsNesting--;this.log("<evaluate for effects")}}_callRequireAndRecord(moduleIdValue,performCall){if(this.requireStack.length===0||this.requireStack[this.requireStack.length-1]!==moduleIdValue){this.requireStack.push(moduleIdValue);try{let value=performCall();if(this.modules.moduleIds.has(moduleIdValue))this.modules.recordModuleInitialized(moduleIdValue,value);return value}finally{(0,_invariant.default)(this.requireStack.pop()===
moduleIdValue)}}return undefined}_tryExtractDependencies(value){if(value===undefined||value instanceof _index2.NullValue||value instanceof _index2.UndefinedValue)return[];if(value instanceof _index2.ArrayValue){const realm=this.modules.realm;const lengthValue=(0,_index.Get)(realm,value,"length");if(lengthValue instanceof _index2.NumberValue){const dependencies=[];const logger=this.modules.logger;for(let i=0;i<lengthValue.value;i++){const elementValue=logger.tryQuery(()=>(0,_index.Get)(realm,value,
""+i),realm.intrinsics.undefined);dependencies.push(elementValue)}return dependencies}}return undefined}detourCall(F,thisArgument,argumentsList,newTarget,performCall){let requireInfo=this.modules.getRequireInfo();if(requireInfo!==undefined&&F===requireInfo.value&&argumentsList.length===1){let moduleId=argumentsList[0];let moduleIdValue;if(moduleId instanceof _index2.NumberValue||moduleId instanceof _index2.StringValue)moduleIdValue=moduleId.value;else return performCall();let res=this._callRequireAndRecord(moduleIdValue,
performCall);if(F.$Realm.eagerlyRequireModuleDependencies){let dependencies=this.modules.moduleDependencies.get(moduleIdValue);if(dependencies===undefined)this.modules.logger.logError(moduleId,`Cannot resolve module dependencies for ${moduleIdValue.toString()}.`);else for(let dependency of dependencies)if(dependency instanceof _index2.NumberValue||dependency instanceof _index2.StringValue)this.modules.tryInitializeModule(dependency.value,`Eager initialization of module ${dependency.value}`)}return res}else if(F===
this.modules.getDefine()){let moduleId=argumentsList[1];if(moduleId instanceof _index2.NumberValue||moduleId instanceof _index2.StringValue){let moduleIdValue=moduleId.value;let factoryFunction=argumentsList[0];if(factoryFunction instanceof _index2.FunctionValue){let dependencies=this._tryExtractDependencies(argumentsList[2]);if(dependencies!==undefined){this.modules.moduleDependencies.set(moduleIdValue,dependencies);this.modules.factoryFunctionDependencies.set(factoryFunction,dependencies)}else this.modules.logger.logError(argumentsList[2],
"Third argument to define function is present but not a concrete array.")}else this.modules.logger.logError(factoryFunction,"First argument to define function is not a function value.");this.modules.moduleIds.add(moduleIdValue)}else this.modules.logger.logError(moduleId,"Second argument to define function is not a number or string value.")}return undefined}}exports.ModuleTracer=ModuleTracer;class Modules{constructor(realm,logger,logModules){this.realm=realm;this.logger=logger;this._define=realm.intrinsics.undefined;
this.factoryFunctionDependencies=new Map;this.moduleDependencies=new Map;this.moduleIds=new Set;this.initializedModules=new Map;realm.tracers.push(this.moduleTracer=new ModuleTracer(this,logModules))}getStatistics(){(0,_invariant.default)(this.realm.statistics instanceof _statistics.SerializerStatistics,"serialization requires SerializerStatistics");return this.realm.statistics}resolveInitializedModules(){let globalInitializedModulesMap=this._getGlobalProperty("__initializedModules");(0,_invariant.default)(globalInitializedModulesMap instanceof
_index2.ObjectValue);for(let moduleId of globalInitializedModulesMap.properties.keys()){let property=globalInitializedModulesMap.properties.get(moduleId);(0,_invariant.default)(property);if(property.descriptor instanceof _descriptors.PropertyDescriptor){let moduleValue=property.descriptor&&property.descriptor.value;if(moduleValue instanceof _index2.Value&&!moduleValue.mightHaveBeenDeleted())this.initializedModules.set(moduleId,moduleValue)}}this.getStatistics().initializedModules=this.initializedModules.size;
this.getStatistics().totalModules=this.moduleIds.size}_getGlobalProperty(name){if(this.active)return this.realm.intrinsics.undefined;this.active=true;try{let realm=this.realm;return this.logger.tryQuery(()=>(0,_index.Get)(realm,realm.$GlobalObject,name),realm.intrinsics.undefined)}finally{this.active=false}}getRequireInfo(){if(this._requireInfo===undefined)for(let globalName of["require","__r"]){let value=this._getGlobalProperty(globalName);if(value instanceof _index2.FunctionValue){this._requireInfo=
{value,globalName};break}}return this._requireInfo}getDefine(){if(!(this._define instanceof _index2.FunctionValue))this._define=this._getGlobalProperty("__d");return this._define}getGetModuleIdIfNodeIsRequireFunction(formalParameters,functions){let realm=this.realm;let logger=this.logger;let modules=this;return(scope,node)=>{if(!t.isIdentifier(node.callee)||node.arguments.length!==1)return undefined;let argument=node.arguments[0];if(!argument)return undefined;if(!t.isNumericLiteral(argument)&&!t.isStringLiteral(argument)&&
!t.isMemberExpression(argument))return undefined;(0,_invariant.default)(node.callee);let innerName=node.callee.name;let moduleId;let updateModuleId=(newModuleId)=>{if(moduleId!==undefined&&moduleId!==newModuleId)return false;moduleId=newModuleId;return true};const getModuleId=(dependencies)=>{if(t.isMemberExpression(argument)){if(dependencies!==undefined){let memberExpression=argument;if(t.isIdentifier(memberExpression.object)){let scopedBinding=scope.getBinding(memberExpression.object.name);if(scopedBinding&&
formalParameters[4]===scopedBinding.path.node)if(t.isNumericLiteral(memberExpression.property)){let dependencyIndex=memberExpression.property.value;if(Number.isInteger(dependencyIndex)&&dependencyIndex>=0&&dependencyIndex<dependencies.length){let dependency=dependencies[dependencyIndex];if(dependency instanceof _index2.NumberValue||dependency instanceof _index2.StringValue)return dependency.value}}}}}else return argument.value};for(let f of functions){let scopedBinding=scope.getBinding(innerName);
if(scopedBinding){let dependencies=modules.factoryFunctionDependencies.get(f);if(dependencies!==undefined&&formalParameters[1]===scopedBinding.path.node){(0,_invariant.default)(scopedBinding.kind==="param");let newModuleId=getModuleId(dependencies);if(newModuleId!==undefined&&!updateModuleId(newModuleId))return undefined;continue}return undefined}if(!t.isNumericLiteral(argument)&&!t.isStringLiteral(argument))return undefined;let doesNotMatter=true;let reference=logger.tryQuery(()=>_singletons.Environment.ResolveBinding(realm,
innerName,doesNotMatter,f.$Environment),undefined);if(reference===undefined)return undefined;if(_singletons.Environment.IsUnresolvableReference(realm,reference))return undefined;let referencedBase=reference.base;let referencedName=reference.referencedName;if(typeof referencedName!=="string")return undefined;let value;if(reference.base instanceof _environment.GlobalEnvironmentRecord)value=logger.tryQuery(()=>(0,_index.Get)(realm,realm.$GlobalObject,innerName),realm.intrinsics.undefined);else{(0,_invariant.default)(referencedBase instanceof
_environment.DeclarativeEnvironmentRecord);let binding=referencedBase.bindings[referencedName];if(!binding.initialized)return undefined;value=binding.value}let requireInfo=modules.getRequireInfo();if(requireInfo===undefined||value!==requireInfo.value)return undefined;const newModuleId=getModuleId();(0,_invariant.default)(newModuleId!==undefined);if(!updateModuleId(newModuleId))return undefined}return moduleId}}recordModuleInitialized(moduleId,value){this.realm.assignToGlobal(t.memberExpression(t.memberExpression(t.identifier("global"),
t.identifier("__initializedModules")),t.identifier(""+moduleId)),value)}tryInitializeModule(moduleId,message){let realm=this.realm;let requireInfo=this.getRequireInfo();if(requireInfo===undefined)return undefined;return downgradeErrorsToWarnings(realm,()=>{try{let node=t.callExpression(t.identifier(requireInfo.globalName),[t.valueToNode(moduleId)]);let effects=realm.evaluateNodeForEffectsInGlobalEnv(node);realm.applyEffects(effects,message);return effects}catch(err){if(err instanceof _errors.FatalError)return undefined;
else throw err;}})}initializeMoreModules(modulesToInitialize){let count=0;for(let moduleId of this.moduleIds){if(modulesToInitialize!=="ALL"&&!modulesToInitialize.has(""+moduleId))continue;if(this.initializedModules.has(moduleId))continue;let effects=this.tryInitializeModule(moduleId,`Speculative initialization of module ${moduleId}`);if(effects===undefined)continue;let result=effects.result;if(!(result instanceof _index2.Value))continue;count++;this.initializedModules.set(moduleId,result)}if(count>
0)console.log(`=== speculatively initialized ${count} additional modules`)}}exports.Modules=Modules},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.Logger=void 0;var _realm=__webpack_require__(7);var _errors=__webpack_require__(3);var _index=__webpack_require__(232);var _completions=__webpack_require__(18);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));
var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Logger{constructor(realm,internalDebug){this.realm=realm;this._hasErrors=false;this.internalDebug=internalDebug}tryQuery(f,defaultValue){let realm=this.realm;let context=new _realm.ExecutionContext;context.isStrict=realm.isStrict;let env=realm.$GlobalEnv;context.lexicalEnvironment=env;context.variableEnvironment=env;context.realm=realm;realm.pushContext(context);let oldErrorHandler=
realm.errorHandler;realm.errorHandler=(d)=>{if(d.severity==="Information"||d.severity==="Warning")return"Recover";return"Fail"};try{let result;let effects=realm.evaluateForEffects(()=>{try{result=f()}catch(e){if(e instanceof _completions.Completion)result=defaultValue;else if(e instanceof _errors.FatalError)result=defaultValue;else throw e;}return realm.intrinsics.undefined},undefined,"tryQuery");(0,_invariant.default)(effects.result.value===realm.intrinsics.undefined);return result}finally{realm.errorHandler=
oldErrorHandler;realm.popContext(context)}}logCompletion(res){let realm=this.realm;let value=res.value;if(this.internalDebug)console.error(`=== ${res.constructor.name} ===`);if(this.tryQuery(()=>value instanceof _index2.ObjectValue&&(0,_index.InstanceofOperator)(realm,value,realm.intrinsics.Error),false)){let object=value;try{let err=new _errors.FatalError(this.tryQuery(()=>_singletons.To.ToStringPartial(realm,(0,_index.Get)(realm,object,"message")),"(unknown message)"));err.stack=this.tryQuery(()=>
_singletons.To.ToStringPartial(realm,(0,_index.Get)(realm,object,"stack")),"(unknown stack)");console.error(err.message);console.error(err.stack);if(this.internalDebug&&res instanceof _completions.ThrowCompletion)console.error(res.nativeStack)}catch(err){let message=object.properties.get("message");console.error(message&&message.descriptor&&message.descriptor instanceof _descriptors.PropertyDescriptor&&message.descriptor.value instanceof _index2.StringValue?message.descriptor.value.value:"(no message available)");
console.error(err.stack);if(object.$ErrorData)console.error(object.$ErrorData.contextStack)}}else{try{value=_singletons.To.ToStringPartial(realm,value)}catch(err){value=err.message}console.error(value);if(this.internalDebug&&res instanceof _completions.ThrowCompletion)console.error(res.nativeStack)}this._hasErrors=true}logError(value,message){this._log(value,message,"RecoverableError");this._hasErrors=true}logWarning(value,message){this._log(value,message,"Warning")}logInformation(message){this._log(this.realm.intrinsics.undefined,
message,"Information")}_log(value,message,severity){let loc=value.expressionLocation;if(value.intrinsicName)message=`${message}\nintrinsic name: ${value.intrinsicName}`;let diagnostic=new _errors.CompilerDiagnostic(message,loc,"PP9000",severity);if(this.realm.handleError(diagnostic)==="Fail")throw new _errors.FatalError;}hasErrors(){return this._hasErrors}}exports.Logger=Logger},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.getSuggestedArrayLiteralLength=
getSuggestedArrayLiteralLength;exports.commonAncestorOf=commonAncestorOf;exports.getOrDefault=getOrDefault;exports.withDescriptorValue=withDescriptorValue;exports.canIgnoreClassLengthProperty=canIgnoreClassLengthProperty;exports.getObjectPrototypeMetadata=getObjectPrototypeMetadata;exports.createAdditionalEffects=createAdditionalEffects;exports.handleReportedSideEffect=handleReportedSideEffect;exports.ClassPropertiesToIgnore=void 0;var _index=__webpack_require__(10);var _errors=__webpack_require__(3);
var _invariant=_interopRequireDefault(__webpack_require__(9));var _index2=__webpack_require__(232);var _logger=__webpack_require__(412);var _generator=__webpack_require__(237);var _babelhelpers=__webpack_require__(239);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function getSuggestedArrayLiteralLength(realm,val){(0,_invariant.default)((0,_index2.IsArray)(realm,val));let instantRenderMode=realm.instantRender.enabled;let minLength=
0,maxLength=0;let actualLength;for(const key of val.properties.keys())if((0,_index2.IsArrayIndex)(realm,key)&&Number(key)>=maxLength){let prevMax=maxLength;maxLength=Number(key)+1;let elem=val._SafeGetDataPropertyValue(key);if(instantRenderMode||!elem.mightHaveBeenDeleted())minLength=maxLength;else if(elem instanceof _index.AbstractValue&&elem.kind==="conditional"){let maxLengthVal=new _index.IntegralValue(realm,maxLength);let [c,x,y]=elem.args;if(x instanceof _index.EmptyValue&&!y.mightHaveBeenDeleted()){let prevActual=
actualLength===undefined?new _index.IntegralValue(realm,prevMax):actualLength;actualLength=_index.AbstractValue.createFromConditionalOp(realm,c,prevActual,maxLengthVal)}else if(y instanceof _index.EmptyValue&&!x.mightHaveBeenDeleted()){let prevActual=actualLength===undefined?new _index.IntegralValue(realm,prevMax):actualLength;actualLength=_index.AbstractValue.createFromConditionalOp(realm,c,maxLengthVal,prevActual)}else actualLength=undefined}}if(maxLength>minLength&&actualLength instanceof _index.AbstractValue){let lengthVal=
val._SafeGetDataPropertyValue("length");if(lengthVal.equals(actualLength))return[minLength,true]}return[maxLength,false]}function commonAncestorOf(node1,node2,getParent){if(node1===node2)return node1;let n1=node1,n2=node2,count1=0,count2=0;while(true){let p1=n1&&getParent(n1);let p2=n2&&getParent(n2);if(p1===node2)return node2;if(p2===node1)return node1;if(p1!==undefined)count1++;if(p2!==undefined)count2++;if(p1===undefined&&p2===undefined)break;n1=p1;n2=p2}n1=node1;while(count1>count2){(0,_invariant.default)(n1!==
undefined);n1=getParent(n1);count1--}n2=node2;while(count1<count2){(0,_invariant.default)(n2!==undefined);n2=getParent(n2);count2--}while(n1!==n2){(0,_invariant.default)(n1!==undefined);n1=getParent(n1);(0,_invariant.default)(n2!==undefined);n2=getParent(n2)}return n1}function getOrDefault(map,key,defaultFn){let value=map.get(key);if(value===undefined)map.set(key,value=defaultFn());(0,_invariant.default)(value!==undefined);return value}function withDescriptorValue(propertyNameOrSymbol,descriptor,
func){if(descriptor!==undefined){(0,_invariant.default)(descriptor instanceof _descriptors.PropertyDescriptor);if(descriptor.value!==undefined)func(propertyNameOrSymbol,descriptor.value,"value");else{if(descriptor.get!==undefined)func(propertyNameOrSymbol,descriptor.get,"get");if(descriptor.set!==undefined)func(propertyNameOrSymbol,descriptor.set,"set")}}}const ClassPropertiesToIgnore=new Set(["arguments","name","caller"]);exports.ClassPropertiesToIgnore=ClassPropertiesToIgnore;function canIgnoreClassLengthProperty(val,
desc,logger){if(desc)if(desc instanceof _descriptors.PropertyDescriptor){if(desc.value===undefined)logger.logError(val,"Functions with length accessor properties are not supported in residual heap.")}else logger.logError(val,"Functions with length properties with different attributes are not supported in residual heap.");return true}function getObjectPrototypeMetadata(realm,obj){let proto=obj.$Prototype;let skipPrototype=false;let constructor;if(obj.$IsClassPrototype)skipPrototype=true;if(proto&&
proto.$IsClassPrototype){(0,_invariant.default)(proto instanceof _index.ObjectValue);let _constructor=proto.properties.get("constructor");if(_constructor!==undefined){if(_constructor.descriptor===undefined)throw new _errors.FatalError("TODO #1024: implement object prototype serialization with deleted constructor");if(!(_constructor.descriptor instanceof _descriptors.PropertyDescriptor))throw new _errors.FatalError("TODO #1024: implement object prototype serialization with multiple constructor attributes");
let classFunc=_constructor.descriptor.value;if(classFunc instanceof _index.ECMAScriptSourceFunctionValue){constructor=classFunc;skipPrototype=true}}}return{skipPrototype,constructor}}function createAdditionalEffects(realm,effects,fatalOnAbrupt,name,additionalFunctionEffects,preEvaluationComponentToWriteEffectFunction,optimizedFunction,parentOptimizedFunction,transforms=[]){let generator=_generator.Generator.fromEffects(effects,realm,name,additionalFunctionEffects,preEvaluationComponentToWriteEffectFunction,
optimizedFunction);let retValue={parentAdditionalFunction:parentOptimizedFunction||undefined,effects,transforms,generator,additionalRoots:new Set};return retValue}function handleReportedSideEffect(exceptionHandler,sideEffectType,binding,expressionLocation){if(binding&&binding.object&&binding.object.intrinsicName==="__checkedBindings")return;let location=(0,_babelhelpers.optionalStringOfLocation)(expressionLocation);if(sideEffectType==="MODIFIED_BINDING"){let name=binding?`"${binding.name}"`:"unknown";
exceptionHandler(`side-effects from mutating the binding ${name}${location}`,expressionLocation)}else if(sideEffectType==="MODIFIED_PROPERTY"||sideEffectType==="MODIFIED_GLOBAL"){let name="";let pb=binding;let key=pb.key;if(typeof key==="string")name=`"${key}"`;if(sideEffectType==="MODIFIED_PROPERTY"){if(!_index.ObjectValue.refuseSerializationOnPropertyBinding(pb))exceptionHandler(`side-effects from mutating a property ${name}${location}`,expressionLocation)}else exceptionHandler(`side-effects from mutating the global object property ${name}${location}`,
expressionLocation)}else if(sideEffectType==="EXCEPTION_THROWN")exceptionHandler(`side-effects from throwing exception${location}`,expressionLocation)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.optimizeReactComponentTreeRoot=optimizeReactComponentTreeRoot;var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _utils=__webpack_require__(413);var _utils2=__webpack_require__(291);var _types=__webpack_require__(408);
var _reconcilation=__webpack_require__(415);var _errors=__webpack_require__(417);var _singletons=__webpack_require__(236);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));var _logger=__webpack_require__(412);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function writeEffectsKeyOfComponentValue(realm,componentType,componentTreeState,transforms){if((0,_utils2.valueIsClassComponent)(realm,componentType))if(componentTreeState.status===
"SIMPLE")if(componentType instanceof _index.BoundFunctionValue){let targetFunction=componentType.$BoundTargetFunction;(0,_invariant.default)(targetFunction instanceof _index.ECMAScriptSourceFunctionValue);(0,_utils2.convertSimpleClassComponentToFunctionalComponent)(realm,targetFunction,transforms);(0,_utils2.normalizeFunctionalComponentParamaters)(targetFunction);return targetFunction}else{(0,_utils2.convertSimpleClassComponentToFunctionalComponent)(realm,componentType,transforms);(0,_utils2.normalizeFunctionalComponentParamaters)(componentType);
return componentType}else{let prototype=(0,_index2.Get)(realm,componentType,"prototype");(0,_invariant.default)(prototype instanceof _index.ObjectValue);let renderMethod=(0,_index2.Get)(realm,prototype,"render");(0,_invariant.default)(renderMethod instanceof _index.ECMAScriptSourceFunctionValue);return renderMethod}else if(componentTreeState.status==="COMPLEX"){(0,_utils2.convertFunctionalComponentToComplexClassComponent)(realm,componentType,componentTreeState.componentType,transforms);let prototype=
(0,_index2.Get)(realm,componentType,"prototype");(0,_invariant.default)(prototype instanceof _index.ObjectValue);let renderMethod=(0,_index2.Get)(realm,prototype,"render");(0,_invariant.default)(renderMethod instanceof _index.ECMAScriptSourceFunctionValue);return renderMethod}else if(componentType instanceof _index.BoundFunctionValue){let targetFunction=componentType.$BoundTargetFunction;(0,_invariant.default)(targetFunction instanceof _index.ECMAScriptSourceFunctionValue);(0,_utils2.normalizeFunctionalComponentParamaters)(targetFunction);
return targetFunction}else{(0,_utils2.normalizeFunctionalComponentParamaters)(componentType);return componentType}}function applyWriteEffectsForOptimizedComponent(realm,componentType,_effects,componentTreeState,evaluatedNode,writeEffects,preEvaluationComponentToWriteEffectFunction,parentOptimizedFunction){let effects=_effects;let transforms=[];let writeEffectsKey=writeEffectsKeyOfComponentValue(realm,componentType,componentTreeState,transforms);preEvaluationComponentToWriteEffectFunction.set(componentType,
writeEffectsKey);let additionalFunctionEffects=(0,_utils.createAdditionalEffects)(realm,effects,false,"ReactAdditionalFunctionEffects",writeEffects,preEvaluationComponentToWriteEffectFunction,writeEffectsKey,parentOptimizedFunction,transforms);if(additionalFunctionEffects===null)throw new _errors.ReconcilerFatalError(`Failed to optimize React component tree for "${evaluatedNode.name}" due to an unsupported completion`,evaluatedNode);effects=additionalFunctionEffects.effects;let value=effects.result;
if(value===realm.intrinsics.undefined)return;writeEffects.set(writeEffectsKey,additionalFunctionEffects);if(componentTreeState.contextTypes.size>0){let contextTypes=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype);let noOpFunc=(0,_utils2.createNoopFunction)(realm);for(let key of componentTreeState.contextTypes)_singletons.Properties.Set(realm,contextTypes,key,noOpFunc,true);_singletons.Properties.Set(realm,componentType,"contextTypes",contextTypes,true)}}function optimizeReactComponentTreeBranches(realm,
reconciler,writeEffects,logger,alreadyEvaluated,preEvaluationComponentToWriteEffectFunction){if(realm.react.verbose&&reconciler.branchedComponentTrees.length>0)logger.logInformation(`  Evaluating React component tree branches...`);for(let _ref of reconciler.branchedComponentTrees){let {rootValue:branchRootValue,evaluatedNode}=_ref;let branchComponentType=(0,_utils2.getComponentTypeFromRootValue)(realm,branchRootValue);if(branchComponentType===null){evaluatedNode.status="UNKNOWN_TYPE";continue}if(alreadyEvaluated.has(branchComponentType))return;
alreadyEvaluated.set(branchComponentType,evaluatedNode);reconciler.clearComponentTreeState();if(realm.react.verbose)logger.logInformation(`    Evaluating ${evaluatedNode.name} (branch)`);let parentOptimizedFunction=realm.currentOptimizedFunction;let branchEffects=realm.withNewOptimizedFunction(()=>reconciler.resolveReactComponentTree(branchComponentType,null,null,evaluatedNode),branchComponentType);if(realm.react.verbose)logger.logInformation(`    \u2714 ${evaluatedNode.name} (branch)`);let branchComponentTreeState=
reconciler.componentTreeState;applyWriteEffectsForOptimizedComponent(realm,branchComponentType,branchEffects,branchComponentTreeState,evaluatedNode,writeEffects,preEvaluationComponentToWriteEffectFunction,parentOptimizedFunction)}}function optimizeReactComponentTreeRoot(realm,componentRoot,config,writeEffects,logger,statistics,alreadyEvaluated,preEvaluationComponentToWriteEffectFunction){let reconciler=new _reconcilation.Reconciler(realm,config,alreadyEvaluated,statistics,logger);let componentType=
(0,_utils2.getComponentTypeFromRootValue)(realm,componentRoot);if(componentType===null)return;if(alreadyEvaluated.has(componentType))return;let evaluatedRootNode=(0,_utils2.createReactEvaluatedNode)("ROOT",(0,_utils2.getComponentName)(realm,componentType));statistics.evaluatedRootNodes.push(evaluatedRootNode);alreadyEvaluated.set(componentType,evaluatedRootNode);if(realm.react.verbose)logger.logInformation(`  Evaluating ${evaluatedRootNode.name} (root)`);let parentOptimizedFunction=realm.currentOptimizedFunction;
let componentTreeEffects=realm.withNewOptimizedFunction(()=>reconciler.resolveReactComponentTree(componentType,null,null,evaluatedRootNode),componentType);if(realm.react.verbose)logger.logInformation(`  \u2714 ${evaluatedRootNode.name} (root)`);applyWriteEffectsForOptimizedComponent(realm,componentType,componentTreeEffects,reconciler.componentTreeState,evaluatedRootNode,writeEffects,preEvaluationComponentToWriteEffectFunction,parentOptimizedFunction);let startingComponentTreeBranches=0;do{startingComponentTreeBranches=
reconciler.branchedComponentTrees.length;optimizeReactComponentTreeBranches(realm,reconciler,writeEffects,logger,alreadyEvaluated,preEvaluationComponentToWriteEffectFunction)}while(startingComponentTreeBranches!==reconciler.branchedComponentTrees.length)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.Reconciler=void 0;var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _types=__webpack_require__(408);var _utils=
__webpack_require__(291);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));var _singletons=__webpack_require__(236);var _errors=__webpack_require__(3);var _branching=__webpack_require__(416);var _completions=__webpack_require__(18);var _components=__webpack_require__(418);var _errors2=__webpack_require__(417);var _elements=__webpack_require__(420);var _logger=__webpack_require__(412);var _utils2=__webpack_require__(413);var _generator=__webpack_require__(237);
var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function setContextCurrentValue(contextObject,value){if(contextObject instanceof _index.AbstractObjectValue&&!contextObject.values.isTop()){let elements=contextObject.values.getElements();if(elements&&elements.size===1)for(let element of elements){(0,_invariant.default)(element instanceof _index.ObjectValue);contextObject=element}else(0,_invariant.default)(false,"TODO: deal with multiple possible context objects")}if(!(contextObject instanceof
_index.ObjectValue))throw new _errors2.ExpectedBailOut("cannot set currentValue on an abstract context consumer");let binding=contextObject.properties.get("currentValue");if(binding&&binding.descriptor){(0,_invariant.default)(binding.descriptor instanceof _descriptors.PropertyDescriptor);binding.descriptor.value=value}else(0,_invariant.default)(false,"setContextCurrentValue failed to set the currentValue")}function throwUnsupportedSideEffectError(msg){throw new _errors2.UnsupportedSideEffect(msg);
}class Reconciler{constructor(realm,componentTreeConfig,alreadyEvaluated,statistics,logger){this.realm=realm;this.statistics=statistics;this.logger=logger;this.componentTreeConfig=componentTreeConfig;this.componentTreeState=this._createComponentTreeState();this.alreadyEvaluated=alreadyEvaluated;this.branchedComponentTrees=[]}resolveReactComponentTree(componentType,props,context,evaluatedRootNode){const resolveComponentTree=()=>{try{let initialProps=props||(0,_components.getInitialProps)(this.realm,
componentType,this.componentTreeConfig);let initialContext=context||(0,_components.getInitialContext)(this.realm,componentType);let {result}=this._resolveComponent(componentType,initialProps,initialContext,"ROOT",evaluatedRootNode);this.statistics.optimizedTrees++;return result}catch(error){if(error instanceof _completions.AbruptCompletion)throw error;this._handleComponentTreeRootFailure(error,evaluatedRootNode);(0,_invariant.default)(false,"resolveReactComponentTree error not handled correctly")}};
try{this.realm.react.activeReconciler=this;return this.realm.wrapInGlobalEnv(()=>this.realm.evaluatePure(()=>this.realm.evaluateForEffects(resolveComponentTree,null,`react component: ${(0,_utils.getComponentName)(this.realm,componentType)}`),true,(sideEffectType,binding,expressionLocation)=>{if(this.realm.react.failOnUnsupportedSideEffects)(0,_utils2.handleReportedSideEffect)(throwUnsupportedSideEffectError,sideEffectType,binding,expressionLocation)}))}finally{this.realm.react.activeReconciler=undefined}}clearComponentTreeState(){this.componentTreeState=
this._createComponentTreeState()}_queueNewComponentTree(rootValue,evaluatedNode,props=null,context=null){if(rootValue instanceof _index.SymbolValue)return;(0,_invariant.default)(rootValue instanceof _index.ECMAScriptSourceFunctionValue||rootValue instanceof _index.AbstractValue);this.componentTreeState.deadEnds++;let componentType=(0,_utils.getComponentTypeFromRootValue)(this.realm,rootValue);if(componentType!==null&&!this.alreadyEvaluated.has(componentType))this.branchedComponentTrees.push({context,
evaluatedNode,props,rootValue})}_resolveComplexClassComponent(componentType,props,context,classMetadata,branchStatus,evaluatedNode){if(branchStatus!=="ROOT"){let evaluatedComplexNode=this.alreadyEvaluated.get(componentType);if(branchStatus==="NO_BRANCH"&&this.componentTreeState.status==="SIMPLE"&&evaluatedComplexNode&&evaluatedComplexNode.status!=="RENDER_PROPS")this.componentTreeState.componentType=componentType;else{this._queueNewComponentTree(componentType,evaluatedNode);evaluatedNode.status="NEW_TREE";
throw new _errors2.NewComponentTreeBranch(evaluatedNode);}}this.componentTreeState.status="COMPLEX";let instance=(0,_components.createClassInstance)(this.realm,componentType,props,context,classMetadata);let renderMethod=(0,_index2.Get)(this.realm,instance,"render");(0,_invariant.default)(renderMethod instanceof _index.ECMAScriptSourceFunctionValue);return(0,_utils.getValueFromFunctionCall)(this.realm,renderMethod,instance,[])}_resolveSimpleClassComponent(componentType,props,context,branchStatus,evaluatedNode){let instance=
(0,_components.createSimpleClassInstance)(this.realm,componentType,props,context);let renderMethod=(0,_index2.Get)(this.realm,instance,"render");(0,_invariant.default)(renderMethod instanceof _index.ECMAScriptSourceFunctionValue);return(0,_utils.getValueFromFunctionCall)(this.realm,renderMethod,instance,[])}_resolveFunctionalComponent(componentType,props,context,evaluatedNode){return(0,_utils.getValueFromFunctionCall)(this.realm,componentType,this.realm.intrinsics.undefined,[props,context])}_getClassComponentMetadata(componentType,
props,context){if(this.realm.react.classComponentMetadata.has(componentType)){let classMetadata=this.realm.react.classComponentMetadata.get(componentType);(0,_invariant.default)(classMetadata);return classMetadata}let classMetadata=(0,_components.evaluateClassConstructor)(this.realm,componentType,props,context);this.realm.react.classComponentMetadata.set(componentType,classMetadata);return classMetadata}_resolveContextProviderComponent(componentType,reactElement,context,branchStatus,evaluatedNode){let typeValue=
(0,_utils.getProperty)(this.realm,reactElement,"type");let propsValue=(0,_utils.getProperty)(this.realm,reactElement,"props");let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("NORMAL","Context.Provider");evaluatedNode.children.push(evaluatedChildNode);this.statistics.componentsEvaluated++;(0,_invariant.default)(typeValue instanceof _index.ObjectValue||typeValue instanceof _index.AbstractObjectValue);const contextConsumer=(0,_utils.getProperty)(this.realm,typeValue,"context");(0,_invariant.default)(contextConsumer instanceof
_index.ObjectValue||contextConsumer instanceof _index.AbstractObjectValue);let lastValueProp=(0,_utils.getProperty)(this.realm,contextConsumer,"currentValue");this._incremementReferenceForContextNode(contextConsumer);let valueProp;if(propsValue instanceof _index.ObjectValue||propsValue instanceof _index.AbstractObjectValue){valueProp=(0,_index2.Get)(this.realm,propsValue,"value");setContextCurrentValue(contextConsumer,valueProp)}if(propsValue instanceof _index.ObjectValue)if(!(valueProp instanceof
_index.AbstractValue)||this.componentTreeConfig.firstRenderOnly){let resolvedReactElement=this._resolveReactElementHostChildren(componentType,reactElement,context,branchStatus,evaluatedChildNode);let resolvedPropsValue=(0,_utils.getProperty)(this.realm,resolvedReactElement,"props");(0,_invariant.default)(resolvedPropsValue instanceof _index.ObjectValue||resolvedPropsValue instanceof _index.AbstractObjectValue);(0,_invariant.default)(lastValueProp instanceof _index.Value);setContextCurrentValue(contextConsumer,
lastValueProp);this._decremementReferenceForContextNode(contextConsumer);if(this.componentTreeState.deadEnds===0){let childrenValue=(0,_index2.Get)(this.realm,resolvedPropsValue,"children");evaluatedChildNode.status="INLINED";this.statistics.inlinedComponents++;return childrenValue}return resolvedReactElement}let children=this._resolveReactElementHostChildren(componentType,reactElement,context,branchStatus,evaluatedChildNode);setContextCurrentValue(contextConsumer,lastValueProp);this._decremementReferenceForContextNode(contextConsumer);
return children}_decremementReferenceForContextNode(contextNode){let references=this.componentTreeState.contextNodeReferences.get(contextNode);if(!references)references=0;else references--;this.componentTreeState.contextNodeReferences.set(contextNode,references)}_incremementReferenceForContextNode(contextNode){let references=this.componentTreeState.contextNodeReferences.get(contextNode);if(!references)references=1;else references++;this.componentTreeState.contextNodeReferences.set(contextNode,references)}_isContextValueKnown(contextNode){if(this.componentTreeConfig.isRoot)return true;
if(this.componentTreeState.contextNodeReferences.has(contextNode)){let references=this.componentTreeState.contextNodeReferences.get(contextNode);if(!references)return false;return references>0}return false}_resolveContextConsumerComponent(componentType,reactElement,context,branchStatus,evaluatedNode){let typeValue=(0,_utils.getProperty)(this.realm,reactElement,"type");let propsValue=(0,_utils.getProperty)(this.realm,reactElement,"props");let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("RENDER_PROPS",
"Context.Consumer");evaluatedNode.children.push(evaluatedChildNode);if(propsValue instanceof _index.ObjectValue||propsValue instanceof _index.AbstractObjectValue)if(propsValue instanceof _index.ObjectValue&&propsValue.properties.has("children")){let renderProp=(0,_utils.getProperty)(this.realm,propsValue,"children");this._findReactComponentTrees(propsValue,evaluatedChildNode,"NORMAL_FUNCTIONS",componentType,context,branchStatus);if(renderProp instanceof _index.ECMAScriptSourceFunctionValue){if(typeValue instanceof
_index.ObjectValue||typeValue instanceof _index.AbstractObjectValue)if(this._isContextValueKnown(typeValue)){let valueProp=(0,_index2.Get)(this.realm,typeValue,"currentValue");if(!(valueProp instanceof _index.AbstractValue)||this.componentTreeConfig.firstRenderOnly){let result=(0,_utils.getValueFromFunctionCall)(this.realm,renderProp,this.realm.intrinsics.undefined,[valueProp]);this.statistics.inlinedComponents++;this.statistics.componentsEvaluated++;evaluatedChildNode.status="INLINED";return this._resolveDeeply(componentType,
result,context,branchStatus,evaluatedNode)}}this._evaluateNestedOptimizedFunctionAndStoreEffects(componentType,context,branchStatus,evaluatedChildNode,renderProp);return}else this._findReactComponentTrees(renderProp,evaluatedChildNode,"NESTED_CLOSURES",componentType,context,branchStatus)}this.componentTreeState.deadEnds++;return}_resolveForwardRefComponent(componentType,reactElement,context,branchStatus,evaluatedNode){let typeValue=(0,_utils.getProperty)(this.realm,reactElement,"type");let propsValue=
(0,_utils.getProperty)(this.realm,reactElement,"props");let refValue=(0,_utils.getProperty)(this.realm,reactElement,"ref");(0,_invariant.default)(typeValue instanceof _index.AbstractObjectValue||typeValue instanceof _index.ObjectValue);let forwardedComponent=(0,_utils.getProperty)(this.realm,typeValue,"render");let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("FORWARD_REF",(0,_utils.getComponentName)(this.realm,forwardedComponent));evaluatedNode.children.push(evaluatedChildNode);(0,_invariant.default)(forwardedComponent instanceof
_index.ECMAScriptSourceFunctionValue||forwardedComponent instanceof _index.BoundFunctionValue,"expect React.forwardRef() to be passed function value");let value=(0,_utils.getValueFromFunctionCall)(this.realm,forwardedComponent,this.realm.intrinsics.undefined,[propsValue,refValue]);return this._resolveDeeply(componentType,value,context,branchStatus,evaluatedChildNode)}_resolveRelayQueryRendererComponent(componentType,reactElement,context,branchStatus,evaluatedNode){let typeValue=(0,_utils.getProperty)(this.realm,
reactElement,"type");let propsValue=(0,_utils.getProperty)(this.realm,reactElement,"props");let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("RENDER_PROPS",(0,_utils.getComponentName)(this.realm,typeValue));evaluatedNode.children.push(evaluatedChildNode);if(propsValue instanceof _index.ObjectValue||propsValue instanceof _index.AbstractObjectValue){if(propsValue instanceof _index.ObjectValue&&propsValue.properties.has("render")){let renderProp=(0,_utils.getProperty)(this.realm,propsValue,
"render");if(renderProp instanceof _index.ECMAScriptSourceFunctionValue)this._evaluateNestedOptimizedFunctionAndStoreEffects(componentType,context,branchStatus,evaluatedChildNode,renderProp);else if(renderProp instanceof _index.AbstractValue)this._findReactComponentTrees(renderProp,evaluatedChildNode,"NESTED_CLOSURES",componentType,context,branchStatus)}this._findReactComponentTrees(propsValue,evaluatedChildNode,"NORMAL_FUNCTIONS",componentType,context,branchStatus);return}this.componentTreeState.deadEnds++}_resolveClassComponent(componentType,
props,context,branchStatus,evaluatedNode){let value;let classMetadata=this._getClassComponentMetadata(componentType,props,context);let {instanceProperties,instanceSymbols}=classMetadata;if(instanceProperties.size===0&&instanceSymbols.size===0)try{value=this._resolveSimpleClassComponent(componentType,props,context,branchStatus,evaluatedNode)}catch(error){if(error instanceof _errors2.SimpleClassBailOut);else throw error;}if(value===undefined)value=this._resolveComplexClassComponent(componentType,props,
context,classMetadata,branchStatus,evaluatedNode);return value}_resolveClassComponentForFirstRenderOnly(componentType,props,context,branchStatus,evaluatedNode){let instance=(0,_components.createClassInstanceForFirstRenderOnly)(this.realm,componentType,props,context,evaluatedNode);let getDerivedStateFromProps=(0,_index2.Get)(this.realm,componentType,"getDerivedStateFromProps");let getSnapshotBeforeUpdate=(0,_index2.Get)(this.realm,instance,"getSnapshotBeforeUpdate");if(getDerivedStateFromProps!==this.realm.intrinsics.undefined||
getSnapshotBeforeUpdate!==this.realm.intrinsics.undefined){if(getDerivedStateFromProps instanceof _index.ECMAScriptSourceFunctionValue&&getDerivedStateFromProps.$Call)(0,_components.applyGetDerivedStateFromProps)(this.realm,getDerivedStateFromProps,instance,props)}else{let componentWillMount=(0,_index2.Get)(this.realm,instance,"componentWillMount");if(componentWillMount instanceof _index.ECMAScriptSourceFunctionValue&&componentWillMount.$Call)componentWillMount.$Call(instance,[]);let unsafeComponentWillMount=
(0,_index2.Get)(this.realm,instance,"UNSAFE_componentWillMount");if(unsafeComponentWillMount instanceof _index.ECMAScriptSourceFunctionValue&&unsafeComponentWillMount.$Call)unsafeComponentWillMount.$Call(instance,[])}let renderMethod=(0,_index2.Get)(this.realm,instance,"render");(0,_invariant.default)(renderMethod instanceof _index.ECMAScriptSourceFunctionValue);return(0,_utils.getValueFromFunctionCall)(this.realm,renderMethod,instance,[])}_resolveRelayContainer(reactHint,props,context,branchStatus,
evaluatedNode){evaluatedNode.status="INLINED";evaluatedNode.message="RelayContainer";(0,_invariant.default)(reactHint.firstRenderValue instanceof _index.Value);if((0,_utils.getProperty)(this.realm,context,"relay")===this.realm.intrinsics.undefined){let abstractRelayContext=_index.AbstractValue.createAbstractObject(this.realm,"context.relay");let abstractRelayEnvironment=_index.AbstractValue.createAbstractObject(this.realm,"context.relay.environment");let abstractRelayInternal=_index.AbstractValue.createAbstractObject(this.realm,
"context.relay.environment.unstable_internal");_singletons.Properties.Set(this.realm,context,"relay",abstractRelayContext,true);_singletons.Properties.Set(this.realm,abstractRelayContext,"environment",abstractRelayEnvironment,true);_singletons.Properties.Set(this.realm,abstractRelayEnvironment,"unstable_internal",abstractRelayInternal,true)}this.componentTreeState.contextTypes.add("relay");return this._resolveComponent(reactHint.firstRenderValue,props,context,branchStatus,evaluatedNode)}_resolveComponent(componentType,
props,context,branchStatus,evaluatedNode){if((0,_utils.doNotOptimizeComponent)(this.realm,componentType))throw new _errors2.DoNotOptimize("__reactCompilerDoNotOptimize flag detected");this.statistics.componentsEvaluated++;if((0,_utils.valueIsKnownReactAbstraction)(this.realm,componentType)){(0,_invariant.default)(componentType instanceof _index.AbstractValue);let reactHint=this.realm.react.abstractHints.get(componentType);(0,_invariant.default)(reactHint);if(typeof reactHint!=="string"&&reactHint.object===
this.realm.fbLibraries.reactRelay&&this.componentTreeConfig.firstRenderOnly)return this._resolveRelayContainer(reactHint,props,context,branchStatus,evaluatedNode);this._queueNewComponentTree(componentType,evaluatedNode);evaluatedNode.status="NEW_TREE";evaluatedNode.message="RelayContainer";throw new _errors2.NewComponentTreeBranch(evaluatedNode);}(0,_invariant.default)(componentType instanceof _index.ECMAScriptSourceFunctionValue||componentType instanceof _index.BoundFunctionValue);let value;let childContext=
context;if((0,_utils.valueIsLegacyCreateClassComponent)(this.realm,componentType))throw new _errors2.ExpectedBailOut("components created with create-react-class are not supported");else if((0,_utils.valueIsClassComponent)(this.realm,componentType))if(this.componentTreeConfig.firstRenderOnly)value=this._resolveClassComponentForFirstRenderOnly(componentType,props,context,branchStatus,evaluatedNode);else value=this._resolveClassComponent(componentType,props,context,branchStatus,evaluatedNode);else{value=
this._resolveFunctionalComponent(componentType,props,context,evaluatedNode);if((0,_utils.valueIsFactoryClassComponent)(this.realm,value)){(0,_invariant.default)(value instanceof _index.ObjectValue);if(branchStatus!=="ROOT")throw new _errors2.ExpectedBailOut("non-root factory class components are not suppoted");else return{result:value,childContext}}}(0,_invariant.default)(value!==undefined);return{result:this._resolveDeeply(componentType,value,context,branchStatus==="ROOT"?"NO_BRANCH":branchStatus,
evaluatedNode),childContext}}_createComponentTreeState(){return{componentType:undefined,contextTypes:new Set,deadEnds:0,status:"SIMPLE",contextNodeReferences:new Map}}_getComponentResolutionStrategy(value){if(this.realm.fbLibraries.reactRelay!==undefined){let QueryRenderer=(0,_utils.getProperty)(this.realm,this.realm.fbLibraries.reactRelay,"QueryRenderer");if(value===QueryRenderer)return"RELAY_QUERY_RENDERER"}if(value===(0,_utils.getReactSymbol)("react.fragment",this.realm))return"FRAGMENT";if((value instanceof
_index.ObjectValue||value instanceof _index.AbstractObjectValue)&&value.kind!=="conditional"){let $$typeof=(0,_utils.getProperty)(this.realm,value,"$$typeof");if($$typeof===(0,_utils.getReactSymbol)("react.context",this.realm))return"CONTEXT_CONSUMER";if($$typeof===(0,_utils.getReactSymbol)("react.provider",this.realm))return"CONTEXT_PROVIDER";if($$typeof===(0,_utils.getReactSymbol)("react.forward_ref",this.realm))return"FORWARD_REF"}return"NORMAL"}_resolveReactDomPortal(createPortalNode,args,componentType,
context,branchStatus,evaluatedNode){let [reactPortalValue,domNodeValue]=args;let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("INLINED","ReactDOM.createPortal");let resolvedReactPortalValue=this._resolveDeeply(componentType,reactPortalValue,context,branchStatus,evaluatedChildNode);evaluatedNode.children.push(evaluatedChildNode);if(resolvedReactPortalValue!==reactPortalValue){this.statistics.inlinedComponents++;let reactDomValue=this.realm.fbLibraries.reactDom;(0,_invariant.default)(reactDomValue instanceof
_index.ObjectValue);let reactDomPortalFunc=(0,_utils.getProperty)(this.realm,reactDomValue,"createPortal");return _index.AbstractValue.createTemporalFromBuildFunction(this.realm,_index.ObjectValue,[reactDomPortalFunc,resolvedReactPortalValue,domNodeValue],(0,_generator.createOperationDescriptor)("REACT_TEMPORAL_FUNC"),{skipInvariant:true,isPure:true})}return createPortalNode}_resolveAbstractConditionalValue(componentType,condValue,consequentVal,alternateVal,context,evaluatedNode){let value=this.realm.evaluateWithAbstractConditional(condValue,
()=>{return this.realm.evaluateForEffects(()=>(0,_branching.wrapReactElementInBranchOrReturnValue)(this.realm,this._resolveDeeply(componentType,consequentVal,context,"NEW_BRANCH",evaluatedNode)),null,"_resolveAbstractConditionalValue consequent")},()=>{return this.realm.evaluateForEffects(()=>(0,_branching.wrapReactElementInBranchOrReturnValue)(this.realm,this._resolveDeeply(componentType,alternateVal,context,"NEW_BRANCH",evaluatedNode)),null,"_resolveAbstractConditionalValue alternate")});if(value instanceof
_index.AbstractValue&&value.kind==="conditional")return(0,_branching.getValueWithBranchingLogicApplied)(this.realm,consequentVal,alternateVal,value);return value}_resolveAbstractLogicalValue(componentType,value,context,evaluatedNode){let [leftValue,rightValue]=value.args;let operator=value.kind;(0,_invariant.default)(leftValue instanceof _index.AbstractValue);if(operator==="||")return this._resolveAbstractConditionalValue(componentType,leftValue,leftValue,rightValue,context,evaluatedNode);else return this._resolveAbstractConditionalValue(componentType,
leftValue,rightValue,leftValue,context,evaluatedNode)}_resolveAbstractValue(componentType,value,context,branchStatus,evaluatedNode){(0,_invariant.default)(this.realm.generator);if(value.kind==="conditional"){let [condValue,consequentVal,alternateVal]=value.args;(0,_invariant.default)(condValue instanceof _index.AbstractValue);return this._resolveAbstractConditionalValue(componentType,condValue,consequentVal,alternateVal,context,evaluatedNode)}else if(value.kind==="||"||value.kind==="&&")return this._resolveAbstractLogicalValue(componentType,
value,context,evaluatedNode);else{if(value instanceof _index.AbstractValue&&this.realm.react.abstractHints.has(value)){let reactHint=this.realm.react.abstractHints.get(value);(0,_invariant.default)(reactHint!==undefined);if(reactHint.object===this.realm.fbLibraries.reactDom&&reactHint.propertyName==="createPortal")return this._resolveReactDomPortal(value,reactHint.args,componentType,context,branchStatus,evaluatedNode)}this.componentTreeState.deadEnds++}return value}_resolveUnknownComponentType(componentType,
reactElement,context,branchStatus,evaluatedNode){let typeValue=(0,_utils.getProperty)(this.realm,reactElement,"type");let propsValue=(0,_utils.getProperty)(this.realm,reactElement,"props");this._findReactComponentTrees(propsValue,evaluatedNode,"NORMAL_FUNCTIONS",componentType,context,branchStatus);if(typeValue instanceof _index.AbstractValue){this._findReactComponentTrees(typeValue,evaluatedNode,"FUNCTIONAL_COMPONENTS",componentType,context,branchStatus);return reactElement}else{let evaluatedChildNode=
(0,_utils.createReactEvaluatedNode)("BAIL-OUT",(0,_utils.getComponentName)(this.realm,typeValue));evaluatedNode.children.push(evaluatedChildNode);let bailOutMessage=`type on <Component /> was not a ECMAScriptSourceFunctionValue`;evaluatedChildNode.message=bailOutMessage;this._assignBailOutMessage(reactElement,bailOutMessage);this.componentTreeState.deadEnds++;return reactElement}}_resolveReactElementBadRef(componentType,reactElement,context,branchStatus,evaluatedNode){let typeValue=(0,_utils.getProperty)(this.realm,
reactElement,"type");let propsValue=(0,_utils.getProperty)(this.realm,reactElement,"props");let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("BAIL-OUT",(0,_utils.getComponentName)(this.realm,typeValue));evaluatedNode.children.push(evaluatedChildNode);let bailOutMessage=`refs are not supported on <Components />`;evaluatedChildNode.message=bailOutMessage;this._queueNewComponentTree(typeValue,evaluatedChildNode);this._findReactComponentTrees(propsValue,evaluatedNode,"NORMAL_FUNCTIONS",componentType,
context,branchStatus);this._assignBailOutMessage(reactElement,bailOutMessage);return reactElement}_resolveReactElementUndefinedRender(componentType,reactElement,context,branchStatus,evaluatedNode){let typeValue=(0,_utils.getProperty)(this.realm,reactElement,"type");let propsValue=(0,_utils.getProperty)(this.realm,reactElement,"props");let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("BAIL-OUT",(0,_utils.getComponentName)(this.realm,typeValue));evaluatedNode.children.push(evaluatedChildNode);
let bailOutMessage=`undefined was returned from render`;evaluatedChildNode.message=bailOutMessage;this._assignBailOutMessage(reactElement,bailOutMessage);this._findReactComponentTrees(propsValue,evaluatedNode,"NORMAL_FUNCTIONS",componentType,context,branchStatus);return reactElement}_resolveReactElementHostChildren(componentType,reactElement,context,branchStatus,evaluatedNode){let propsValue=(0,_utils.getProperty)(this.realm,reactElement,"props");if(propsValue instanceof _index.ObjectValue&&propsValue.properties.has("children")){let childrenValue=
(0,_index2.Get)(this.realm,propsValue,"children");if(childrenValue instanceof _index.Value){let resolvedChildren=this._resolveDeeply(componentType,childrenValue,context,branchStatus,evaluatedNode,false);if(resolvedChildren instanceof _index.ArrayValue&&!resolvedChildren.intrinsicName)resolvedChildren=(0,_utils.flattenChildren)(this.realm,resolvedChildren,true);if(resolvedChildren!==childrenValue){let newProps=(0,_utils.cloneProps)(this.realm,propsValue,resolvedChildren);(0,_utils.hardModifyReactObjectPropertyBinding)(this.realm,
reactElement,"props",newProps)}}}return reactElement}_resolveFragmentComponent(componentType,reactElement,context,branchStatus,evaluatedNode){this.statistics.componentsEvaluated++;if(this.componentTreeConfig.firstRenderOnly){let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("INLINED","React.Fragment");evaluatedNode.children.push(evaluatedChildNode);this.statistics.inlinedComponents++;let children=this._resolveReactElementHostChildren(componentType,reactElement,context,branchStatus,evaluatedChildNode);
return children}else{let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("NORMAL","React.Fragment");evaluatedNode.children.push(evaluatedChildNode);return this._resolveReactElementHostChildren(componentType,reactElement,context,branchStatus,evaluatedChildNode)}}_resolveReactElement(componentType,reactElement,context,branchStatus,evaluatedNode,needsKey){reactElement=(0,_utils.cloneReactElement)(this.realm,reactElement,false);let typeValue=(0,_utils.getProperty)(this.realm,reactElement,"type");
let propsValue=(0,_utils.getProperty)(this.realm,reactElement,"props");let refValue=(0,_utils.getProperty)(this.realm,reactElement,"ref");let keyValue=(0,_utils.getProperty)(this.realm,reactElement,"key");(0,_invariant.default)(!(typeValue instanceof _index.AbstractValue&&typeValue.kind==="conditional"),`the reconciler should never encounter a ReactElement "type" that is conditional abstract value`);(0,_invariant.default)(!(propsValue instanceof _index.AbstractValue&&propsValue.kind==="conditional"),
`the reconciler should never encounter a ReactElement "props" that is conditional abstract value`);if(typeValue instanceof _index.StringValue)return this._resolveReactElementHostChildren(componentType,reactElement,context,branchStatus,evaluatedNode);if(!(propsValue instanceof _index.ObjectValue||propsValue instanceof _index.AbstractObjectValue)){this._assignBailOutMessage(reactElement,`props on <Component /> was not not an ObjectValue or an AbstractObjectValue`);return reactElement}let componentResolutionStrategy=
this._getComponentResolutionStrategy(typeValue);if(!this.componentTreeConfig.firstRenderOnly&&!(refValue instanceof _index.NullValue)&&componentResolutionStrategy!=="FORWARD_REF"&&!(refValue instanceof _index.AbstractValue))this._resolveReactElementBadRef(componentType,reactElement,context,branchStatus,evaluatedNode);try{let result;switch(componentResolutionStrategy){case "NORMAL":{if(!(typeValue instanceof _index.ECMAScriptSourceFunctionValue||typeValue instanceof _index.BoundFunctionValue||(0,_utils.valueIsKnownReactAbstraction)(this.realm,
typeValue)))return this._resolveUnknownComponentType(componentType,reactElement,context,branchStatus,evaluatedNode);let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("INLINED",(0,_utils.getComponentName)(this.realm,typeValue));let render=this._resolveComponent(typeValue,propsValue,context,branchStatus==="NEW_BRANCH"?"BRANCH":branchStatus,evaluatedChildNode);if(this.logger!==undefined&&this.realm.react.verbose&&evaluatedChildNode.status==="INLINED")this.logger.logInformation(`    \u2714 ${evaluatedChildNode.name} (inlined)`);
evaluatedNode.children.push(evaluatedChildNode);result=render.result;this.statistics.inlinedComponents++;break}case "FRAGMENT":{result=this._resolveFragmentComponent(componentType,reactElement,context,branchStatus,evaluatedNode);break}case "RELAY_QUERY_RENDERER":{(0,_invariant.default)(typeValue instanceof _index.AbstractObjectValue);result=this._resolveRelayQueryRendererComponent(componentType,reactElement,context,branchStatus,evaluatedNode);break}case "CONTEXT_PROVIDER":{result=this._resolveContextProviderComponent(componentType,
reactElement,context,branchStatus,evaluatedNode);break}case "CONTEXT_CONSUMER":{result=this._resolveContextConsumerComponent(componentType,reactElement,context,branchStatus,evaluatedNode);break}case "FORWARD_REF":{result=this._resolveForwardRefComponent(componentType,reactElement,context,branchStatus,evaluatedNode);break}default:(0,_invariant.default)(false,"unsupported component resolution strategy")}if(result===undefined)result=reactElement;if(result instanceof _index.UndefinedValue)return this._resolveReactElementUndefinedRender(componentType,
reactElement,context,branchStatus,evaluatedNode);if(!this.componentTreeConfig.firstRenderOnly&&needsKey&&keyValue.mightNotBeNull())result=(0,_elements.wrapReactElementWithKeyedFragment)(this.realm,keyValue,result);return result}catch(error){if(error instanceof _completions.AbruptCompletion)throw error;return this._resolveComponentResolutionFailure(componentType,error,reactElement,context,evaluatedNode,branchStatus)}}_handleComponentTreeRootFailure(error,evaluatedRootNode){if(error.name==="Invariant Violation")throw error;
else if(error instanceof _errors2.ReconcilerFatalError)throw new _errors2.ReconcilerFatalError(error.message,evaluatedRootNode);else if(error instanceof _errors2.UnsupportedSideEffect||error instanceof _errors2.DoNotOptimize)throw new _errors2.ReconcilerFatalError(`Failed to render React component root "${evaluatedRootNode.name}" due to ${error.message}`,evaluatedRootNode);let message;if(error instanceof _errors2.ExpectedBailOut)message=`Failed to optimize React component tree for "${evaluatedRootNode.name}" due to an expected bail-out: ${error.message}`;
else if(error instanceof _errors.FatalError)message=`Failed to optimize React component tree for "${evaluatedRootNode.name}" due to a fatal error during evaluation: ${error.message}`;else throw error;throw new _errors2.ReconcilerFatalError(message,evaluatedRootNode);}_resolveComponentResolutionFailure(componentType,error,reactElement,context,evaluatedNode,branchStatus){if(error.name==="Invariant Violation")throw error;else if(error instanceof _errors2.ReconcilerFatalError)throw error;else if(error instanceof
_errors2.UnsupportedSideEffect)throw new _errors2.ReconcilerFatalError(`Failed to render React component "${evaluatedNode.name}" due to ${error.message}`,evaluatedNode);else if(error instanceof _errors2.DoNotOptimize)return reactElement;let typeValue=(0,_utils.getProperty)(this.realm,reactElement,"type");let propsValue=(0,_utils.getProperty)(this.realm,reactElement,"props");if(error instanceof _errors2.NewComponentTreeBranch){this._findReactComponentTrees(propsValue,evaluatedNode,"NORMAL_FUNCTIONS",
componentType,context,branchStatus);evaluatedNode.children.push(error.evaluatedNode)}else{let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("BAIL-OUT",(0,_utils.getComponentName)(this.realm,typeValue));if(this.logger!==undefined&&this.realm.react.verbose)this.logger.logInformation(`    \u2716 ${evaluatedChildNode.name} (bail-out)`);evaluatedNode.children.push(evaluatedChildNode);this._queueNewComponentTree(typeValue,evaluatedChildNode);this._findReactComponentTrees(propsValue,evaluatedNode,
"NORMAL_FUNCTIONS",componentType,context,branchStatus);if(error instanceof _errors2.ExpectedBailOut){evaluatedChildNode.message=error.message;this._assignBailOutMessage(reactElement,error.message)}else if(error instanceof _errors.FatalError){let message="evaluation failed";evaluatedChildNode.message=message;this._assignBailOutMessage(reactElement,message)}else{evaluatedChildNode.message=`unknown error`;throw error;}}return reactElement}_resolveDeeply(componentType,value,context,branchStatus,evaluatedNode,
needsKey){if(value instanceof _index.StringValue||value instanceof _index.NumberValue||value instanceof _index.BooleanValue||value instanceof _index.NullValue||value instanceof _index.UndefinedValue)return value;(0,_invariant.default)(!(value instanceof _index.ObjectValue)||value._isFinal!==undefined,`An object value was detected during React reconcilation without its bindings properly applied`);if(value instanceof _index.AbstractValue)return this._resolveAbstractValue(componentType,value,context,
branchStatus,evaluatedNode);else if(value instanceof _index.ArrayValue)return this._resolveArray(componentType,value,context,branchStatus,evaluatedNode,needsKey);else if(value instanceof _index.ObjectValue&&(0,_utils.isReactElement)(value))return this._resolveReactElement(componentType,value,context,branchStatus,evaluatedNode,needsKey);return value}_assignBailOutMessage(reactElement,message){message=`Bail-out: ${message}`;if(reactElement.$BailOutReason!==undefined)reactElement.$BailOutReason+=`, ${message}`;
else reactElement.$BailOutReason=message}_resolveArray(componentType,arrayValue,context,branchStatus,evaluatedNode,needsKey){if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(arrayValue)){let nestedOptimizedFunctionEffects=arrayValue.nestedOptimizedFunctionEffects;if(nestedOptimizedFunctionEffects!==undefined)for(let [func,effects]of nestedOptimizedFunctionEffects){let funcCall=()=>{let result=effects.result;this.realm.applyEffects(effects);if(result instanceof _completions.SimpleNormalCompletion)result=
result.value;else(0,_invariant.default)(false,"TODO support other types of completion");(0,_invariant.default)(result instanceof _index.Value);return this._resolveDeeply(componentType,result,context,branchStatus,evaluatedNode,needsKey)};let pureFuncCall=()=>this.realm.evaluatePure(funcCall,true,(sideEffectType,binding,expressionLocation)=>(0,_utils2.handleReportedSideEffect)(throwUnsupportedSideEffectError,sideEffectType,binding,expressionLocation));let resolvedEffects;resolvedEffects=this.realm.evaluateForEffects(pureFuncCall,
null,`react resolve nested optimized closure`);this.statistics.optimizedNestedClosures++;nestedOptimizedFunctionEffects.set(func,resolvedEffects);this.realm.collectedNestedOptimizedFunctionEffects.set(func,resolvedEffects)}return arrayValue}if(needsKey!==false)needsKey=true;let children=(0,_utils.mapArrayValue)(this.realm,arrayValue,(elementValue)=>this._resolveDeeply(componentType,elementValue,context,"NEW_BRANCH",evaluatedNode,needsKey));children.makeFinal();return children}_findReactComponentTrees(value,
evaluatedNode,treatFunctionsAs,componentType,context,branchStatus){if(value instanceof _index.AbstractValue)if(value.args.length>0)for(let arg of value.args)this._findReactComponentTrees(arg,evaluatedNode,treatFunctionsAs,componentType,context,branchStatus);else this.componentTreeState.deadEnds++;else if((0,_utils.valueIsKnownReactAbstraction)(this.realm,value)){let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("NEW_TREE",(0,_utils.getComponentName)(this.realm,value));evaluatedNode.children.push(evaluatedChildNode);
this._queueNewComponentTree(value,evaluatedChildNode)}else if(value instanceof _index.ECMAScriptSourceFunctionValue||value instanceof _index.BoundFunctionValue)if((0,_utils.valueIsClassComponent)(this.realm,value)||treatFunctionsAs==="FUNCTIONAL_COMPONENTS"){let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("NEW_TREE",(0,_utils.getComponentName)(this.realm,value));evaluatedNode.children.push(evaluatedChildNode);this._queueNewComponentTree(value,evaluatedChildNode)}else{if(treatFunctionsAs===
"NESTED_CLOSURES"){(0,_invariant.default)(componentType&&context);let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("RENDER_PROPS",(0,_utils.getComponentName)(this.realm,value));this._evaluateNestedOptimizedFunctionAndStoreEffects(componentType,context,branchStatus,evaluatedChildNode,value)}}else if(value instanceof _index.ObjectValue)if((0,_utils.isReactElement)(value)){let typeValue=(0,_utils.getProperty)(this.realm,value,"type");let ref=(0,_utils.getProperty)(this.realm,value,"ref");let props=
(0,_utils.getProperty)(this.realm,value,"props");if((0,_utils.valueIsKnownReactAbstraction)(this.realm,typeValue)||typeValue instanceof _index.ECMAScriptSourceFunctionValue){let evaluatedChildNode=(0,_utils.createReactEvaluatedNode)("NEW_TREE",(0,_utils.getComponentName)(this.realm,typeValue));evaluatedNode.children.push(evaluatedChildNode);this._queueNewComponentTree(typeValue,evaluatedChildNode)}this._findReactComponentTrees(ref,evaluatedNode,treatFunctionsAs,componentType,context,branchStatus);
this._findReactComponentTrees(props,evaluatedNode,treatFunctionsAs,componentType,context,branchStatus)}else for(let [propName,binding]of value.properties)if(binding&&binding.descriptor){(0,_invariant.default)(binding.descriptor instanceof _descriptors.PropertyDescriptor);if(binding.descriptor.enumerable)this._findReactComponentTrees((0,_utils.getProperty)(this.realm,value,propName),evaluatedNode,treatFunctionsAs,componentType,context,branchStatus)}}_evaluateNestedOptimizedFunctionAndStoreEffects(componentType,
context,branchStatus,evaluatedNode,func,thisValue=this.realm.intrinsics.undefined){if(!this.realm.react.optimizeNestedFunctions)return;let funcToModel=func;if(func instanceof _index.BoundFunctionValue){funcToModel=func.$BoundTargetFunction;thisValue=func.$BoundThis}(0,_invariant.default)(funcToModel instanceof _index.ECMAScriptSourceFunctionValue);let funcCall=_singletons.Utils.createModelledFunctionCall(this.realm,funcToModel,undefined,thisValue);let pureFuncCall=()=>this.realm.evaluatePure(funcCall,
false,()=>{throw new _errors.NestedOptimizedFunctionSideEffect;});let effects;try{effects=this.realm.evaluateForEffects(()=>{let result=pureFuncCall();return this._resolveDeeply(componentType,result,context,branchStatus,evaluatedNode,false)},null,"React nestedOptimizedFunction")}catch(e){if(e instanceof _errors.NestedOptimizedFunctionSideEffect){_singletons.Leak.value(this.realm,func);return}throw e;}this.statistics.optimizedNestedClosures++;this.realm.collectedNestedOptimizedFunctionEffects.set(funcToModel,
effects)}}exports.Reconciler=Reconciler},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.getValueWithBranchingLogicApplied=getValueWithBranchingLogicApplied;exports.wrapReactElementInBranchOrReturnValue=wrapReactElementInBranchOrReturnValue;var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var _index2=__webpack_require__(15);var _utils=__webpack_require__(291);
var _errors=__webpack_require__(417);var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function getValueWithBranchingLogicApplied(realm,parentX,parentY,value){let needsKeys=false;const searchAndFlagMatchingComponentTypes=(x,y,xTypeParent,yTypeParent)=>{if(x instanceof _index.ObjectValue&&(0,_utils.isReactElement)(x)&&y instanceof _index.ObjectValue&&(0,_utils.isReactElement)(y)){let xType=(0,_utils.getProperty)(realm,x,"type");
let yType=(0,_utils.getProperty)(realm,y,"type");if(xType.equals(yType)&&!xTypeParent.equals(xType)&&!yTypeParent.equals(yType))needsKeys=true}else if(x instanceof _index.ArrayValue)(0,_utils.forEachArrayValue)(realm,x,(xElem,index)=>{let yElem=y;if(y instanceof _index.ArrayValue)yElem=(0,_utils.getProperty)(realm,y,index+"");searchAndFlagMatchingComponentTypes(xElem,yElem,xTypeParent,yTypeParent)});else if(y instanceof _index.ArrayValue)(0,_utils.forEachArrayValue)(realm,y,(yElem,index)=>{let xElem=
x;if(x instanceof _index.ArrayValue)xElem=(0,_utils.getProperty)(realm,x,index+"");searchAndFlagMatchingComponentTypes(xElem,yElem,xTypeParent,yTypeParent)});else if(x instanceof _index.AbstractValue&&x.kind==="conditional"){let [,consequentVal,alternateVal]=x.args;searchAndFlagMatchingComponentTypes(consequentVal,y,xTypeParent,yTypeParent);searchAndFlagMatchingComponentTypes(alternateVal,y,xTypeParent,yTypeParent)}else if(y instanceof _index.AbstractValue&&y.kind==="conditional"){let [,consequentVal,
alternateVal]=y.args;searchAndFlagMatchingComponentTypes(x,consequentVal,xTypeParent,yTypeParent);searchAndFlagMatchingComponentTypes(x,alternateVal,xTypeParent,yTypeParent)}};const searchAndFlagMismatchingNonHostTypes=(x,y,arrayDepth)=>{if(x instanceof _index.ObjectValue&&(0,_utils.isReactElement)(x)&&y instanceof _index.ObjectValue&&(0,_utils.isReactElement)(y)){let xType=(0,_utils.getProperty)(realm,x,"type");let yType=(0,_utils.getProperty)(realm,y,"type");if(xType instanceof _index.StringValue&&
yType instanceof _index.StringValue){let xProps=(0,_utils.getProperty)(realm,x,"props");let yProps=(0,_utils.getProperty)(realm,y,"props");if(xProps instanceof _index.ObjectValue&&yProps instanceof _index.ObjectValue){let xChildren=(0,_utils.getProperty)(realm,xProps,"children");let yChildren=(0,_utils.getProperty)(realm,yProps,"children");if(xChildren instanceof _index.Value&&yChildren instanceof _index.Value)searchAndFlagMismatchingNonHostTypes(xChildren,yChildren,arrayDepth)}}else if(!xType.equals(yType)){let [,
xVal,yVal]=value.args;searchAndFlagMatchingComponentTypes(xVal,yVal,xType,yType)}}else if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(x)||_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(y));else if(x instanceof _index.ArrayValue&&arrayDepth===0)(0,_utils.forEachArrayValue)(realm,x,(xElem,index)=>{let yElem;if(y instanceof _index.ArrayValue)yElem=(0,_utils.getProperty)(realm,y,index+"");else if(index===0)yElem=y;if(xElem instanceof _index.Value&&yElem instanceof _index.Value)searchAndFlagMismatchingNonHostTypes(xElem,
yElem,arrayDepth+1)});else if(y instanceof _index.ArrayValue&&arrayDepth===0)(0,_utils.forEachArrayValue)(realm,y,(yElem,index)=>{let xElem;if(x instanceof _index.ArrayValue)xElem=(0,_utils.getProperty)(realm,x,index+"");else if(index===0)xElem=x;if(xElem instanceof _index.Value&&yElem instanceof _index.Value)searchAndFlagMismatchingNonHostTypes(xElem,yElem,arrayDepth+1)})};searchAndFlagMismatchingNonHostTypes(parentX,parentY,0);if(needsKeys)return applyBranchedLogicValue(realm,value);return value}
function applyBranchedLogicValue(realm,value){if(value instanceof _index.StringValue||value instanceof _index.NumberValue||value instanceof _index.BooleanValue||value instanceof _index.NullValue||value instanceof _index.UndefinedValue);else if(value instanceof _index.ObjectValue&&(0,_utils.isReactElement)(value))return(0,_utils.addKeyToReactElement)(realm,value);else if(value instanceof _index.ArrayValue){let newArray=(0,_utils.mapArrayValue)(realm,value,(elementValue)=>applyBranchedLogicValue(realm,
elementValue));newArray.makeFinal();return newArray}else if(value instanceof _index.AbstractValue&&value.kind==="conditional"){let [condValue,consequentVal,alternateVal]=value.args;(0,_invariant.default)(condValue instanceof _index.AbstractValue);return realm.evaluateWithAbstractConditional(condValue,()=>{return realm.evaluateForEffects(()=>wrapReactElementInBranchOrReturnValue(realm,applyBranchedLogicValue(realm,consequentVal)),null,"applyBranchedLogicValue consequent")},()=>{return realm.evaluateForEffects(()=>
wrapReactElementInBranchOrReturnValue(realm,applyBranchedLogicValue(realm,alternateVal)),null,"applyBranchedLogicValue alternate")})}else if(value instanceof _index.AbstractValue&&(value.kind==="||"||value.kind==="&&"))(0,_invariant.default)(false,"applyBranchedLogicValue encounterted a logical expression (|| or &&), this should never occur");else throw new _errors.ExpectedBailOut("Unsupported value encountered when applying branched logic to values");return value}function wrapReactElementInBranchOrReturnValue(realm,
value){if(value instanceof _index.ObjectValue&&(0,_utils.isReactElement)(value)){let temporal=_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.ObjectValue,[(0,_utils.cloneReactElement)(realm,value,false)],(0,_generator.createOperationDescriptor)("SINGLE_ARG"),{isPure:true,skipInvariant:true});(0,_invariant.default)(temporal instanceof _index.AbstractObjectValue);temporal.values=new _index2.ValuesDomain(value);value.temporalAlias=temporal}return value}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.ReconcilerFatalError=exports.DoNotOptimize=exports.NewComponentTreeBranch=exports.UnsupportedSideEffect=exports.SimpleClassBailOut=exports.ExpectedBailOut=void 0;var _errors=__webpack_require__(3);class ExpectedBailOut extends Error{}exports.ExpectedBailOut=ExpectedBailOut;class SimpleClassBailOut extends Error{}exports.SimpleClassBailOut=SimpleClassBailOut;class UnsupportedSideEffect extends Error{}exports.UnsupportedSideEffect=UnsupportedSideEffect;class NewComponentTreeBranch extends Error{constructor(evaluatedNode){super();
this.evaluatedNode=evaluatedNode}}exports.NewComponentTreeBranch=NewComponentTreeBranch;class DoNotOptimize extends Error{}exports.DoNotOptimize=DoNotOptimize;class ReconcilerFatalError extends _errors.FatalError{constructor(message,evaluatedNode){super(message);evaluatedNode.status="FATAL";evaluatedNode.message=message;this.evaluatedNode=evaluatedNode;this.__isReconcilerFatalError=true}}exports.ReconcilerFatalError=ReconcilerFatalError},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.getInitialProps=getInitialProps;exports.getInitialContext=getInitialContext;exports.createSimpleClassInstance=createSimpleClassInstance;exports.createClassInstanceForFirstRenderOnly=createClassInstanceForFirstRenderOnly;exports.createClassInstance=createClassInstance;exports.evaluateClassConstructor=evaluateClassConstructor;exports.applyGetDerivedStateFromProps=applyGetDerivedStateFromProps;var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var t=
_interopRequireWildcard(__webpack_require__(21));var _utils=__webpack_require__(291);var _errors=__webpack_require__(417);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _traverse=_interopRequireDefault(__webpack_require__(293));var _errors2=__webpack_require__(3);var _ShapeInformation=__webpack_require__(419);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?
obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const lifecycleMethods=new Set(["componentWillUnmount","componentDidMount","componentWillMount",
"componentDidUpdate","componentWillUpdate","componentDidCatch","componentWillReceiveProps"]);const whitelistedProperties=new Set(["props","context","refs","setState"]);function getInitialProps(realm,componentType,{modelString}){let componentModel=modelString!==undefined?JSON.parse(modelString):undefined;let shape=_ShapeInformation.ShapeInformation.createForReactComponentProps(componentModel);let propsName=null;if(componentType!==null)if((0,_utils.valueIsClassComponent)(realm,componentType))propsName=
"this.props";else{let formalParameters;if(componentType instanceof _index.BoundFunctionValue){(0,_invariant.default)(componentType.$BoundTargetFunction instanceof _index.ECMAScriptSourceFunctionValue);formalParameters=componentType.$BoundTargetFunction.$FormalParameters}else formalParameters=componentType.$FormalParameters;if(formalParameters.length>0){let firstParam=formalParameters[0];if(t.isIdentifier(firstParam))propsName=firstParam.name}}let abstractPropsObject=_index.AbstractValue.createAbstractObject(realm,
propsName||"props",shape);(0,_invariant.default)(abstractPropsObject instanceof _index.AbstractObjectValue);(0,_utils.flagPropsWithNoPartialKeyOrRef)(realm,abstractPropsObject);abstractPropsObject.makeFinal();return abstractPropsObject}function getInitialContext(realm,componentType){let contextName=null;if((0,_utils.valueIsClassComponent)(realm,componentType)){let superTypeParameters=componentType.$SuperTypeParameters;contextName="this.context";if(superTypeParameters!==undefined)throw new _errors.ExpectedBailOut("context on class components not yet supported");
}else{let formalParameters;if(componentType instanceof _index.BoundFunctionValue){(0,_invariant.default)(componentType.$BoundTargetFunction instanceof _index.ECMAScriptSourceFunctionValue);formalParameters=componentType.$BoundTargetFunction.$FormalParameters}else formalParameters=componentType.$FormalParameters;if(formalParameters.length>1){let secondParam=formalParameters[1];if(t.isIdentifier(secondParam))contextName=secondParam.name}}let value=_index.AbstractValue.createAbstractObject(realm,contextName||
"context");return value}function visitClassMethodAstForThisUsage(realm,method){let formalParameters=method.$FormalParameters;let code=method.$ECMAScriptCode;(0,_traverse.default)(t.file(t.program([t.expressionStatement(t.functionExpression(null,formalParameters,code))])),{ThisExpression(path){let parentNode=path.parentPath.node;if(!t.isMemberExpression(parentNode))throw new _errors.SimpleClassBailOut(`possible leakage of independent "this" reference found`);}},null,{})}function createSimpleClassInstance(realm,
componentType,props,context){let componentPrototype=(0,_index2.Get)(realm,componentType,"prototype");(0,_invariant.default)(componentPrototype instanceof _index.ObjectValue);let instance=new _index.ObjectValue(realm,componentPrototype,"this",true);let allowedPropertyAccess=new Set(["props","context"]);for(let [name]of componentPrototype.properties)if(lifecycleMethods.has(name))throw new _errors.SimpleClassBailOut("lifecycle methods are not supported on simple classes");else if(name!=="constructor"){allowedPropertyAccess.add(name);
let method=(0,_index2.Get)(realm,componentPrototype,name);if(method instanceof _index.ECMAScriptSourceFunctionValue)visitClassMethodAstForThisUsage(realm,method);_singletons.Properties.Set(realm,instance,name,method,true)}_singletons.Properties.Set(realm,instance,"props",props,true);_singletons.Properties.Set(realm,instance,"context",context,true);let $GetOwnProperty=instance.$GetOwnProperty;instance.$GetOwnProperty=(P)=>{if(!allowedPropertyAccess.has(P))throw new _errors.SimpleClassBailOut("access to basic class instance properties is not supported on simple classes");
return $GetOwnProperty.call(instance,P)};instance.refuseSerialization=false;return instance}function deeplyApplyInstancePrototypeProperties(realm,instance,componentPrototype,classMetadata){let {instanceProperties,instanceSymbols}=classMetadata;let proto=componentPrototype.$Prototype;if(proto instanceof _index.ObjectValue&&proto!==realm.intrinsics.ObjectPrototype)deeplyApplyInstancePrototypeProperties(realm,instance,proto,classMetadata);for(let [name]of componentPrototype.properties)if(name!=="constructor"&&
!instanceProperties.has(name))_singletons.Properties.Set(realm,instance,name,(0,_index2.Get)(realm,componentPrototype,name),true);for(let [symbol]of componentPrototype.symbols)if(!instanceSymbols.has(symbol))_singletons.Properties.Set(realm,instance,symbol,(0,_index2.Get)(realm,componentPrototype,symbol),true)}function createClassInstanceForFirstRenderOnly(realm,componentType,props,context,evaluatedNode){let instance=(0,_utils.getValueFromFunctionCall)(realm,componentType,realm.intrinsics.undefined,
[props,context],true);let objectAssign=(0,_index2.Get)(realm,realm.intrinsics.Object,"assign");(0,_invariant.default)(objectAssign instanceof _index.ECMAScriptFunctionValue);let objectAssignCall=objectAssign.$Call;(0,_invariant.default)(objectAssignCall!==undefined);(0,_invariant.default)(instance instanceof _index.ObjectValue);instance.refuseSerialization=true;_singletons.Properties.Set(realm,instance,"props",props,true);_singletons.Properties.Set(realm,instance,"context",context,true);let state=
(0,_index2.Get)(realm,instance,"state");if(state instanceof _index.AbstractObjectValue||state instanceof _index.ObjectValue)state.makeFinal();let setState=new _index.NativeFunctionValue(realm,undefined,`setState`,1,(_context,[stateToUpdate,callback])=>{(0,_invariant.default)(instance instanceof _index.ObjectValue);let prevState=(0,_index2.Get)(realm,instance,"state");(0,_invariant.default)(prevState instanceof _index.ObjectValue);if(stateToUpdate instanceof _index.ECMAScriptSourceFunctionValue&&stateToUpdate.$Call)stateToUpdate=
stateToUpdate.$Call(instance,[prevState]);if(stateToUpdate instanceof _index.ObjectValue){let newState=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype);objectAssignCall(realm.intrinsics.undefined,[newState,prevState]);newState.makeFinal();for(let [key,binding]of stateToUpdate.properties)if(binding&&binding.descriptor){(0,_invariant.default)(binding.descriptor instanceof _descriptors.PropertyDescriptor);if(binding.descriptor.enumerable){let value=(0,_utils.getProperty)(realm,stateToUpdate,
key);(0,_utils.hardModifyReactObjectPropertyBinding)(realm,newState,key,value)}}_singletons.Properties.Set(realm,instance,"state",newState,true)}if(callback instanceof _index.ECMAScriptSourceFunctionValue&&callback.$Call)callback.$Call(instance,[]);return realm.intrinsics.undefined});setState.intrinsicName="(function() {})";_singletons.Properties.Set(realm,instance,"setState",setState,true);instance.refuseSerialization=false;return instance}function createClassInstance(realm,componentType,props,context,
classMetadata){let componentPrototype=(0,_index2.Get)(realm,componentType,"prototype");(0,_invariant.default)(componentPrototype instanceof _index.ObjectValue);let instance=new _index.ObjectValue(realm,componentPrototype,"this",true);deeplyApplyInstancePrototypeProperties(realm,instance,componentPrototype,classMetadata);_singletons.Properties.Set(realm,instance,"refs",_index.AbstractValue.createAbstractObject(realm,"this.refs"),true);_singletons.Properties.Set(realm,instance,"props",props,true);_singletons.Properties.Set(realm,
instance,"context",context,true);instance.refuseSerialization=false;let value=_index.AbstractValue.createAbstractObject(realm,"this",instance);(0,_invariant.default)(value instanceof _index.AbstractObjectValue);return value}function evaluateClassConstructor(realm,constructorFunc,props,context){let instanceProperties=new Set;let instanceSymbols=new Set;realm.evaluatePure(()=>realm.evaluateForEffects(()=>{let instance=(0,_index2.Construct)(realm,constructorFunc,[props,context]);(0,_invariant.default)(instance instanceof
_index.ObjectValue);for(let [propertyName]of instance.properties)if(!whitelistedProperties.has(propertyName))instanceProperties.add(propertyName);for(let [symbol]of instance.symbols)instanceSymbols.add(symbol);return instance},null,`react component constructor: ${constructorFunc.getName()}`),true,null);return{instanceProperties,instanceSymbols}}function applyGetDerivedStateFromProps(realm,getDerivedStateFromProps,instance,props){let prevState=(0,_index2.Get)(realm,instance,"state");let getDerivedStateFromPropsCall=
getDerivedStateFromProps.$Call;(0,_invariant.default)(getDerivedStateFromPropsCall!==undefined);let partialState=getDerivedStateFromPropsCall(realm.intrinsics.null,[props,prevState]);const deriveState=(state)=>{let objectAssign=(0,_index2.Get)(realm,realm.intrinsics.Object,"assign");(0,_invariant.default)(objectAssign instanceof _index.ECMAScriptFunctionValue);let objectAssignCall=objectAssign.$Call;(0,_invariant.default)(objectAssignCall!==undefined);if(state instanceof _index.AbstractValue&&!(state instanceof
_index.AbstractObjectValue)){const kind=state.kind;if(kind==="conditional"){let condition=state.args[0];let a=deriveState(state.args[1]);let b=deriveState(state.args[2]);(0,_invariant.default)(condition instanceof _index.AbstractValue);if(a===null&&b===null)return null;else if(a===null){(0,_invariant.default)(b instanceof _index.Value);return _index.AbstractValue.createFromConditionalOp(realm,condition,realm.intrinsics.false,b)}else if(b===null){(0,_invariant.default)(a instanceof _index.Value);return _index.AbstractValue.createFromConditionalOp(realm,
condition,a,realm.intrinsics.false)}else{(0,_invariant.default)(a instanceof _index.Value);(0,_invariant.default)(b instanceof _index.Value);return _index.AbstractValue.createFromConditionalOp(realm,condition,a,b)}}else if(kind==="||"||kind==="&&"){let a=deriveState(state.args[0]);let b=deriveState(state.args[1]);if(b===null){(0,_invariant.default)(a instanceof _index.Value);return _index.AbstractValue.createFromLogicalOp(realm,kind,a,realm.intrinsics.false)}else{(0,_invariant.default)(a instanceof
_index.Value);(0,_invariant.default)(b instanceof _index.Value);return _index.AbstractValue.createFromLogicalOp(realm,kind,a,b)}}else{(0,_invariant.default)(state.args!==undefined,"TODO: unknown abstract value passed to deriveState");let a=_index.AbstractValue.createFromBinaryOp(realm,"!==",state,realm.intrinsics.null);let b=_index.AbstractValue.createFromBinaryOp(realm,"!==",state,realm.intrinsics.undefined);let c=_index.AbstractValue.createFromLogicalOp(realm,"&&",a,b);(0,_invariant.default)(c instanceof
_index.AbstractValue);let newState=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype);let preludeGenerator=realm.preludeGenerator;(0,_invariant.default)(preludeGenerator!==undefined);_index.AbstractValue.createTemporalObjectAssign(realm,newState,[prevState,state]);newState.makeSimple();newState.makePartial();newState.makeFinal();let conditional=_index.AbstractValue.createFromLogicalOp(realm,"&&",c,newState);return conditional}}else if(state!==realm.intrinsics.null&&state!==realm.intrinsics.undefined){let newState=
new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype);try{objectAssignCall(realm.intrinsics.undefined,[newState,prevState,state])}catch(e){if(realm.isInPureScope()&&e instanceof _errors2.FatalError){let preludeGenerator=realm.preludeGenerator;(0,_invariant.default)(preludeGenerator!==undefined);_index.AbstractValue.createTemporalObjectAssign(realm,newState,[prevState,state]);newState.makeSimple();newState.makePartial();return newState}throw e;}newState.makeFinal();return newState}else return null};
let newState=deriveState(partialState);if(newState!==null){if(newState instanceof _index.AbstractValue)newState=_index.AbstractValue.createFromLogicalOp(realm,"||",newState,prevState);(0,_invariant.default)(newState instanceof _index.Value);_singletons.Properties.Set(realm,instance,"state",newState,true)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.createAndValidateArgModel=createAndValidateArgModel;exports.ShapeInformation=void 0;
var _singletons=__webpack_require__(236);var _index=__webpack_require__(10);var _errors=__webpack_require__(3);var _realm=__webpack_require__(7);function _defineProperty(obj,key,value){if(key in obj)Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});else obj[key]=value;return obj}class ShapeInformation{constructor(descriptor,parentDescriptor,parentKey,universe){this._descriptor=descriptor;this._parentDescriptor=parentDescriptor;this._parentKey=parentKey;this._universe=
universe}getGetter(){return this._parentDescriptor!==undefined&&this._parentDescriptor.graphQLType!==undefined&&this._parentDescriptor.kind==="object"?this._getAssociatedGetter():undefined}getAbstractType(){if(this._isOptional()||this._descriptor.jsType==="void"||this._descriptor.jsType==="null")return _index.Value;return _singletons.Utils.getTypeFromName(this._descriptor.jsType)||_index.Value}getPropertyShape(key){let property=this._getInformationForProperty(key);return property!==undefined?ShapeInformation._resolveLinksAndWrap(property.shape,
this._descriptor,key,this._universe):undefined}static createForArgument(model,argname){return model!==undefined?ShapeInformation._resolveLinksAndWrap(model.universe[model.arguments[argname]],undefined,undefined,model.universe):undefined}static createForReactComponentProps(model){return model!==undefined?ShapeInformation._resolveLinksAndWrap(model.universe[model.component.props],undefined,undefined,model.universe):undefined}_isOptional(){if(this._parentDescriptor===undefined)return undefined;switch(this._parentDescriptor.kind){case "object":return this._parentKey!==
undefined&&this._parentDescriptor.properties[this._parentKey]!==undefined?this._parentDescriptor.properties[this._parentKey].optional:undefined;case "array":return this._parentDescriptor.elementShape!==undefined?this._parentDescriptor.elementShape.optional:undefined;default:return undefined}}_getInformationForProperty(key){switch(this._descriptor.kind){case "object":return this._descriptor.properties[key];case "array":switch(key){case "length":return ShapeInformation._arrayLengthProperty;case "prototype":return undefined;
default:return this._descriptor.elementShape}default:return undefined}}_getAssociatedGetter(){switch(this._descriptor.kind){case "object":return"tree";case "array":let elementShape=this._descriptor.elementShape!==undefined?this._descriptor.elementShape.shape:undefined;let innerShape=ShapeInformation._resolveLinksAndWrap(elementShape,this._descriptor,undefined,this._universe);if(innerShape===undefined)return undefined;switch(innerShape._getAssociatedGetter()){case "bool":return"bool_list";case "double":return"double_list";
case "int":return"int_list";case "time":return"time_list";case "string":return"string_list";case "tree":return"tree_list";default:return undefined}case "scalar":switch(this._descriptor.graphQLType){case "Color":case "File":case "ID":case "String":case "Url":return"string";case "Int":case "Time":return"int";case "Float":return"double";case "Boolean":return"bool";default:return undefined}case "enum":return"string";default:return undefined}}static _resolveLinksAndWrap(descriptor,parentDescription,parentKey,
universe){while(descriptor&&descriptor.kind==="link")descriptor=universe[descriptor.shapeName];return descriptor!==undefined?new ShapeInformation(descriptor,parentDescription,parentKey,universe):undefined}}exports.ShapeInformation=ShapeInformation;_defineProperty(ShapeInformation,"_arrayLengthProperty",{shape:{kind:"scalar",jsType:"integral"},optional:false});function createAndValidateArgModel(realm,argModelString){let argModelError;if(argModelString instanceof _index.StringValue)try{let argModel=
JSON.parse(argModelString.value);if(!argModel.universe)argModelError=new _errors.CompilerDiagnostic("ArgModel must contain a universe property containing a ShapeUniverse",realm.currentLocation,"PP1008","FatalError");if(!argModel.arguments)argModelError=new _errors.CompilerDiagnostic("ArgModel must contain an arguments property.",realm.currentLocation,"PP1008","FatalError");return argModel}catch(e){argModelError=new _errors.CompilerDiagnostic("Failed to parse model for arguments",realm.currentLocation,
"PP1008","FatalError")}else argModelError=new _errors.CompilerDiagnostic("String expected as a model",realm.currentLocation,"PP1008","FatalError");if(argModelError!==undefined&&realm.handleError(argModelError)!=="Recover")throw new _errors.FatalError;return undefined}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.cloneReactElement=cloneReactElement;exports.createReactElement=createReactElement;exports.wrapReactElementWithKeyedFragment=
wrapReactElementWithKeyedFragment;exports.traverseReactElement=traverseReactElement;var _index=__webpack_require__(15);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _index3=__webpack_require__(232);var _utils=__webpack_require__(291);var _BinaryExpression=__webpack_require__(292);var _errors=__webpack_require__(3);var _generator=__webpack_require__(237);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function createPropsObject(realm,type,config,children){let activeReconciler=realm.react.activeReconciler;let firstRenderOnly=activeReconciler!==undefined?activeReconciler.componentTreeConfig.firstRenderOnly:false;let defaultProps=type instanceof _index2.ObjectValue||type instanceof _index2.AbstractObjectValue?(0,_index3.Get)(realm,type,"defaultProps"):realm.intrinsics.undefined;let props=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);props.makeFinal();
realm.react.reactProps.add(props);let key=realm.intrinsics.null;let ref=realm.intrinsics.null;if(!(0,_utils.hasNoPartialKeyOrRef)(realm,config)){let diagnostic=new _errors.CompilerDiagnostic(`unable to evaluate "key" and "ref" on a ReactElement due to an abstract config passed to createElement`,realm.currentLocation,"PP0025","FatalError");realm.handleError(diagnostic);if(realm.handleError(diagnostic)==="Fail")throw new _errors.FatalError;}let possibleKey=(0,_index3.Get)(realm,config,"key");if(possibleKey!==
realm.intrinsics.null&&possibleKey!==realm.intrinsics.undefined){let keyNotNeeded=(0,_utils.hasNoPartialKeyOrRef)(realm,config)&&possibleKey instanceof _index2.AbstractValue&&config instanceof _index2.ObjectValue&&!config.properties.has("key");if(!keyNotNeeded)key=(0,_BinaryExpression.computeBinary)(realm,"+",realm.intrinsics.emptyString,possibleKey)}let possibleRef=(0,_index3.Get)(realm,config,"ref");if(possibleRef!==realm.intrinsics.null&&possibleRef!==realm.intrinsics.undefined&&!firstRenderOnly){let refNotNeeded=
(0,_utils.hasNoPartialKeyOrRef)(realm,config)&&possibleRef instanceof _index2.AbstractValue&&config instanceof _index2.ObjectValue&&!config.properties.has("ref");if(!refNotNeeded)ref=possibleRef}const setProp=(name,value)=>{if(name!=="__self"&&name!=="__source"&&name!=="key"&&name!=="ref"){(0,_invariant.default)(props instanceof _index2.ObjectValue);(0,_utils.hardModifyReactObjectPropertyBinding)(realm,props,name,value)}};const applyProperties=()=>{if(config instanceof _index2.ObjectValue)for(let [propKey,
binding]of config.properties)if(binding&&binding.descriptor){(0,_invariant.default)(binding.descriptor instanceof _descriptors.PropertyDescriptor);if(binding.descriptor.enumerable)setProp(propKey,(0,_index3.Get)(realm,config,propKey))}};if(config instanceof _index2.AbstractObjectValue&&config.isPartialObject()||config instanceof _index2.ObjectValue&&config.isPartialObject()&&config.isSimpleObject()){props=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);realm.react.reactProps.add(props);
(0,_utils.applyObjectAssignConfigsForReactElement)(realm,props,[config]);props.makeFinal();if(children!==undefined)(0,_utils.hardModifyReactObjectPropertyBinding)(realm,props,"children",children);if(defaultProps!==realm.intrinsics.undefined){let defaultPropsEvaluated=0;if(defaultProps instanceof _index2.ObjectValue&&!defaultProps.isPartialObject())for(let [propName,binding]of defaultProps.properties)if(binding.descriptor!==undefined){(0,_invariant.default)(binding.descriptor instanceof _descriptors.PropertyDescriptor);
if(binding.descriptor.value!==realm.intrinsics.undefined){let propBinding=props.properties.get(propName);if(propBinding!==undefined&&!(propBinding.descriptor instanceof _descriptors.PropertyDescriptor&&propBinding.descriptor.value instanceof _index2.AbstractValue)){defaultPropsEvaluated++;if(propBinding.descriptor){(0,_invariant.default)(propBinding.descriptor instanceof _descriptors.PropertyDescriptor);if(propBinding.descriptor.value===realm.intrinsics.undefined)(0,_utils.hardModifyReactObjectPropertyBinding)(realm,
props,propName,(0,_index3.Get)(realm,defaultProps,propName))}}}}if(!(defaultProps instanceof _index2.ObjectValue)||defaultProps.isPartialObject()||defaultPropsEvaluated!==defaultProps.properties.size){props.makePartial();props.makeSimple();for(let [propName,binding]of props.properties)if(binding.descriptor!==undefined){(0,_invariant.default)(binding.descriptor instanceof _descriptors.PropertyDescriptor);if(binding.descriptor.value===realm.intrinsics.undefined){(0,_invariant.default)(defaultProps instanceof
_index2.AbstractObjectValue||defaultProps instanceof _index2.ObjectValue);(0,_utils.hardModifyReactObjectPropertyBinding)(realm,props,propName,(0,_index3.Get)(realm,defaultProps,propName))}}if(children!==undefined&&children instanceof _index2.AbstractValue){let condition=_index2.AbstractValue.createFromBinaryOp(realm,"===",children,realm.intrinsics.undefined);(0,_invariant.default)(defaultProps instanceof _index2.AbstractObjectValue||defaultProps instanceof _index2.ObjectValue);let conditionalChildren=
_index2.AbstractValue.createFromConditionalOp(realm,condition,(0,_index3.Get)(realm,defaultProps,"children"),children);(0,_utils.hardModifyReactObjectPropertyBinding)(realm,props,"children",conditionalChildren)}let defaultPropsHelper=realm.react.defaultPropsHelper;(0,_invariant.default)(defaultPropsHelper!==undefined);let snapshot=props.getSnapshot();props.temporalAlias=snapshot;let temporalArgs=[defaultPropsHelper,snapshot,defaultProps];let temporalTo=_index2.AbstractValue.createTemporalFromBuildFunction(realm,
_index2.ObjectValue,temporalArgs,(0,_generator.createOperationDescriptor)("REACT_DEFAULT_PROPS_HELPER"),{skipInvariant:true,mutatesOnly:[snapshot]});(0,_invariant.default)(temporalTo instanceof _index2.AbstractObjectValue);if(props instanceof _index2.AbstractObjectValue)temporalTo.values=props.values;else{(0,_invariant.default)(props instanceof _index2.ObjectValue);temporalTo.values=new _index.ValuesDomain(props)}props.temporalAlias=temporalTo}}}else{applyProperties();if(children!==undefined)setProp("children",
children);if(defaultProps instanceof _index2.AbstractObjectValue||defaultProps.isPartialObject())(0,_invariant.default)(false,"TODO: we need to eventually support this");else if(defaultProps instanceof _index2.ObjectValue)for(let [propKey,binding]of defaultProps.properties)if(binding&&binding.descriptor){(0,_invariant.default)(binding.descriptor instanceof _descriptors.PropertyDescriptor);if(binding.descriptor.enumerable&&(0,_index3.Get)(realm,props,propKey)===realm.intrinsics.undefined)setProp(propKey,
(0,_index3.Get)(realm,defaultProps,propKey))}}(0,_invariant.default)(props instanceof _index2.ObjectValue);(0,_utils.flagPropsWithNoPartialKeyOrRef)(realm,props);return{key,props,ref}}function splitReactElementsByConditionalType(realm,condValue,consequentVal,alternateVal,config,children){return realm.evaluateWithAbstractConditional(condValue,()=>{return realm.evaluateForEffects(()=>createReactElement(realm,consequentVal,config,children),null,"splitReactElementsByConditionalType consequent")},()=>
{return realm.evaluateForEffects(()=>createReactElement(realm,alternateVal,config,children),null,"splitReactElementsByConditionalType alternate")})}function splitReactElementsByConditionalConfig(realm,condValue,consequentVal,alternateVal,type,children){return realm.evaluateWithAbstractConditional(condValue,()=>{return realm.evaluateForEffects(()=>createReactElement(realm,type,consequentVal,children),null,"splitReactElementsByConditionalConfig consequent")},()=>{return realm.evaluateForEffects(()=>
createReactElement(realm,type,alternateVal,children),null,"splitReactElementsByConditionalConfig alternate")})}function cloneReactElement(realm,reactElement,config,children){let props=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);realm.react.reactProps.add(props);const setProp=(name,value)=>{if(name!=="__self"&&name!=="__source"&&name!=="key"&&name!=="ref"){(0,_invariant.default)(props instanceof _index2.ObjectValue);(0,_utils.hardModifyReactObjectPropertyBinding)(realm,
props,name,value)}};let elementProps=(0,_utils.getProperty)(realm,reactElement,"props");(0,_utils.applyObjectAssignConfigsForReactElement)(realm,props,[elementProps,config]);props.makeFinal();let key=(0,_utils.getProperty)(realm,reactElement,"key");let ref=(0,_utils.getProperty)(realm,reactElement,"ref");let type=(0,_utils.getProperty)(realm,reactElement,"type");if(!(config instanceof _index2.NullValue)){let possibleKey=(0,_index3.Get)(realm,config,"key");if(possibleKey!==realm.intrinsics.null&&possibleKey!==
realm.intrinsics.undefined){let keyNotNeeded=(0,_utils.hasNoPartialKeyOrRef)(realm,config)&&possibleKey instanceof _index2.AbstractValue&&config instanceof _index2.ObjectValue&&!config.properties.has("key");if(!keyNotNeeded)key=(0,_BinaryExpression.computeBinary)(realm,"+",realm.intrinsics.emptyString,possibleKey)}let possibleRef=(0,_index3.Get)(realm,config,"ref");if(possibleRef!==realm.intrinsics.null&&possibleRef!==realm.intrinsics.undefined){let refNotNeeded=(0,_utils.hasNoPartialKeyOrRef)(realm,
config)&&possibleRef instanceof _index2.AbstractValue&&config instanceof _index2.ObjectValue&&!config.properties.has("ref");if(!refNotNeeded)ref=possibleRef}let defaultProps=type instanceof _index2.ObjectValue||type instanceof _index2.AbstractObjectValue?(0,_index3.Get)(realm,type,"defaultProps"):realm.intrinsics.undefined;if(defaultProps instanceof _index2.ObjectValue)for(let [propKey,binding]of defaultProps.properties){if(binding&&binding.descriptor){(0,_invariant.default)(binding.descriptor instanceof
_descriptors.PropertyDescriptor);if(binding.descriptor.enumerable&&(0,_index3.Get)(realm,props,propKey)===realm.intrinsics.undefined)setProp(propKey,(0,_index3.Get)(realm,defaultProps,propKey))}}else if(defaultProps instanceof _index2.AbstractObjectValue)(0,_invariant.default)(false,"TODO: we need to eventually support this")}if(children!==undefined)(0,_utils.hardModifyReactObjectPropertyBinding)(realm,props,"children",children);else{(0,_invariant.default)(elementProps instanceof _index2.ObjectValue);
let elementChildren=(0,_utils.getProperty)(realm,elementProps,"children");(0,_utils.hardModifyReactObjectPropertyBinding)(realm,props,"children",elementChildren)}return(0,_utils.createInternalReactElement)(realm,type,key,ref,props)}function createReactElement(realm,type,config,children){if(type instanceof _index2.AbstractValue&&type.kind==="conditional"){let [condValue,consequentVal,alternateVal]=type.args;(0,_invariant.default)(condValue instanceof _index2.AbstractValue);return splitReactElementsByConditionalType(realm,
condValue,consequentVal,alternateVal,config,children)}else if(config instanceof _index2.AbstractObjectValue&&config.kind==="conditional"){let [condValue,consequentVal,alternateVal]=config.args;(0,_invariant.default)(condValue instanceof _index2.AbstractValue);(0,_invariant.default)(consequentVal instanceof _index2.ObjectValue||consequentVal instanceof _index2.AbstractObjectValue);(0,_invariant.default)(alternateVal instanceof _index2.ObjectValue||alternateVal instanceof _index2.AbstractObjectValue);
return splitReactElementsByConditionalConfig(realm,condValue,consequentVal,alternateVal,type,children)}let {key,props,ref}=createPropsObject(realm,type,config,children);return(0,_utils.createInternalReactElement)(realm,type,key,ref,props)}function wrapReactElementWithKeyedFragment(realm,keyValue,reactElement){const react=realm.fbLibraries.react;(0,_invariant.default)(react instanceof _index2.ObjectValue);const reactFragment=(0,_utils.getProperty)(realm,react,"Fragment");const fragmentConfigValue=
_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);_singletons.Create.CreateDataPropertyOrThrow(realm,fragmentConfigValue,"key",keyValue);let fragmentChildrenValue=_singletons.Create.ArrayCreate(realm,1);_singletons.Create.CreateDataPropertyOrThrow(realm,fragmentChildrenValue,"0",reactElement);fragmentChildrenValue=(0,_utils.flattenChildren)(realm,fragmentChildrenValue,true);return createReactElement(realm,reactFragment,fragmentConfigValue,fragmentChildrenValue)}function traverseReactElement(realm,
reactElement,traversalVisitor){let typeValue=(0,_utils.getProperty)(realm,reactElement,"type");traversalVisitor.visitType(typeValue);let keyValue=(0,_utils.getProperty)(realm,reactElement,"key");if(keyValue!==realm.intrinsics.null&&keyValue!==realm.intrinsics.undefined)traversalVisitor.visitKey(keyValue);let refValue=(0,_utils.getProperty)(realm,reactElement,"ref");if(refValue!==realm.intrinsics.null&&refValue!==realm.intrinsics.undefined)traversalVisitor.visitRef(refValue);const loopArrayElements=
(childrenValue,length)=>{for(let i=0;i<length;i++){let child=(0,_utils.getProperty)(realm,childrenValue,""+i);traversalVisitor.visitChildNode(child)}};const handleChildren=()=>{(0,_invariant.default)(propsValue instanceof _index2.ObjectValue);if(propsValue.properties.has("children")){let childrenValue=(0,_utils.getProperty)(realm,propsValue,"children");if(childrenValue!==realm.intrinsics.undefined&&childrenValue!==realm.intrinsics.null)if(childrenValue instanceof _index2.ArrayValue&&!childrenValue.intrinsicName){let childrenLength=
(0,_utils.getProperty)(realm,childrenValue,"length");if(childrenLength instanceof _index2.NumberValue)loopArrayElements(childrenValue,childrenLength.value);else if(childrenLength instanceof _index2.AbstractValue&&childrenLength.kind==="conditional")loopArrayElements(childrenValue,(0,_utils.getMaxLength)(childrenLength,0));else(0,_invariant.default)(false,"TODO: support other types of array length value")}else traversalVisitor.visitChildNode(childrenValue)}};let propsValue=(0,_utils.getProperty)(realm,
reactElement,"props");if(propsValue instanceof _index2.AbstractValue)traversalVisitor.visitAbstractOrPartialProps(propsValue);else if(propsValue instanceof _index2.ObjectValue)if(propsValue.isPartialObject()){traversalVisitor.visitAbstractOrPartialProps(propsValue);handleChildren()}else{traversalVisitor.visitConcreteProps(propsValue);handleChildren()}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.stripFlowTypeAnnotations=stripFlowTypeAnnotations;
var _traverse=_interopRequireDefault(__webpack_require__(293));var t=_interopRequireWildcard(__webpack_require__(21));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=
obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function stripFlowTypeAnnotations(ast){(0,_traverse.default)(ast,{ImportDeclaration(path){if(!path.node.specifiers.length)return;let typeCount=0;path.node.specifiers.forEach(({importKind})=>{if(importKind==="type"||importKind==="typeof")typeCount++});if(typeCount===path.node.specifiers.length)path.remove()},Flow(path){path.remove()},ClassProperty(path){path.node.variance=null;path.node.typeAnnotation=
null;if(!path.node.value)path.remove()},Class(path){path.node.implements=null;path.get("body.body").forEach((child)=>{if(child.isClassProperty()){child.node.typeAnnotation=null;if(!child.node.value)child.remove()}})},AssignmentPattern({node}){node.left.optional=false},Function({node}){for(let i=0;i<node.params.length;i++){const param=node.params[i];param.optional=false;if(param.type==="AssignmentPattern")param.left.optional=false}node.predicate=null},TypeCastExpression(path){let {node}=path;do node=
node.expression;while(t.isTypeCastExpression(node));path.replaceWith(node)}},undefined,{},undefined);_traverse.default.cache.clear()}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.LoggingTracer=void 0;var _environment=__webpack_require__(20);var _realm=__webpack_require__(7);var _index=__webpack_require__(232);var _completions=__webpack_require__(18);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=
_interopRequireDefault(__webpack_require__(9));var _babelhelpers=__webpack_require__(239);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function describeValue(realm,v){if(v instanceof _index2.NumberValue||v instanceof _index2.BooleanValue)return v.value.toString();if(v instanceof _index2.UndefinedValue)return"undefined";if(v instanceof _index2.NullValue)return"null";if(v instanceof _index2.StringValue)return JSON.stringify(v.value);if(v instanceof _index2.FunctionValue)return _singletons.To.ToStringPartial(realm,
(0,_index.Get)(realm,v,"name"))||"(anonymous function)";if(v instanceof _index2.ObjectValue)return"(some object)";if(v instanceof _index2.AbstractValue)return"(some abstract value)";(0,_invariant.default)(false)}class LoggingTracer extends _realm.Tracer{constructor(realm){super();this.realm=realm;this.nesting=[]}log(message){console.log(`[calls] ${this.nesting.map((_)=>"  ").join("")}${message}`)}beginEvaluateForEffects(state){this.log(`>evaluate for effects`);this.nesting.push("(evaluate for effects)")}endEvaluateForEffects(state,
effects){let name=this.nesting.pop();(0,_invariant.default)(name==="(evaluate for effects)");this.log(`<evaluate for effects`)}beforeCall(F,thisArgument,argumentsList,newTarget){let realm=this.realm;let name=describeValue(realm,F);this.log(`>${name}(${argumentsList.map((v)=>describeValue(realm,v)).join(", ")})`);this.nesting.push(name)}afterCall(F,thisArgument,argumentsList,newTarget,result){let name=this.nesting.pop();this.log(`<${name}${result instanceof _completions.ThrowCompletion?": error":""}`)}beginOptimizingFunction(optimizedFunctionId,
functionValue){this.log(`>Starting Optimized Function ${optimizedFunctionId} ${functionValue.intrinsicName?functionValue.intrinsicName:"[unknown name]"} ${functionValue.expressionLocation?(0,_babelhelpers.stringOfLocation)(functionValue.expressionLocation):""}`)}endOptimizingFunction(optimizedFunctionId){this.log(`<Ending Optimized Function ${optimizedFunctionId}`)}}exports.LoggingTracer=LoggingTracer},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});
exports.ResidualHeapVisitor=void 0;var _environment=__webpack_require__(20);var _errors=__webpack_require__(3);var _realm=__webpack_require__(7);var _singletons=__webpack_require__(236);var _index=__webpack_require__(232);var _index2=__webpack_require__(10);var _Error=__webpack_require__(424);var t=_interopRequireWildcard(__webpack_require__(21));var _generator=__webpack_require__(237);var _traverse=_interopRequireDefault(__webpack_require__(293));var _invariant=_interopRequireDefault(__webpack_require__(9));
var _visitors=__webpack_require__(425);var _logger=__webpack_require__(412);var _modules=__webpack_require__(411);var _HeapInspector=__webpack_require__(426);var _utils=__webpack_require__(413);var _utils2=__webpack_require__(291);var _ResidualReactElementVisitor=__webpack_require__(427);var _GeneratorTree=__webpack_require__(432);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&
obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}class ResidualHeapVisitor{constructor(realm,logger,modules,additionalFunctionValuesAndEffects){(0,_invariant.default)(realm.useAbstractInterpretation);
this.realm=realm;this.logger=logger;this.modules=modules;this.declarativeEnvironmentRecordsBindings=new Map;this.globalBindings=new Map;this.functionInfos=new Map;this.classMethodInstances=new Map;this.functionInstances=new Map;this.values=new Map;this.conditionalFeasibility=new Map;let generator=this.realm.generator;(0,_invariant.default)(generator);this.scope=this.globalGenerator=generator;this.inspector=new _HeapInspector.HeapInspector(realm,logger);this.referencedDeclaredValues=new Map;this.delayedActions=
[];this.additionalFunctionValuesAndEffects=additionalFunctionValuesAndEffects;this.equivalenceSet=new _index.HashSet;this.additionalFunctionValueInfos=new Map;this.functionToCapturedScopes=new Map;let environment=realm.$GlobalEnv.environmentRecord;(0,_invariant.default)(environment instanceof _environment.GlobalEnvironmentRecord);this.globalEnvironmentRecord=environment;this.additionalGeneratorRoots=new Map;this.residualReactElementVisitor=new _ResidualReactElementVisitor.ResidualReactElementVisitor(this.realm,
this);this.generatorTree=new _GeneratorTree.GeneratorTree}_getCommonScope(){let s=this.scope;while(true)if(s instanceof _generator.Generator)s=this.generatorTree.getParent(s);else if(s instanceof _index2.FunctionValue){if(this.additionalFunctionValuesAndEffects.has(s))return s;s=this.generatorTree.getCreator(s)||"GLOBAL"}else{(0,_invariant.default)(s==="GLOBAL");let generator=this.globalGenerator;(0,_invariant.default)(generator);return generator}(0,_invariant.default)(false)}_getAdditionalFunctionOfScope(){let s=
this._getCommonScope();return s instanceof _index2.FunctionValue?s:undefined}_registerAdditionalRoot(value){let creationGenerator=this.generatorTree.getCreator(value)||this.globalGenerator;let additionalFunction=this._getAdditionalFunctionOfScope()||"GLOBAL";let targetAdditionalFunction;if(creationGenerator===this.globalGenerator)targetAdditionalFunction="GLOBAL";else{let s=creationGenerator;while(s instanceof _generator.Generator){s=this.generatorTree.getParent(s);(0,_invariant.default)(s!==undefined)}(0,
_invariant.default)(s==="GLOBAL"||s instanceof _index2.FunctionValue);targetAdditionalFunction=s}let usageScope;if(additionalFunction===targetAdditionalFunction)usageScope=this.scope;else{(0,_invariant.default)(additionalFunction instanceof _index2.FunctionValue);let additionalFVEffects=this.additionalFunctionValuesAndEffects.get(additionalFunction);(0,_invariant.default)(additionalFVEffects!==undefined);additionalFVEffects.additionalRoots.add(value);this._visitInUnrelatedScope(creationGenerator,
value);usageScope=this.generatorTree.getCreator(value)||this.globalGenerator}usageScope=this.scope;if(usageScope instanceof _generator.Generator){let anyRelevantEffects=false;for(let g=usageScope;g instanceof _generator.Generator;g=this.generatorTree.getParent(g)){if(g===creationGenerator){if(anyRelevantEffects){let s=this.additionalGeneratorRoots.get(g);if(s===undefined)this.additionalGeneratorRoots.set(g,s=new Set);if(!s.has(value)){s.add(value);this._visitInUnrelatedScope(g,value)}}break}let effectsToApply=
g.effectsToApply;if(effectsToApply)for(let pb of effectsToApply.modifiedProperties.keys())if(pb.object===value){anyRelevantEffects=true;break}}}}_withScope(scope,f){let oldScope=this.scope;this.scope=scope;try{f()}finally{this.scope=oldScope}}_enqueueWithUnrelatedScope(scope,action){if(this.residualReactElementVisitor.defaultEquivalenceSet===false){const save=this.residualReactElementVisitor.saveEquivalenceSet();const originalAction=action;action=()=>this.residualReactElementVisitor.loadEquivalenceSet(save,
originalAction)}this.delayedActions.push({scope,action})}_visitInUnrelatedScope(scope,val){let scopes=this.values.get(val);if(scopes!==undefined&&scopes.has(scope))return;this._enqueueWithUnrelatedScope(scope,()=>this.visitValue(val))}visitObjectProperty(binding){let desc=binding.descriptor;let obj=binding.object;(0,_invariant.default)(binding.key!==undefined,"Undefined keys should never make it here.");if(obj instanceof _index2.AbstractObjectValue||!(typeof binding.key==="string"&&this.inspector.canIgnoreProperty(obj,
binding.key)))if(desc!==undefined)this.visitDescriptor(desc);if(binding.key instanceof _index2.Value)this.visitValue(binding.key)}visitObjectProperties(obj,kind){let {skipPrototype,constructor}=(0,_utils.getObjectPrototypeMetadata)(this.realm,obj);if(obj.temporalAlias!==undefined)return;for(let [symbol,propertyBinding]of obj.symbols){(0,_invariant.default)(propertyBinding);let desc=propertyBinding.descriptor;if(desc===undefined)continue;this.visitDescriptor(desc);this.visitValue(symbol)}for(let [propertyBindingKey,
propertyBindingValue]of obj.properties){let descriptor=propertyBindingValue.descriptor;if(obj instanceof _index2.ECMAScriptFunctionValue&&obj.$FunctionKind==="classConstructor"&&(_utils.ClassPropertiesToIgnore.has(propertyBindingKey)||propertyBindingKey==="length"&&(0,_utils.canIgnoreClassLengthProperty)(obj,descriptor,this.logger)))continue;if(propertyBindingValue.pathNode!==undefined)continue;if(!(obj instanceof _index2.ArrayValue)&&!obj.mightNotBeLeakedObject()&&descriptor instanceof _descriptors.PropertyDescriptor&&
descriptor.get===undefined&&descriptor.set===undefined)continue;this.visitObjectProperty(propertyBindingValue)}if(obj.unknownProperty!==undefined)this.visitObjectPropertiesWithComputedNamesDescriptor(obj.unknownProperty.descriptor);if(!skipPrototype)this.visitObjectPrototype(obj);if(obj instanceof _index2.FunctionValue)this.visitConstructorPrototype(constructor?constructor:obj);else if(obj instanceof _index2.ObjectValue&&skipPrototype&&constructor)this.visitValue(constructor)}visitObjectPrototype(obj){let proto=
obj.$Prototype;let kind=obj.getKind();if(proto===this.realm.intrinsics[kind+"Prototype"])return;if(!obj.$IsClassPrototype||proto!==this.realm.intrinsics.null)this.visitValue(proto)}visitConstructorPrototype(func){(0,_invariant.default)(func instanceof _index2.FunctionValue);let prototype=_HeapInspector.HeapInspector.getPropertyValue(func,"prototype");if(prototype instanceof _index2.ObjectValue&&prototype.originalConstructor===func&&!this.inspector.isDefaultPrototype(prototype))this.visitValue(prototype)}visitObjectPropertiesWithComputedNamesDescriptor(desc){if(desc!==
undefined)if(desc instanceof _descriptors.PropertyDescriptor){let val=desc.value;(0,_invariant.default)(val instanceof _index2.AbstractValue);this.visitObjectPropertiesWithComputedNames(val)}else if(desc instanceof _descriptors.AbstractJoinedDescriptor){this.visitValue(desc.joinCondition);this.visitObjectPropertiesWithComputedNamesDescriptor(desc.descriptor1);this.visitObjectPropertiesWithComputedNamesDescriptor(desc.descriptor2)}else(0,_invariant.default)(false,"unknown descriptor")}visitObjectPropertiesWithComputedNames(absVal){if(absVal.kind===
"widened property")return;if(absVal.kind==="template for prototype member expression")return;if(absVal.kind==="conditional"){let cond=absVal.args[0];(0,_invariant.default)(cond instanceof _index2.AbstractValue);if(cond.kind==="template for property name condition"){let P=cond.args[0];(0,_invariant.default)(P instanceof _index2.AbstractValue);let V=absVal.args[1];let earlier_props=absVal.args[2];if(earlier_props instanceof _index2.AbstractValue)this.visitObjectPropertiesWithComputedNames(earlier_props);
this.visitValue(P);this.visitValue(V)}else{absVal.args[0]=this.visitEquivalentValue(cond);let consequent=absVal.args[1];if(consequent instanceof _index2.AbstractValue)this.visitObjectPropertiesWithComputedNames(consequent);let alternate=absVal.args[2];if(alternate instanceof _index2.AbstractValue)this.visitObjectPropertiesWithComputedNames(alternate)}}else this.visitValue(absVal)}visitDescriptor(desc){if(desc===undefined);else if(desc instanceof _descriptors.PropertyDescriptor){if(desc.value!==undefined)desc.value=
this.visitEquivalentValue(desc.value);if(desc.get!==undefined)this.visitValue(desc.get);if(desc.set!==undefined)this.visitValue(desc.set)}else if(desc instanceof _descriptors.AbstractJoinedDescriptor){desc.joinCondition=this.visitEquivalentValue(desc.joinCondition);if(desc.descriptor1!==undefined)this.visitDescriptor(desc.descriptor1);if(desc.descriptor2!==undefined)this.visitDescriptor(desc.descriptor2)}else(0,_invariant.default)(false,"unknown descriptor")}visitValueArray(val){this._registerAdditionalRoot(val);
this.visitObjectProperties(val);const realm=this.realm;let lenProperty;if(val.mightBeLeakedObject())lenProperty=this.realm.evaluateWithoutLeakLogic(()=>(0,_index.Get)(realm,val,"length"));else lenProperty=(0,_index.Get)(realm,val,"length");let [initialLength,lengthAssignmentNotNeeded]=(0,_utils.getSuggestedArrayLiteralLength)(realm,val);if(lengthAssignmentNotNeeded)return;if(lenProperty instanceof _index2.AbstractValue?lenProperty.kind!=="widened property":_singletons.To.ToLength(realm,lenProperty)!==
initialLength)this.visitValue(lenProperty)}visitValueMap(val){(0,_invariant.default)(val.getKind()==="Map");let entries=val.$MapData;(0,_invariant.default)(entries!==undefined);let len=entries.length;for(let i=0;i<len;i++){let entry=entries[i];let key=entry.$Key;let value=entry.$Value;if(key===undefined||value===undefined)continue;this.visitValue(key);this.visitValue(value)}}visitValueWeakMap(val){(0,_invariant.default)(val.getKind()==="WeakMap");let entries=val.$WeakMapData;(0,_invariant.default)(entries!==
undefined);let len=entries.length;for(let i=0;i<len;i++){let entry=entries[i];let key=entry.$Key;let value=entry.$Value;if(key!==undefined&&value!==undefined){let fixpoint_rerun=()=>{let progress;if(this.values.has(key)){progress=true;this.visitValue(key);this.visitValue(value)}else{progress=false;this._enqueueWithUnrelatedScope(this.scope,fixpoint_rerun)}return progress};fixpoint_rerun()}}}visitValueSet(val){(0,_invariant.default)(val.getKind()==="Set");let entries=val.$SetData;(0,_invariant.default)(entries!==
undefined);let len=entries.length;for(let i=0;i<len;i++){let entry=entries[i];if(entry===undefined)continue;this.visitValue(entry)}}visitValueWeakSet(val){(0,_invariant.default)(val.getKind()==="WeakSet");let entries=val.$WeakSetData;(0,_invariant.default)(entries!==undefined);let len=entries.length;for(let i=0;i<len;i++){let entry=entries[i];if(entry!==undefined){let fixpoint_rerun=()=>{let progress;if(this.values.has(entry)){progress=true;this.visitValue(entry)}else{progress=false;this._enqueueWithUnrelatedScope(this.scope,
fixpoint_rerun)}return progress};fixpoint_rerun()}}}visitValueFunction(val){let isClass=false;this._registerAdditionalRoot(val);if(val instanceof _index2.ECMAScriptFunctionValue&&val.$FunctionKind==="classConstructor"){(0,_invariant.default)(val instanceof _index2.ECMAScriptSourceFunctionValue);let homeObject=val.$HomeObject;if(homeObject instanceof _index2.ObjectValue&&homeObject.$IsClassPrototype)isClass=true}this.visitObjectProperties(val);if(val instanceof _index2.BoundFunctionValue){this.visitValue(val.$BoundTargetFunction);
this.visitValue(val.$BoundThis);for(let boundArg of val.$BoundArguments)this.visitValue(boundArg);return}(0,_invariant.default)(!(val instanceof _index2.NativeFunctionValue),"all native function values should be intrinsics");(0,_invariant.default)(val instanceof _index2.ECMAScriptSourceFunctionValue);(0,_invariant.default)(val.constructor===_index2.ECMAScriptSourceFunctionValue);let formalParameters=val.$FormalParameters;let code=val.$ECMAScriptCode;let functionInfo=this.functionInfos.get(code);let residualFunctionBindings=
new Map;this.functionInstances.set(val,{residualFunctionBindings,initializationStatements:[],functionValue:val,scopeInstances:new Map});if(!functionInfo){functionInfo={depth:0,lexicalDepth:0,unbound:new Map,requireCalls:new Map,modified:new Set,usesArguments:false,usesThis:false};let state={functionInfo,realm:this.realm,getModuleIdIfNodeIsRequireFunction:this.modules.getGetModuleIdIfNodeIsRequireFunction(formalParameters,[val])};(0,_traverse.default)(t.file(t.program([t.expressionStatement(t.functionExpression(null,
formalParameters,code))])),_visitors.ClosureRefVisitor,null,state);_traverse.default.cache.clear();this.functionInfos.set(code,functionInfo);if(val.isResidual&&functionInfo.unbound.size)if(!val.isUnsafeResidual)this.logger.logError(val,`residual function ${(0,_Error.describeLocation)(this.realm,val,undefined,code.loc)||"(unknown)"} refers to the following identifiers defined outside of the local scope: ${Object.keys(functionInfo.unbound).join(", ")}`)}let additionalFunctionEffects=this.additionalFunctionValuesAndEffects.get(val);
if(additionalFunctionEffects)this._visitAdditionalFunction(val,additionalFunctionEffects);else this._enqueueWithUnrelatedScope(val,()=>{(0,_invariant.default)(this.scope===val);(0,_invariant.default)(functionInfo);for(let innerName of functionInfo.unbound.keys()){let environment=this.resolveBinding(val,innerName);let residualBinding=this.getBinding(environment,innerName);this.visitBinding(val,residualBinding);residualFunctionBindings.set(innerName,residualBinding);if(functionInfo.modified.has(innerName))residualBinding.modified=
true}});if(isClass&&val.$HomeObject instanceof _index2.ObjectValue)this._visitClass(val,val.$HomeObject)}_visitBindingHelper(residualFunctionBinding){if(residualFunctionBinding.hasLeaked)return;let environment=residualFunctionBinding.declarativeEnvironmentRecord;(0,_invariant.default)(environment!==null);if(residualFunctionBinding.value===undefined){(0,_invariant.default)(environment instanceof _environment.DeclarativeEnvironmentRecord);let binding=environment.bindings[residualFunctionBinding.name];
(0,_invariant.default)(binding!==undefined);(0,_invariant.default)(!binding.deletable);let value=binding.initialized&&binding.value||this.realm.intrinsics.undefined;residualFunctionBinding.value=this.visitEquivalentValue(value)}else this.visitValue(residualFunctionBinding.value)}visitBinding(scope,residualFunctionBinding){let environment=residualFunctionBinding.declarativeEnvironmentRecord;if(environment===null)return;(0,_invariant.default)(this.scope===scope);let refScope=this._getAdditionalFunctionOfScope()||
"GLOBAL";residualFunctionBinding.potentialReferentializationScopes.add(refScope);(0,_invariant.default)(!(refScope instanceof _generator.Generator));let funcToScopes=(0,_utils.getOrDefault)(this.functionToCapturedScopes,refScope,()=>new Map);let envRec=residualFunctionBinding.declarativeEnvironmentRecord;(0,_invariant.default)(envRec!==null);let bindingState=(0,_utils.getOrDefault)(funcToScopes,envRec,()=>({capturedBindings:new Set,capturingScopes:new Set}));if(!bindingState.capturedBindings.has(residualFunctionBinding)){for(let capturingScope of bindingState.capturingScopes)this._enqueueWithUnrelatedScope(capturingScope,
()=>this._visitBindingHelper(residualFunctionBinding));bindingState.capturedBindings.add(residualFunctionBinding)}if(!bindingState.capturingScopes.has(scope)){(0,_invariant.default)(this.scope===scope);for(let residualBinding of bindingState.capturedBindings)this._visitBindingHelper(residualBinding);bindingState.capturingScopes.add(scope)}}resolveBinding(val,name){let doesNotMatter=true;let reference=this.logger.tryQuery(()=>_singletons.Environment.ResolveBinding(this.realm,name,doesNotMatter,val.$Environment),
undefined);if(reference===undefined||_singletons.Environment.IsUnresolvableReference(this.realm,reference)||reference.base===this.globalEnvironmentRecord||reference.base===this.globalEnvironmentRecord.$DeclarativeRecord)return this.globalEnvironmentRecord;else{(0,_invariant.default)(!_singletons.Environment.IsUnresolvableReference(this.realm,reference));let referencedBase=reference.base;let referencedName=reference.referencedName;(0,_invariant.default)(referencedName===name);(0,_invariant.default)(referencedBase instanceof
_environment.DeclarativeEnvironmentRecord);return referencedBase}}hasBinding(environment,name){if(environment===this.globalEnvironmentRecord.$DeclarativeRecord)environment=this.globalEnvironmentRecord;if(environment===this.globalEnvironmentRecord)return this.globalBindings.get(name)!==undefined;else{(0,_invariant.default)(environment instanceof _environment.DeclarativeEnvironmentRecord);let residualFunctionBindings=this.declarativeEnvironmentRecordsBindings.get(environment);if(residualFunctionBindings===
undefined)return false;return residualFunctionBindings.get(name)!==undefined}}getBinding(environment,name){if(environment===this.globalEnvironmentRecord.$DeclarativeRecord)environment=this.globalEnvironmentRecord;if(environment===this.globalEnvironmentRecord)return(0,_utils.getOrDefault)(this.globalBindings,name,()=>{let residualFunctionBinding={name,value:undefined,modified:true,hasLeaked:false,declarativeEnvironmentRecord:null,potentialReferentializationScopes:new Set};this._enqueueWithUnrelatedScope(this.globalGenerator,
()=>{let value=this.realm.getGlobalLetBinding(name);if(value!==undefined)residualFunctionBinding.value=this.visitEquivalentValue(value)});return residualFunctionBinding});else{(0,_invariant.default)(environment instanceof _environment.DeclarativeEnvironmentRecord);let residualFunctionBindings=(0,_utils.getOrDefault)(this.declarativeEnvironmentRecordsBindings,environment,()=>new Map);return(0,_utils.getOrDefault)(residualFunctionBindings,name,()=>{(0,_invariant.default)(environment instanceof _environment.DeclarativeEnvironmentRecord);
return{name,value:undefined,modified:false,hasLeaked:false,declarativeEnvironmentRecord:environment,potentialReferentializationScopes:new Set}})}}_visitClass(classFunc,classPrototype){let visitClassMethod=(propertyNameOrSymbol,methodFunc,methodType,isStatic)=>{if(methodFunc instanceof _index2.ECMAScriptSourceFunctionValue)if(methodFunc.$HomeObject!==undefined)if(methodFunc!==classFunc)this._visitClassMethod(methodFunc,methodType,classPrototype,!!isStatic)};for(let [propertyName,method]of classPrototype.properties)(0,
_utils.withDescriptorValue)(propertyName,method.descriptor,visitClassMethod);for(let [symbol,method]of classPrototype.symbols)(0,_utils.withDescriptorValue)(symbol,method.descriptor,visitClassMethod);if(!(classFunc.$Prototype instanceof _index2.NativeFunctionValue))this.visitValue(classFunc.$Prototype);if(classPrototype.properties.has("constructor")){let constructor=classPrototype.properties.get("constructor");(0,_invariant.default)(constructor!==undefined);if(constructor.descriptor===undefined)classFunc.$HasEmptyConstructor=
true;else{let visitClassProperty=(propertyNameOrSymbol,methodFunc,methodType)=>{visitClassMethod(propertyNameOrSymbol,methodFunc,methodType,true)};let constructorFunc=(0,_index.Get)(this.realm,classPrototype,"constructor");(0,_invariant.default)(constructorFunc instanceof _index2.ObjectValue);for(let [propertyName,method]of constructorFunc.properties)if(!_utils.ClassPropertiesToIgnore.has(propertyName)&&method.descriptor!==undefined&&!(propertyName==="length"&&(0,_utils.canIgnoreClassLengthProperty)(constructorFunc,
method.descriptor,this.logger)))(0,_utils.withDescriptorValue)(propertyName,method.descriptor,visitClassProperty)}}this.classMethodInstances.set(classFunc,{classPrototype,methodType:"constructor",classSuperNode:undefined,classMethodIsStatic:false,classMethodKeyNode:undefined,classMethodComputed:false})}_visitClassMethod(methodFunc,methodType,classPrototype,isStatic){this.classMethodInstances.set(methodFunc,{classPrototype,methodType:methodType==="value"?"method":methodType,classSuperNode:undefined,
classMethodIsStatic:isStatic,classMethodKeyNode:undefined,classMethodComputed:!!methodFunc.$HasComputedName})}visitValueObject(val){(0,_invariant.default)(val.isValid());this._registerAdditionalRoot(val);if((0,_utils2.isReactElement)(val)){this.residualReactElementVisitor.visitReactElement(val);return}let kind=val.getKind();this.visitObjectProperties(val,kind);let constructor=val.originalConstructor;if(constructor!==undefined){this.visitValue(constructor);return}switch(kind){case "RegExp":case "Number":case "String":case "Boolean":case "ArrayBuffer":return;
case "Date":let dateValue=val.$DateValue;(0,_invariant.default)(dateValue!==undefined);this.visitValue(dateValue);return;case "Float32Array":case "Float64Array":case "Int8Array":case "Int16Array":case "Int32Array":case "Uint8Array":case "Uint16Array":case "Uint32Array":case "Uint8ClampedArray":case "DataView":let buf=val.$ViewedArrayBuffer;(0,_invariant.default)(buf!==undefined);this.visitValue(buf);return;case "Map":this.visitValueMap(val);return;case "WeakMap":this.visitValueWeakMap(val);return;
case "Set":this.visitValueSet(val);return;case "WeakSet":this.visitValueWeakSet(val);return;default:if(kind!=="Object")this.logger.logError(val,`Object of kind ${kind} is not supported in residual heap.`);if(this.realm.react.enabled&&(0,_utils2.valueIsReactLibraryObject)(this.realm,val,this.logger))this.realm.fbLibraries.react=val;return}}visitValueSymbol(val){if(val.$Description)this.visitValue(val.$Description)}visitValueProxy(val){this._registerAdditionalRoot(val);this.visitValue(val.$ProxyTarget);
this.visitValue(val.$ProxyHandler)}_visitAbstractValueConditional(val){let condition=val.args[0];(0,_invariant.default)(condition instanceof _index2.AbstractValue);let cf=this.conditionalFeasibility.get(val);if(cf===undefined)this.conditionalFeasibility.set(val,cf={t:false,f:false});let feasibleT,feasibleF;let savedPath=this.realm.pathConditions;try{this.realm.pathConditions=this.scope instanceof _generator.Generator?this.scope.pathConditions:(0,_singletons.createPathConditions)();let impliesT=_singletons.Path.implies(condition);
let impliesF=_singletons.Path.impliesNot(condition);(0,_invariant.default)(!(impliesT&&impliesF));if(!impliesT&&!impliesF)feasibleT=feasibleF=true;else{feasibleT=impliesT;feasibleF=impliesF}}finally{this.realm.pathConditions=savedPath}let visitedT=false,visitedF=false;if(!cf.t&&feasibleT){val.args[1]=this.visitEquivalentValue(val.args[1]);cf.t=true;if(cf.f)val.args[0]=this.visitEquivalentValue(val.args[0]);visitedT=true}if(!cf.f&&feasibleF){val.args[2]=this.visitEquivalentValue(val.args[2]);cf.f=
true;if(cf.t)val.args[0]=this.visitEquivalentValue(val.args[0]);visitedF=true}if(!visitedT||!visitedF){let fixpoint_rerun=()=>{let progress=false;(0,_invariant.default)(cf!==undefined);if(cf.f&&cf.t){(0,_invariant.default)(!visitedT||!visitedF);this.visitValue(val.args[0])}if(cf.t&&!visitedT){this.visitValue(val.args[1]);progress=visitedT=true}(0,_invariant.default)(cf.t===visitedT);if(cf.f&&!visitedF){this.visitValue(val.args[2]);progress=visitedF=true}(0,_invariant.default)(cf.f===visitedF);if(!visitedT||
!visitedF)this._enqueueWithUnrelatedScope(this.scope,fixpoint_rerun);return progress};fixpoint_rerun()}}visitAbstractValue(val){if(val.kind==="sentinel member expression")this.logger.logError(val,"expressions of type o[p] are not yet supported for partially known o and unknown p");else if(val.kind==="environment initialization expression")this.logger.logError(val,"reads during environment initialization should never leak to serialization");else if(val.kind==="conditional"){this._visitAbstractValueConditional(val);
return}for(let i=0,n=val.args.length;i<n;i++)val.args[i]=this.visitEquivalentValue(val.args[i])}preProcessValue(val){return this._mark(val)}postProcessValue(val){}_mark(val){let scopes=this.values.get(val);if(scopes===undefined)this.values.set(val,scopes=new Set);if(this.scope instanceof _generator.Generator&&this.scope.effectsToApply===undefined)for(let g=this.scope;g instanceof _generator.Generator&&g.effectsToApply===undefined;g=this.generatorTree.getParent(g)){if(scopes.has(g))return false}else if(scopes.has(this.scope))return false;
scopes.add(this.scope);return true}visitEquivalentValue(val){if(val instanceof _index2.AbstractValue){let equivalentValue=this.equivalenceSet.add(val);if(this.preProcessValue(equivalentValue))this.visitAbstractValue(equivalentValue);this.postProcessValue(equivalentValue);return equivalentValue}if(val instanceof _index2.ObjectValue){(0,_invariant.default)(val.isValid());if((0,_utils2.isReactElement)(val)){if(val.temporalAlias!==undefined)return this.visitEquivalentValue(val.temporalAlias);let equivalentReactElementValue=
this.residualReactElementVisitor.reactElementEquivalenceSet.add(val);if(this._mark(equivalentReactElementValue))this.visitValueObject(equivalentReactElementValue);return equivalentReactElementValue}else if((0,_utils2.isReactPropsObject)(val)){let equivalentReactPropsValue=this.residualReactElementVisitor.reactPropsEquivalenceSet.add(val);if(this._mark(equivalentReactPropsValue))this.visitValueObject(equivalentReactPropsValue);return equivalentReactPropsValue}}this.visitValue(val);return val}visitValue(val){(0,
_invariant.default)(val!==undefined);(0,_invariant.default)(!(val instanceof _index2.ObjectValue&&val.refuseSerialization));if(val instanceof _index2.AbstractValue){if(this.preProcessValue(val))this.visitAbstractValue(val);this.postProcessValue(val)}else if(val.isIntrinsic())if(val instanceof _index2.ObjectValue&&val.isScopedTemplate){this.preProcessValue(val);this.postProcessValue(val)}else this._enqueueWithUnrelatedScope(this._getCommonScope(),()=>{this.preProcessValue(val);this.postProcessValue(val)});
else if(val instanceof _index2.EmptyValue){this.preProcessValue(val);this.postProcessValue(val)}else if(_HeapInspector.HeapInspector.isLeaf(val)){this.preProcessValue(val);this.postProcessValue(val)}else if((0,_index.IsArray)(this.realm,val)){(0,_invariant.default)(val instanceof _index2.ObjectValue);if(this.preProcessValue(val))this.visitValueArray(val);this.postProcessValue(val)}else if(val instanceof _index2.ProxyValue){if(this.preProcessValue(val))this.visitValueProxy(val);this.postProcessValue(val)}else if(val instanceof
_index2.FunctionValue){let creationGenerator=this.generatorTree.getCreator(val)||this.globalGenerator;this._enqueueWithUnrelatedScope(creationGenerator,()=>{(0,_invariant.default)(val instanceof _index2.FunctionValue);if(this.preProcessValue(val))this.visitValueFunction(val);this.postProcessValue(val)});let commonScope=this._getCommonScope();if(commonScope!==creationGenerator&&commonScope!==val)this._enqueueWithUnrelatedScope(commonScope,()=>{this.preProcessValue(val);this.postProcessValue(val)})}else if(val instanceof
_index2.SymbolValue){if(this.preProcessValue(val))this.visitValueSymbol(val);this.postProcessValue(val)}else{(0,_invariant.default)(val instanceof _index2.ObjectValue);if(this.preProcessValue(val))this.visitValueObject(val);this.postProcessValue(val)}}createGeneratorVisitCallbacks(additionalFunctionInfo){let callbacks={visitEquivalentValue:this.visitEquivalentValue.bind(this),visitGenerator:(generator,parent)=>{(0,_invariant.default)(this.generatorTree.getParent(generator)===parent);this.visitGenerator(generator,
additionalFunctionInfo)},canOmit:(value)=>{let canOmit=!this.referencedDeclaredValues.has(value)&&!this.values.has(value);if(!canOmit)return false;if(value instanceof _index2.ObjectValue&&value.temporalAlias!==undefined){let temporalAlias=value.temporalAlias;return!this.referencedDeclaredValues.has(temporalAlias)&&!this.values.has(temporalAlias)}return canOmit},recordDeclaration:(value)=>{this.referencedDeclaredValues.set(value,this._getAdditionalFunctionOfScope())},recordDelayedEntry:(generator,
entry)=>{this._enqueueWithUnrelatedScope(generator,()=>entry.visit(callbacks,generator))},visitModifiedProperty:(binding)=>{let fixpoint_rerun=()=>{if(this.values.has(binding.object)){if(binding.internalSlot){(0,_invariant.default)(typeof binding.key==="string");let error=new _errors.CompilerDiagnostic(`Internal slot ${binding.key} modified in a nested context. This is not yet supported.`,binding.object.expressionLocation,"PP1006","FatalError");this.realm.handleError(error)==="Fail";throw new _errors.FatalError;
}this.visitValue(binding.object);if(binding.key instanceof _index2.Value)this.visitValue(binding.key);this.visitObjectProperty(binding);return true}else{this._enqueueWithUnrelatedScope(this.scope,fixpoint_rerun);return false}};fixpoint_rerun()},visitModifiedBinding:(modifiedBinding)=>{let fixpoint_rerun=()=>{if(this.hasBinding(modifiedBinding.environment,modifiedBinding.name)){(0,_invariant.default)(additionalFunctionInfo);let {functionValue}=additionalFunctionInfo;(0,_invariant.default)(functionValue instanceof
_index2.ECMAScriptSourceFunctionValue);let residualBinding=this.getBinding(modifiedBinding.environment,modifiedBinding.name);let funcInstance=additionalFunctionInfo.instance;(0,_invariant.default)(funcInstance!==undefined);funcInstance.residualFunctionBindings.set(modifiedBinding.name,residualBinding);let newValue=modifiedBinding.value;(0,_invariant.default)(newValue);this.visitValue(newValue);residualBinding.modified=true;let otherFunc=residualBinding.additionalFunctionOverridesValue;if(otherFunc!==
undefined&&otherFunc!==functionValue){let otherNameVal=otherFunc._SafeGetDataPropertyValue("name");let otherNameStr=otherNameVal instanceof _index2.StringValue?otherNameVal.value:"unknown function";let funcNameVal=functionValue._SafeGetDataPropertyValue("name");let funNameStr=funcNameVal instanceof _index2.StringValue?funcNameVal.value:"unknown function";let error=new _errors.CompilerDiagnostic(`Variable ${modifiedBinding.name} written to in optimized function ${funNameStr} conflicts with write in another optimized function ${otherNameStr}`,
funcNameVal.expressionLocation,"PP1001","RecoverableError");if(functionValue.$Realm.handleError(error)==="Fail")throw new _errors.FatalError;}residualBinding.additionalFunctionOverridesValue=functionValue;additionalFunctionInfo.modifiedBindings.set(modifiedBinding,residualBinding);residualBinding.potentialReferentializationScopes.add("GLOBAL");return true}else{this._enqueueWithUnrelatedScope(this.scope,fixpoint_rerun);return false}};fixpoint_rerun()},visitBindingAssignment:(binding,value)=>{let residualBinding=
this.getBinding(binding.environment,binding.name);residualBinding.modified=true;residualBinding.hasLeaked=true;let commonScope=this._getCommonScope();if(residualBinding.potentialReferentializationScopes.size===0)this._enqueueWithUnrelatedScope(commonScope,()=>{if(additionalFunctionInfo!==undefined){let funcInstance=additionalFunctionInfo.instance;(0,_invariant.default)(funcInstance!==undefined);funcInstance.residualFunctionBindings.set(residualBinding.name,residualBinding)}this.visitBinding(commonScope,
residualBinding)});return this.visitEquivalentValue(value)}};return callbacks}visitGenerator(generator,additionalFunctionInfo){this._withScope(generator,()=>{generator.visit(this.createGeneratorVisitCallbacks(additionalFunctionInfo))})}_visitAdditionalFunction(functionValue,additionalEffects){(0,_invariant.default)(functionValue instanceof _index2.ECMAScriptSourceFunctionValue);let code=functionValue.$ECMAScriptCode;let functionInfo=this.functionInfos.get(code);(0,_invariant.default)(functionInfo!==
undefined);let funcInstance=this.functionInstances.get(functionValue);(0,_invariant.default)(funcInstance!==undefined);let visitor=()=>{(0,_invariant.default)(funcInstance!==undefined);(0,_invariant.default)(functionInfo!==undefined);let additionalFunctionInfo={modifiedBindings:new Map,functionValue,instance:funcInstance,prelude:[]};this.additionalFunctionValueInfos.set(functionValue,additionalFunctionInfo);let effectsGenerator=additionalEffects.generator;this.generatorTree.add(functionValue,effectsGenerator);
this.visitGenerator(effectsGenerator,additionalFunctionInfo)};if(this.realm.react.enabled)this.residualReactElementVisitor.withCleanEquivalenceSet(visitor);else visitor()}visitRoots(){this.generatorTree.add("GLOBAL",this.globalGenerator);this.visitGenerator(this.globalGenerator);for(let moduleValue of this.modules.initializedModules.values())this.visitValue(moduleValue);this._visitUntilFixpoint()}_visitUntilFixpoint(){if(this.realm.react.verbose)this.logger.logInformation(`Computing fixed point...`);
let progress=true;while(progress){let actionsByGenerator=new Map;let expected=0;for(let _ref of this.delayedActions){let {scope,action}=_ref;let generator;if(scope instanceof _index2.FunctionValue)generator=this.generatorTree.getCreator(scope)||this.globalGenerator;else if(scope==="GLOBAL")generator=this.globalGenerator;else{(0,_invariant.default)(scope instanceof _generator.Generator);generator=scope}let a=actionsByGenerator.get(generator);if(a===undefined)actionsByGenerator.set(generator,a=[]);
a.push({action,scope});expected++}this.delayedActions=[];progress=false;let effectsInfos=new Map;let topEffectsRunners=[];let actual=0;for(let [generator,scopedActions]of actionsByGenerator){let runGeneratorAction=()=>{for(let _ref2 of scopedActions){let {action,scope}=_ref2;actual++;this._withScope(scope,()=>{if(action()!==false)progress=true})}};let s=generator;let visited=new Set;let newNestedRunner;while(s!=="GLOBAL"){(0,_invariant.default)(!visited.has(s));visited.add(s);if(s instanceof _generator.Generator){let effectsToApply=
s.effectsToApply;if(effectsToApply){let info=effectsInfos.get(effectsToApply);let runner;if(info===undefined){runner=()=>{this.realm.withEffectsAppliedInGlobalEnv(()=>{(0,_invariant.default)(info!==undefined);for(let nestedEffectsRunner of info.nestedEffectsRunners)nestedEffectsRunner();return null},effectsToApply)};effectsInfos.set(effectsToApply,info={runner,nestedEffectsRunners:[]})}if(newNestedRunner!==undefined)info.nestedEffectsRunners.push(newNestedRunner);newNestedRunner=runner;if(runGeneratorAction===
undefined)break;info.nestedEffectsRunners.push(runGeneratorAction);runGeneratorAction=undefined}s=this.generatorTree.getParent(s)}else if(s instanceof _index2.FunctionValue){(0,_invariant.default)(this.additionalFunctionValuesAndEffects.has(s));s=this.generatorTree.getCreator(s)||"GLOBAL"}(0,_invariant.default)(s instanceof _generator.Generator||s instanceof _index2.FunctionValue||s==="GLOBAL")}if(runGeneratorAction!==undefined){(0,_invariant.default)(newNestedRunner===undefined);runGeneratorAction()}else if(newNestedRunner!==
undefined)topEffectsRunners.push(newNestedRunner)}for(let topEffectsRunner of topEffectsRunners)topEffectsRunner();(0,_invariant.default)(expected===actual);if(this.realm.react.verbose)this.logger.logInformation(`  (${actual} items processed)`)}}toInfo(){return{values:this.values,functionInstances:this.functionInstances,classMethodInstances:this.classMethodInstances,functionInfos:this.functionInfos,referencedDeclaredValues:this.referencedDeclaredValues,additionalFunctionValueInfos:this.additionalFunctionValueInfos,
declarativeEnvironmentRecordsBindings:this.declarativeEnvironmentRecordsBindings,globalBindings:this.globalBindings,conditionalFeasibility:this.conditionalFeasibility,additionalGeneratorRoots:this.additionalGeneratorRoots}}}exports.ResidualHeapVisitor=ResidualHeapVisitor},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;exports.describeLocation=describeLocation;exports.build=build;var _index=__webpack_require__(10);var _index2=
__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){return build("Error",realm,false)}function describeLocation(realm,callerFn,env,loc){let locString="";let displayName="";let key=loc||callerFn;if(key){if(realm.alreadyDescribedLocations.has(key))return realm.alreadyDescribedLocations.get(key);
realm.alreadyDescribedLocations.set(key,undefined)}if(callerFn){if(callerFn instanceof _index.NativeFunctionValue)locString="native";let name=callerFn._SafeGetDataPropertyValue("name");if(!name.mightBeUndefined())displayName=_singletons.To.ToStringPartial(realm,name);else name.throwIfNotConcrete();if(env&&env.environmentRecord.$NewTarget)displayName=`new ${displayName}`}if(!locString)if(loc){locString=`${loc.start.line}:${loc.start.column+1}`;if(loc.source!==null)locString=`${loc.source}:${locString}`}else{locString=
(loc?loc.source:undefined)||"unknown";if(!displayName)return undefined}let location;if(displayName)location=`at ${displayName} (${locString})`;else location=`at ${locString}`;if(key)realm.alreadyDescribedLocations.set(key,location);return location}const buildStackTemplateSrc='A + (B ? ": " + B : "") + C';function buildStack(realm,context){(0,_invariant.default)(context.$ErrorData);let stack=context.$ErrorData.contextStack;if(!stack)return realm.intrinsics.undefined;let lines=[];let header=_singletons.To.ToStringPartial(realm,
(0,_index2.Get)(realm,context,"name"));let message=(0,_index2.Get)(realm,context,"message");if(!message.mightBeUndefined())message=_singletons.To.ToStringValue(realm,message);else message.throwIfNotConcrete();for(let executionContext of stack.reverse()){let caller=executionContext.caller;if(!executionContext.loc)continue;let locString=describeLocation(realm,caller?caller.function:undefined,caller?caller.lexicalEnvironment:undefined,executionContext.loc);if(locString!==undefined)lines.push(locString)}let footer=
`\n    ${lines.join("\n    ")}`;return message instanceof _index.StringValue?new _index.StringValue(realm,`${header}${message.value?`: ${message.value}`:""}${footer}`):_index.AbstractValue.createFromTemplate(realm,buildStackTemplateSrc,_index.StringValue,[new _index.StringValue(realm,header),message,new _index.StringValue(realm,footer)])}function build(name,realm,inheritError=true){let func=new _index.NativeFunctionValue(realm,name,name,1,(context,[message],argLength,NewTarget)=>{let newTarget=NewTarget||
func;let O=_singletons.Create.OrdinaryCreateFromConstructor(realm,newTarget,`${name}Prototype`,{$ErrorData:undefined});O.$ErrorData={contextStack:realm.contextStack.slice(1),locationData:undefined};if(!message.mightBeUndefined()){let msg=message.getType()===_index.StringValue?message:_singletons.To.ToStringValue(realm,message);let msgDesc=new _descriptors.PropertyDescriptor({value:msg,writable:true,enumerable:false,configurable:true});_singletons.Properties.DefinePropertyOrThrow(realm,O,"message",
msgDesc)}else message.throwIfNotConcrete();let stackDesc=new _descriptors.PropertyDescriptor({value:buildStack(realm,O),enumerable:false,configurable:true,writable:true});_singletons.Properties.DefinePropertyOrThrow(realm,O,"stack",stackDesc);return O});if(inheritError)func.$Prototype=realm.intrinsics.Error;return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ClosureRefVisitor=void 0;var _realm=__webpack_require__(7);var t=_interopRequireWildcard(__webpack_require__(21));
function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function visitName(path,state,node,modified){if(path.scope.hasBinding(node.name,true))return;let nodes=
state.functionInfo.unbound.get(node.name);if(nodes===undefined)state.functionInfo.unbound.set(node.name,nodes=[]);nodes.push(node);if(modified)state.functionInfo.modified.add(node.name)}function ignorePath(path){let parent=path.parent;return t.isLabeledStatement(parent)||t.isBreakStatement(parent)||t.isContinueStatement(parent)}let ClosureRefVisitor={"FunctionDeclaration|ArrowFunctionExpression|FunctionExpression":{enter(path,state){state.functionInfo.depth++},exit(path,state){state.functionInfo.depth--}},
ArrowFunctionExpression:{enter(path,state){state.functionInfo.depth++;state.functionInfo.lexicalDepth++},exit(path,state){state.functionInfo.depth--;state.functionInfo.lexicalDepth--}},CallExpression(path,state){if(state.getModuleIdIfNodeIsRequireFunction===undefined)return;let moduleId=state.getModuleIdIfNodeIsRequireFunction(path.scope,path.node);if(moduleId===undefined)return;state.functionInfo.requireCalls.set(path.node,moduleId)},ReferencedIdentifier(path,state){if(ignorePath(path))return;let innerName=
path.node.name;if(innerName==="arguments"){if(state.functionInfo.depth===1)state.functionInfo.usesArguments=true;return}visitName(path,state,path.node,false)},ThisExpression(path,state){if(state.functionInfo.depth-state.functionInfo.lexicalDepth===1)state.functionInfo.usesThis=true},["AssignmentExpression|UpdateExpression"](path,state){let ids=path.getBindingIdentifiers();for(let name in ids)visitName(path,state,ids[name],true)},["ForInStatement|ForOfStatement"](path,state){if(path.node.left!=="VariableDeclaration"){const ids=
path.get("left").getBindingIdentifiers();for(const name in ids)visitName(path,state,ids[name],true)}}};exports.ClosureRefVisitor=ClosureRefVisitor},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.HeapInspector=void 0;var _realm=__webpack_require__(7);var _index=__webpack_require__(232);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _logger=__webpack_require__(412);
var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){if(key in obj)Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});else obj[key]=value;return obj}function hasAnyConfigurable(desc){if(!desc)return false;if(desc instanceof _descriptors.PropertyDescriptor)return!!desc.configurable;if(desc instanceof _descriptors.AbstractJoinedDescriptor)return hasAnyConfigurable(desc.descriptor1)||
hasAnyConfigurable(desc.descriptor2);(0,_invariant.default)(false,"internal slots aren't covered here")}function hasAnyWritable(desc){if(!desc)return false;if(desc instanceof _descriptors.PropertyDescriptor)return desc.value!==undefined&&!!desc.writable;if(desc instanceof _descriptors.AbstractJoinedDescriptor)return hasAnyWritable(desc.descriptor1)||hasAnyWritable(desc.descriptor2);(0,_invariant.default)(false,"internal slots aren't covered here")}class HeapInspector{constructor(realm,logger){this.realm=
realm;this.logger=logger;this.ignoredProperties=new Map;this._targetIntegrityCommands=new Map}getTargetIntegrityCommand(val){let command=this._targetIntegrityCommands.get(val);if(command===undefined){command="";if(val instanceof _index2.ProxyValue);else{let extensible=val.$Extensible;if(!(extensible instanceof _index2.BooleanValue))this.logger.logError(val,"Object that might or might not be sealed or frozen are not supported in residual heap.");else if(!extensible.value){let anyWritable=false,anyConfigurable=
false;for(let propertyBinding of val.properties.values()){let desc=propertyBinding.descriptor;if(desc===undefined)continue;if(hasAnyConfigurable(desc))anyConfigurable=true;else if(hasAnyWritable(desc))anyWritable=true}command=anyConfigurable?"preventExtensions":anyWritable?"seal":"freeze"}}this._targetIntegrityCommands.set(val,command)}return command}getTargetIntegrityDescriptor(val){return HeapInspector._integrityDescriptors[this.getTargetIntegrityCommand(val)]}static isLeaf(val){if(val instanceof
_index2.SymbolValue)return false;if(val instanceof _index2.AbstractValue){if(val.hasIdentifier())return true;if(val.$Realm.instantRender.enabled&&val.intrinsicName!==undefined&&val.intrinsicName.startsWith("__native"))return true}if(val.isIntrinsic())return false;return val instanceof _index2.PrimitiveValue}canIgnoreProperty(val,key){let set=this.ignoredProperties.get(val);if(!set)this.ignoredProperties.set(val,set=this._getIgnoredProperties(val));return set.has(key)}_getIgnoredProperties(val){let set=
new Set;for(let [key,propertyBinding]of val.properties){(0,_invariant.default)(propertyBinding);let desc=propertyBinding.descriptor;if(desc===undefined)continue;if(this._canIgnoreProperty(val,key,desc))set.add(key)}return set}_canIgnoreProperty(val,key,desc){if(!(desc instanceof _descriptors.PropertyDescriptor))return false;let targetDescriptor=this.getTargetIntegrityDescriptor(val);if((0,_index.IsArray)(this.realm,val)){if(key==="length"&&desc.writable===targetDescriptor.writable&&desc.enumerable!==
true&&desc.configurable!==true)return true}else if(val instanceof _index2.FunctionValue){if(key==="length"){if(desc.value===undefined)this.logger.logError(val,"Functions with length accessor properties are not supported in residual heap.");return desc.writable!==true&&desc.enumerable!==true&&desc.configurable===targetDescriptor.configurable&&val.hasDefaultLength()}if(key==="name"){if(desc.value!==undefined&&!this.realm.isCompatibleWith(this.realm.MOBILE_JSC_VERSION)&&!this.realm.isCompatibleWith("mobile")&&
(desc.value instanceof _index2.AbstractValue||desc.value instanceof _index2.ConcreteValue&&val.__originalName!==undefined&&val.__originalName!==""&&_singletons.To.ToString(this.realm,desc.value)!==val.__originalName))return false;return true}if(key==="arguments"||key==="caller"){(0,_invariant.default)(val instanceof _index2.ECMAScriptSourceFunctionValue);if(!val.$Strict&&desc.writable===(!val.$Strict&&targetDescriptor.writable)&&desc.enumerable!==true&&desc.configurable===targetDescriptor.configurable&&
desc.value instanceof _index2.UndefinedValue&&val.$FunctionKind==="normal")return true}if(key==="prototype")if(desc.configurable!==true&&desc.enumerable!==true&&desc.writable===targetDescriptor.writable&&desc.value instanceof _index2.ObjectValue&&desc.value.originalConstructor===val)return true}else{let kind=val.getKind();switch(kind){case "RegExp":if(key==="lastIndex"&&desc.writable===targetDescriptor.writable&&desc.enumerable!==true&&desc.configurable!==true){let v=desc.value;return v instanceof
_index2.NumberValue&&v.value===0}break;default:break}}if(key==="constructor")if(desc.configurable===targetDescriptor.configurable&&desc.enumerable!==true&&desc.writable===targetDescriptor.writable&&desc.value===val.originalConstructor)return true;return false}static getPropertyValue(val,name){let prototypeBinding=val.properties.get(name);if(prototypeBinding===undefined)return undefined;let prototypeDesc=prototypeBinding.descriptor;if(prototypeDesc===undefined)return undefined;(0,_invariant.default)(prototypeDesc instanceof
_descriptors.PropertyDescriptor);(0,_invariant.default)(prototypeDesc.value===undefined||prototypeDesc.value instanceof _index2.Value);return prototypeDesc.value}isDefaultPrototype(prototype){if(prototype.symbols.size!==0||prototype.$Prototype!==this.realm.intrinsics.ObjectPrototype||prototype.$Extensible.mightNotBeTrue())return false;let foundConstructor=false;for(let name of prototype.properties.keys())if(name==="constructor"&&HeapInspector.getPropertyValue(prototype,name)===prototype.originalConstructor)foundConstructor=
true;else return false;return foundConstructor}}exports.HeapInspector=HeapInspector;_defineProperty(HeapInspector,"_integrityDescriptors",{"":{writable:true,configurable:true},preventExtensions:{writable:true,configurable:true},seal:{writable:true,configurable:false},freeze:{writable:false,configurable:false}})},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ResidualReactElementVisitor=void 0;var _realm=__webpack_require__(7);var _index=
__webpack_require__(10);var _ResidualHeapVisitor=__webpack_require__(423);var _hoisting=__webpack_require__(428);var _elements=__webpack_require__(420);var _utils=__webpack_require__(291);var _invariant=_interopRequireDefault(__webpack_require__(9));var _generator=__webpack_require__(237);var _ReactEquivalenceSet=__webpack_require__(429);var _ReactElementSet=__webpack_require__(430);var _ReactPropsSet=__webpack_require__(431);var _index2=__webpack_require__(232);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}class ResidualReactElementVisitor{constructor(realm,residualHeapVisitor){this.realm=realm;this.residualHeapVisitor=residualHeapVisitor;this.reactOutput=realm.react.output||"create-element";this.defaultEquivalenceSet=true;this.reactEquivalenceSet=new _ReactEquivalenceSet.ReactEquivalenceSet(realm,this);this.reactElementEquivalenceSet=new _ReactElementSet.ReactElementSet(realm,this.reactEquivalenceSet);this.reactPropsEquivalenceSet=new _ReactPropsSet.ReactPropsSet(realm,
this.reactEquivalenceSet)}visitReactElement(reactElement){let reactElementData=this.realm.react.reactElements.get(reactElement);(0,_invariant.default)(reactElementData!==undefined);let {firstRenderOnly}=reactElementData;let isReactFragment=false;(0,_elements.traverseReactElement)(this.realm,reactElement,{visitType:(typeValue)=>{let reactElementStringTypeReferences=this.realm.react.reactElementStringTypeReferences;if(typeValue instanceof _index.StringValue&&reactElementStringTypeReferences.has(typeValue.value)){let reference=
reactElementStringTypeReferences.get(typeValue.value);(0,_invariant.default)(reference instanceof _index.AbstractValue);(0,_utils.hardModifyReactObjectPropertyBinding)(this.realm,reactElement,"type",reference);this.residualHeapVisitor.visitValue(reference);return}isReactFragment=typeValue instanceof _index.SymbolValue&&typeValue===(0,_utils.getReactSymbol)("react.fragment",this.realm);if(!isReactFragment)this.residualHeapVisitor.visitValue(typeValue)},visitKey:(keyValue)=>{this.residualHeapVisitor.visitValue(keyValue)},
visitRef:(refValue)=>{if(!firstRenderOnly)this.residualHeapVisitor.visitValue(refValue)},visitAbstractOrPartialProps:(propsValue)=>{this.residualHeapVisitor.visitValue(propsValue)},visitConcreteProps:(propsValue)=>{for(let [propName,binding]of propsValue.properties){(0,_invariant.default)(propName!=="key"&&propName!=="ref",`"${propName}" is a reserved prop name`);if(binding.descriptor===undefined||propName==="children")continue;let propValue=(0,_utils.getProperty)(this.realm,propsValue,propName);
if((0,_utils.canExcludeReactElementObjectProperty)(this.realm,reactElement,propName,propValue))continue;this.residualHeapVisitor.visitValue(propValue)}},visitChildNode:(childValue)=>{this.residualHeapVisitor.visitValue(childValue)}});if(this.realm.react.output==="create-element"){const reactLibraryObject=this._getReactLibraryValue();(0,_invariant.default)(reactLibraryObject instanceof _index.ObjectValue);const createElement=reactLibraryObject.properties.get("createElement");(0,_invariant.default)(createElement!==
undefined);const reactCreateElement=(0,_index2.Get)(this.realm,reactLibraryObject,"createElement");this.residualHeapVisitor._visitInUnrelatedScope(this.residualHeapVisitor.globalGenerator,reactCreateElement)}if(isReactFragment){const reactLibraryObject=this._getReactLibraryValue();this.residualHeapVisitor._visitInUnrelatedScope(this.residualHeapVisitor.globalGenerator,reactLibraryObject)}(0,_hoisting.determineIfReactElementCanBeHoisted)(this.realm,reactElement,this.residualHeapVisitor)}withCleanEquivalenceSet(func){let defaultEquivalenceSet=
this.defaultEquivalenceSet;let reactEquivalenceSet=this.reactEquivalenceSet;let reactElementEquivalenceSet=this.reactElementEquivalenceSet;let reactPropsEquivalenceSet=this.reactPropsEquivalenceSet;this.defaultEquivalenceSet=false;this.reactEquivalenceSet=new _ReactEquivalenceSet.ReactEquivalenceSet(this.realm,this);this.reactElementEquivalenceSet=new _ReactElementSet.ReactElementSet(this.realm,this.reactEquivalenceSet);this.reactPropsEquivalenceSet=new _ReactPropsSet.ReactPropsSet(this.realm,this.reactEquivalenceSet);
func();this.defaultEquivalenceSet=defaultEquivalenceSet;this.reactEquivalenceSet=reactEquivalenceSet;this.reactElementEquivalenceSet=reactElementEquivalenceSet;this.reactPropsEquivalenceSet=reactPropsEquivalenceSet}saveEquivalenceSet(){const {reactEquivalenceSet,reactElementEquivalenceSet,reactPropsEquivalenceSet}=this;return{reactEquivalenceSet,reactElementEquivalenceSet,reactPropsEquivalenceSet}}loadEquivalenceSet(save,func){const defaultEquivalenceSet=this.defaultEquivalenceSet;const reactEquivalenceSet=
this.reactEquivalenceSet;const reactElementEquivalenceSet=this.reactElementEquivalenceSet;const reactPropsEquivalenceSet=this.reactPropsEquivalenceSet;this.defaultEquivalenceSet=false;this.reactEquivalenceSet=save.reactEquivalenceSet;this.reactElementEquivalenceSet=save.reactElementEquivalenceSet;this.reactPropsEquivalenceSet=save.reactPropsEquivalenceSet;const result=func();this.defaultEquivalenceSet=defaultEquivalenceSet;this.reactEquivalenceSet=reactEquivalenceSet;this.reactElementEquivalenceSet=
reactElementEquivalenceSet;this.reactPropsEquivalenceSet=reactPropsEquivalenceSet;return result}wasTemporalAliasDeclaredInCurrentScope(temporalAlias){let scope=this.residualHeapVisitor.scope;if(scope instanceof _index.FunctionValue)return false;if(this.residualHeapVisitor.values.has(temporalAlias))return false;for(let i=0;i<scope._entries.length;i++){let entry=scope._entries[i];if(entry instanceof _generator.TemporalOperationEntry)if(entry.declared===temporalAlias)return true}return false}_getReactLibraryValue(){const reactLibraryObject=
this.realm.fbLibraries.react;(0,_invariant.default)(reactLibraryObject,"Unable to find React library reference in scope.");return reactLibraryObject}}exports.ResidualReactElementVisitor=ResidualReactElementVisitor},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.canHoistFunction=canHoistFunction;exports.canHoistReactElement=canHoistReactElement;exports.determineIfReactElementCanBeHoisted=determineIfReactElementCanBeHoisted;var _realm=__webpack_require__(7);
var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));var _utils=__webpack_require__(291);var _ResidualHeapVisitor=__webpack_require__(423);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function canHoistObject(realm,object,residualHeapVisitor,visitedValues){if((0,_utils.isReactElement)(object))return canHoistReactElement(realm,object,residualHeapVisitor,visitedValues);for(let [propName]of object.properties){let prop=
(0,_index2.Get)(realm,object,propName);if(!canHoistValue(realm,prop,residualHeapVisitor,visitedValues))return false}for(let [symbol]of object.symbols){let prop=(0,_index2.Get)(realm,object,symbol);if(!canHoistValue(realm,prop,residualHeapVisitor,visitedValues))return false}return true}function canHoistArray(realm,array,residualHeapVisitor,visitedValues){if(array.intrinsicName)return false;let lengthValue=(0,_index2.Get)(realm,array,"length");if(!canHoistValue(realm,lengthValue,residualHeapVisitor,
visitedValues))return false;if(lengthValue instanceof _index.NumberValue){let length=lengthValue.value;for(let i=0;i<length;i++){let element=(0,_index2.Get)(realm,array,""+i);if(!canHoistValue(realm,element,residualHeapVisitor,visitedValues))return false}}return true}function canHoistFunction(realm,func,residualHeapVisitor,visitedValues){if(realm.react.hoistableFunctions.has(func))return realm.react.hoistableFunctions.get(func);if(residualHeapVisitor===undefined)return false;let functionInstance=
residualHeapVisitor.functionInstances.get(func);if(functionInstance!==undefined){(0,_invariant.default)(functionInstance.residualFunctionBindings instanceof Map);let residualBindings=functionInstance.residualFunctionBindings;for(let [,{declarativeEnvironmentRecord,value}]of residualBindings)if(declarativeEnvironmentRecord!==null){if(value===undefined)return false;(0,_invariant.default)(value instanceof _index.Value);if(!canHoistValue(realm,value,residualHeapVisitor,visitedValues))return false}if(func instanceof
_index.ECMAScriptSourceFunctionValue){let code=func.$ECMAScriptCode;let functionInfos=residualHeapVisitor.functionInfos.get(code);if(functionInfos&&functionInfos.unbound.size>0)return false}realm.react.hoistableFunctions.set(func,true);return true}realm.react.hoistableFunctions.set(func,false);return false}function canHoistAbstract(realm,abstract,residualHeapVisitor){return false}function isPrimitive(realm,value){return value instanceof _index.StringValue||value instanceof _index.NumberValue||value instanceof
_index.SymbolValue||value instanceof _index.BooleanValue||value===realm.intrinsics.null||value===realm.intrinsics.undefined}function canHoistValue(realm,value,residualHeapVisitor,visitedValues){if(visitedValues.has(value))return false;visitedValues.add(value);let canHoist=false;if(value instanceof _index.ArrayValue)canHoist=canHoistArray(realm,value,residualHeapVisitor,visitedValues);else if(value instanceof _index.FunctionValue)canHoist=canHoistFunction(realm,value,residualHeapVisitor,visitedValues);
else if(value instanceof _index.ObjectValue)canHoist=canHoistObject(realm,value,residualHeapVisitor,visitedValues);else if(value instanceof _index.AbstractValue)canHoist=canHoistAbstract(realm,value,residualHeapVisitor);else if(isPrimitive)canHoist=true;visitedValues.delete(value);return canHoist}function canHoistReactElement(realm,reactElement,residualHeapVisitor,visitedValues){if(realm.react.hoistableReactElements.has(reactElement))return realm.react.hoistableReactElements.get(reactElement);if(residualHeapVisitor===
undefined)return false;let type=(0,_utils.getProperty)(realm,reactElement,"type");let ref=(0,_utils.getProperty)(realm,reactElement,"ref");let key=(0,_utils.getProperty)(realm,reactElement,"key");let props=(0,_utils.getProperty)(realm,reactElement,"props");if(visitedValues===undefined){visitedValues=new Set;visitedValues.add(reactElement)}if(canHoistValue(realm,type,residualHeapVisitor,visitedValues)&&!(ref instanceof String||ref instanceof _index.AbstractValue)&&canHoistValue(realm,ref,residualHeapVisitor,
visitedValues)&&canHoistValue(realm,key,residualHeapVisitor,visitedValues)&&!props.isPartialObject()&&canHoistValue(realm,props,residualHeapVisitor,visitedValues)){realm.react.hoistableReactElements.set(reactElement,true);return true}realm.react.hoistableReactElements.set(reactElement,false);return false}function determineIfReactElementCanBeHoisted(realm,reactElement,residualHeapVisitor){canHoistReactElement(realm,reactElement,residualHeapVisitor)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.ReactEquivalenceSet=exports.temporalAliasSymbol=void 0;var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var _utils=__webpack_require__(291);var _ResidualReactElementVisitor=__webpack_require__(427);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const temporalAliasSymbol=Symbol("temporalAlias");exports.temporalAliasSymbol=temporalAliasSymbol;class ReactEquivalenceSet{constructor(realm,
residualReactElementVisitor){this.realm=realm;this.residualReactElementVisitor=residualReactElementVisitor;this.objectRoot=new Map;this.arrayRoot=new Map;this.reactElementRoot=new Map;this.reactPropsRoot=new Map;this.temporalAliasRoot=new Map}_createNode(){return{map:new Map,value:null}}getKey(key,map,visitedValues){if(!map.has(key))map.set(key,new Map);return map.get(key)}_getValue(val,map,visitedValues){if(val instanceof _index.StringValue||val instanceof _index.NumberValue)val=val.value;else if(val instanceof
_index.AbstractValue)val=this.residualReactElementVisitor.residualHeapVisitor.equivalenceSet.add(val);else if(val instanceof _index.ArrayValue)val=this._getArrayValue(val,visitedValues);else if(val instanceof _index.ObjectValue&&!(val instanceof _index.FunctionValue))val=this._getObjectValue(val,visitedValues);if(!map.has(val))map.set(val,this._createNode());return map.get(val)}_getObjectValue(object,visitedValues){if(visitedValues.has(object))return object;visitedValues.add(object);if((0,_utils.isReactElement)(object))return this.residualReactElementVisitor.reactElementEquivalenceSet.add(object);
let currentMap=this.objectRoot;let result;for(let [propName]of object.properties){currentMap=this.getKey(propName,currentMap,visitedValues);result=this.getEquivalentPropertyValue(object,propName,currentMap,visitedValues);currentMap=result.map}for(let [symbol]of object.symbols){currentMap=this.getKey(symbol,currentMap,visitedValues);let prop=(0,_utils.getProperty)(this.realm,object,symbol);result=this._getValue(prop,currentMap,visitedValues);currentMap=result.map}let temporalAlias=object.temporalAlias;
if(temporalAlias!==undefined){currentMap=this.getKey(temporalAliasSymbol,currentMap,visitedValues);result=this.getTemporalAliasValue(temporalAlias,currentMap,visitedValues)}if(result===undefined){if(temporalAlias===undefined&&this.realm.react.emptyObject!==undefined)return this.realm.react.emptyObject;return object}if(result.value===null)result.value=object;return result.value}_getTemporalValue(temporalAlias,visitedValues){if(!this.residualReactElementVisitor.wasTemporalAliasDeclaredInCurrentScope(temporalAlias))return temporalAlias;
let temporalOperationEntry=this.realm.getTemporalOperationEntryFromDerivedValue(temporalAlias);if(temporalOperationEntry===undefined)return temporalAlias;let temporalArgs=temporalOperationEntry.args;if(temporalArgs.length===0)return temporalAlias;let currentMap=this.temporalAliasRoot;let result;for(let i=0;i<temporalArgs.length;i++){let arg=temporalArgs[i];let equivalenceArg;if(arg instanceof _index.ObjectValue&&arg.temporalAlias===temporalAlias)continue;if(arg instanceof _index.ObjectValue&&(0,_utils.isReactElement)(arg)){equivalenceArg=
this.residualReactElementVisitor.reactElementEquivalenceSet.add(arg);if(arg!==equivalenceArg)temporalArgs[i]=equivalenceArg}else if(arg instanceof _index.AbstractObjectValue&&!arg.values.isTop()&&arg.kind!=="conditional"){let childTemporalOperationEntry=this.realm.getTemporalOperationEntryFromDerivedValue(arg);if(childTemporalOperationEntry!==undefined){equivalenceArg=this._getTemporalValue(arg,visitedValues);(0,_invariant.default)(equivalenceArg instanceof _index.AbstractObjectValue);if(equivalenceArg!==
arg)temporalArgs[i]=equivalenceArg}}else if(arg instanceof _index.AbstractValue){equivalenceArg=this.residualReactElementVisitor.residualHeapVisitor.equivalenceSet.add(arg);if(arg!==equivalenceArg)temporalArgs[i]=equivalenceArg}currentMap=this.getKey(i,currentMap,visitedValues);(0,_invariant.default)(arg instanceof _index.Value&&(equivalenceArg instanceof _index.Value||equivalenceArg===undefined));result=this._getValue(equivalenceArg||arg,currentMap,visitedValues);currentMap=result.map}(0,_invariant.default)(result!==
undefined);if(result.value===null)result.value=temporalAlias;if(!this.residualReactElementVisitor.wasTemporalAliasDeclaredInCurrentScope(result.value)){result.value=temporalAlias;return temporalAlias}return result.value}getTemporalAliasValue(temporalAlias,map,visitedValues){let result=this._getTemporalValue(temporalAlias,visitedValues);(0,_invariant.default)(result instanceof _index.AbstractObjectValue);if(!map.has(result))map.set(result,this._createNode());return map.get(result)}_getArrayValue(array,
visitedValues){if(visitedValues.has(array))return array;if(array.intrinsicName)return array;visitedValues.add(array);let currentMap=this.arrayRoot;currentMap=this.getKey("length",currentMap,visitedValues);let result=this.getEquivalentPropertyValue(array,"length",currentMap,visitedValues);currentMap=result.map;let lengthValue=(0,_utils.getProperty)(this.realm,array,"length");if(lengthValue instanceof _index.NumberValue){(0,_invariant.default)(lengthValue instanceof _index.NumberValue);let length=lengthValue.value;
for(let i=0;i<length;i++){currentMap=this.getKey(i,currentMap,visitedValues);result=this.getEquivalentPropertyValue(array,""+i,currentMap,visitedValues);currentMap=result.map}}if(result===undefined){if(this.realm.react.emptyArray!==undefined)return this.realm.react.emptyArray;return array}if(result.value===null)result.value=array;(0,_invariant.default)(result.value instanceof _index.ArrayValue);return result.value}getEquivalentPropertyValue(object,propName,map,visitedValues){let prop=(0,_utils.getProperty)(this.realm,
object,propName);let isFinal=object.mightBeFinalObject();let equivalentProp;if(prop instanceof _index.ObjectValue&&(0,_utils.isReactElement)(prop))equivalentProp=this.residualReactElementVisitor.reactElementEquivalenceSet.add(prop);else if(prop instanceof _index.ObjectValue&&(0,_utils.isReactPropsObject)(prop))equivalentProp=this.residualReactElementVisitor.reactPropsEquivalenceSet.add(prop);else if(prop instanceof _index.AbstractValue)equivalentProp=this.residualReactElementVisitor.residualHeapVisitor.equivalenceSet.add(prop);
if(equivalentProp!==undefined){if(prop!==equivalentProp&&isFinal)(0,_utils.hardModifyReactObjectPropertyBinding)(this.realm,object,propName,equivalentProp);if(!map.has(equivalentProp))map.set(equivalentProp,this._createNode());return map.get(equivalentProp)}else return this._getValue(prop,map,visitedValues)}}exports.ReactEquivalenceSet=ReactEquivalenceSet},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ReactElementSet=void 0;var _realm=
__webpack_require__(7);var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var _ReactEquivalenceSet=__webpack_require__(429);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ReactElementSet{constructor(realm,reactEquivalenceSet){this.realm=realm;this.reactEquivalenceSet=reactEquivalenceSet}add(reactElement,visitedValues){if(!visitedValues)visitedValues=new Set;let reactEquivalenceSet=this.reactEquivalenceSet;let currentMap=
reactEquivalenceSet.reactElementRoot;currentMap=reactEquivalenceSet.getKey("type",currentMap,visitedValues);let result=reactEquivalenceSet.getEquivalentPropertyValue(reactElement,"type",currentMap,visitedValues);currentMap=result.map;currentMap=reactEquivalenceSet.getKey("key",currentMap,visitedValues);result=reactEquivalenceSet.getEquivalentPropertyValue(reactElement,"key",currentMap,visitedValues);currentMap=result.map;currentMap=reactEquivalenceSet.getKey("ref",currentMap,visitedValues);result=
reactEquivalenceSet.getEquivalentPropertyValue(reactElement,"ref",currentMap,visitedValues);currentMap=result.map;currentMap=reactEquivalenceSet.getKey("props",currentMap,visitedValues);result=reactEquivalenceSet.getEquivalentPropertyValue(reactElement,"props",currentMap,visitedValues);if(result.value===null)result.value=reactElement;(0,_invariant.default)(result.value instanceof _index.ObjectValue);return result.value}}exports.ReactElementSet=ReactElementSet},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.ReactPropsSet=void 0;var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var _ReactEquivalenceSet=__webpack_require__(429);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ReactPropsSet{constructor(realm,reactEquivalenceSet){this.realm=realm;this.reactEquivalenceSet=reactEquivalenceSet}add(props,visitedValues){if(!visitedValues)visitedValues=new Set;
let reactEquivalenceSet=this.reactEquivalenceSet;let currentMap=reactEquivalenceSet.reactPropsRoot;let result;for(let [propName]of props.properties){currentMap=reactEquivalenceSet.getKey(propName,currentMap,visitedValues);result=reactEquivalenceSet.getEquivalentPropertyValue(props,propName,currentMap,visitedValues);currentMap=result.map}let temporalAlias=props.temporalAlias;if(temporalAlias!==undefined){currentMap=reactEquivalenceSet.getKey(_ReactEquivalenceSet.temporalAliasSymbol,currentMap,visitedValues);
result=reactEquivalenceSet.getTemporalAliasValue(temporalAlias,currentMap,visitedValues);currentMap=result.map}if(result===undefined){if(temporalAlias===undefined&&this.realm.react.emptyObject!==undefined)return this.realm.react.emptyObject;return props}if(result.value===null)result.value=props;(0,_invariant.default)(result.value instanceof _index.ObjectValue);return result.value}}exports.ReactPropsSet=ReactPropsSet},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.GeneratorTree=void 0;var _invariant=_interopRequireDefault(__webpack_require__(9));var _index=__webpack_require__(10);var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class GeneratorTree{constructor(){this.parents=new Map;this.createdObjects=new Map}getParent(generator){let parent=this.parents.get(generator);(0,_invariant.default)(parent!==undefined);return parent}getCreator(value){return this.createdObjects.get(value)}add(parent,
generator){this._add(parent,generator)}_add(parent,generator){(0,_invariant.default)(!this.parents.has(generator));this.parents.set(generator,parent);let effects=generator.effectsToApply;if(effects!==undefined){(0,_invariant.default)(parent instanceof _index.FunctionValue);for(let createdObject of effects.createdObjects){let isValidPreviousCreator=(previousCreator)=>{if(previousCreator===undefined)return true;if(previousCreator===parent)return true;if(previousCreator===generator)return true;return true};
(0,_invariant.default)(isValidPreviousCreator(this.createdObjects.get(createdObject)));this.createdObjects.set(createdObject,generator)}}for(let dependency of generator.getDependencies())this._add(generator,dependency)}}exports.GeneratorTree=GeneratorTree},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ResidualHeapSerializer=void 0;var _realm=__webpack_require__(7);var _index=__webpack_require__(232);var _index2=__webpack_require__(10);
var t=_interopRequireWildcard(__webpack_require__(21));var _generator=__webpack_require__(237);var _PreludeGenerator=__webpack_require__(238);var _NameGenerator=__webpack_require__(240);var _invariant=_interopRequireDefault(__webpack_require__(9));var _types2=__webpack_require__(408);var _statistics=__webpack_require__(407);var _logger=__webpack_require__(412);var _modules=__webpack_require__(411);var _HeapInspector=__webpack_require__(426);var _ResidualFunctions=__webpack_require__(434);var _factorify=
__webpack_require__(438);var _babelhelpers=__webpack_require__(239);var _Emitter=__webpack_require__(440);var _ResidualHeapValueIdentifiers=__webpack_require__(441);var _utils=__webpack_require__(413);var _errors=__webpack_require__(3);var _hoisting=__webpack_require__(428);var _singletons=__webpack_require__(236);var _ResidualReactElementSerializer=__webpack_require__(442);var _environment=__webpack_require__(20);var _GeneratorTree=__webpack_require__(432);var _ResidualFunctionInstantiator=__webpack_require__(435);
var _utils2=__webpack_require__(443);var _ResidualOperationSerializer=__webpack_require__(444);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||
desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function commentStatement(text){let s=t.emptyStatement();s.leadingComments=[{type:"BlockComment",value:text}];return s}class CountingSemaphore{constructor(action,initialCount=1){(0,_invariant.default)(initialCount>=1);this.count=initialCount;this.action=action}acquireOne(){this.count++}releaseOne(){(0,_invariant.default)(this.count>0);if(--this.count===0)this.action()}}class ResidualHeapSerializer{constructor(realm,
logger,modules,residualHeapValueIdentifiers,residualHeapInspector,residualHeapInfo,options,additionalFunctionValuesAndEffects,referentializer,generatorTree,residualOptimizedFunctions){this.realm=realm;this.logger=logger;this.modules=modules;this.residualHeapValueIdentifiers=residualHeapValueIdentifiers;this.referentializer=referentializer;this._residualOptimizedFunctions=residualOptimizedFunctions;let realmGenerator=this.realm.generator;(0,_invariant.default)(realmGenerator);this.generator=realmGenerator;
let realmPreludeGenerator=this.realm.preludeGenerator;(0,_invariant.default)(realmPreludeGenerator);this.preludeGenerator=realmPreludeGenerator;this.residualOperationSerializer=new _ResidualOperationSerializer.ResidualOperationSerializer(realm,realmPreludeGenerator);this.prelude=[];this._descriptors=new Map;this.needsEmptyVar=false;this.needsAuxiliaryConstructor=false;this.descriptorNameGenerator=this.preludeGenerator.createNameGenerator("$$");this.factoryNameGenerator=this.preludeGenerator.createNameGenerator("$_");
this.intrinsicNameGenerator=this.preludeGenerator.createNameGenerator("$i_");this.functionNameGenerator=this.preludeGenerator.createNameGenerator("$f_");this.initializeConditionNameGenerator=this.preludeGenerator.createNameGenerator("_initialized");this.initializerNameGenerator=this.preludeGenerator.createNameGenerator("__init_");this.requireReturns=new Map;this.serializedValues=new Set;this._serializedValueWithIdentifiers=new Set;this.additionalFunctionValueNestedFunctions=new Set;this.residualReactElementSerializer=
new _ResidualReactElementSerializer.ResidualReactElementSerializer(this.realm,this,residualOptimizedFunctions);this.residualFunctions=new _ResidualFunctions.ResidualFunctions(this.realm,options,this.modules,this.requireReturns,{getContainingAdditionalFunction:(functionValue)=>{let instance=this.residualFunctionInstances.get(functionValue);(0,_invariant.default)(instance!==undefined);return instance.containingAdditionalFunction},getLocation:(value)=>this.getSerializeObjectIdentifier(value),createLocation:(containingAdditionalFunction)=>
{let location=t.identifier(this.initializeConditionNameGenerator.generate());let declar=t.variableDeclaration("var",[t.variableDeclarator(location)]);this.getPrelude(containingAdditionalFunction).push(declar);return location},createFunction:(containingAdditionalFunction,statements)=>{let id=t.identifier(this.initializerNameGenerator.generate());this.getPrelude(containingAdditionalFunction).push(t.functionDeclaration(id,[],t.blockStatement(statements)));return id}},this.prelude,this.factoryNameGenerator,
residualHeapInfo.functionInfos,residualHeapInfo.functionInstances,residualHeapInfo.classMethodInstances,residualHeapInfo.additionalFunctionValueInfos,this.additionalFunctionValueNestedFunctions,referentializer);this.emitter=new _Emitter.Emitter(this.residualFunctions,residualHeapInfo.referencedDeclaredValues,residualHeapInfo.conditionalFeasibility,this.realm.derivedIds);this.mainBody=this.emitter.getBody();this.residualHeapInspector=residualHeapInspector;this.residualValues=residualHeapInfo.values;
this.residualFunctionInstances=residualHeapInfo.functionInstances;this.residualClassMethodInstances=residualHeapInfo.classMethodInstances;this.residualFunctionInfos=residualHeapInfo.functionInfos;this._options=options;this.referencedDeclaredValues=residualHeapInfo.referencedDeclaredValues;this.activeGeneratorBodies=new Map;this.additionalFunctionValuesAndEffects=additionalFunctionValuesAndEffects;this.additionalFunctionValueInfos=residualHeapInfo.additionalFunctionValueInfos;this.rewrittenAdditionalFunctions=
new Map;this.declarativeEnvironmentRecordsBindings=residualHeapInfo.declarativeEnvironmentRecordsBindings;this.globalBindings=residualHeapInfo.globalBindings;this.generatorTree=generatorTree;this.conditionalFeasibility=residualHeapInfo.conditionalFeasibility;this.additionalFunctionGenerators=new Map;this.declaredGlobalLets=new Map;this._objectSemaphores=new Map;this.additionalGeneratorRoots=residualHeapInfo.additionalGeneratorRoots;let environment=realm.$GlobalEnv.environmentRecord;(0,_invariant.default)(environment instanceof
_environment.GlobalEnvironmentRecord);this.globalEnvironmentRecord=environment}getStatistics(){(0,_invariant.default)(this.realm.statistics instanceof _statistics.SerializerStatistics,"serialization requires SerializerStatistics");return this.realm.statistics}_acquireOneObjectSemaphore(object){let semaphore=this._objectSemaphores.get(object);if(semaphore!==undefined)semaphore.acquireOne();return semaphore}_emitObjectProperties(obj,properties=obj.properties,objectPrototypeAlreadyEstablished=false,
cleanupDummyProperties,skipPrototype=false){for(let [symbol,propertyBinding]of obj.symbols){(0,_invariant.default)(propertyBinding);let desc=propertyBinding.descriptor;if(desc===undefined)continue;let semaphore=this._acquireOneObjectSemaphore(obj);this.emitter.emitNowOrAfterWaitingForDependencies(this._getDescriptorValues(desc).concat([symbol,obj]),()=>{(0,_invariant.default)(desc!==undefined);this._emitProperty(obj,symbol,desc);if(semaphore!==undefined)semaphore.releaseOne()},this.emitter.getBody())}let isCertainlyLeaked=
!obj.mightNotBeLeakedObject();let shouldDropAsAssignedProp=(descriptor)=>isCertainlyLeaked&&descriptor instanceof _descriptors.PropertyDescriptor&&descriptor.get===undefined&&descriptor.set===undefined;for(let [key,propertyBinding]of properties){(0,_invariant.default)(propertyBinding);if(propertyBinding.pathNode!==undefined)continue;let desc=propertyBinding.descriptor;if(shouldDropAsAssignedProp(desc))continue;if(desc===undefined)continue;if(this.residualHeapInspector.canIgnoreProperty(obj,key))continue;
(0,_invariant.default)(desc!==undefined);let semaphore=this._acquireOneObjectSemaphore(obj);let body=this.emitter.getBody();this.emitter.emitNowOrAfterWaitingForDependencies(this._getDescriptorValues(desc).concat(obj),()=>{(0,_invariant.default)(desc!==undefined);this._emitProperty(obj,key,desc,cleanupDummyProperties!=null&&cleanupDummyProperties.has(key));if(semaphore!==undefined)semaphore.releaseOne()},body)}if(obj.unknownProperty!==undefined){let desc=obj.unknownProperty.descriptor;if(desc!==undefined){let semaphore=
this._acquireOneObjectSemaphore(obj);this.emitter.emitNowOrAfterWaitingForDependencies(this._getNestedValuesFromAbstractDescriptor(desc,[obj]),()=>{this._emitPropertiesWithComputedNamesDescriptor(obj,desc);if(semaphore!==undefined)semaphore.releaseOne()},this.emitter.getBody())}}if(!skipPrototype){this._emitObjectPrototype(obj,objectPrototypeAlreadyEstablished);if(obj instanceof _index2.FunctionValue)this._emitConstructorPrototype(obj)}this.getStatistics().objects++;this.getStatistics().objectProperties+=
obj.properties.size}_emitObjectPrototype(obj,objectPrototypeAlreadyEstablished){let kind=obj.getKind();let proto=obj.$Prototype;if(objectPrototypeAlreadyEstablished){if(this.realm.invariantLevel>=3)this.emitter.emitNowOrAfterWaitingForDependencies([proto,obj],()=>{(0,_invariant.default)(proto);let serializedProto=this.serializeValue(proto);let uid=this.getSerializeObjectIdentifier(obj);const fetchedPrototype=this.realm.isCompatibleWith(this.realm.MOBILE_JSC_VERSION)||this.realm.isCompatibleWith("mobile")?
t.memberExpression(uid,_babelhelpers.protoExpression):t.callExpression(this.preludeGenerator.memoizeReference("Object.getPrototypeOf"),[uid]);let condition=t.binaryExpression("!==",fetchedPrototype,serializedProto);let consequent=this.residualOperationSerializer.getErrorStatement(t.stringLiteral("unexpected prototype"));this.emitter.emit(t.ifStatement(condition,consequent))},this.emitter.getBody());return}if(proto===this.realm.intrinsics[kind+"Prototype"])return;let semaphore=this._acquireOneObjectSemaphore(obj);
this.emitter.emitNowOrAfterWaitingForDependencies([proto,obj],()=>{(0,_invariant.default)(proto);let serializedProto=this.serializeValue(proto);let uid=this.getSerializeObjectIdentifier(obj);if(!this.realm.isCompatibleWith(this.realm.MOBILE_JSC_VERSION)&&!this.realm.isCompatibleWith("mobile"))this.emitter.emit(t.expressionStatement(t.callExpression(this.preludeGenerator.memoizeReference("Object.setPrototypeOf"),[uid,serializedProto])));else this.emitter.emit(t.expressionStatement(t.assignmentExpression("=",
t.memberExpression(uid,_babelhelpers.protoExpression),serializedProto)));if(semaphore!==undefined)semaphore.releaseOne()},this.emitter.getBody())}_emitConstructorPrototype(func){let prototype=_HeapInspector.HeapInspector.getPropertyValue(func,"prototype");if(prototype instanceof _index2.ObjectValue&&this.residualValues.has(prototype))this.emitter.emitNowOrAfterWaitingForDependencies([prototype],()=>{(0,_invariant.default)(prototype instanceof _index2.Value);this.serializeValue(prototype)},this.emitter.getBody())}_getNestedValuesFromAbstractDescriptor(desc,
values){if(desc===undefined)return values;if(desc instanceof _descriptors.PropertyDescriptor){let val=desc.value;(0,_invariant.default)(val instanceof _index2.AbstractValue);return this._getNestedValuesFromAbstract(val,values)}else if(desc instanceof _descriptors.AbstractJoinedDescriptor){values.push(desc.joinCondition);this._getNestedValuesFromAbstractDescriptor(desc.descriptor1,values);this._getNestedValuesFromAbstractDescriptor(desc.descriptor2,values);return values}else(0,_invariant.default)(false,
"unknown descriptor")}_getNestedValuesFromAbstract(absVal,values){if(absVal.kind==="widened property")return values;if(absVal.kind==="template for prototype member expression")return values;(0,_invariant.default)(absVal.args.length===3);let cond=absVal.args[0];(0,_invariant.default)(cond instanceof _index2.AbstractValue);if(cond.kind==="template for property name condition"){let P=cond.args[0];values.push(P);let V=absVal.args[1];values.push(V);let W=absVal.args[2];if(W instanceof _index2.AbstractValue)this._getNestedValuesFromAbstract(W,
values);else values.push(W)}else{values.push(cond);let consequent=absVal.args[1];if(consequent instanceof _index2.AbstractValue)this._getNestedValuesFromAbstract(consequent,values);else values.push(consequent);let alternate=absVal.args[2];if(alternate instanceof _index2.AbstractValue)this._getNestedValuesFromAbstract(alternate,values);else values.push(alternate)}return values}_emitPropertiesWithComputedNamesDescriptor(obj,desc){if(desc===undefined)return;if(desc instanceof _descriptors.PropertyDescriptor){let val=
desc.value;(0,_invariant.default)(val instanceof _index2.AbstractValue);this._emitPropertiesWithComputedNames(obj,val)}else if(desc instanceof _descriptors.AbstractJoinedDescriptor){let serializedCond=this.serializeValue(desc.joinCondition);let valuesToProcess=new Set;let consequentStatement;let alternateStatement;if(desc.descriptor1){let oldBody=this.emitter.beginEmitting("consequent",{type:"ConditionalAssignmentBranch",parentBody:undefined,entries:[],done:false},true);this._emitPropertiesWithComputedNamesDescriptor(obj,
desc.descriptor1);let consequentBody=this.emitter.endEmitting("consequent",oldBody,valuesToProcess,true);consequentStatement=t.blockStatement(consequentBody.entries)}if(desc.descriptor2){let oldBody=this.emitter.beginEmitting("alternate",{type:"ConditionalAssignmentBranch",parentBody:undefined,entries:[],done:false},true);this._emitPropertiesWithComputedNamesDescriptor(obj,desc.descriptor2);let alternateBody=this.emitter.endEmitting("alternate",oldBody,valuesToProcess,true);alternateStatement=t.blockStatement(alternateBody.entries)}if(consequentStatement)this.emitter.emit(t.ifStatement(serializedCond,
consequentStatement,alternateStatement));else if(alternateStatement)this.emitter.emit(t.ifStatement(t.unaryExpression("!",serializedCond),alternateStatement));this.emitter.processValues(valuesToProcess)}else(0,_invariant.default)(false,"unknown descriptor")}_emitPropertiesWithComputedNames(obj,absVal){if(absVal.kind==="widened property")return;if(absVal.kind==="template for prototype member expression")return;(0,_invariant.default)(absVal.args.length===3);let cond=absVal.args[0];(0,_invariant.default)(cond instanceof
_index2.AbstractValue);if(cond.kind==="template for property name condition"){let P=cond.args[0];(0,_invariant.default)(P instanceof _index2.AbstractValue);let V=absVal.args[1];let earlier_props=absVal.args[2];if(earlier_props instanceof _index2.AbstractValue)this._emitPropertiesWithComputedNames(obj,earlier_props);let uid=this.getSerializeObjectIdentifier(obj);let serializedP=this.serializeValue(P);let serializedV=this.serializeValue(V);this.emitter.emit(t.expressionStatement(t.assignmentExpression("=",
t.memberExpression(uid,serializedP,true),serializedV)))}else{let serializedCond=this.serializeValue(cond);let consequent=absVal.args[1];let valuesToProcess=new Set;let consequentStatement;let alternateStatement;if(consequent instanceof _index2.AbstractValue){let oldBody=this.emitter.beginEmitting("consequent",{type:"ConditionalAssignmentBranch",parentBody:undefined,entries:[],done:false},true);this._emitPropertiesWithComputedNames(obj,consequent);let consequentBody=this.emitter.endEmitting("consequent",
oldBody,valuesToProcess,true);consequentStatement=t.blockStatement(consequentBody.entries)}let alternate=absVal.args[2];if(alternate instanceof _index2.AbstractValue){let oldBody=this.emitter.beginEmitting("alternate",{type:"ConditionalAssignmentBranch",parentBody:undefined,entries:[],done:false},true);this._emitPropertiesWithComputedNames(obj,alternate);let alternateBody=this.emitter.endEmitting("alternate",oldBody,valuesToProcess,true);alternateStatement=t.blockStatement(alternateBody.entries)}if(consequentStatement)this.emitter.emit(t.ifStatement(serializedCond,
consequentStatement,alternateStatement));else if(alternateStatement)this.emitter.emit(t.ifStatement(t.unaryExpression("!",serializedCond),alternateStatement));this.emitter.processValues(valuesToProcess)}}getSerializeObjectIdentifier(val){return this.residualHeapValueIdentifiers.getIdentifierAndIncrementReferenceCount(val)}_emitProperty(val,key,desc,deleteIfMightHaveBeenDeleted=false){let locationFunction=()=>{let serializedKey=key instanceof _index2.SymbolValue||key instanceof _index2.AbstractValue?
this.serializeValue(key):(0,_babelhelpers.getAsPropertyNameExpression)(key);let computed=key instanceof _index2.SymbolValue||key instanceof _index2.AbstractValue||!t.isIdentifier(serializedKey);return t.memberExpression(this.getSerializeObjectIdentifier(val),serializedKey,computed)};if(desc===undefined)this._deleteProperty(locationFunction());else this.emitter.emit(this.emitDefinePropertyBody(deleteIfMightHaveBeenDeleted,locationFunction,val,key,desc))}emitDefinePropertyBody(deleteIfMightHaveBeenDeleted,
locationFunction,val,key,desc){if(desc instanceof _descriptors.AbstractJoinedDescriptor){let cond=this.serializeValue(desc.joinCondition);(0,_invariant.default)(cond!==undefined);let trueBody;let falseBody;if(desc.descriptor1)trueBody=this.emitDefinePropertyBody(deleteIfMightHaveBeenDeleted,locationFunction,val,key,desc.descriptor1);if(desc.descriptor2)falseBody=this.emitDefinePropertyBody(deleteIfMightHaveBeenDeleted,locationFunction,val,key,desc.descriptor2);if(trueBody&&falseBody)return t.ifStatement(cond,
trueBody,falseBody);if(trueBody)return t.ifStatement(cond,trueBody);if(falseBody)return t.ifStatement(t.unaryExpression("!",cond),falseBody);(0,_invariant.default)(false)}(0,_invariant.default)(desc instanceof _descriptors.PropertyDescriptor);if(locationFunction!==undefined&&this._canEmbedProperty(val,key,desc)){let descValue=desc.value;(0,_invariant.default)(descValue instanceof _index2.Value);(0,_invariant.default)(!this.emitter.getReasonToWaitForDependencies([descValue,val]),"precondition of _emitProperty");
let mightHaveBeenDeleted=descValue.mightHaveBeenDeleted();return this._getPropertyAssignmentStatement(locationFunction(),descValue,mightHaveBeenDeleted,deleteIfMightHaveBeenDeleted)}let body=[];let descProps=[];let boolKeys=["enumerable","configurable"];let valKeys=[];if(!desc.get&&!desc.set){boolKeys.push("writable");valKeys.push("value")}else valKeys.push("set","get");let descriptorsKey=[];for(let boolKey of boolKeys)if(desc[boolKey]!==undefined){let b=desc[boolKey];(0,_invariant.default)(b!==undefined);
descProps.push(t.objectProperty(t.identifier(boolKey),t.booleanLiteral(b)));descriptorsKey.push(`${boolKey}:${b.toString()}`)}descriptorsKey=descriptorsKey.join(",");let descriptorId=this._descriptors.get(descriptorsKey);if(descriptorId===undefined){descriptorId=t.identifier(this.descriptorNameGenerator.generate(descriptorsKey));let declar=t.variableDeclaration("var",[t.variableDeclarator(descriptorId,t.objectExpression(descProps))]);this.prelude.push(declar);this._descriptors.set(descriptorsKey,
descriptorId)}(0,_invariant.default)(descriptorId!==undefined);for(let descKey of valKeys)if(desc[descKey]!==undefined){let descValue=desc[descKey];(0,_invariant.default)(descValue instanceof _index2.Value);if(descValue instanceof _index2.UndefinedValue){this.serializeValue(descValue);continue}(0,_invariant.default)(!this.emitter.getReasonToWaitForDependencies([descValue]),"precondition of _emitProperty");body.push(t.assignmentExpression("=",t.memberExpression(descriptorId,t.identifier(descKey)),
this.serializeValue(descValue)))}let serializedKey=key instanceof _index2.SymbolValue||key instanceof _index2.AbstractValue?this.serializeValue(key):(0,_babelhelpers.getAsPropertyNameExpression)(key,false);(0,_invariant.default)(!this.emitter.getReasonToWaitForDependencies([val]),"precondition of _emitProperty");body.push(t.callExpression(this.preludeGenerator.memoizeReference("Object.defineProperty"),[this.getSerializeObjectIdentifier(val),serializedKey,descriptorId]));return t.expressionStatement(t.sequenceExpression(body))}_serializeDeclarativeEnvironmentRecordBinding(residualFunctionBinding){if(!residualFunctionBinding.serializedValue){let value=
residualFunctionBinding.value;(0,_invariant.default)(residualFunctionBinding.declarativeEnvironmentRecord);if(residualFunctionBinding.hasLeaked)this.referentializer.referentializeLeakedBinding(residualFunctionBinding);else{residualFunctionBinding.serializedValue=value!==undefined?this.serializeValue(value):_babelhelpers.voidExpression;if(residualFunctionBinding.modified)this.referentializer.referentializeModifiedBinding(residualFunctionBinding)}if(value!==undefined&&value.mightBeObject())this.residualHeapValueIdentifiers.incrementReferenceCount(value)}}_getReferencingGenerators(initialGenerators,
functionValues,referencingOnlyOptimizedFunction){let result=new Set(initialGenerators);let activeFunctions=functionValues.slice();let visitedFunctions=new Set;while(activeFunctions.length>0){let f=activeFunctions.pop();if(visitedFunctions.has(f))continue;visitedFunctions.add(f);if(f===referencingOnlyOptimizedFunction){let g=this.additionalFunctionGenerators.get(f);(0,_invariant.default)(g!==undefined);result.add(g)}else{let scopes=this.residualValues.get(f);(0,_invariant.default)(scopes);for(let scope of scopes)if(scope instanceof
_index2.FunctionValue)activeFunctions.push(scope);else{(0,_invariant.default)(scope instanceof _generator.Generator);result.add(scope)}}}return Array.from(result)}_getActiveBodyOfGenerator(generator){return generator===this.generator?this.mainBody:this.activeGeneratorBodies.get(generator)}_getTarget(val,trace){let scopes=this.residualValues.get(val);(0,_invariant.default)(scopes!==undefined,"value must have been visited");(0,_invariant.default)(scopes.size>=1);if(trace)this._logScopes(scopes);if(scopes.size>
1)this.residualHeapValueIdentifiers.incrementReferenceCount(val);let functionValues=[];let generators=[];for(let scope of scopes)if(scope instanceof _index2.FunctionValue)functionValues.push(scope);else{(0,_invariant.default)(scope instanceof _generator.Generator,"scope must be either function value or generator");generators.push(scope)}let optimizedFunctionRoot=this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(val);if(generators.length===0)if(this._options.delayInitializations&&(optimizedFunctionRoot===
undefined||!functionValues.includes(optimizedFunctionRoot))){let body=this.residualFunctions.residualFunctionInitializers.registerValueOnlyReferencedByResidualFunctions(functionValues,val);return{body,usedOnlyByResidualFunctions:true,optimizedFunctionRoot,description:"delay_initializer"}}if(trace)console.log(`  has optimized function root? ${optimizedFunctionRoot!==undefined?"yes":"no"}`);generators=this._getReferencingGenerators(generators,functionValues,optimizedFunctionRoot);if(optimizedFunctionRoot===
undefined){generators=generators.filter((generator)=>{let s=generator;while(s instanceof _generator.Generator)s=this.generatorTree.getParent(s);return s==="GLOBAL"});if(generators.length===0){if(trace)console.log(`  no filtered generators`);return{body:this.mainBody}}}const getGeneratorParent=(g)=>{let s=this.generatorTree.getParent(g);return s instanceof _generator.Generator?s:undefined};let commonAncestor=Array.from(generators).reduce((x,y)=>(0,_utils.commonAncestorOf)(x,y,getGeneratorParent),generators[0]);
if(commonAncestor===undefined&&optimizedFunctionRoot!==undefined)commonAncestor=this.additionalFunctionGenerators.get(optimizedFunctionRoot);(0,_invariant.default)(commonAncestor!==undefined,"there must always be a common generator ancestor");if(trace)console.log(`  common ancestor: ${commonAncestor.getName()}`);let body;while(true){body=this._getActiveBodyOfGenerator(commonAncestor);if(body!==undefined)break;commonAncestor=getGeneratorParent(commonAncestor);(0,_invariant.default)(commonAncestor!==
undefined,"there must always be an active body for the common generator ancestor")}(0,_invariant.default)(body!==undefined,"there must always be an active body");let notYetDoneBodies=new Set;this.emitter.dependenciesVisitor(val,{onIntrinsicDerivedObject:(dependency)=>{if(trace)console.log(`  depending on intrinsic derived object and an identifier ${dependency.intrinsicName||"?"}`);(0,_invariant.default)(optimizedFunctionRoot===undefined||!!this.emitter.getActiveOptimizedFunction(),"optimized function inconsistency");
let declarationBody=this.emitter.getDeclarationBody(dependency);if(declarationBody!==undefined){if(trace)console.log(`    has declaration body`);for(let b=declarationBody;b!==undefined;b=b.parentBody){if(notYetDoneBodies.has(b))break;notYetDoneBodies.add(b)}}},onAbstractValueWithIdentifier:(dependency)=>{if(trace)console.log(`  depending on abstract value with identifier ${dependency.intrinsicName||"?"}`);(0,_invariant.default)(optimizedFunctionRoot===undefined||!!this.emitter.getActiveOptimizedFunction(),
"optimized function inconsistency");let declarationBody=this.emitter.getDeclarationBody(dependency);if(declarationBody!==undefined){if(trace)console.log(`    has declaration body`);for(let b=declarationBody;b!==undefined;b=b.parentBody){if(notYetDoneBodies.has(b))break;notYetDoneBodies.add(b)}}}});if(trace)console.log(`  got ${notYetDoneBodies.size} not yet done bodies`);for(let s of generators)for(let g=s;g!==undefined;g=getGeneratorParent(g)){let scopeBody=this._getActiveBodyOfGenerator(g);if(scopeBody!==
undefined&&(scopeBody.nestingLevel||0)>(body.nestingLevel||0)&&notYetDoneBodies.has(scopeBody)){body=scopeBody;break}}return{body,commonAncestor}}_getValueDebugName(val){let name;if(val instanceof _index2.FunctionValue)name=val.getName();else{const id=this.residualHeapValueIdentifiers.getIdentifier(val);(0,_invariant.default)(id);name=id.name}return name}_getResidualFunctionBinding(binding){let environment=binding.environment;if(environment===this.globalEnvironmentRecord.$DeclarativeRecord)environment=
this.globalEnvironmentRecord;if(environment===this.globalEnvironmentRecord)return this.globalBindings.get(binding.name);(0,_invariant.default)(environment instanceof _environment.DeclarativeEnvironmentRecord,"only declarative environments have bindings");let residualFunctionBindings=this.declarativeEnvironmentRecordsBindings.get(environment);if(residualFunctionBindings===undefined)return undefined;return residualFunctionBindings.get(binding.name)}serializeBinding(binding){let residualBinding=this._getResidualFunctionBinding(binding);
(0,_invariant.default)(residualBinding!==undefined,"any referenced residual binding should have been visited");this._serializeDeclarativeEnvironmentRecordBinding(residualBinding);let location=residualBinding.serializedUnscopedLocation;(0,_invariant.default)(location!==undefined);return location}getPrelude(optimizedFunction){if(optimizedFunction!==undefined){let body=this.residualFunctions.additionalFunctionPreludes.get(optimizedFunction);(0,_invariant.default)(body!==undefined);return body}else return this.prelude}_declare(emittingToResidualFunction,
optimizedFunctionRoot,bindingType,id,init){if(emittingToResidualFunction){let declar=t.variableDeclaration(bindingType,[t.variableDeclarator(id)]);this.getPrelude(optimizedFunctionRoot).push(declar);let assignment=t.expressionStatement(t.assignmentExpression("=",id,init));this.emitter.emit(assignment)}else{let declar=t.variableDeclaration(bindingType,[t.variableDeclarator(id,init)]);this.emitter.emit(declar)}}serializeValue(val,referenceOnly,bindingType){(0,_invariant.default)(!(val instanceof _index2.ObjectValue&&
val.refuseSerialization));if(val instanceof _index2.AbstractValue)if(val.kind==="widened"){this.serializedValues.add(val);let name=val.intrinsicName;(0,_invariant.default)(name!==undefined);return t.identifier(name)}else if(val.kind==="widened property"){this.serializedValues.add(val);return this._serializeAbstractValueHelper(val)}if(val instanceof _index2.ECMAScriptSourceFunctionValue&&this.residualClassMethodInstances.has(val)){let classMethodInstance=this.residualClassMethodInstances.get(val);
(0,_invariant.default)(classMethodInstance);if(classMethodInstance.methodType!=="constructor"){let error=new _errors.CompilerDiagnostic("a class method incorrectly went through the serializeValue() code path",val.$ECMAScriptCode.loc,"PP0022","FatalError");this.realm.handleError(error);throw new _errors.FatalError;}}if(this._serializedValueWithIdentifiers.has(val))return this.getSerializeObjectIdentifier(val);this.serializedValues.add(val);if(!referenceOnly&&_HeapInspector.HeapInspector.isLeaf(val)){let res=
this._serializeValue(val);(0,_invariant.default)(res!==undefined);return res}this._serializedValueWithIdentifiers.add(val);let target=this._getTarget(val);let oldBody=this.emitter.beginEmitting(val,target.body);let init=this._serializeValue(val);let id=this.residualHeapValueIdentifiers.getIdentifier(val);if(this._options.debugIdentifiers!==undefined&&this._options.debugIdentifiers.includes(id.name)){console.log(`Tracing value with identifier ${id.name} (${val.constructor.name}) targetting ${target.body.type}`);
this._getTarget(val,true)}let result=id;this.residualHeapValueIdentifiers.incrementReferenceCount(val);if(this.residualHeapValueIdentifiers.needsIdentifier(val)){if(init){if(this._options.debugScopes){let scopes=this.residualValues.get(val);(0,_invariant.default)(scopes!==undefined);const scopeList=Array.from(scopes).map((s)=>`"${s.getName()}"`).join(",");let comment=`${this._getValueDebugName(val)} referenced from scopes [${scopeList}]`;if(target.commonAncestor!==undefined)comment=`${comment} with common ancestor: ${target.commonAncestor.getName()}`;
if(target.description!==undefined)comment=`${comment} => ${target.description} `;this.emitter.emit(commentStatement(comment))}if(init!==id)this._declare(!!target.usedOnlyByResidualFunctions,target.optimizedFunctionRoot,bindingType||"var",id,init);this.getStatistics().valueIds++;if(target.usedOnlyByResidualFunctions)this.getStatistics().delayedValues++}}else if(init){this.residualHeapValueIdentifiers.deleteIdentifier(val);result=init;this.getStatistics().valuesInlined++}this.emitter.endEmitting(val,
oldBody);return result}_serializeValueIntrinsic(val){let intrinsicName=val.intrinsicName;(0,_invariant.default)(intrinsicName);if(val instanceof _index2.ObjectValue&&val.intrinsicNameGenerated)return this.preludeGenerator.convertStringToMember(intrinsicName);else{(0,_invariant.default)(this.emitter.getBody().type==="MainGenerator"||this.emitter.getBody().type==="OptimizedFunction"||this.emitter.getBody().type==="DelayInitializations");return this.preludeGenerator.memoizeReference(intrinsicName)}}_getDescriptorValues(desc){if(desc===
undefined)return[];else if(desc instanceof _descriptors.PropertyDescriptor){(0,_invariant.default)(desc.value===undefined||desc.value instanceof _index2.Value);if(desc.value!==undefined)return[desc.value];(0,_invariant.default)(desc.get!==undefined);(0,_invariant.default)(desc.set!==undefined);return[desc.get,desc.set]}else if(desc instanceof _descriptors.AbstractJoinedDescriptor)return[desc.joinCondition,...this._getDescriptorValues(desc.descriptor1),...this._getDescriptorValues(desc.descriptor2)];
else(0,_invariant.default)(false,"unknown descriptor")}_deleteProperty(location){(0,_invariant.default)(location.type==="MemberExpression");this.emitter.emit(t.expressionStatement(t.unaryExpression("delete",location,true)))}_assignProperty(location,value,mightHaveBeenDeleted,deleteIfMightHaveBeenDeleted=false){this.emitter.emit(this._getPropertyAssignmentStatement(location,value,mightHaveBeenDeleted,deleteIfMightHaveBeenDeleted))}_getPropertyAssignmentStatement(location,value,mightHaveBeenDeleted,
deleteIfMightHaveBeenDeleted=false){if(mightHaveBeenDeleted){let serializedValue=this.serializeValue(value);let condition;if(value instanceof _index2.AbstractValue&&value.kind==="conditional"){let [c,x,y]=value.args;if(x instanceof _index2.EmptyValue){if(c instanceof _index2.AbstractValue&&c.kind==="!")condition=this.serializeValue(c.args[0]);else condition=t.unaryExpression("!",this.serializeValue(c));serializedValue=this.serializeValue(y)}else if(y instanceof _index2.EmptyValue){condition=this.serializeValue(c);
serializedValue=this.serializeValue(x)}}if(condition===undefined)condition=t.binaryExpression("!==",this.serializeValue(value),this._serializeEmptyValue());let assignment=t.expressionStatement(t.assignmentExpression("=",location,serializedValue));let deletion=null;if(deleteIfMightHaveBeenDeleted){(0,_invariant.default)(location.type==="MemberExpression");deletion=t.expressionStatement(t.unaryExpression("delete",location,true))}return t.ifStatement(condition,assignment,deletion)}else return t.expressionStatement(t.assignmentExpression("=",
location,this.serializeValue(value)))}_serializeArrayIndexProperties(array,indexPropertyLength,remainingProperties){let elems=[];for(let i=0;i<indexPropertyLength;i++){let key=i+"";let propertyBinding=remainingProperties.get(key);let elem=null;if(propertyBinding!==undefined){let descriptor=propertyBinding.descriptor;(0,_invariant.default)(descriptor===undefined||descriptor instanceof _descriptors.PropertyDescriptor);if(descriptor!==undefined&&descriptor.value!==undefined&&this._canEmbedProperty(array,
key,descriptor)){let elemVal=descriptor.value;(0,_invariant.default)(elemVal instanceof _index2.Value);let mightHaveBeenDeleted=elemVal.mightHaveBeenDeleted();let instantRenderMode=this.realm.instantRender.enabled;let delayReason;if(instantRenderMode){if(this.emitter.getReasonToWaitForDependencies(elemVal))this.realm.instantRenderBailout("InstantRender does not yet support cyclical arrays or objects",array.expressionLocation);delayReason=undefined}else delayReason=this.emitter.getReasonToWaitForDependencies(elemVal)||
this.emitter.getReasonToWaitForActiveValue(array,mightHaveBeenDeleted);if(!delayReason){elem=this.serializeValue(elemVal);remainingProperties.delete(key)}}}elems.push(elem)}return elems}_serializeArrayLengthIfNeeded(val,numberOfIndexProperties,remainingProperties){const realm=this.realm;let lenProperty;if(val.mightBeLeakedObject())lenProperty=this.realm.evaluateWithoutLeakLogic(()=>(0,_index.Get)(realm,val,"length"));else lenProperty=(0,_index.Get)(realm,val,"length");if(lenProperty instanceof _index2.AbstractValue||
_singletons.To.ToLength(realm,lenProperty)!==numberOfIndexProperties){if(!(lenProperty instanceof _index2.AbstractValue)||lenProperty.kind!=="widened property"){let semaphore=this._acquireOneObjectSemaphore(val);this.emitter.emitNowOrAfterWaitingForDependencies([val,lenProperty],()=>{this._assignProperty(t.memberExpression(this.getSerializeObjectIdentifier(val),t.identifier("length")),lenProperty,false);if(semaphore!==undefined)semaphore.releaseOne()},this.emitter.getBody())}remainingProperties.delete("length")}}_serializeValueArray(val){let remainingProperties=
new Map(val.properties);let [unconditionalLength,assignmentNotNeeded]=(0,_utils.getSuggestedArrayLiteralLength)(this.realm,val);const initProperties=this._serializeArrayIndexProperties(val,unconditionalLength,remainingProperties);if(!assignmentNotNeeded)this._serializeArrayLengthIfNeeded(val,unconditionalLength,remainingProperties);this._emitObjectProperties(val,remainingProperties);return t.arrayExpression(initProperties)}_serializeValueMap(val){let kind=val.getKind();let elems=[];let entries;let omitDeadEntries;
if(kind==="Map"){entries=val.$MapData;omitDeadEntries=false}else{(0,_invariant.default)(kind==="WeakMap");entries=val.$WeakMapData;omitDeadEntries=true}(0,_invariant.default)(entries!==undefined);let len=entries.length;let mapConstructorDoesntTakeArguments=this.realm.isCompatibleWith(this.realm.MOBILE_JSC_VERSION);for(let i=0;i<len;i++){let entry=entries[i];let key=entry.$Key;let value=entry.$Value;if(key===undefined||value===undefined||omitDeadEntries&&!this.residualValues.has(key))continue;let mightHaveBeenDeleted=
key.mightHaveBeenDeleted();let delayReason=this.emitter.getReasonToWaitForDependencies(key)||this.emitter.getReasonToWaitForDependencies(value)||this.emitter.getReasonToWaitForActiveValue(val,mightHaveBeenDeleted||mapConstructorDoesntTakeArguments);if(delayReason)this.emitter.emitAfterWaiting(delayReason,[key,value,val],()=>{(0,_invariant.default)(key!==undefined);(0,_invariant.default)(value!==undefined);this.emitter.emit(t.expressionStatement(t.callExpression(t.memberExpression(this.residualHeapValueIdentifiers.getIdentifierAndIncrementReferenceCount(val),
t.identifier("set")),[this.serializeValue(key),this.serializeValue(value)])))},this.emitter.getBody());else{let serializedKey=this.serializeValue(key);let serializedValue=this.serializeValue(value);let elem=t.arrayExpression([serializedKey,serializedValue]);elems.push(elem)}}this._emitObjectProperties(val);let args=elems.length>0?[t.arrayExpression(elems)]:[];return t.newExpression(this.preludeGenerator.memoizeReference(kind),args)}_serializeValueSet(val){let kind=val.getKind();let elems=[];let entries;
let omitDeadEntries;if(kind==="Set"){entries=val.$SetData;omitDeadEntries=false}else{(0,_invariant.default)(kind==="WeakSet");entries=val.$WeakSetData;omitDeadEntries=true}(0,_invariant.default)(entries!==undefined);let len=entries.length;let setConstructorDoesntTakeArguments=this.realm.isCompatibleWith(this.realm.MOBILE_JSC_VERSION);for(let i=0;i<len;i++){let entry=entries[i];if(entry===undefined||omitDeadEntries&&!this.residualValues.has(entry))continue;let mightHaveBeenDeleted=entry.mightHaveBeenDeleted();
let delayReason=this.emitter.getReasonToWaitForDependencies(entry)||this.emitter.getReasonToWaitForActiveValue(val,mightHaveBeenDeleted||setConstructorDoesntTakeArguments);if(delayReason)this.emitter.emitAfterWaiting(delayReason,[entry,val],()=>{(0,_invariant.default)(entry!==undefined);this.emitter.emit(t.expressionStatement(t.callExpression(t.memberExpression(this.residualHeapValueIdentifiers.getIdentifierAndIncrementReferenceCount(val),t.identifier("add")),[this.serializeValue(entry)])))},this.emitter.getBody());
else{let elem=this.serializeValue(entry);elems.push(elem)}}this._emitObjectProperties(val);let args=elems.length>0?[t.arrayExpression(elems)]:[];return t.newExpression(this.preludeGenerator.memoizeReference(kind),args)}_serializeValueTypedArrayOrDataView(val){let buf=val.$ViewedArrayBuffer;(0,_invariant.default)(buf!==undefined);let outlinedArrayBuffer=this.serializeValue(buf,true);this._emitObjectProperties(val);return t.newExpression(this.preludeGenerator.memoizeReference(val.getKind()),[outlinedArrayBuffer])}_serializeValueArrayBuffer(val){let elems=
[];let len=val.$ArrayBufferByteLength;let db=val.$ArrayBufferData;(0,_invariant.default)(len!==undefined);(0,_invariant.default)(db);let allzero=true;for(let i=0;i<len;i++){if(db[i]!==0)allzero=false;let elem=t.numericLiteral(db[i]);elems.push(elem)}this._emitObjectProperties(val);if(allzero)return t.newExpression(this.preludeGenerator.memoizeReference(val.getKind()),[t.numericLiteral(len)]);else{let arrayValue=t.arrayExpression(elems);let consExpr=t.newExpression(this.preludeGenerator.memoizeReference("Uint8Array"),
[arrayValue]);return t.memberExpression(consExpr,t.identifier("buffer"))}}_serializeValueFunction(val){if(val instanceof _index2.BoundFunctionValue){this._emitObjectProperties(val);return t.callExpression(t.memberExpression(this.serializeValue(val.$BoundTargetFunction),t.identifier("bind")),[].concat(this.serializeValue(val.$BoundThis),val.$BoundArguments.map((boundArg,i)=>this.serializeValue(boundArg))))}(0,_invariant.default)(!(val instanceof _index2.NativeFunctionValue),"all native function values should be intrinsics");
(0,_invariant.default)(val instanceof _index2.ECMAScriptSourceFunctionValue);let instance=this.residualFunctionInstances.get(val);(0,_invariant.default)(instance!==undefined);let residualBindings=instance.residualFunctionBindings;let inOptimizedFunction=this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(val);if(inOptimizedFunction!==undefined)instance.containingAdditionalFunction=inOptimizedFunction;let bindingsEmittedSemaphore=new CountingSemaphore(()=>{(0,_invariant.default)(instance);
if(inOptimizedFunction!==undefined&&(0,_hoisting.canHoistFunction)(this.realm,val,undefined,new Set)){instance.insertionPoint=new _types2.BodyReference(this.mainBody,this.mainBody.entries.length);instance.containingAdditionalFunction=undefined}else instance.insertionPoint=this.emitter.getBodyReference()});for(let [boundName,residualBinding]of residualBindings){let referencedValues=[];let serializeBindingFunc;if(!residualBinding.declarativeEnvironmentRecord)serializeBindingFunc=()=>this._serializeGlobalBinding(boundName,
residualBinding);else{serializeBindingFunc=()=>this._serializeDeclarativeEnvironmentRecordBinding(residualBinding);if(residualBinding.value!==undefined)referencedValues.push(residualBinding.value)}bindingsEmittedSemaphore.acquireOne();this.emitter.emitNowOrAfterWaitingForDependencies(referencedValues,()=>{serializeBindingFunc();bindingsEmittedSemaphore.releaseOne()},this.emitter.getBody())}if(val.$FunctionKind==="classConstructor"){let homeObject=val.$HomeObject;if(homeObject instanceof _index2.ObjectValue&&
homeObject.$IsClassPrototype){this._serializeClass(val,homeObject,bindingsEmittedSemaphore);return}}bindingsEmittedSemaphore.releaseOne();this._emitObjectProperties(val);let additionalEffects=this.additionalFunctionValuesAndEffects.get(val);if(additionalEffects)this._serializeAdditionalFunction(val,additionalEffects)}_serializeClass(classFunc,classPrototype,bindingsEmittedSemaphore){let classMethodInstance=this.residualClassMethodInstances.get(classFunc);(0,_invariant.default)(classMethodInstance!==
undefined);let classProtoId;let hasSerializedClassProtoId=false;let propertiesToSerialize=new Map;if(!(classFunc.$Prototype instanceof _index2.NativeFunctionValue))classMethodInstance.classSuperNode=this.serializeValue(classFunc.$Prototype);let serializeClassPrototypeId=()=>{if(!hasSerializedClassProtoId){let classId=this.getSerializeObjectIdentifier(classFunc);classProtoId=t.identifier(this.intrinsicNameGenerator.generate());hasSerializedClassProtoId=true;this.emitter.emit(t.variableDeclaration("var",
[t.variableDeclarator(classProtoId,t.memberExpression(classId,t.identifier("prototype")))]))}};let serializeClassMethodOrProperty=(propertyNameOrSymbol,methodFuncOrProperty)=>{const serializeNameAndId=()=>{let methodFuncOrPropertyId=this.serializeValue(methodFuncOrProperty);let name;if(typeof propertyNameOrSymbol==="string")name=t.identifier(propertyNameOrSymbol);else name=this.serializeValue(propertyNameOrSymbol);return{name,methodFuncOrPropertyId}};if(methodFuncOrProperty instanceof _index2.ECMAScriptSourceFunctionValue){if(methodFuncOrProperty!==
classFunc)if(methodFuncOrProperty.$HomeObject!==undefined){this.serializedValues.add(methodFuncOrProperty);this._serializeClassMethod(propertyNameOrSymbol,methodFuncOrProperty)}else{serializeClassPrototypeId();(0,_invariant.default)(classProtoId!==undefined);let {name,methodFuncOrPropertyId}=serializeNameAndId();this.emitter.emit(t.expressionStatement(t.assignmentExpression("=",t.memberExpression(classProtoId,name),methodFuncOrPropertyId)))}}else{let prototypeId=t.memberExpression(this.getSerializeObjectIdentifier(classFunc),
t.identifier("prototype"));let {name,methodFuncOrPropertyId}=serializeNameAndId();this.emitter.emit(t.expressionStatement(t.assignmentExpression("=",t.memberExpression(prototypeId,name),methodFuncOrPropertyId)))}};let serializeClassProperty=(propertyNameOrSymbol,propertyValue)=>{if(propertyNameOrSymbol==="prototype")this.serializedValues.add(propertyValue);else if(propertyValue instanceof _index2.ECMAScriptSourceFunctionValue&&propertyValue.$HomeObject===classFunc)serializeClassMethodOrProperty(propertyNameOrSymbol,
propertyValue);else{let prop=classFunc.properties.get(propertyNameOrSymbol);(0,_invariant.default)(prop);propertiesToSerialize.set(propertyNameOrSymbol,prop)}};for(let [propertyName,method]of classFunc.properties)if(!this.residualHeapInspector.canIgnoreProperty(classFunc,propertyName)&&!_utils.ClassPropertiesToIgnore.has(propertyName)&&method.descriptor!==undefined&&!(propertyName==="length"&&(0,_utils.canIgnoreClassLengthProperty)(classFunc,method.descriptor,this.logger)))(0,_utils.withDescriptorValue)(propertyName,
method.descriptor,serializeClassProperty);bindingsEmittedSemaphore.releaseOne();this._emitObjectProperties(classFunc,propertiesToSerialize,undefined,undefined,true);for(let [propertyName,method]of classPrototype.properties)(0,_utils.withDescriptorValue)(propertyName,method.descriptor,serializeClassMethodOrProperty);for(let [symbol,method]of classPrototype.symbols)(0,_utils.withDescriptorValue)(symbol,method.descriptor,serializeClassMethodOrProperty);classMethodInstance.classMethodKeyNode=t.identifier("constructor")}_serializeClassMethod(key,
methodFunc){let classMethodInstance=this.residualClassMethodInstances.get(methodFunc);(0,_invariant.default)(classMethodInstance!==undefined);if(typeof key==="string"){classMethodInstance.classMethodKeyNode=t.identifier(key);classMethodInstance.classMethodComputed=false}else if(key instanceof _index2.SymbolValue)classMethodInstance.classMethodKeyNode=this.serializeValue(key);else(0,_invariant.default)(false,"Unknown method key type");this._serializeValueFunction(methodFunc)}_canEmbedProperty(obj,
key,prop){if(!(prop instanceof _descriptors.PropertyDescriptor))return false;let targetDescriptor=this.residualHeapInspector.getTargetIntegrityDescriptor(obj);if(obj instanceof _index2.FunctionValue&&key==="prototype"||obj.getKind()==="RegExp"&&key==="lastIndex")return prop.writable===targetDescriptor.writable&&!prop.configurable&&!prop.enumerable&&!prop.set&&!prop.get;else if(prop.writable===targetDescriptor.writable&&prop.configurable===targetDescriptor.configurable&&!!prop.enumerable&&!prop.set&&
!prop.get)return!(prop.value instanceof _index2.AbstractValue&&prop.value.kind==="widened property");else return false}_findLastObjectPrototype(obj){while(obj.$Prototype instanceof _index2.ObjectValue)obj=obj.$Prototype;return obj}_serializeValueRegExpObject(val){let source=val.$OriginalSource;let flags=val.$OriginalFlags;(0,_invariant.default)(typeof source==="string");(0,_invariant.default)(typeof flags==="string");this._emitObjectProperties(val);source=(new RegExp(source)).source;return t.regExpLiteral(source,
flags)}serializeValueRawObject(val,skipPrototype,emitIntegrityCommand){let remainingProperties=new Map(val.properties);const dummyProperties=new Set;let props=[];let isCertainlyLeaked=!val.mightNotBeLeakedObject();let shouldDropAsAssignedProp=(descriptor)=>isCertainlyLeaked&&descriptor instanceof _descriptors.PropertyDescriptor&&descriptor.get===undefined&&descriptor.set===undefined;if(val.temporalAlias!==undefined)return t.objectExpression(props);else for(let [key,propertyBinding]of val.properties){if(propertyBinding.descriptor!==
undefined&&shouldDropAsAssignedProp(propertyBinding.descriptor)){remainingProperties.delete(key);continue}if(propertyBinding.pathNode!==undefined)continue;let descriptor=propertyBinding.descriptor;if(descriptor===undefined||!(descriptor instanceof _descriptors.PropertyDescriptor)||descriptor.value===undefined)continue;let serializedKey=(0,_babelhelpers.getAsPropertyNameExpression)(key);if(this._canEmbedProperty(val,key,descriptor)){let propValue=descriptor.value;(0,_invariant.default)(propValue instanceof
_index2.Value);if(this.residualHeapInspector.canIgnoreProperty(val,key))continue;let mightHaveBeenDeleted=propValue.mightHaveBeenDeleted();let instantRenderMode=this.realm.instantRender.enabled;let delayReason;if(instantRenderMode){if(this.emitter.getReasonToWaitForDependencies(propValue))this.realm.instantRenderBailout("InstantRender does not yet support cyclical arrays or objects",val.expressionLocation);delayReason=undefined}else delayReason=this.emitter.getReasonToWaitForDependencies(propValue)||
this.emitter.getReasonToWaitForActiveValue(val,mightHaveBeenDeleted);let serializedValue=!instantRenderMode?_babelhelpers.voidExpression:_babelhelpers.emptyExpression;if(delayReason)dummyProperties.add(key);else{remainingProperties.delete(key);serializedValue=this.serializeValue(propValue)}props.push(t.objectProperty(serializedKey,serializedValue))}else if(descriptor.value instanceof _index2.Value&&descriptor.value.mightHaveBeenDeleted()){dummyProperties.add(key);props.push(t.objectProperty(serializedKey,
_babelhelpers.voidExpression))}}this._emitObjectProperties(val,remainingProperties,false,dummyProperties,skipPrototype);return t.objectExpression(props)}_serializeValueObjectViaConstructor(val,skipPrototype,classConstructor){let proto=val.$Prototype;this._emitObjectProperties(val,val.properties,true,undefined,skipPrototype);let serializedProto=this.serializeValue(classConstructor?classConstructor:proto);if(val.temporalAlias===undefined){this.needsAuxiliaryConstructor=true;return t.sequenceExpression([t.assignmentExpression("=",
t.memberExpression(_babelhelpers.constructorExpression,t.identifier("prototype")),classConstructor?t.memberExpression(serializedProto,t.identifier("prototype")):serializedProto),t.newExpression(_babelhelpers.constructorExpression,[])])}else{this.emitter.emitAfterWaiting(val.temporalAlias,[],()=>{(0,_invariant.default)(val.temporalAlias!==undefined);let uid=this.serializeValue(val.temporalAlias);this.emitter.emit(t.expressionStatement(t.callExpression(this.preludeGenerator.memoizeReference("Object.setPrototypeOf"),
[uid,serializedProto])))},this.emitter.getBody());return t.objectExpression([])}}serializeValueObject(val,emitIntegrityCommand){let constructor=val.originalConstructor;if(constructor!==undefined){let prototypeId=this.residualHeapValueIdentifiers.getIdentifier(val);this.emitter.emitNowOrAfterWaitingForDependencies([constructor],()=>{(0,_invariant.default)(constructor!==undefined);(0,_invariant.default)(prototypeId!==undefined);this.serializeValue(constructor);this._emitObjectProperties(val);(0,_invariant.default)(prototypeId.type===
"Identifier");this.residualFunctions.setFunctionPrototype(constructor,prototypeId)},this.emitter.getBody());return prototypeId}let kind=val.getKind();switch(kind){case "RegExp":return this._serializeValueRegExpObject(val);case "Number":let numberData=val.$NumberData;(0,_invariant.default)(numberData!==undefined);numberData.throwIfNotConcreteNumber();(0,_invariant.default)(numberData instanceof _index2.NumberValue,"expected number data internal slot to be a number value");this._emitObjectProperties(val);
return t.newExpression(this.preludeGenerator.memoizeReference("Number"),[t.numericLiteral(numberData.value)]);case "String":let stringData=val.$StringData;(0,_invariant.default)(stringData!==undefined);stringData.throwIfNotConcreteString();(0,_invariant.default)(stringData instanceof _index2.StringValue,"expected string data internal slot to be a string value");this._emitObjectProperties(val);return t.newExpression(this.preludeGenerator.memoizeReference("String"),[t.stringLiteral(stringData.value)]);
case "Boolean":let booleanData=val.$BooleanData;(0,_invariant.default)(booleanData!==undefined);booleanData.throwIfNotConcreteBoolean();(0,_invariant.default)(booleanData instanceof _index2.BooleanValue,"expected boolean data internal slot to be a boolean value");this._emitObjectProperties(val);return t.newExpression(this.preludeGenerator.memoizeReference("Boolean"),[t.booleanLiteral(booleanData.value)]);case "Date":let dateValue=val.$DateValue;(0,_invariant.default)(dateValue!==undefined);let serializedDateValue=
this.serializeValue(dateValue);this._emitObjectProperties(val);return t.newExpression(this.preludeGenerator.memoizeReference("Date"),[serializedDateValue]);case "Float32Array":case "Float64Array":case "Int8Array":case "Int16Array":case "Int32Array":case "Uint8Array":case "Uint16Array":case "Uint32Array":case "Uint8ClampedArray":case "DataView":return this._serializeValueTypedArrayOrDataView(val);case "ArrayBuffer":return this._serializeValueArrayBuffer(val);case "ReactElement":this.residualReactElementSerializer.serializeReactElement(val);
return;case "Map":case "WeakMap":return this._serializeValueMap(val);case "Set":case "WeakSet":return this._serializeValueSet(val);default:(0,_invariant.default)(kind==="Object","invariant established by visitor");let proto=val.$Prototype;let {skipPrototype,constructor:_constructor}=(0,_utils.getObjectPrototypeMetadata)(this.realm,val);let createViaAuxiliaryConstructor=val.temporalAlias===undefined&&proto!==this.realm.intrinsics.ObjectPrototype&&this._findLastObjectPrototype(val)===this.realm.intrinsics.ObjectPrototype&&
proto instanceof _index2.ObjectValue&&!skipPrototype;return createViaAuxiliaryConstructor||_constructor?this._serializeValueObjectViaConstructor(val,skipPrototype,_constructor):this.serializeValueRawObject(val,skipPrototype,emitIntegrityCommand)}}_serializeValueSymbol(val){let args=[];if(val.$Description instanceof _index2.Value){let serializedArg=this.serializeValue(val.$Description);(0,_invariant.default)(serializedArg);args.push(serializedArg)}let globalReg=this.realm.globalSymbolRegistry.find((e)=>
e.$Symbol===val)!==undefined;if(globalReg)return t.callExpression(this.preludeGenerator.memoizeReference("Symbol.for"),args);else return t.callExpression(this.preludeGenerator.memoizeReference("Symbol"),args)}_serializeValueProxy(val){return t.newExpression(this.preludeGenerator.memoizeReference("Proxy"),[this.serializeValue(val.$ProxyTarget),this.serializeValue(val.$ProxyHandler)])}_serializeAbstractValueHelper(val){let serializedArgs=val.args.map((abstractArg,i)=>this.serializeValue(abstractArg));
if(val.kind==="abstractConcreteUnion"){(0,_invariant.default)(val.args.length>=2);(0,_invariant.default)(val.args[0]instanceof _index2.AbstractValue);return serializedArgs[0]}if(val.kind==="explicit conversion to object"){let ob=serializedArgs[0];(0,_invariant.default)(ob!==undefined);return t.callExpression(this.preludeGenerator.memoizeReference("Object.assign"),[ob])}else if(val.kind==="template for prototype member expression"){let obj=this.serializeValue(val.args[0]);let prop=this.serializeValue(val.args[1]);
return t.memberExpression(obj,prop,true)}(0,_invariant.default)(val.operationDescriptor!==undefined);let serializedValue=this.residualOperationSerializer.serializeExpression(val.operationDescriptor,serializedArgs);if(serializedValue.type==="Identifier"){let id=serializedValue;(0,_invariant.default)(!this.realm.derivedIds.has(id.name)||this.emitter.cannotDeclare()||this.emitter.hasBeenDeclared(val)||!!this.emitter.getActiveOptimizedFunction(),`an abstract value with an identifier "${id.name}" was referenced before being declared`)}return serializedValue}_serializeAbstractValue(val){(0,
_invariant.default)(val.kind!=="sentinel member expression","invariant established by visitor");if(val.kind==="conditional"){let cf=this.conditionalFeasibility.get(val);(0,_invariant.default)(cf!==undefined);if(cf.t&&!cf.f)return this.serializeValue(val.args[1]);else if(!cf.t&&cf.f)return this.serializeValue(val.args[2]);else(0,_invariant.default)(cf.t&&cf.f)}if(val.hasIdentifier())return this._serializeAbstractValueHelper(val);else{let reason=this.emitter.getReasonToWaitForDependencies(val.args);
if(reason===undefined)return this._serializeAbstractValueHelper(val);else this.emitter.emitAfterWaiting(reason,val.args,()=>{const serializedValue=this._serializeAbstractValueHelper(val);let uid=this.getSerializeObjectIdentifier(val);this._declare(this.emitter.cannotDeclare(),undefined,"var",uid,serializedValue)},this.emitter.getBody())}}_serializeEmptyValue(){this.needsEmptyVar=!this.realm.instantRender.enabled;return _babelhelpers.emptyExpression}_serializeValue(val){if(val instanceof _index2.AbstractValue)return this._serializeAbstractValue(val);
else if(val.isIntrinsic())return this._serializeValueIntrinsic(val);else if(val instanceof _index2.EmptyValue)return this._serializeEmptyValue();else if(val instanceof _index2.UndefinedValue)return _babelhelpers.voidExpression;else if(_HeapInspector.HeapInspector.isLeaf(val))return t.valueToNode(val.serialize());else if(val instanceof _index2.ObjectValue)return this._serializeValueObjectBase(val);else{(0,_invariant.default)(val instanceof _index2.SymbolValue);return this._serializeValueSymbol(val)}}_serializeValueObjectBase(obj){if(obj instanceof
_index2.ProxyValue)return this._serializeValueProxy(obj);let objectSemaphore;let targetCommand=this.residualHeapInspector.getTargetIntegrityCommand(obj);let emitIntegrityCommand;if(targetCommand){let body=this.emitter.getBody();objectSemaphore=new CountingSemaphore(()=>{this.emitter.emitNowOrAfterWaitingForDependencies([obj],()=>{let uid=this.getSerializeObjectIdentifier(obj);this.emitter.emit(t.expressionStatement(t.callExpression(this.preludeGenerator.memoizeReference("Object."+targetCommand),[uid])))},
body)});this._objectSemaphores.set(obj,objectSemaphore);emitIntegrityCommand=(alternateBody)=>{if(objectSemaphore!==undefined){if(alternateBody!==undefined)body=alternateBody;objectSemaphore.releaseOne();this._objectSemaphores.delete(obj)}objectSemaphore=undefined}}let res;if((0,_index.IsArray)(this.realm,obj))res=this._serializeValueArray(obj);else if(obj instanceof _index2.FunctionValue)res=this._serializeValueFunction(obj);else res=this.serializeValueObject(obj,emitIntegrityCommand);if(emitIntegrityCommand!==
undefined)emitIntegrityCommand();return res}_serializeGlobalBinding(boundName,binding){(0,_invariant.default)(!binding.declarativeEnvironmentRecord);if(!binding.serializedValue){binding.referentialized=true;if(boundName==="undefined")binding.serializedValue=_babelhelpers.voidExpression;else if(binding.value!==undefined){binding.serializedValue=t.identifier(boundName);(0,_invariant.default)(binding.value!==undefined);this.declaredGlobalLets.set(boundName,binding.value)}}}_annotateGeneratorStatements(generator,
statements){let comment=`generator "${generator.getName()}"`;let parent=this.generatorTree.getParent(generator);if(parent instanceof _generator.Generator)comment=`${comment} with parent "${parent.getName()}"`;else if(parent instanceof _index2.FunctionValue)comment=`${comment} with function parent`;else{(0,_invariant.default)(parent==="GLOBAL");comment=`${comment} with global parent`}let beginComments=[commentStatement("begin "+comment)];let effects=generator.effectsToApply;if(effects){let valueToString=
(value)=>this.residualHeapValueIdentifiers.hasIdentifier(value)?this.residualHeapValueIdentifiers.getIdentifier(value).name:"?";let keyToString=(key)=>typeof key==="string"?key:key instanceof _index2.Value?valueToString(key):"?";beginComments.push(commentStatement(`  has effects: ${effects.createdObjects.size} created objects, ${effects.modifiedBindings.size} modified bindings, ${effects.modifiedProperties.size} modified properties`));if(effects.createdObjects.size>0)beginComments.push(commentStatement(`    created objects: ${Array.from(effects.createdObjects).map(valueToString).join(", ")}`));
if(effects.modifiedBindings.size>0)beginComments.push(commentStatement(`    modified bindings: ${Array.from(effects.modifiedBindings.keys()).map((b)=>b.name).join(", ")}`));if(effects.modifiedProperties.size>0)beginComments.push(commentStatement(`    modified properties: ${Array.from(effects.modifiedProperties.keys()).map((b)=>`${valueToString(b.object)}.${keyToString(b.key)}`).join(", ")}`))}statements.unshift(...beginComments);statements.push(commentStatement("end "+comment))}_withGeneratorScope(type,
generator,valuesToProcess,callback,optimizedFunction){let newBody={type,parentBody:undefined,entries:[],done:false,optimizedFunction};let optimizedFunctionRoot=optimizedFunction===undefined?undefined:this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(optimizedFunction);let isChild=!!optimizedFunctionRoot||type==="Generator";let oldBody=this.emitter.beginEmitting(generator,newBody,isChild);(0,_invariant.default)(!this.activeGeneratorBodies.has(generator));this.activeGeneratorBodies.set(generator,
newBody);callback(newBody);(0,_invariant.default)(this.activeGeneratorBodies.has(generator));this.activeGeneratorBodies.delete(generator);const statements=this.emitter.endEmitting(generator,oldBody,valuesToProcess,isChild).entries;if(this._options.debugScopes)this._annotateGeneratorStatements(generator,statements);this.getStatistics().generators++;return statements}_getContext(){let context={serializeOperationDescriptor:this.residualOperationSerializer.serializeStatement.bind(this.residualOperationSerializer),
serializeBinding:this.serializeBinding.bind(this),serializeBindingAssignment:(binding,bindingValue)=>{let serializeBinding=this.serializeBinding(binding);let serializedValue=context.serializeValue(bindingValue);return t.expressionStatement(t.assignmentExpression("=",serializeBinding,serializedValue))},serializeCondition:(condition,consequentGenerator,alternateGenerator,valuesToProcess)=>{let serializedCondition=this.serializeValue(condition);let consequentBody=context.serializeGenerator(consequentGenerator,
valuesToProcess);let alternateBody=context.serializeGenerator(alternateGenerator,valuesToProcess);return t.ifStatement(serializedCondition,t.blockStatement(consequentBody),t.blockStatement(alternateBody))},serializeDebugScopeComment(declared){let s=t.emptyStatement();s.leadingComments=[{type:"BlockComment",value:`declaring ${declared.intrinsicName||"?"}`}];return s},serializeReturnValue:(val)=>{return t.returnStatement(this.serializeValue(val))},serializeGenerator:(generator,valuesToProcess)=>this._withGeneratorScope("Generator",
generator,valuesToProcess,()=>generator.serialize(context)),serializeValue:this.serializeValue.bind(this),initGenerator:(generator)=>{let activeGeneratorBody=this._getActiveBodyOfGenerator(generator);(0,_invariant.default)(activeGeneratorBody===this.emitter.getBody(),"generator to init must be current emitter body");let s=this.additionalGeneratorRoots.get(generator);if(s!==undefined)for(let value of s)this.serializeValue(value)},finalizeGenerator:(generator)=>{let activeGeneratorBody=this._getActiveBodyOfGenerator(generator);
(0,_invariant.default)(activeGeneratorBody===this.emitter.getBody(),"generator to finalize must be current emitter body");this.emitter.finalizeCurrentBody()},emit:(statement)=>{this.emitter.emit(statement)},processValues:(valuesToProcess)=>{this.emitter.processValues(valuesToProcess)},getPropertyAssignmentStatement:this._getPropertyAssignmentStatement.bind(this),emitDefinePropertyBody:this.emitDefinePropertyBody.bind(this,false,undefined),canOmit:(value)=>{let canOmit=!this.referencedDeclaredValues.has(value)&&
!this.residualValues.has(value);if(!canOmit)return false;if(value instanceof _index2.ObjectValue&&value.temporalAlias!==undefined){let temporalAlias=value.temporalAlias;return!this.referencedDeclaredValues.has(temporalAlias)&&!this.residualValues.has(temporalAlias)}return canOmit},declare:(value)=>{this.emitter.declare(value)},emitBindingModification:(binding)=>{let residualFunctionBinding=this._getResidualFunctionBinding(binding);if(residualFunctionBinding!==undefined){(0,_invariant.default)(residualFunctionBinding.referentialized);
(0,_invariant.default)(residualFunctionBinding.serializedValue,"ResidualFunctionBinding must be referentialized before serializing a mutation to it.");let newValue=binding.value;(0,_invariant.default)(newValue);let bindingReference=residualFunctionBinding.serializedValue;(0,_invariant.default)(t.isLVal(bindingReference),"Referentialized values must be LVals even though serializedValues may be any Expression");let serializedNewValue=this.serializeValue(newValue);this.emitter.emit(t.expressionStatement(t.assignmentExpression("=",
bindingReference,serializedNewValue)))}},emitPropertyModification:(propertyBinding)=>{let desc=propertyBinding.descriptor;let object=propertyBinding.object;(0,_invariant.default)(object instanceof _index2.ObjectValue);if(this.residualValues.has(object)){let key=propertyBinding.key;(0,_invariant.default)(key!==undefined,"established by visitor");let dependencies=[];if(desc!==undefined)dependencies.push(...this._getDescriptorValues(desc));dependencies.push(object);if(key instanceof _index2.Value)dependencies.push(key);
this.emitter.emitNowOrAfterWaitingForDependencies(dependencies,()=>{this.serializeValue(object);this._emitProperty(object,key,desc,true)},this.emitter.getBody())}},options:this._options};return context}_shouldBeWrapped(body){for(let i=0;i<body.length;i++){let item=body[i];if(item.type==="ExpressionStatement")continue;else if(item.type==="VariableDeclaration"||item.type==="FunctionDeclaration")return true;else if(item.type==="BlockStatement"){if(this._shouldBeWrapped(item.body))return true}else if(item.type===
"IfStatement"){if(item.alternate)if(this._shouldBeWrapped(item.alternate.body))return true;if(item.consequent)if(this._shouldBeWrapped(item.consequent.body))return true}}return false}_serializeAdditionalFunctionGeneratorAndEffects(generator,functionValue,additionalEffects){return this._withGeneratorScope("OptimizedFunction",generator,undefined,(newBody)=>{let effectsGenerator=additionalEffects.generator;(0,_invariant.default)(effectsGenerator===generator);effectsGenerator.serialize(this._getContext());
this.realm.withEffectsAppliedInGlobalEnv(()=>{const lazyHoistedReactNodes=this.residualReactElementSerializer.serializeLazyHoistedNodes(functionValue);this.mainBody.entries.push(...lazyHoistedReactNodes);return null},additionalEffects.effects)},functionValue)}_serializeAdditionalFunction(additionalFunctionValue,additionalEffects){let {effects,transforms,generator,additionalRoots}=additionalEffects;if(!this.additionalFunctionValueInfos.has(additionalFunctionValue)||this.rewrittenAdditionalFunctions.has(additionalFunctionValue))return;
this.rewrittenAdditionalFunctions.set(additionalFunctionValue,[]);for(let additionalRoot of additionalRoots)this.serializeValue(additionalRoot);let createdObjects=effects.createdObjects;let nestedFunctions=new Set([...createdObjects].filter((object)=>object instanceof _index2.FunctionValue));nestedFunctions.forEach((val)=>this.additionalFunctionValueNestedFunctions.add(val));let body=this._serializeAdditionalFunctionGeneratorAndEffects(generator,additionalFunctionValue,additionalEffects);(0,_invariant.default)(additionalFunctionValue instanceof
_index2.ECMAScriptSourceFunctionValue);for(let transform of transforms)transform(body);this.rewrittenAdditionalFunctions.set(additionalFunctionValue,body)}prepareAdditionalFunctionValues(){for(let [additionalFunctionValue,{generator}]of this.additionalFunctionValuesAndEffects.entries()){(0,_invariant.default)(!this.additionalFunctionGenerators.has(additionalFunctionValue));this.additionalFunctionGenerators.set(additionalFunctionValue,generator)}}postGeneratorSerialization(){}serialize(){this.prepareAdditionalFunctionValues();
this.generator.serialize(this._getContext());this.getStatistics().generators++;(0,_invariant.default)(this.emitter.declaredCount()<=this.realm.derivedIds.size);for(let [moduleId,moduleValue]of this.modules.initializedModules)this.requireReturns.set(moduleId,(0,_ResidualFunctionInstantiator.getReplacement)(this.serializeValue(moduleValue),moduleValue));for(let [name,value]of this.declaredGlobalLets)this.emitter.emit(t.expressionStatement(t.assignmentExpression("=",t.identifier(name),this.serializeValue(value))));
this.postGeneratorSerialization();Array.prototype.push.apply(this.prelude,this.preludeGenerator.prelude);this.emitter.finalize();this.residualFunctions.residualFunctionInitializers.factorifyInitializers(this.factoryNameGenerator);let {unstrictFunctionBodies,strictFunctionBodies}=this.residualFunctions.spliceFunctions(this.rewrittenAdditionalFunctions);let strictDirective=t.directive(t.directiveLiteral("use strict"));let globalDirectives=[];if(!this.realm.isStrict&&!unstrictFunctionBodies.length&&
strictFunctionBodies.length)globalDirectives.push(strictDirective);else if(unstrictFunctionBodies.length&&strictFunctionBodies.length)funcLoop:for(let node of strictFunctionBodies)if(t.isFunctionExpression(node)){let func=node;if(func.body.directives)for(let directive of func.body.directives){if(directive.value.value==="use strict")continue funcLoop}else func.body.directives=[];func.body.directives.unshift(strictDirective)}if(this.needsEmptyVar)this.prelude.push(t.variableDeclaration("var",[t.variableDeclarator(_babelhelpers.emptyExpression,
t.objectExpression([]))]));if(this.needsAuxiliaryConstructor)this.prelude.push(t.variableDeclaration("var",[t.variableDeclarator(_babelhelpers.constructorExpression,t.functionExpression(null,[],t.blockStatement([])))]));let body=this.prelude.concat(this.emitter.getBody().entries);(0,_factorify.factorifyObjects)(body,this.factoryNameGenerator);let ast_body=[];if(this.preludeGenerator.declaredGlobals.size>0)ast_body.push(t.variableDeclaration("var",Array.from(this.preludeGenerator.declaredGlobals).map((key)=>
t.variableDeclarator(t.identifier(key)))));if(this.declaredGlobalLets.size>0)ast_body.push(t.variableDeclaration("let",Array.from(this.declaredGlobalLets.keys()).map((key)=>t.variableDeclarator(t.identifier(key)))));if(body.length){if(this.realm.isCompatibleWith("node-source-maps"))ast_body.push(t.expressionStatement(t.callExpression(t.memberExpression(t.callExpression(t.identifier("require"),[t.stringLiteral("source-map-support")]),t.identifier("install")),[])));if(this._shouldBeWrapped(body)){let globalExpression=
t.thisExpression();let functionExpression=t.functionExpression(null,[],t.blockStatement(body,globalDirectives));let callExpression=this.preludeGenerator.usesThis?t.callExpression(t.memberExpression(functionExpression,t.identifier("call")),[globalExpression]):t.callExpression(functionExpression,[]);ast_body.push(t.expressionStatement(callExpression))}else Array.prototype.push.apply(ast_body,body)}if(this.serializedValues.size!==this.residualValues.size||!Array.from(this.serializedValues).every((val)=>
this.residualValues.has(val))){this._logSerializedResidualMismatches();(0,_invariant.default)(false,"serialized "+this.serializedValues.size+" of "+this.residualValues.size)}for(let instance of this.residualFunctionInstances.values())this.referentializer.cleanInstance(instance);let program_directives=[];if(this.realm.isStrict)program_directives.push(strictDirective);return t.file(t.program(ast_body,program_directives))}_logScopes(scopes){console.log(`  referenced by ${scopes.size} scopes`);for(let s of scopes)if(s instanceof
_generator.Generator){let text="";for(;s instanceof _generator.Generator;s=this.generatorTree.getParent(s))text+="=>"+s.getName();console.log(`      ${text}`)}else{(0,_invariant.default)(s instanceof _index2.FunctionValue);console.log(`      ${s.__originalName||JSON.stringify(s.expressionLocation)||s.constructor.name}`)}}_logSerializedResidualMismatches(){let logValue=(value)=>{console.log((0,_utils2.describeValue)(value));let scopes=this.residualValues.get(value);if(scopes!==undefined)this._logScopes(scopes)};
console.log("=== serialized but not visited values");for(let value of this.serializedValues)if(!this.residualValues.has(value))logValue(value);console.log("=== visited but not serialized values");for(let value of this.residualValues.keys())if(!this.serializedValues.has(value))logValue(value)}}exports.ResidualHeapSerializer=ResidualHeapSerializer},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ResidualFunctions=void 0;var _errors=__webpack_require__(3);
var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var t=_interopRequireWildcard(__webpack_require__(21));var _invariant=_interopRequireDefault(__webpack_require__(9));var _types2=__webpack_require__(408);var _statistics=__webpack_require__(407);var _ResidualFunctionInstantiator=__webpack_require__(435);var _modules=__webpack_require__(411);var _ResidualFunctionInitializers=__webpack_require__(437);var _babelhelpers=__webpack_require__(239);var _Referentializer=__webpack_require__(439);
var _utils=__webpack_require__(413);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=
obj;return newObj}}class ResidualFunctions{constructor(realm,options,modules,requireReturns,locationService,prelude,factoryNameGenerator,residualFunctionInfos,residualFunctionInstances,residualClassMethodInstances,additionalFunctionValueInfos,additionalFunctionValueNestedFunctions,referentializer){this.realm=realm;this.modules=modules;this.requireReturns=requireReturns;this.locationService=locationService;this.prelude=prelude;this.factoryNameGenerator=factoryNameGenerator;this.functionPrototypes=
new Map;this.firstFunctionUsages=new Map;this.functions=new Map;this.classes=new Map;this.functionInstances=[];this.residualFunctionInitializers=new _ResidualFunctionInitializers.ResidualFunctionInitializers(locationService);this.residualFunctionInfos=residualFunctionInfos;this.residualFunctionInstances=residualFunctionInstances;this.residualClassMethodInstances=residualClassMethodInstances;this.additionalFunctionValueInfos=additionalFunctionValueInfos;this.referentializer=referentializer;for(let instance of residualFunctionInstances.values()){(0,
_invariant.default)(instance!==undefined);if(!additionalFunctionValueInfos.has(instance.functionValue))this.addFunctionInstance(instance)}this.additionalFunctionValueNestedFunctions=additionalFunctionValueNestedFunctions;this.additionalFunctionPreludes=new Map;for(let functionValue of additionalFunctionValueInfos.keys())this.additionalFunctionPreludes.set(functionValue,[])}getStatistics(){(0,_invariant.default)(this.realm.statistics instanceof _statistics.SerializerStatistics,"serialization requires SerializerStatistics");
return this.realm.statistics}addFunctionInstance(instance){this.functionInstances.push(instance);let code=instance.functionValue.$ECMAScriptCode;(0,_invariant.default)(code!=null);(0,_utils.getOrDefault)(this.functions,code,()=>[]).push(instance)}setFunctionPrototype(constructor,prototypeId){this.functionPrototypes.set(constructor,prototypeId)}addFunctionUsage(val,bodyReference){if(!this.firstFunctionUsages.has(val))this.firstFunctionUsages.set(val,bodyReference)}_shouldUseFactoryFunction(funcBody,
instances){(0,_invariant.default)(instances.length>0);function shouldInlineFunction(){if(instances[0].scopeInstances.size>0)return false;let shouldInline=true;if(funcBody.start&&funcBody.end){let bodySize=funcBody.end-funcBody.start;shouldInline=bodySize<=30}return shouldInline}let functionInfo=this.residualFunctionInfos.get(funcBody);(0,_invariant.default)(functionInfo);let {usesArguments}=functionInfo;let hasAnyLeakedIds=false;for(const instance of instances)for(const scope of instance.scopeInstances.values())if(scope.leakedIds.length>
0)hasAnyLeakedIds=true;return!shouldInlineFunction()&&instances.length>1&&!usesArguments&&!hasAnyLeakedIds}_getIdentifierReplacements(funcBody,residualFunctionBindings){let functionInfo=this.residualFunctionInfos.get(funcBody);(0,_invariant.default)(functionInfo);let {unbound}=functionInfo;let res=new Map;for(let [name,nodes]of unbound){let residualFunctionBinding=residualFunctionBindings.get(name);if(residualFunctionBinding===undefined)continue;if(residualFunctionBinding.declarativeEnvironmentRecord===
null&&residualFunctionBinding.value===undefined)continue;let serializedValue=residualFunctionBinding.serializedValue;(0,_invariant.default)(serializedValue!==undefined);let replacement=(0,_ResidualFunctionInstantiator.getReplacement)(serializedValue,residualFunctionBinding.referentialized?undefined:residualFunctionBinding.value);for(let node of nodes)res.set(node,replacement)}return res}_getCallReplacements(funcBody){let functionInfo=this.residualFunctionInfos.get(funcBody);(0,_invariant.default)(functionInfo);
let {requireCalls,modified}=functionInfo;let res=new Map;for(let [callNode,moduleId]of requireCalls){this.getStatistics().requireCalls++;if(modified.has(callNode.callee.name))continue;let replacement=this.requireReturns.get(""+moduleId);if(replacement!==undefined){this.getStatistics().requireCallsReplaced++;res.set(callNode,replacement)}}return res}_hasRewrittenFunctionInstance(rewrittenAdditionalFunctions,instances){return instances.find((instance)=>rewrittenAdditionalFunctions.has(instance.functionValue))!==
undefined}_generateFactoryFunctionInfos(rewrittenAdditionalFunctions){const factoryFunctionInfos=new Map;for(const [functionBody,instances]of this.functions){(0,_invariant.default)(instances.length>0);let factoryId;const suffix=instances[0].functionValue.__originalName||this.realm.debugNames?"factoryFunction":"";if(this._shouldUseFactoryFunction(functionBody,instances)){(0,_invariant.default)(!this._hasRewrittenFunctionInstance(rewrittenAdditionalFunctions,instances));factoryId=t.identifier(this.factoryNameGenerator.generate(suffix))}else factoryId=
this.locationService.getLocation(instances[0].functionValue);const functionUniqueTag=functionBody.uniqueOrderedTag;(0,_invariant.default)(functionUniqueTag);const functionInfo=this.residualFunctionInfos.get(functionBody);(0,_invariant.default)(functionInfo);let anyContainingAdditionalFunction=!instances.every((instance)=>instance.containingAdditionalFunction===undefined);factoryFunctionInfos.set(functionUniqueTag,{factoryId,functionInfo,anyContainingAdditionalFunction})}return factoryFunctionInfos}_sortFunctionByOriginalOrdering(functionEntries){functionEntries.sort((funcA,
funcB)=>{const funcAUniqueTag=funcA[0].uniqueOrderedTag;(0,_invariant.default)(funcAUniqueTag);const funcBUniqueTag=funcB[0].uniqueOrderedTag;(0,_invariant.default)(funcBUniqueTag);return funcAUniqueTag-funcBUniqueTag})}_createFunctionExpression(params,body,isLexical){body=Object.assign({},body);return isLexical?t.arrowFunctionExpression(params,body):t.functionExpression(null,params,body)}spliceFunctions(rewrittenAdditionalFunctions){this.residualFunctionInitializers.scrubFunctionInitializers();let functionBodies=
new Map;let additionalFunctionModifiedBindingsSegment=new Map;let getModifiedBindingsSegment=(additionalFunction)=>(0,_utils.getOrDefault)(additionalFunctionModifiedBindingsSegment,additionalFunction,()=>[]);let getFunctionBody=(instance)=>(0,_utils.getOrDefault)(functionBodies,instance,()=>[]);let getPrelude=(instance)=>{let additionalFunction=instance.containingAdditionalFunction;let b;if(additionalFunction!==undefined){b=this.additionalFunctionPreludes.get(additionalFunction);(0,_invariant.default)(b!==
undefined)}else b=this.prelude;return b};let functionEntries=Array.from(this.functions.entries());this._sortFunctionByOriginalOrdering(functionEntries);this.getStatistics().functions=functionEntries.length;let unstrictFunctionBodies=[];let strictFunctionBodies=[];let registerFunctionStrictness=(node,strict)=>{if(t.isFunctionExpression(node)||t.isArrowFunctionExpression(node))(strict?strictFunctionBodies:unstrictFunctionBodies).push(node)};let funcNodes=new Map;let defineFunction=(instance,funcId,
funcOrClassNode)=>{let {functionValue}=instance;if(instance.initializationStatements.length>0){let initializationBody=getFunctionBody(instance);Array.prototype.push.apply(initializationBody,instance.initializationStatements)}let body;if(t.isFunctionExpression(funcOrClassNode)){funcNodes.set(functionValue,funcOrClassNode);body=getPrelude(instance)}else{(0,_invariant.default)(t.isCallExpression(funcOrClassNode)||t.isClassExpression(funcOrClassNode)||t.isArrowFunctionExpression(funcOrClassNode));body=
getFunctionBody(instance)}body.push(t.variableDeclaration("var",[t.variableDeclarator(funcId,funcOrClassNode)]));let prototypeId=this.functionPrototypes.get(functionValue);if(prototypeId!==undefined){let id=this.locationService.getLocation(functionValue);(0,_invariant.default)(id!==undefined);body.push(t.variableDeclaration("var",[t.variableDeclarator(prototypeId,t.memberExpression(id,t.identifier("prototype")))]))}};for(let [funcValue,funcInfo]of this.additionalFunctionValueInfos){let scopes=new Set;
for(let [,residualBinding]of funcInfo.modifiedBindings){let scope=residualBinding.scope;if(scope===undefined||scopes.has(scope))continue;scopes.add(scope);(0,_invariant.default)(residualBinding.referentialized);let bodySegment=getModifiedBindingsSegment(funcValue);if(scope.referentializationScope!==funcValue){let init=this.referentializer.getReferentializedScopeInitialization(scope,t.numericLiteral(scope.id));Array.prototype.push.apply(bodySegment,init)}}}for(let [funcValue,additionalFunctionInfo]of this.additionalFunctionValueInfos.entries()){let {instance}=
additionalFunctionInfo;let functionValue=funcValue;let params=functionValue.$FormalParameters;let isLexical=functionValue.$ThisMode==="lexical";(0,_invariant.default)(params!==undefined);let rewrittenBody=rewrittenAdditionalFunctions.get(funcValue);(0,_invariant.default)(rewrittenBody);let functionBody=t.blockStatement(rewrittenBody);let funcOrClassNode;if(this.residualClassMethodInstances.has(funcValue)){let classMethodInstance=this.residualClassMethodInstances.get(funcValue);(0,_invariant.default)(classMethodInstance);
let {methodType,classMethodKeyNode,classSuperNode,classMethodComputed,classPrototype,classMethodIsStatic}=classMethodInstance;let isConstructor=methodType==="constructor";(0,_invariant.default)(classPrototype instanceof _index.ObjectValue);(0,_invariant.default)(classMethodKeyNode&&(t.isExpression(classMethodKeyNode)||t.isIdentifier(classMethodKeyNode)));funcOrClassNode=this._getOrCreateClassNode(classPrototype);let classMethod=t.classMethod(methodType,classMethodKeyNode,params,functionBody,classMethodComputed,
classMethodIsStatic);if(isConstructor)funcOrClassNode.body.body.unshift(classMethod);else funcOrClassNode.body.body.push(classMethod);if(!isConstructor)continue;if(classSuperNode!==undefined)funcOrClassNode.superClass=classSuperNode}else funcOrClassNode=isLexical?t.arrowFunctionExpression(params,functionBody):t.functionExpression(null,params,functionBody);let id=this.locationService.getLocation(funcValue);(0,_invariant.default)(id!==undefined);registerFunctionStrictness(funcOrClassNode,funcValue instanceof
_index.ECMAScriptSourceFunctionValue&&funcValue.$Strict);defineFunction(instance,id,funcOrClassNode)}const factoryFunctionInfos=this._generateFactoryFunctionInfos(rewrittenAdditionalFunctions);for(let [funcBody,instances]of functionEntries){let functionInfo=this.residualFunctionInfos.get(funcBody);(0,_invariant.default)(functionInfo);let {unbound,usesThis}=functionInfo;let params=instances[0].functionValue.$FormalParameters;(0,_invariant.default)(params!==undefined);let normalInstances=[];let additionalFunctionNestedInstances=
[];for(let instance of instances)if(this.additionalFunctionValueNestedFunctions.has(instance.functionValue))additionalFunctionNestedInstances.push(instance);else normalInstances.push(instance);let naiveProcessInstances=(instancesToSplice)=>{this.getStatistics().functionClones+=instancesToSplice.length;for(let instance of instancesToSplice){let {functionValue,residualFunctionBindings,scopeInstances}=instance;let funcOrClassNode;if(this.residualClassMethodInstances.has(functionValue)){let classMethodInstance=
this.residualClassMethodInstances.get(functionValue);(0,_invariant.default)(classMethodInstance);let {classSuperNode,classMethodKeyNode,methodType,classMethodComputed,classPrototype,classMethodIsStatic}=classMethodInstance;let isConstructor=methodType==="constructor";(0,_invariant.default)(classPrototype instanceof _index.ObjectValue);(0,_invariant.default)(classMethodKeyNode);(0,_invariant.default)(t.isExpression(classMethodKeyNode)||t.isIdentifier(classMethodKeyNode));funcOrClassNode=this._getOrCreateClassNode(classPrototype);
let hasEmptyConstructor=!!functionValue.$HasEmptyConstructor;if(!isConstructor||isConstructor&&!hasEmptyConstructor){let methodParams=params.slice();let classMethod=(new _ResidualFunctionInstantiator.ResidualFunctionInstantiator(factoryFunctionInfos,this._getIdentifierReplacements(funcBody,residualFunctionBindings),this._getCallReplacements(funcBody),t.classMethod(methodType,classMethodKeyNode,methodParams,funcBody,classMethodComputed,classMethodIsStatic))).instantiate();if(isConstructor)funcOrClassNode.body.body.unshift(classMethod);
else funcOrClassNode.body.body.push(classMethod)}if(!isConstructor)continue;if(classSuperNode!==undefined)funcOrClassNode.superClass=classSuperNode}else{let isLexical=instance.functionValue.$ThisMode==="lexical";funcOrClassNode=(new _ResidualFunctionInstantiator.ResidualFunctionInstantiator(factoryFunctionInfos,this._getIdentifierReplacements(funcBody,residualFunctionBindings),this._getCallReplacements(funcBody),this._createFunctionExpression(params,funcBody,isLexical))).instantiate();let scopeInitialization=
[];for(let scope of scopeInstances.values())scopeInitialization=scopeInitialization.concat(this.referentializer.getReferentializedScopeInitialization(scope,t.numericLiteral(scope.id)));if(scopeInitialization.length>0){let funcOrClassNodeBody=funcOrClassNode.body;(0,_invariant.default)(t.isBlockStatement(funcOrClassNodeBody));funcOrClassNodeBody.body=scopeInitialization.concat(funcOrClassNodeBody.body)}}let id=this.locationService.getLocation(functionValue);(0,_invariant.default)(id!==undefined);registerFunctionStrictness(funcOrClassNode,
functionValue.$Strict);(0,_invariant.default)(id!==undefined);(0,_invariant.default)(funcOrClassNode!==undefined);defineFunction(instance,id,funcOrClassNode)}};if(additionalFunctionNestedInstances.length>0)naiveProcessInstances(additionalFunctionNestedInstances);if(normalInstances.length>0&&!this._shouldUseFactoryFunction(funcBody,normalInstances)){naiveProcessInstances(normalInstances);this.getStatistics().functionClones--}else if(normalInstances.length>0){const functionUniqueTag=funcBody.uniqueOrderedTag;
(0,_invariant.default)(functionUniqueTag);const factoryInfo=factoryFunctionInfos.get(functionUniqueTag);(0,_invariant.default)(factoryInfo);const {factoryId}=factoryInfo;let factoryNames=[];let sameResidualBindings=new Map;for(let name of unbound.keys()){let isDifferent=false;let lastBinding;let firstBinding=normalInstances[0].residualFunctionBindings.get(name);(0,_invariant.default)(firstBinding);if(firstBinding.modified){sameResidualBindings.set(name,firstBinding);continue}for(let _ref of normalInstances){let {residualFunctionBindings}=
_ref;let residualBinding=residualFunctionBindings.get(name);(0,_invariant.default)(residualBinding);(0,_invariant.default)(!residualBinding.modified);if(!lastBinding)lastBinding=residualBinding;else if(!(0,_types2.AreSameResidualBinding)(this.realm,residualBinding,lastBinding)){isDifferent=true;break}}if(isDifferent)factoryNames.push(name);else{(0,_invariant.default)(lastBinding);sameResidualBindings.set(name,lastBinding)}}let factoryParams=[];for(let key of factoryNames)factoryParams.push(t.identifier(key));
let scopeInitialization=[];for(let [scopeName,scope]of normalInstances[0].scopeInstances){let scopeNameId=t.identifier(scopeName);factoryParams.push(scopeNameId);scopeInitialization=scopeInitialization.concat(this.referentializer.getReferentializedScopeInitialization(scope,scopeNameId))}factoryParams=factoryParams.concat(params).slice();let factoryNode=(new _ResidualFunctionInstantiator.ResidualFunctionInstantiator(factoryFunctionInfos,this._getIdentifierReplacements(funcBody,sameResidualBindings),
this._getCallReplacements(funcBody),this._createFunctionExpression(factoryParams,funcBody,false))).instantiate();if(scopeInitialization.length>0){let factoryNodeBody=factoryNode.body;(0,_invariant.default)(t.isBlockStatement(factoryNodeBody));factoryNodeBody.body=scopeInitialization.concat(factoryNodeBody.body)}let factoryDeclaration=t.variableDeclaration("var",[t.variableDeclarator(factoryId,factoryNode)]);this.prelude.push(factoryDeclaration);registerFunctionStrictness(factoryNode,normalInstances[0].functionValue.$Strict);
for(let instance of normalInstances){let {functionValue,residualFunctionBindings,insertionPoint}=instance;let functionId=this.locationService.getLocation(functionValue);(0,_invariant.default)(functionId!==undefined);let hasFunctionArg=false;let flatArgs=factoryNames.map((name)=>{let residualBinding=residualFunctionBindings.get(name);(0,_invariant.default)(residualBinding);let serializedValue=residualBinding.serializedValue;hasFunctionArg=hasFunctionArg||residualBinding.value&&residualBinding.value instanceof
_index.FunctionValue;(0,_invariant.default)(serializedValue);return serializedValue});let hasAnyLeakedIds=false;for(const scope of instance.scopeInstances.values()){flatArgs.push(t.numericLiteral(scope.id));if(scope.leakedIds.length>0)hasAnyLeakedIds=true}let funcNode;let firstUsage=this.firstFunctionUsages.get(functionValue);(0,_invariant.default)(insertionPoint!==undefined);if(this.residualFunctionInitializers.hasInitializerStatement(functionValue)||usesThis||hasFunctionArg||firstUsage===undefined||
!firstUsage.isNotEarlierThan(insertionPoint)||this.functionPrototypes.get(functionValue)!==undefined||hasAnyLeakedIds){let callArgs=[t.thisExpression()];for(let flatArg of flatArgs)callArgs.push(flatArg);for(let param of params){if(param.type!=="Identifier")throw new _errors.FatalError("TODO: do not know how to deal with non-Identifier parameters");callArgs.push(param)}let callee=t.memberExpression(factoryId,t.identifier("call"));let childBody=t.blockStatement([t.returnStatement(t.callExpression(callee,
callArgs))]);funcNode=t.functionExpression(null,params,childBody);registerFunctionStrictness(funcNode,functionValue.$Strict)}else funcNode=t.callExpression(t.memberExpression(factoryId,t.identifier("bind")),[_babelhelpers.nullExpression].concat(flatArgs));defineFunction(instance,functionId,funcNode)}}}for(let referentializationScope of this.referentializer.referentializationState.keys()){let prelude;if(referentializationScope!=="GLOBAL"){let additionalFunction=referentializationScope;prelude=this.additionalFunctionPreludes.get(additionalFunction);
(0,_invariant.default)(prelude!==undefined)}else prelude=this.prelude;prelude.unshift(...this.referentializer.createCapturedScopesPrelude(referentializationScope),...this.referentializer.createLeakedIds(referentializationScope))}for(let instance of this.functionInstances.reverse()){let functionBody=functionBodies.get(instance);if(functionBody!==undefined){let insertionPoint=instance.insertionPoint;(0,_invariant.default)(insertionPoint instanceof _types2.BodyReference);insertionPoint.body.entries.splice(insertionPoint.index,
0,...functionBody)}}for(let [functionValue,funcNode]of funcNodes){let initializerStatement=this.residualFunctionInitializers.getInitializerStatement(functionValue);if(initializerStatement!==undefined){(0,_invariant.default)(t.isFunctionExpression(funcNode));let blockStatement=funcNode.body;blockStatement.body.unshift(initializerStatement)}}for(let [additionalFunction,body]of Array.from(rewrittenAdditionalFunctions.entries()).reverse()){let additionalFunctionInfo=this.additionalFunctionValueInfos.get(additionalFunction);
(0,_invariant.default)(additionalFunctionInfo);let bodySegment=additionalFunctionModifiedBindingsSegment.get(additionalFunction);let initializationStatements=getFunctionBody(additionalFunctionInfo.instance);let prelude=this.additionalFunctionPreludes.get(additionalFunction);(0,_invariant.default)(prelude!==undefined);let insertionPoint=additionalFunctionInfo.instance.insertionPoint;(0,_invariant.default)(insertionPoint);insertionPoint.body.entries.splice(insertionPoint.index,0,...initializationStatements);
if(bodySegment)body.unshift(...bodySegment);body.unshift(...prelude)}return{unstrictFunctionBodies,strictFunctionBodies}}_getOrCreateClassNode(classPrototype){if(!this.classes.has(classPrototype)){let funcOrClassNode=t.classExpression(null,null,t.classBody([]),[]);this.classes.set(classPrototype,funcOrClassNode);return funcOrClassNode}else{let funcOrClassNode=this.classes.get(classPrototype);(0,_invariant.default)(funcOrClassNode&&t.isClassExpression(funcOrClassNode));return funcOrClassNode}}}exports.ResidualFunctions=
ResidualFunctions},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.getReplacement=getReplacement;exports.isPure=isPure;exports.ResidualFunctionInstantiator=void 0;var t=_interopRequireWildcard(__webpack_require__(21));var _jsx=__webpack_require__(436);var _babelhelpers=__webpack_require__(239);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function canShareFunctionBody(duplicateFunctionInfo){if(duplicateFunctionInfo.anyContainingAdditionalFunction)return false;const {unbound,modified,usesThis}=duplicateFunctionInfo.functionInfo;return unbound.size===0&&modified.size===0&&!usesThis}function getReplacement(node,
value){let truthiness;if(value!==undefined)if(!value.mightNotBeFalse())truthiness=false;else if(!value.mightNotBeTrue())truthiness=true;return{node,truthiness}}function isPure(node){switch(node.type){case "NullLiteral":case "BooleanLiteral":case "StringLiteral":case "NumericLiteral":return true;case "UnaryExpression":case "SpreadElement":let unaryExpression=node;return isPure(unaryExpression.argument);case "BinaryExpression":case "LogicalExpression":let binaryExpression=node;return isPure(binaryExpression.left)&&
isPure(binaryExpression.right);default:return false}}class ResidualFunctionInstantiator{constructor(factoryFunctionInfos,identifierReplacements,callReplacements,root){this.factoryFunctionInfos=factoryFunctionInfos;this.identifierReplacements=identifierReplacements;this.callReplacements=callReplacements;this.root=root}instantiate(){return this._replace(this.root)}_getLiteralTruthiness(node){switch(node.type){case "BooleanLiteral":case "NumericLiteral":case "StringLiteral":return!!node.value;case "Identifier":{let replacement=
this.identifierReplacements.get(node);if(replacement!==undefined)return replacement.truthiness;return undefined}case "CallExpression":{let replacement=this.callReplacements.get(node);if(replacement!==undefined)return replacement.truthiness;return undefined}case "FunctionExpression":case "ArrowFunctionExpression":case "RegExpLiteral":return true;case "ClassExpression":let classExpression=node;return classExpression.superClass===null&&classExpression.body.body.length===0?true:undefined;case "ObjectExpression":let objectExpression=
node;return objectExpression.properties.every((property)=>isPure(property.key)&&isPure(property.value))?true:undefined;case "ArrayExpression":let arrayExpression=node;return arrayExpression.elements.every((element)=>element===undefined||isPure(element))?true:undefined;case "NullLiteral":return false;case "UnaryExpression":let unaryExpression=node;return unaryExpression.operator==="void"&&isPure(unaryExpression.argument)?false:undefined;default:return undefined}}_replaceIdentifier(node){let replacement=
this.identifierReplacements.get(node);if(replacement!==undefined)return replacement.node;return node}_replaceJSXIdentifier(node){let replacement=this.identifierReplacements.get(node);if(replacement!==undefined)return(0,_jsx.convertExpressionToJSXIdentifier)(replacement.node,true);return node}_replaceLabeledStatement(node){let newBody=this._replace(node.body);if(newBody!==node.body){let res=Object.assign({},node);res.body=newBody;return res}return node}_replaceCallExpression(node){let replacement=
this.callReplacements.get(node);if(replacement!==undefined)return replacement.node;return this._replaceFallback(node)}_replaceFunctionExpression(node){if(this.root!==node){const functionExpression=node;const functionTag=functionExpression.body.uniqueOrderedTag;if(functionTag!==undefined){const duplicateFunctionInfo=this.factoryFunctionInfos.get(functionTag);if(duplicateFunctionInfo&&canShareFunctionBody(duplicateFunctionInfo)){const {factoryId}=duplicateFunctionInfo;return t.callExpression(t.memberExpression(factoryId,
t.identifier("bind")),[_babelhelpers.nullExpression])}}}return this._replaceFallback(node)}_replaceIfStatement(node){let testTruthiness=this._getLiteralTruthiness(node.test);if(testTruthiness===true)return this._replace(node.consequent);else if(testTruthiness===false)if(node.alternate!==null)return this._replace(node.alternate);else return t.emptyStatement();return this._replaceFallback(node)}_replaceConditionalExpression(node){let testTruthiness=this._getLiteralTruthiness(node.test);if(testTruthiness!==
undefined)return testTruthiness?this._replace(node.consequent):this._replace(node.alternate);return this._replaceFallback(node)}_replaceLogicalExpression(node){let leftTruthiness=this._getLiteralTruthiness(node.left);if(node.operator==="&&"&&leftTruthiness!==undefined)return leftTruthiness?this._replace(node.right):this._replace(node.left);else if(node.operator==="||"&&leftTruthiness!==undefined)return leftTruthiness?this._replace(node.left):this._replace(node.right);return this._replaceFallback(node)}_replaceWhileStatement(node){let testTruthiness=
this._getLiteralTruthiness(node.test);if(testTruthiness===false)return t.emptyStatement();return this._replaceFallback(node)}_replaceFallback(node){let newNode;for(let key in node){let subNode=node[key];if(!subNode)continue;let newSubNode;if(Array.isArray(subNode)){let newArray;for(let i=0;i<subNode.length;i++){let elementNode=subNode[i];if(!elementNode)continue;let newElementNode=this._replace(elementNode);if(newElementNode!==elementNode){if(newArray===undefined)newArray=subNode.slice(0);newArray[i]=
newElementNode}}if(newArray===undefined)continue;newSubNode=newArray}else if(subNode.type){newSubNode=this._replace(subNode);if(newSubNode===subNode)continue}else continue;if(newNode===undefined)newNode=Object.assign({},node);newNode[key]=newSubNode}return newNode||node}_replace(node){switch(node.type){case "Identifier":return this._replaceIdentifier(node);case "LabeledStatement":return this._replaceLabeledStatement(node);case "BreakStatement":case "ContinueStatement":return node;case "JSXIdentifier":case "JSXMemberExpressions":return this._replaceJSXIdentifier(node);
case "CallExpression":return this._replaceCallExpression(node);case "FunctionExpression":return this._replaceFunctionExpression(node);case "IfStatement":return this._replaceIfStatement(node);case "ConditionalExpression":return this._replaceConditionalExpression(node);case "LogicalExpression":return this._replaceLogicalExpression(node);case "WhileStatement":return this._replaceWhileStatement(node);default:return this._replaceFallback(node)}}}exports.ResidualFunctionInstantiator=ResidualFunctionInstantiator},
function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.convertExpressionToJSXIdentifier=convertExpressionToJSXIdentifier;exports.convertJSXExpressionToIdentifier=convertJSXExpressionToIdentifier;exports.convertKeyValueToJSXAttribute=convertKeyValueToJSXAttribute;var t=_interopRequireWildcard(__webpack_require__(21));var _invariant=_interopRequireDefault(__webpack_require__(9));var _utils=__webpack_require__(291);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function convertExpressionToJSXIdentifier(expr,isRoot){switch(expr.type){case "ThisExpression":(0,
_invariant.default)(isRoot===false,`invalid conversion of root expression to JSXIdentifier for ThisExpression`);return t.jSXIdentifier("this");case "Identifier":let name=expr.name;(0,_invariant.default)(isRoot===false||(0,_utils.isReactComponent)(name),"invalid JSXIdentifer from Identifier, Identifier name must be uppercase");return t.jSXIdentifier(name);case "StringLiteral":let value=expr.value;(0,_invariant.default)(value.length>0&&value[0]===value[0].toLowerCase(),"invalid JSXIdentifer from string, strings must be lowercase");
return t.jSXIdentifier(value);case "MemberExpression":(0,_invariant.default)(expr.computed===false,"Cannot inline computed expressions in JSX type.");return t.jSXMemberExpression(convertExpressionToJSXIdentifier(expr.object,false),convertExpressionToJSXIdentifier(expr.property,false));default:(0,_invariant.default)(false,"Invalid JSX type")}}function convertJSXExpressionToIdentifier(expr){switch(expr.type){case "JSXIdentifier":return t.identifier(expr.name);case "JSXMemberExpression":return t.memberExpression(convertJSXExpressionToIdentifier(expr.object),
convertJSXExpressionToIdentifier(expr.property));default:(0,_invariant.default)(false,"Invalid JSX type")}}function convertKeyValueToJSXAttribute(key,expr){let wrapInContainer=true;if(expr&&t.isStringLiteral(expr)&&typeof expr.value==="string"){let value=expr.value;wrapInContainer=value.includes('"')||value.includes("'")}return t.jSXAttribute(t.jSXIdentifier(key),wrapInContainer?t.jSXExpressionContainer(expr):expr)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.ResidualFunctionInitializers=void 0;var _index=__webpack_require__(10);var t=_interopRequireWildcard(__webpack_require__(21));var _NameGenerator=__webpack_require__(240);var _traverseFast=_interopRequireDefault(__webpack_require__(279));var _invariant=_interopRequireDefault(__webpack_require__(9));var _babelhelpers=__webpack_require__(239);var _factorify=__webpack_require__(438);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&
obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}class ResidualFunctionInitializers{constructor(locationService){this.functionInitializerInfos=new Map;this.initializers=new Map;this.sharedInitializers=
new Map;this.locationService=locationService}registerValueOnlyReferencedByResidualFunctions(functionValues,val){(0,_invariant.default)(functionValues.length>=1);let infos=[];for(let functionValue of functionValues){let info=this.functionInitializerInfos.get(functionValue);if(info===undefined)this.functionInitializerInfos.set(functionValue,info={ownId:this.functionInitializerInfos.size.toString(),initializerIds:new Set});infos.push(info)}let id=infos.map((info)=>info.ownId).sort().join();for(let info of infos)info.initializerIds.add(id);
let initializer=this.initializers.get(id);if(initializer===undefined)this.initializers.set(id,initializer={id,order:infos.length,values:[],body:{type:"DelayInitializations",parentBody:undefined,entries:[],done:false}});initializer.values.push(val);return initializer.body}scrubFunctionInitializers(){for(let initializer of this.initializers.values())if(initializer.body.entries.length===0)this.initializers.delete(initializer.id);for(let [functionValue,info]of this.functionInitializerInfos){for(let id of info.initializerIds){let initializer=
this.initializers.get(id);if(initializer===undefined)info.initializerIds.delete(id)}if(info.initializerIds.size===0)this.functionInitializerInfos.delete(functionValue)}}_conditionalInitialization(containingAdditionalFunction,initializedValues,initializationStatements){if(initializationStatements.length===1&&t.isIfStatement(initializationStatements[0]))return initializationStatements[0];let location;for(let value of initializedValues)if(!value.mightBeUndefined()&&!(value instanceof _index.FunctionValue)){location=
this.locationService.getLocation(value);if(location!==undefined)break}if(location===undefined){location=this.locationService.createLocation(containingAdditionalFunction);initializationStatements.unshift(t.expressionStatement(t.assignmentExpression("=",location,_babelhelpers.nullExpression)))}return t.ifStatement(t.binaryExpression("===",location,_babelhelpers.voidExpression),t.blockStatement(initializationStatements))}hasInitializerStatement(functionValue){return!!this.functionInitializerInfos.get(functionValue)}factorifyInitializers(nameGenerator){for(const initializer of this.initializers.values())(0,
_factorify.factorifyObjects)(initializer.body.entries,nameGenerator)}getInitializerStatement(functionValue){let initializerInfo=this.functionInitializerInfos.get(functionValue);if(initializerInfo===undefined)return undefined;let containingAdditionalFunction=this.locationService.getContainingAdditionalFunction(functionValue);(0,_invariant.default)(initializerInfo.initializerIds.size>0);let ownInitializer=this.initializers.get(initializerInfo.ownId);let initializedValues;let initializationStatements=
[];let initializers=[];for(let initializerId of initializerInfo.initializerIds){let initializer=this.initializers.get(initializerId);(0,_invariant.default)(initializer!==undefined);(0,_invariant.default)(initializer.body.entries.length>0);initializers.push(initializer)}initializers.sort((i,j)=>j.order-i.order);for(let initializer of initializers){if(initializerInfo.initializerIds.size===1||initializer===ownInitializer)initializedValues=initializer.values;if(initializer===ownInitializer)initializationStatements=
initializationStatements.concat(initializer.body.entries);else{let ast=this.sharedInitializers.get(initializer.id);if(ast===undefined){ast=this._conditionalInitialization(containingAdditionalFunction,initializer.values,initializer.body.entries);let count=0;(0,_traverseFast.default)(t.file(t.program([ast])),(node)=>{count++;return false});if(count>24){let id=this.locationService.createFunction(containingAdditionalFunction,[ast]);ast=t.expressionStatement(t.callExpression(id,[]))}this.sharedInitializers.set(initializer.id,
ast)}initializationStatements.push(ast)}}return this._conditionalInitialization(containingAdditionalFunction,initializedValues||[],initializationStatements)}}exports.ResidualFunctionInitializers=ResidualFunctionInitializers},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.factorifyObjects=factorifyObjects;var t=_interopRequireWildcard(__webpack_require__(21));var _NameGenerator=__webpack_require__(240);function _interopRequireWildcard(obj){if(obj&&
obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function isLiteral(node){switch(node.type){case "NullLiteral":case "BooleanLiteral":case "StringLiteral":case "NumericLiteral":return true;case "UnaryExpression":return node.operator===
"void"&&isLiteral(node.argument);default:return false}}function isSameNode(left,right){let type=left.type;if(type!==right.type)return false;if(type==="Identifier")return left.name===right.name;if(type==="NullLiteral")return true;if(type==="BooleanLiteral"||type==="StringLiteral"||type==="NumericLiteral")return Object.is(left.value,right.value);if(type==="UnaryExpression")return left.operator==="void"&&right.operator==="void"&&isLiteral(left.argument)&&isLiteral(right.argument);return false}function getObjectKeys(obj){let keys=
[];for(let prop of obj.properties){if(prop.type!=="ObjectProperty")return false;let key=prop.key;if(key.type==="StringLiteral")keys.push(key.value);else if(key.type==="Identifier"){if(prop.computed)return false;keys.push(key.name)}else return false}for(let key of keys)if(key.indexOf("|")>=0)return false;return keys.join("|")}function factorifyObjects(body,factoryNameGenerator){let signatures=Object.create(null);for(let node of body)switch(node.type){case "VariableDeclaration":for(let declar of node.declarations){let {init}=
declar;if(!init)continue;if(init.type!=="ObjectExpression")continue;let keys=getObjectKeys(init);if(!keys)continue;let initializerAstNodeName="init";let declars=signatures[keys]=signatures[keys]||[];declars.push({declar,initializerAstNodeName})}break;case "ExpressionStatement":const expr=node.expression;if(expr.type!=="AssignmentExpression")break;const {right}=expr;if(right.type!=="ObjectExpression")break;let keys=getObjectKeys(right);if(!keys)continue;let initializerAstNodeName="right";let declars=
signatures[keys]=signatures[keys]||[];declars.push({declar:node.expression,initializerAstNodeName});break;default:break}for(let signatureKey in signatures){let declars=signatures[signatureKey];if(declars.length<5)continue;let keys=signatureKey.split("|");let rootFactoryParams=[];let rootFactoryProps=[];for(let keyIndex=0;keyIndex<keys.length;keyIndex++){let key=keys[keyIndex];let id=t.identifier(`__${keyIndex}`);rootFactoryParams.push(id);let keyNode=t.isValidIdentifier(key)?t.identifier(key):t.stringLiteral(key);
rootFactoryProps.push(t.objectProperty(keyNode,id))}let rootFactoryId=t.identifier(factoryNameGenerator.generate("root"));let rootFactoryBody=t.blockStatement([t.returnStatement(t.objectExpression(rootFactoryProps))]);let rootFactory=t.functionDeclaration(rootFactoryId,rootFactoryParams,rootFactoryBody);body.unshift(rootFactory);for(let _ref of declars){let {declar,initializerAstNodeName}=_ref;let args=[];for(let prop of declar[initializerAstNodeName].properties)args.push(prop.value);declar[initializerAstNodeName]=
t.callExpression(rootFactoryId,args)}let seen=new Set;for(let _ref2 of declars){let {declar,initializerAstNodeName}=_ref2;if(seen.has(declar))continue;let common=[];let mostSharedArgsLength=0;for(let _ref3 of declars){let {declar:declar2,initializerAstNodeName:initializerAstNodeName2}=_ref3;if(seen.has(declar2))continue;if(declar===declar2)continue;let sharedArgs=[];for(let i=0;i<keys.length;i++)if(isSameNode(declar[initializerAstNodeName].arguments[i],declar2[initializerAstNodeName2].arguments[i]))sharedArgs.push(i);
if(!sharedArgs.length)continue;mostSharedArgsLength=Math.max(mostSharedArgsLength,sharedArgs.length);common.push({declar:declar2,initializerAstNodeName:initializerAstNodeName2,sharedArgs})}let sharedPairs=Object.create(null);for(let _ref4 of common){let {declar:declar2,initializerAstNodeName:initializerAstNodeName2,sharedArgs}=_ref4;if(sharedArgs.length===mostSharedArgsLength){sharedArgs=sharedArgs.join(",");let pair=sharedPairs[sharedArgs]=sharedPairs[sharedArgs]||[{declar,initializerAstNodeName}];
pair.push({declar:declar2,initializerAstNodeName:initializerAstNodeName2})}}let highestPairArgs;let highestPairCount;for(let pairArgs in sharedPairs){let pair=sharedPairs[pairArgs];if(highestPairArgs===undefined||pair.length>highestPairCount){highestPairCount=pair.length;highestPairArgs=pairArgs}}if(highestPairArgs===undefined)continue;let declarsSub=sharedPairs[highestPairArgs];let removeArgs=highestPairArgs.split(",");let subFactoryArgs=[];let subFactoryParams=[];let sharedArgs=declar[initializerAstNodeName].arguments;
for(let i=0;i<sharedArgs.length;i++){let arg=sharedArgs[i];if(removeArgs.indexOf(i+"")>=0)subFactoryArgs.push(arg);else{let id=t.identifier(`__${i}`);subFactoryArgs.push(id);subFactoryParams.push(id)}}let subFactoryId=t.identifier(factoryNameGenerator.generate("sub"));let subFactoryBody=t.blockStatement([t.returnStatement(t.callExpression(rootFactoryId,subFactoryArgs))]);let subFactory=t.functionDeclaration(subFactoryId,subFactoryParams,subFactoryBody);body.unshift(subFactory);for(let _ref5 of declarsSub){let {declar:declar2,
initializerAstNodeName:initializerAstNodeName2}=_ref5;seen.add(declar2);let call=declar2[initializerAstNodeName2];call.callee=subFactoryId;call.arguments=call.arguments.filter(function(val,i){return removeArgs.indexOf(i+"")<0})}}}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.Referentializer=void 0;var _environment=__webpack_require__(20);var t=_interopRequireWildcard(__webpack_require__(21));var _generator=_interopRequireDefault(__webpack_require__(335));
var _NameGenerator=__webpack_require__(240);var _invariant=_interopRequireDefault(__webpack_require__(9));var _statistics=__webpack_require__(407);var _utils=__webpack_require__(413);var _realm=__webpack_require__(7);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&
Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}class Referentializer{constructor(realm,options,scopeNameGenerator,scopeBindingNameGenerator,leakedNameGenerator,residualOptimizedFunctions){this._options=options;this.scopeNameGenerator=scopeNameGenerator;this.scopeBindingNameGenerator=scopeBindingNameGenerator;this.referentializationState=new Map;this._leakedNameGenerator=
leakedNameGenerator;this.realm=realm;this._residualOptimizedFunctions=residualOptimizedFunctions}getStatistics(){(0,_invariant.default)(this.realm.statistics instanceof _statistics.SerializerStatistics,"serialization requires SerializerStatistics");return this.realm.statistics}_createReferentializationState(){return{capturedScopeInstanceIdx:0,capturedScopesArray:t.identifier(this.scopeNameGenerator.generate("main")),capturedScopeAccessFunctionId:t.identifier(this.scopeBindingNameGenerator.generate("get_scope_binding")),
serializedScopes:new Map}}_getReferentializationState(referentializationScope){return(0,_utils.getOrDefault)(this.referentializationState,referentializationScope,this._createReferentializationState.bind(this))}createLeakedIds(referentializationScope){const leakedIds=[];const serializedScopes=this._getReferentializationState(referentializationScope).serializedScopes;for(const scopeBinding of serializedScopes.values())leakedIds.push(...scopeBinding.leakedIds);if(leakedIds.length===0)return[];return[t.variableDeclaration("var",
leakedIds.map((id)=>t.variableDeclarator(id)))]}createCapturedScopesPrelude(referentializationScope){let accessFunctionDeclaration=this._createCaptureScopeAccessFunction(referentializationScope);if(accessFunctionDeclaration===undefined)return[];return[accessFunctionDeclaration,this._createCapturedScopesArrayInitialization(referentializationScope)]}_createCaptureScopeAccessFunction(referentializationScope){const cases=[];const serializedScopes=this._getReferentializationState(referentializationScope).serializedScopes;
const initializationCases=new Map;for(const scopeBinding of serializedScopes.values()){if(scopeBinding.initializationValues.length===0)continue;const expr=t.arrayExpression(scopeBinding.initializationValues);const key=(0,_generator.default)(expr,{},"").code;if(!initializationCases.has(key))initializationCases.set(key,{scopeIDs:[scopeBinding.id],value:expr});else{const ic=initializationCases.get(key);(0,_invariant.default)(ic);ic.scopeIDs.push(scopeBinding.id)}}if(initializationCases.size===0)return undefined;
const body=[];const selectorParam=t.identifier("__selector");const captured=t.identifier("__captured");const capturedScopesArray=this._getReferentializationState(referentializationScope).capturedScopesArray;const selectorExpression=t.memberExpression(capturedScopesArray,selectorParam,true);for(const ic of initializationCases.values())ic.scopeIDs.forEach((id,i)=>{let consequent=[];if(i===ic.scopeIDs.length-1)consequent=[t.expressionStatement(t.assignmentExpression("=",captured,ic.value)),t.breakStatement()];
cases.push(t.switchCase(t.numericLiteral(id),consequent))});if(this.realm.invariantLevel>=1)cases.push(t.switchCase(null,[t.throwStatement(t.newExpression(t.identifier("Error"),[t.stringLiteral("Unknown scope selector")]))]));body.push(t.variableDeclaration("var",[t.variableDeclarator(captured)]));body.push(t.switchStatement(selectorParam,cases));body.push(t.expressionStatement(t.assignmentExpression("=",selectorExpression,captured)));body.push(t.returnStatement(captured));const factoryFunction=t.functionExpression(null,
[selectorParam],t.blockStatement(body));const accessFunctionId=this._getReferentializationState(referentializationScope).capturedScopeAccessFunctionId;return t.variableDeclaration("var",[t.variableDeclarator(accessFunctionId,factoryFunction)])}_getReferentializationScope(residualBinding){if(residualBinding.potentialReferentializationScopes.has("GLOBAL"))return"GLOBAL";if(residualBinding.potentialReferentializationScopes.size>1){let scopes=residualBinding.potentialReferentializationScopes;let parentOptimizedFunction=
this._residualOptimizedFunctions.tryGetOutermostOptimizedFunction(scopes);return parentOptimizedFunction||"GLOBAL"}for(let scope of residualBinding.potentialReferentializationScopes)return scope;(0,_invariant.default)(false)}_getSerializedBindingScopeInstance(residualBinding){let declarativeEnvironmentRecord=residualBinding.declarativeEnvironmentRecord;(0,_invariant.default)(declarativeEnvironmentRecord);let referentializationScope=this._getReferentializationScope(residualBinding);let refState=this._getReferentializationState(referentializationScope);
let scope=refState.serializedScopes.get(declarativeEnvironmentRecord);if(!scope){scope={name:this.scopeNameGenerator.generate(),id:refState.capturedScopeInstanceIdx++,initializationValues:[],leakedIds:[],referentializationScope};refState.serializedScopes.set(declarativeEnvironmentRecord,scope)}(0,_invariant.default)(scope.referentializationScope===referentializationScope);(0,_invariant.default)(!residualBinding.scope||residualBinding.scope===scope);residualBinding.scope=scope;return scope}getReferentializedScopeInitialization(scope,
scopeName){const capturedScope=scope.capturedScope;(0,_invariant.default)(capturedScope);const state=this._getReferentializationState(scope.referentializationScope);const funcName=state.capturedScopeAccessFunctionId;const scopeArray=state.capturedScopesArray;const init=t.logicalExpression("||",t.memberExpression(scopeArray,scopeName,true),t.callExpression(funcName,[scopeName]));return[t.variableDeclaration("var",[t.variableDeclarator(t.identifier(capturedScope),init)])]}referentializeLeakedBinding(residualBinding){(0,
_invariant.default)(residualBinding.hasLeaked);let serializedBindingId=t.identifier(this._leakedNameGenerator.generate(residualBinding.name));let scope=this._getSerializedBindingScopeInstance(residualBinding);scope.leakedIds.push(serializedBindingId);residualBinding.serializedValue=residualBinding.serializedUnscopedLocation=serializedBindingId;this.getStatistics().referentialized++}referentializeModifiedBinding(residualBinding){(0,_invariant.default)(residualBinding.modified);let scope=this._getSerializedBindingScopeInstance(residualBinding);
let capturedScope="__captured"+scope.name;const variableIndexInScope=scope.initializationValues.length;const indexExpression=t.numericLiteral(variableIndexInScope);(0,_invariant.default)(residualBinding.serializedValue);scope.initializationValues.push(residualBinding.serializedValue);scope.capturedScope=capturedScope;residualBinding.serializedValue=t.memberExpression(t.identifier(capturedScope),indexExpression,true);const state=this._getReferentializationState(scope.referentializationScope);const funcName=
state.capturedScopeAccessFunctionId;const scopeArray=state.capturedScopesArray;const scopeName=t.numericLiteral(scope.id);const capturedScopeExpression=t.logicalExpression("||",t.memberExpression(scopeArray,scopeName,true),t.callExpression(funcName,[scopeName]));residualBinding.serializedUnscopedLocation=t.memberExpression(capturedScopeExpression,indexExpression,true);this.getStatistics().referentialized++}cleanInstance(instance){instance.initializationStatements=[];for(let b of instance.residualFunctionBindings.values()){let binding=
b;if(binding.referentialized&&binding.declarativeEnvironmentRecord){let declarativeEnvironmentRecord=binding.declarativeEnvironmentRecord;let referentializationScope=this._getReferentializationScope(binding);let refState=this.referentializationState.get(referentializationScope);if(refState){let scope=refState.serializedScopes.get(declarativeEnvironmentRecord);if(scope){scope.initializationValues=[];scope.leakedIds=[]}}}delete binding.serializedValue}}referentialize(instance){let residualBindings=
instance.residualFunctionBindings;for(let residualBinding of residualBindings.values()){if(residualBinding===undefined)continue;if(residualBinding.modified){if(!residualBinding.declarativeEnvironmentRecord)residualBinding.referentialized=true;if(!residualBinding.referentialized){if(!residualBinding.hasLeaked)this._getSerializedBindingScopeInstance(residualBinding);residualBinding.referentialized=true}(0,_invariant.default)(residualBinding.referentialized);if(residualBinding.declarativeEnvironmentRecord&&
residualBinding.scope)instance.scopeInstances.set(residualBinding.scope.name,residualBinding.scope)}}}_createCapturedScopesArrayInitialization(referentializationScope){return t.variableDeclaration("var",[t.variableDeclarator(this._getReferentializationState(referentializationScope).capturedScopesArray,t.newExpression(t.identifier("Array"),[t.numericLiteral(this._getReferentializationState(referentializationScope).capturedScopeInstanceIdx)]))])}}exports.Referentializer=Referentializer},function(module,
exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.Emitter=void 0;var _index=__webpack_require__(10);var _generator=__webpack_require__(237);var _invariant=_interopRequireDefault(__webpack_require__(9));var _types=__webpack_require__(408);var _ResidualFunctions=__webpack_require__(434);var _utils=__webpack_require__(291);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Emitter{constructor(residualFunctions,referencedDeclaredValues,
conditionalFeasibility,derivedIds){this._mainBody={type:"MainGenerator",parentBody:undefined,entries:[],done:false};this._waitingForValues=new Map;this._waitingForBodies=new Map;this._body=this._mainBody;this._residualFunctions=residualFunctions;this._activeStack=[];this._activeValues=new Set;this._activeGeneratorStack=[this._mainBody];this._finalized=false;let mustWaitForValue=(val)=>{if(this.cannotDeclare())return false;if(this.hasBeenDeclared(val))return false;let activeOptimizedFunction=this.getActiveOptimizedFunction();
if(activeOptimizedFunction===undefined)return true;let optimizedFunctionWhereValueWasDeclared=referencedDeclaredValues.get(val);return optimizedFunctionWhereValueWasDeclared===activeOptimizedFunction};this._getReasonToWaitForDependenciesCallbacks={onActive:(val)=>val,onFunction:(val)=>{this._residualFunctions.addFunctionUsage(val,this.getBodyReference());return undefined},onAbstractValueWithIdentifier:(val)=>derivedIds.has(val.getIdentifier())&&mustWaitForValue(val)?val:undefined,onIntrinsicDerivedObject:(val)=>
mustWaitForValue(val)?val:undefined};this._conditionalFeasibility=conditionalFeasibility}beginEmitting(dependency,targetBody,isChild=false){(0,_invariant.default)(!this._finalized);(0,_invariant.default)(targetBody.type==="OptimizedFunction"===!!targetBody.optimizedFunction);this._activeStack.push(dependency);if(dependency instanceof _index.Value){(0,_invariant.default)(!this._activeValues.has(dependency));this._activeValues.add(dependency)}else if(dependency instanceof _generator.Generator){(0,_invariant.default)(!this._activeGeneratorStack.includes(targetBody));
this._activeGeneratorStack.push(targetBody)}if(isChild){targetBody.parentBody=this._body;targetBody.nestingLevel=(this._body.nestingLevel||0)+1}let oldBody=this._body;this._body=targetBody;return oldBody}emit(statement){(0,_invariant.default)(!this._finalized);this._body.entries.push(statement);this._processCurrentBody()}finalizeCurrentBody(){(0,_invariant.default)(!this._finalized);this._processCurrentBody()}endEmitting(dependency,oldBody,valuesToProcess,isChild=false){(0,_invariant.default)(!this._finalized);
let lastDependency=this._activeStack.pop();(0,_invariant.default)(dependency===lastDependency);if(dependency instanceof _index.Value){(0,_invariant.default)(this._activeValues.has(dependency));this._activeValues.delete(dependency);this._processValue(dependency)}else if(dependency instanceof _generator.Generator){(0,_invariant.default)(this._isEmittingActiveGenerator());this._activeGeneratorStack.pop()}let lastBody=this._body;this._body=oldBody;if(isChild){(0,_invariant.default)(lastBody.parentBody===
oldBody);(0,_invariant.default)((lastBody.nestingLevel||0)>0);(0,_invariant.default)(!lastBody.done);lastBody.done=true;if(lastBody.declaredValues){let anyPropagated=true;for(let b=lastBody;b.done&&b.parentBody!==undefined&&anyPropagated;b=b.parentBody){anyPropagated=false;let parentDeclaredValues=b.parentBody.declaredValues;if(parentDeclaredValues===undefined)b.parentBody.declaredValues=parentDeclaredValues=new Map;(0,_invariant.default)(b.declaredValues);for(let [key,value]of b.declaredValues)if(!parentDeclaredValues.has(key)){parentDeclaredValues.set(key,
value);if(valuesToProcess!==undefined)valuesToProcess.add(key);anyPropagated=true}}}}return lastBody}processValues(valuesToProcess){for(let value of valuesToProcess)this._processValue(value)}finalize(){(0,_invariant.default)(!this._finalized);(0,_invariant.default)(this._activeGeneratorStack.length===1);(0,_invariant.default)(this._activeGeneratorStack[0]===this._body);(0,_invariant.default)(this._body===this._mainBody);this._processCurrentBody();this._activeGeneratorStack.pop();this._finalized=true;
(0,_invariant.default)(this._waitingForBodies.size===0);(0,_invariant.default)(this._waitingForValues.size===0);(0,_invariant.default)(this._activeStack.length===0);(0,_invariant.default)(this._activeValues.size===0);(0,_invariant.default)(this._activeGeneratorStack.length===0)}_isEmittingActiveGenerator(){(0,_invariant.default)(this._activeGeneratorStack.length>0);return this._activeGeneratorStack[this._activeGeneratorStack.length-1]===this._body}_isGeneratorBody(body){return body.type==="MainGenerator"||
body.type==="Generator"||body.type==="OptimizedFunction"}_processCurrentBody(){if(!this._isEmittingActiveGenerator()||this._body.processing)return;let a=this._waitingForBodies.get(this._body);if(a===undefined)return;this._body.processing=true;while(a.length>0){let {dependencies,func}=a.shift();this.emitNowOrAfterWaitingForDependencies(dependencies,func,this._body)}this._waitingForBodies.delete(this._body);this._body.processing=false}_processValue(value){let a=this._waitingForValues.get(value);if(a===
undefined)return;let currentBody=this._body;while(a.length>0){let {body,dependencies,func}=a.shift();if(this._isGeneratorBody(body)&&body!==currentBody)this._emitAfterWaitingForGeneratorBody(body,dependencies,func);else this.emitNowOrAfterWaitingForDependencies(dependencies,func,body)}this._waitingForValues.delete(value)}_getFirstAncestorGeneratorWithActiveBody(bodyStack){const activeBody=bodyStack.slice().reverse().find((body)=>this._activeGeneratorStack.includes(body));(0,_invariant.default)(activeBody);
return activeBody}getReasonToWaitForDependencies(dependencies){return this.dependenciesVisitor(dependencies,this._getReasonToWaitForDependenciesCallbacks)}dependenciesVisitor(dependencies,callbacks){(0,_invariant.default)(!this._finalized);let result;let recurse=(value)=>this.dependenciesVisitor(value,callbacks);if(Array.isArray(dependencies)){let values=dependencies;for(let value of values){result=recurse(value);if(result!==undefined)return result}return undefined}let val=dependencies;if(this._activeValues.has(val)){if(val instanceof
_index.FunctionValue&&!(val instanceof _index.BoundFunctionValue)){result=callbacks.onFunction?callbacks.onFunction(val):undefined;return result}result=callbacks.onActive?callbacks.onActive(val):undefined;if(result!==undefined)return result}if(val instanceof _index.BoundFunctionValue){result=recurse(val.$BoundTargetFunction);if(result!==undefined)return result;result=recurse(val.$BoundThis);if(result!==undefined)return result;result=recurse(val.$BoundArguments);if(result!==undefined)return result}else if(val instanceof
_index.FunctionValue){result=callbacks.onFunction?callbacks.onFunction(val):undefined;if(result!==undefined)return result}else if(val instanceof _index.AbstractValue){if(val.hasIdentifier()){result=callbacks.onAbstractValueWithIdentifier?callbacks.onAbstractValueWithIdentifier(val):undefined;if(result!==undefined)return result}let argsToRecurse;if(val.kind==="conditional"){let cf=this._conditionalFeasibility.get(val);(0,_invariant.default)(cf!==undefined);argsToRecurse=[];if(cf.t&&cf.f)argsToRecurse.push(val.args[0]);
if(cf.t)argsToRecurse.push(val.args[1]);if(cf.f)argsToRecurse.push(val.args[2])}else argsToRecurse=val.args;result=recurse(argsToRecurse);if(result!==undefined)return result}else if(val instanceof _index.ProxyValue){result=recurse(val.$ProxyTarget);if(result!==undefined)return result;result=recurse(val.$ProxyHandler);if(result!==undefined)return result}else if(val instanceof _index.SymbolValue){if(val.$Description instanceof _index.Value){result=recurse(val.$Description);if(result!==undefined)return result}}else if(val instanceof
_index.ObjectValue&&_index.ObjectValue.isIntrinsicDerivedObject(val)){result=callbacks.onIntrinsicDerivedObject?callbacks.onIntrinsicDerivedObject(val):undefined;if(result!==undefined)return result}else if(val instanceof _index.ObjectValue){let kind=val.getKind();switch(kind){case "Object":let proto=val.$Prototype;if(proto instanceof _index.ObjectValue&&proto.usesOrdinaryObjectInternalPrototypeMethods()){result=recurse(val.$Prototype);if(result!==undefined)return result}break;case "Date":(0,_invariant.default)(val.$DateValue!==
undefined);result=recurse(val.$DateValue);if(result!==undefined)return result;break;case "ReactElement":let realm=val.$Realm;let type=(0,_utils.getProperty)(realm,val,"type");let props=(0,_utils.getProperty)(realm,val,"props");let key=(0,_utils.getProperty)(realm,val,"key");let ref=(0,_utils.getProperty)(realm,val,"ref");result=recurse(type);if(result!==undefined)return result;result=recurse(props);if(result!==undefined)return result;result=recurse(key);if(result!==undefined)return result;result=
recurse(ref);if(result!==undefined)return result;break;default:break}}return undefined}getReasonToWaitForActiveValue(value,condition){(0,_invariant.default)(!this._finalized);(0,_invariant.default)(this._activeValues.has(value));return condition?value:undefined}emitAfterWaiting(delayReason,dependencies,func,targetBody){if(delayReason===undefined&&this._isGeneratorBody(targetBody))delayReason=targetBody;if(delayReason===undefined||delayReason===this._body)if(targetBody===this._body)func();else{(0,
_invariant.default)(!this._isGeneratorBody(targetBody));const oldBody=this.beginEmitting(targetBody.type,targetBody);func();this.endEmitting(targetBody.type,oldBody)}else{(0,_invariant.default)(delayReason!==undefined);if(delayReason instanceof _index.Value)this._emitAfterWaitingForValue(delayReason,dependencies,targetBody,func);else if(this._isGeneratorBody(delayReason))this._emitAfterWaitingForGeneratorBody(delayReason,dependencies,func);else(0,_invariant.default)(false)}}_emitAfterWaitingForValue(reason,
dependencies,targetBody,func){(0,_invariant.default)(!this._finalized);(0,_invariant.default)(!(reason instanceof _index.AbstractValue&&this.hasBeenDeclared(reason))||this._activeValues.has(reason));let a=this._waitingForValues.get(reason);if(a===undefined)this._waitingForValues.set(reason,a=[]);a.push({body:targetBody,dependencies,func})}_emitAfterWaitingForGeneratorBody(reason,dependencies,func){(0,_invariant.default)(this._isGeneratorBody(reason));(0,_invariant.default)(!this._finalized);(0,_invariant.default)(this._activeGeneratorStack.includes(reason));
let b=this._waitingForBodies.get(reason);if(b===undefined)this._waitingForBodies.set(reason,b=[]);b.push({dependencies,func})}emitNowOrAfterWaitingForDependencies(dependencies,func,targetBody){this.emitAfterWaiting(this.getReasonToWaitForDependencies(dependencies),dependencies,func,targetBody)}declare(value){(0,_invariant.default)(!this._finalized);(0,_invariant.default)(!this._activeValues.has(value));(0,_invariant.default)(value instanceof _index.ObjectValue||value.hasIdentifier());(0,_invariant.default)(this._isEmittingActiveGenerator());
(0,_invariant.default)(!this.cannotDeclare());(0,_invariant.default)(!this._body.done);if(this._body.declaredValues===undefined)this._body.declaredValues=new Map;this._body.declaredValues.set(value,this._body);this._processValue(value)}getActiveOptimizedFunction(){for(let b=this._body;b!==undefined;b=b.parentBody)if(b.type==="OptimizedFunction")return b.optimizedFunction;return undefined}cannotDeclare(){return this._body.type==="DelayInitializations"||this._body.type==="LazyObjectInitializer"}hasBeenDeclared(value){return this.getDeclarationBody(value)!==
undefined}getDeclarationBody(value){for(let b=this._body;b!==undefined;b=b.parentBody)if(b.declaredValues!==undefined&&b.declaredValues.has(value))return b;return undefined}declaredCount(){let declaredValues=this._body.declaredValues;return declaredValues===undefined?0:declaredValues.size}getBody(){return this._body}isCurrentBodyOffspringOf(targetBody){let currentBody=this._body;while(currentBody!==undefined){if(currentBody===targetBody)return true;currentBody=currentBody.parentBody}return false}getBodyReference(){(0,
_invariant.default)(!this._finalized);return new _types.BodyReference(this._body,this._body.entries.length)}}exports.Emitter=Emitter},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ResidualHeapValueIdentifiers=void 0;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var t=_interopRequireWildcard(__webpack_require__(21));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;
else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ResidualHeapValueIdentifiers{constructor(values,preludeGenerator){this.collectValToRefCountOnly=
false;this._valueNameGenerator=preludeGenerator.createNameGenerator("_");this._populateIdentifierMap(values)}initPass1(){this.collectValToRefCountOnly=true;this.valToRefCount=new Map}initPass2(){this.collectValToRefCountOnly=false}_populateIdentifierMap(values){this.refs=new Map;for(const val of values)this._setIdentifier(val,this._createNewIdentifier(val))}_createNewIdentifier(val){const name=this._valueNameGenerator.generate(val.__originalName||"");return t.identifier(name)}_setIdentifier(val,id){(0,
_invariant.default)(!this.refs.has(val));this.refs.set(val,id)}hasIdentifier(val){return this.refs.has(val)}getIdentifier(val){let id=this.refs.get(val);(0,_invariant.default)(id!==undefined);return id}deleteIdentifier(val){(0,_invariant.default)(this.refs.has(val));this.refs.delete(val)}getIdentifierAndIncrementReferenceCount(val){this.incrementReferenceCount(val);let id=this.refs.get(val);(0,_invariant.default)(id!==undefined,"Value Id cannot be null or undefined");return id}incrementReferenceCount(val){if(this.collectValToRefCountOnly){let valToRefCount=
this.valToRefCount;(0,_invariant.default)(valToRefCount!==undefined);let refCount=valToRefCount.get(val);if(refCount!==undefined)refCount++;else refCount=1;valToRefCount.set(val,refCount)}}needsIdentifier(val){if(this.collectValToRefCountOnly||this.valToRefCount===undefined)return true;let refCount=this.valToRefCount.get(val);(0,_invariant.default)(refCount!==undefined&&refCount>0);return refCount!==1}}exports.ResidualHeapValueIdentifiers=ResidualHeapValueIdentifiers},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.ResidualReactElementSerializer=void 0;var _realm=__webpack_require__(7);var _ResidualHeapSerializer=__webpack_require__(433);var _hoisting=__webpack_require__(428);var t=_interopRequireWildcard(__webpack_require__(21));var _index=__webpack_require__(10);var _jsx=__webpack_require__(436);var _logger=__webpack_require__(412);var _invariant=_interopRequireDefault(__webpack_require__(9));var _errors=__webpack_require__(3);var _elements=__webpack_require__(420);var _utils=
__webpack_require__(291);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}
class ResidualReactElementSerializer{constructor(realm,residualHeapSerializer,residualOptimizedFunctions){this.realm=realm;this.residualHeapSerializer=residualHeapSerializer;this.logger=residualHeapSerializer.logger;this.reactOutput=realm.react.output||"create-element";this._lazilyHoistedNodes=new Map;this._residualOptimizedFunctions=residualOptimizedFunctions}_createReactElement(value){return{attributes:[],children:[],declared:false,type:undefined,value}}_createReactElementAttribute(){return{expr:undefined,
key:undefined,type:"PENDING"}}_createReactElementChild(){return{expr:undefined,type:"PENDING"}}_emitHoistedReactElement(reactElement,id,reactElementAst,hoistedCreateElementIdentifier,originalCreateElementIdentifier){const optimizedFunction=this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(reactElement);(0,_invariant.default)(optimizedFunction);let lazilyHoistedNodes=this._lazilyHoistedNodes.get(optimizedFunction);if(lazilyHoistedNodes===undefined){let funcId=t.identifier(this.residualHeapSerializer.functionNameGenerator.generate());
lazilyHoistedNodes={id:funcId,createElementIdentifier:hoistedCreateElementIdentifier,nodes:[]};this._lazilyHoistedNodes.set(optimizedFunction,lazilyHoistedNodes);let statement=t.expressionStatement(t.logicalExpression("&&",t.binaryExpression("===",id,t.unaryExpression("void",t.numericLiteral(0),true)),t.callExpression(funcId,originalCreateElementIdentifier?[originalCreateElementIdentifier]:[])));this.residualHeapSerializer.getPrelude(optimizedFunction).push(statement)}lazilyHoistedNodes.nodes.push({id,
astNode:reactElementAst})}_getReactLibraryValue(){let reactLibraryObject=this.realm.fbLibraries.react;if(reactLibraryObject===undefined)throw new _errors.FatalError("unable to find React library reference in scope");return reactLibraryObject}_getReactCreateElementValue(){let reactLibraryObject=this._getReactLibraryValue();return(0,_utils.getProperty)(this.realm,reactLibraryObject,"createElement")}_emitReactElement(reactElement){let {value}=reactElement;let typeValue=(0,_utils.getProperty)(this.realm,
value,"type");let keyValue=(0,_utils.getProperty)(this.realm,value,"key");let refValue=(0,_utils.getProperty)(this.realm,value,"ref");let propsValue=(0,_utils.getProperty)(this.realm,value,"props");let shouldHoist=this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(value)!==undefined&&(0,_hoisting.canHoistReactElement)(this.realm,value);let id=this.residualHeapSerializer.getSerializeObjectIdentifier(value);let originalCreateElementIdentifier=null;let hoistedCreateElementIdentifier=null;let reactElementAstNode;
let dependencies=[typeValue,keyValue,refValue,propsValue,value];let createElement;if(this.reactOutput==="create-element"){createElement=this._getReactCreateElementValue();dependencies.push(createElement)}this.residualHeapSerializer.emitter.emitNowOrAfterWaitingForDependencies(dependencies,()=>{if(this.reactOutput==="jsx")reactElementAstNode=this._serializeReactElementToJSXElement(value,reactElement);else if(this.reactOutput==="create-element"){originalCreateElementIdentifier=this.residualHeapSerializer.serializeValue(createElement);
if(shouldHoist){const optimizedFunction=this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(value);(0,_invariant.default)(optimizedFunction);const lazilyHoistedNodes=this._lazilyHoistedNodes.get(optimizedFunction);if(lazilyHoistedNodes===undefined)hoistedCreateElementIdentifier=t.identifier(this.residualHeapSerializer.intrinsicNameGenerator.generate());else hoistedCreateElementIdentifier=lazilyHoistedNodes.createElementIdentifier}let createElementIdentifier=shouldHoist?hoistedCreateElementIdentifier:
originalCreateElementIdentifier;reactElementAstNode=this._serializeReactElementToCreateElement(value,reactElement,createElementIdentifier)}else(0,_invariant.default)(false,"Unknown reactOutput specified");if(shouldHoist)this._emitHoistedReactElement(value,id,reactElementAstNode,hoistedCreateElementIdentifier,originalCreateElementIdentifier);else if(reactElement.declared)this.residualHeapSerializer.emitter.emit(t.expressionStatement(t.assignmentExpression("=",id,reactElementAstNode)));else{reactElement.declared=
true;this.residualHeapSerializer.emitter.emit(t.variableDeclaration("var",[t.variableDeclarator(id,reactElementAstNode)]))}},this.residualHeapSerializer.emitter.getBody());return id}_serializeNowOrAfterWaitingForDependencies(value,reactElement,func,shouldSerialize=true){let reason=this.residualHeapSerializer.emitter.getReasonToWaitForDependencies(value);const serialize=()=>{func()};if(reason)this.residualHeapSerializer.emitter.emitAfterWaiting(reason,[value],()=>{serialize();this._emitReactElement(reactElement)},
this.residualHeapSerializer.emitter.getBody());else serialize()}_serializeReactFragmentType(typeValue){let reactLibraryObject=this._getReactLibraryValue();return t.memberExpression(this.residualHeapSerializer.serializeValue(reactLibraryObject),t.identifier("Fragment"))}serializeReactElement(val){let reactElementData=this.realm.react.reactElements.get(val);(0,_invariant.default)(reactElementData!==undefined);let {firstRenderOnly}=reactElementData;let reactElement=this._createReactElement(val);(0,_elements.traverseReactElement)(this.realm,
reactElement.value,{visitType:(typeValue)=>{this._serializeNowOrAfterWaitingForDependencies(typeValue,reactElement,()=>{let expr;if(typeValue instanceof _index.SymbolValue&&typeValue===(0,_utils.getReactSymbol)("react.fragment",this.realm))expr=this._serializeReactFragmentType(typeValue);else{expr=this.residualHeapSerializer.serializeValue(typeValue);this.residualHeapSerializer.residualHeapValueIdentifiers.incrementReferenceCount(typeValue)}reactElement.type=expr})},visitKey:(keyValue)=>{let reactElementKey=
this._createReactElementAttribute();this._serializeNowOrAfterWaitingForDependencies(keyValue,reactElement,()=>{let expr=this.residualHeapSerializer.serializeValue(keyValue);reactElementKey.expr=expr;reactElementKey.key="key";reactElementKey.type="PROPERTY"});reactElement.attributes.push(reactElementKey)},visitRef:(refValue)=>{if(!firstRenderOnly){let reactElementRef=this._createReactElementAttribute();this._serializeNowOrAfterWaitingForDependencies(refValue,reactElement,()=>{let expr=this.residualHeapSerializer.serializeValue(refValue);
reactElementRef.expr=expr;reactElementRef.key="ref";reactElementRef.type="PROPERTY"});reactElement.attributes.push(reactElementRef)}},visitAbstractOrPartialProps:(propsValue)=>{let reactElementSpread=this._createReactElementAttribute();this._serializeNowOrAfterWaitingForDependencies(propsValue,reactElement,()=>{let expr=this.residualHeapSerializer.serializeValue(propsValue);reactElementSpread.expr=expr;reactElementSpread.type="SPREAD"});reactElement.attributes.push(reactElementSpread)},visitConcreteProps:(propsValue)=>
{for(let [propName,binding]of propsValue.properties){if(binding.descriptor===undefined||propName==="children")continue;let propValue=(0,_utils.getProperty)(this.realm,propsValue,propName);if((0,_utils.canExcludeReactElementObjectProperty)(this.realm,val,propName,propValue))continue;let reactElementAttribute=this._createReactElementAttribute();this._serializeNowOrAfterWaitingForDependencies(propValue,reactElement,()=>{let expr=this.residualHeapSerializer.serializeValue(propValue);reactElementAttribute.expr=
expr;reactElementAttribute.key=propName;reactElementAttribute.type="PROPERTY"});reactElement.attributes.push(reactElementAttribute)}},visitChildNode:(childValue)=>{reactElement.children.push(this._serializeReactElementChild(childValue,reactElement))}});return this._emitReactElement(reactElement)}_addSerializedValueToJSXAttriutes(prop,expr,attributes){if(prop===null)attributes.push(t.jSXSpreadAttribute(expr));else attributes.push((0,_jsx.convertKeyValueToJSXAttribute)(prop,expr))}_serializeReactElementToCreateElement(val,
reactElement,createElementIdentifier){let {type,attributes,children}=reactElement;let createElementArguments=[type];if(attributes.length!==0){let astAttributes=[];for(let attribute of attributes){let expr=attribute.expr;if(attribute.type==="SPREAD")astAttributes.push(t.spreadElement(expr));else if(attribute.type==="PROPERTY"){let attributeKey=attribute.key;let key;(0,_invariant.default)(typeof attributeKey==="string");if(attributeKey.includes("-"))key=t.stringLiteral(attributeKey);else key=t.identifier(attributeKey);
astAttributes.push(t.objectProperty(key,expr))}}createElementArguments.push(t.objectExpression(astAttributes))}if(children.length!==0){if(attributes.length===0)createElementArguments.push(t.nullLiteral());let astChildren=[];for(let child of children){let expr=child.expr;if(child.type==="NORMAL")astChildren.push(expr)}createElementArguments.push(...astChildren)}let createElementCall=t.callExpression(createElementIdentifier,createElementArguments);this._addBailOutMessageToBabelNode(val,createElementCall);
return createElementCall}_serializeReactElementToJSXElement(val,reactElement){let {type,attributes,children}=reactElement;let jsxTypeIdentifer=(0,_jsx.convertExpressionToJSXIdentifier)(type,true);let astAttributes=[];for(let attribute of attributes){let expr=attribute.expr;if(attribute.type==="SPREAD")astAttributes.push(t.jSXSpreadAttribute(expr));else if(attribute.type==="PROPERTY"){let attributeKey=attribute.key;(0,_invariant.default)(typeof attributeKey==="string");astAttributes.push((0,_jsx.convertKeyValueToJSXAttribute)(attributeKey,
expr))}}let astChildren=[];for(let child of children){let expr=child.expr;if(child.type==="NORMAL")if(t.isStringLiteral(expr)||t.isNumericLiteral(expr))astChildren.push(t.jSXText(expr.value+""));else if(t.isJSXElement(expr))astChildren.push(expr);else astChildren.push(t.jSXExpressionContainer(expr))}let openingElement=t.jSXOpeningElement(jsxTypeIdentifer,astAttributes,astChildren.length===0);let closingElement=t.jSXClosingElement(jsxTypeIdentifer);let jsxElement=t.jSXElement(openingElement,closingElement,
astChildren,astChildren.length===0);this._addBailOutMessageToBabelNode(val,jsxElement);return jsxElement}_addBailOutMessageToBabelNode(val,node){if(val.$BailOutReason!==undefined)node.leadingComments=[{type:"BlockComment",value:`${val.$BailOutReason}`}]}_serializeReactElementChild(child,reactElement){let reactElementChild=this._createReactElementChild();this._serializeNowOrAfterWaitingForDependencies(child,reactElement,()=>{let expr=this.residualHeapSerializer.serializeValue(child);reactElementChild.expr=
expr;reactElementChild.type="NORMAL"});return reactElementChild}serializeLazyHoistedNodes(optimizedFunction){const entries=[];const lazilyHoistedNodes=this._lazilyHoistedNodes.get(optimizedFunction);if(lazilyHoistedNodes!==undefined){let {id,nodes,createElementIdentifier}=lazilyHoistedNodes;let func=t.functionExpression(null,createElementIdentifier?[createElementIdentifier]:[],t.blockStatement(nodes.map((node)=>t.expressionStatement(t.assignmentExpression("=",node.id,node.astNode)))));entries.push(t.variableDeclaration("var",
[t.variableDeclarator(id,func)]));entries.push(...nodes.map((node)=>t.variableDeclaration("var",[t.variableDeclarator(node.id)])));this._lazilyHoistedNodes.delete(optimizedFunction)}return entries}}exports.ResidualReactElementSerializer=ResidualReactElementSerializer},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.typeToString=typeToString;exports.getTypeFromName=getTypeFromName;exports.describeValue=describeValue;exports.jsonToDisplayString=
jsonToDisplayString;exports.verboseToDisplayJson=verboseToDisplayJson;exports.createModelledFunctionCall=createModelledFunctionCall;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var _ShapeInformation=__webpack_require__(419);var _errors=__webpack_require__(3);var t=_interopRequireWildcard(__webpack_require__(21));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,
key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function typeToString(type){function isInstance(proto,Constructor){return proto instanceof Constructor||proto===Constructor.prototype}let proto=type.prototype;if(isInstance(proto,_index.UndefinedValue))return"undefined";
else if(isInstance(proto,_index.NullValue))return"object";else if(isInstance(proto,_index.StringValue))return"string";else if(isInstance(proto,_index.BooleanValue))return"boolean";else if(isInstance(proto,_index.NumberValue))return"number";else if(isInstance(proto,_index.SymbolValue))return"symbol";else if(isInstance(proto,_index.ObjectValue)){if(_index.Value.isTypeCompatibleWith(type,_index.FunctionValue))return"function";return"object"}else return undefined}function getTypeFromName(typeName){switch(typeName){case "empty":return _index.EmptyValue;
case "void":return _index.UndefinedValue;case "null":return _index.NullValue;case "boolean":return _index.BooleanValue;case "string":return _index.StringValue;case "symbol":return _index.SymbolValue;case "number":return _index.NumberValue;case "object":return _index.ObjectValue;case "array":return _index.ArrayValue;case "function":return _index.FunctionValue;case "integral":return _index.IntegralValue;default:return undefined}}function describeValue(value){let title;let suffix="";if(value instanceof
_index.PrimitiveValue)title=value.toDisplayString();else if(value instanceof _index.ObjectValue)title="[object]";else{(0,_invariant.default)(value instanceof _index.AbstractValue,value.constructor.name);title="[abstract]";if(value.kind!==undefined)title+=`, kind: ${value.kind}`;for(let arg of value.args){let desc=describeValue(arg);suffix+=desc.split("\n").map((u)=>"  "+u).join("\n")+"\n"}}title+=`, hash: ${value.getHash()}`;if(value.intrinsicName!==undefined)title+=`, intrinsic name: ${value.intrinsicName}`;
if(value.__originalName!==undefined)title+=`, original name: ${value.__originalName}`;return suffix?`${title}\n${suffix}`:title}function jsonToDisplayString(instance,depth){let result=instance.toDisplayJson(depth);return typeof result==="string"?result:JSON.stringify(result,null,2).replace(/"/g,"")}function verboseToDisplayJson(obj,depth){let result={};function valueOfProp(prop){if(typeof prop==="function")return undefined;if(Array.isArray(prop)){if(prop.length===0)return"[]";let valuesArray=prop.map((x)=>
valueOfProp(x));if(valuesArray.length<5){let string="["+valuesArray.reduce((acc,x)=>`${acc}, ${x instanceof Object?JSON.stringify(x):x}`)+"]";string=string.replace(/"/g,"");if(string.length<60)return string}return valuesArray}if(prop instanceof Set||prop instanceof Map)return`${prop.constructor.name}(${prop.size})`;if(prop.toDisplayJson)return prop.toDisplayJson(depth-1);if(prop.toDisplayString)return prop.toDisplayString();if(prop.toJSON)return prop.toJSON();return prop.toString()}for(let key in obj){let prop=
obj[key];if(!prop)continue;let value=valueOfProp(prop);if(value!==undefined&&value!=="[object Object]")result[key]=value}return result}function createModelledFunctionCall(realm,funcValue,argModelInput,thisValue){let call=funcValue.$Call;(0,_invariant.default)(call);let numArgs=funcValue.getLength();let args=[];let argModel=typeof argModelInput==="string"?JSON.parse(argModelInput):argModelInput;(0,_invariant.default)(funcValue instanceof _index.ECMAScriptSourceFunctionValue);let params=funcValue.$FormalParameters;
if(numArgs!==undefined&&numArgs>0&&params)for(let parameterId of params)if(t.isIdentifier(parameterId)){let paramName=parameterId.name;let shape=_ShapeInformation.ShapeInformation.createForArgument(argModel,paramName);args.push(_index.AbstractValue.createAbstractArgument(realm,paramName,funcValue.expressionLocation,shape!==undefined?shape.getAbstractType():_index.Value,shape))}else{realm.handleError(new _errors.CompilerDiagnostic("Non-identifier args to additional functions unsupported",funcValue.expressionLocation,
"PP1005","FatalError"));throw new _errors.FatalError("Non-identifier args to additional functions unsupported");}let thisArg=thisValue!==undefined?thisValue:_index.AbstractValue.createAbstractArgument(realm,"this",funcValue.expressionLocation,_index.ObjectValue);return()=>{let savedPathConditions=realm.pathConditions;let newPathConditions=funcValue.pathConditionDuringDeclaration||savedPathConditions;realm.pathConditions=newPathConditions;try{let result=call(thisArg,args);return result}finally{realm.pathConditions=
savedPathConditions}}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ResidualOperationSerializer=void 0;var _realm=__webpack_require__(7);var _generator=__webpack_require__(237);var _PreludeGenerator=__webpack_require__(238);var _babelhelpers=__webpack_require__(239);var _invariant=_interopRequireDefault(__webpack_require__(9));var t=_interopRequireWildcard(__webpack_require__(21));var _index=__webpack_require__(10);var _singletons=
__webpack_require__(236);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
function serializeBody(generator,context,valuesToProcess){let statements=context.serializeGenerator(generator,valuesToProcess);if(statements.length===1&&statements[0].type==="BlockStatement")return statements[0];return t.blockStatement(statements)}function isSelfReferential(value,pathNode){if(value===pathNode)return true;if(value instanceof _index.AbstractValue&&pathNode!==undefined)for(let v of value.args)if(isSelfReferential(v,pathNode))return true;return false}class ResidualOperationSerializer{constructor(realm,
preludeGenerator){this.realm=realm;this.preludeGenerator=preludeGenerator}getErrorStatement(message){if(this.realm.invariantMode==="throw")return t.throwStatement(t.newExpression(this.preludeGenerator.memoizeReference("Error"),[message]));else{let targetReference=this.realm.invariantMode;let args=[message];let i=targetReference.indexOf("+");if(i!==-1){let s=targetReference.substr(i+1);let x=Number.parseInt(s,10);args.push(isNaN(x)?t.stringLiteral(s):t.numericLiteral(x));targetReference=targetReference.substr(0,
i)}return t.expressionStatement(t.callExpression(this.preludeGenerator.memoizeReference(targetReference),args))}}serializeStatement(operationDescriptor,nodes,context,valuesToProcess,declaredId){let {data,type}=operationDescriptor;let babelNode;switch(type){case "ASSUME_CALL":babelNode=this._serializeAssumeCall(data,nodes);break;case "CONCRETE_MODEL":babelNode=this._serializeConcreteModel(data,nodes);break;case "CONDITIONAL_PROPERTY_ASSIGNMENT":babelNode=this._serializeConditionalPropertyAssignment(data,
nodes,context,valuesToProcess);break;case "CONDITIONAL_THROW":babelNode=this._serializeConditionalThrow(data,nodes,context);break;case "CONSOLE_LOG":babelNode=this._serializeConsoleLog(data,nodes);break;case "DEFINE_PROPERTY":babelNode=this._serializeDefineProperty(data,nodes,context);break;case "DO_WHILE":babelNode=this._serializeDoWhile(data,nodes,context,valuesToProcess);break;case "EMIT_CALL":babelNode=this._serializeEmitCall(data,nodes);break;case "EMIT_PROPERTY_ASSIGNMENT":babelNode=this._serializeEmitPropertyAssignment(data,
nodes,context);break;case "FOR_IN":babelNode=this._serializeForIn(data,nodes);break;case "GLOBAL_ASSIGNMENT":babelNode=this._serializeGlobalAssignment(data,nodes);break;case "GLOBAL_DELETE":babelNode=this._serializeGlobalDelete(data,nodes);break;case "JOIN_GENERATORS":babelNode=this._serializeJoinGenerators(data,nodes,context,valuesToProcess);break;case "LOCAL_ASSIGNMENT":babelNode=this._serializeLocalAssignment(data,nodes,context,valuesToProcess);break;case "NOOP":babelNode=t.emptyStatement();break;
case "OBJECT_SET_PARTIAL":babelNode=this._serializeObjectSetPartial(data,nodes);break;case "PROPERTY_ASSIGNMENT":babelNode=this._serializePropertyAssignment(data,nodes,context,valuesToProcess);break;case "PROPERTY_DELETE":babelNode=this._serializePropertyDelete(data,nodes);break;case "THROW":babelNode=this._serializeThrow(data,nodes);break;case "INVARIANT":babelNode=this._serializeInvariant(data,nodes);break;case "REACT_SSR_REGEX_CONSTANT":return t.variableDeclaration("var",[t.variableDeclarator(t.identifier("matchHtmlRegExp"),
t.regExpLiteral("[\"'&<>]"))]);case "REACT_SSR_PREV_TEXT_NODE":return t.variableDeclaration("var",[t.variableDeclarator(t.identifier("previousWasTextNode"),t.booleanLiteral(false))]);default:let babelNodeExpression=this.serializeExpression(operationDescriptor,nodes,context);if(declaredId!==undefined)babelNode=this._serializeDerivedOperationDescriptor(declaredId,babelNodeExpression);else babelNode=this._serializeVoidOperationDescriptor(babelNodeExpression);return babelNode}(0,_invariant.default)(declaredId===
undefined);return babelNode}serializeExpression(operationDescriptor,nodes,context,valuesToProcess){let {data,type}=operationDescriptor;let babelNode;switch(type){case "IDENTIFIER":babelNode=this._serializeIdentifier(data,nodes);break;case "REBUILT_OBJECT":babelNode=this._serializeRebuiltObject(data,nodes);break;case "BINARY_EXPRESSION":babelNode=this._serializeBinaryExpression(data,nodes);break;case "LOGICAL_EXPRESSION":babelNode=this._serializeLogicalExpression(data,nodes);break;case "CONDITIONAL_EXPRESSION":babelNode=
this._serializeConditionalExpression(data,nodes);break;case "UNARY_EXPRESSION":babelNode=this._serializeUnaryExpression(data,nodes);break;case "ABSTRACT_PROPERTY":babelNode=this._serializeAbstractProperty(data,nodes);break;case "ABSTRACT_FROM_TEMPLATE":babelNode=this._serializeAbstractFromTemplate(data,nodes);break;case "COERCE_TO_STRING":babelNode=this._serializeCoerceToString(data,nodes);break;case "OBJECT_ASSIGN":babelNode=this._serializeObjectAssign(data,nodes);break;case "SINGLE_ARG":babelNode=
this._serializeSingleArg(data,nodes);break;case "CALL_BAILOUT":babelNode=this._serializeCallBailout(data,nodes);break;case "EMIT_CALL_AND_CAPTURE_RESULT":babelNode=this._serializeEmitCallAndCaptureResults(data,nodes);break;case "NEW_EXPRESSION":babelNode=this._serializeNewExpression(data,nodes);break;case "FOR_STATEMENT_FUNC":babelNode=this._serializeForFunctionCall(data,nodes);break;case "GET_BINDING":babelNode=this._serializeGetBinding(data,nodes,context);break;case "UNKNOWN_ARRAY_METHOD_CALL":babelNode=
this._serializeUnknownArrayMethodCall(data,nodes);break;case "UNKNOWN_ARRAY_METHOD_PROPERTY_CALL":babelNode=this._serializeUnknownArrayMethodPropertyCall(data,nodes);break;case "UNKNOWN_ARRAY_LENGTH":babelNode=this._serializeUnknownArrayLength(data,nodes);break;case "UNKNOWN_ARRAY_GET_PARTIAL":babelNode=this._serializeUnknownArrayGetPartial(data,nodes);break;case "OBJECT_GET_PARTIAL":babelNode=this._serializeObjectGetPartial(data,nodes);break;case "ABSTRACT_OBJECT_GET_PARTIAL":babelNode=this._serializeAbstractObjectGetPartial(data,
nodes);break;case "ABSTRACT_OBJECT_GET_PROTO_OF":babelNode=this._serializeAbstractObjectGetProtoOf(data,nodes);break;case "ABSTRACT_OBJECT_GET":babelNode=this._serializeAbstractObjectGet(data,nodes);break;case "OBJECT_PROTO_HAS_OWN_PROPERTY":babelNode=this._serializeObjectProtoHasOwnProperty(data,nodes);break;case "OBJECT_PROTO_GET_OWN_PROPERTY_DESCRIPTOR":babelNode=this._serializeObjectProtoGetOwnPropertyDescriptor(data,nodes);break;case "DIRECT_CALL_WITH_ARG_LIST":babelNode=this._serializeDirectCallWithArgList(data,
nodes);break;case "CALL_ABSTRACT_FUNC":babelNode=this._serializeCallAbstractFunc(data,nodes);break;case "CALL_ABSTRACT_FUNC_THIS":babelNode=this._serializeCallAbstractFuncThis(data,nodes);break;case "LOGICAL_PROPERTY_ASSIGNMENT":babelNode=this._serializeLogicalPropertyAssignment(data,nodes);break;case "UPDATE_INCREMENTOR":babelNode=this._serializeUpdateIncrementor(data,nodes);break;case "MODULES_REQUIRE":babelNode=this._serializeModulesRequires(data,nodes);break;case "RESIDUAL_CALL":babelNode=this._serializeResidualCall(data,
nodes);break;case "CANNOT_BECOME_OBJECT":babelNode=this._serializeCannotBecomeObject(data,nodes);break;case "WIDENED_IDENTIFIER":babelNode=this._serializeIdentifier(data,nodes);break;case "WIDEN_PROPERTY":babelNode=this._serializeWidenProperty(data,nodes);break;case "WIDEN_PROPERTY_ASSIGNMENT":babelNode=this._serializeWidenPropertyAssignment(data,nodes);break;case "DERIVED_ABSTRACT_INVARIANT":babelNode=this._serializeDerivedAbstractInvariant(data,nodes);break;case "PROPERTY_INVARIANT":babelNode=this._serializePropertyInvariant(data,
nodes);break;case "INVARIANT_APPEND":babelNode=this._serializeInvariantAppend(data,nodes);break;case "FULL_INVARIANT":babelNode=this._serializeFullInvariant(data,nodes);break;case "FULL_INVARIANT_ABSTRACT":babelNode=this._serializeFullInvariantAbstract(data,nodes);break;case "FULL_INVARIANT_FUNCTION":babelNode=this._serializeFullInvariantFunction(data,nodes);break;case "REACT_DEFAULT_PROPS_HELPER":babelNode=this._serializeReactDefaultPropsHelper(data,nodes);break;case "REACT_SSR_RENDER_VALUE_HELPER":babelNode=
this._serializeReactRenderValueHelper(data,nodes);break;case "REACT_SSR_TEMPLATE_LITERAL":babelNode=this._serializeReactSSRTemplateLiteral(data,nodes);break;case "REACT_TEMPORAL_FUNC":babelNode=this._serializeReactTemporalFunc(data,nodes);break;case "REACT_CREATE_CONTEXT_PROVIDER":babelNode=this._serializeReactCreateContextProvider(data,nodes);break;case "REACT_NATIVE_STRING_LITERAL":babelNode=this._serializeReactNativeStringLiteral(data,nodes);break;case "REACT_RELAY_MOCK_CONTAINER":babelNode=this._serializeReactRelayMockContainer(data,
nodes);break;case "FB_MOCKS_BOOTLOADER_LOAD_MODULES":babelNode=this._serializeFBMocksBootloaderLoadModules(data,nodes);break;case "FB_MOCKS_MAGIC_GLOBAL_FUNCTION":babelNode=this._serializeFBMocksMagicGlobalFunction(data,nodes);break;case "BABEL_HELPERS_OBJECT_WITHOUT_PROPERTIES":babelNode=this._serializeBabelHelpersObjectWithoutProperties(data,nodes);break;default:(0,_invariant.default)(false,`operation descriptor "type" not recognized when serializing operation descriptor`)}return babelNode}_serializeAssumeCall({},
[c,s]){let errorLiteral=s.type==="StringLiteral"?s:t.stringLiteral("Assumption violated");return t.ifStatement(t.unaryExpression("!",c),t.blockStatement([t.throwStatement(t.newExpression(t.identifier("Error"),[errorLiteral]))]))}_serializeWidenPropertyAssignment({},[o,propName,v]){return t.assignmentExpression("=",(0,_babelhelpers.memberExpressionHelper)(o,propName),v)}_serializeWidenAbstractProperty({},[o,p]){return(0,_babelhelpers.memberExpressionHelper)(o,p)}_serializeWidenProperty({},[o,propName]){return(0,
_babelhelpers.memberExpressionHelper)(o,propName)}_serializeAbstractObjectGet({propertyGetter},[o,P]){return propertyGetter!==undefined?t.callExpression(t.memberExpression(t.identifier("global"),t.identifier("__prop_"+propertyGetter)),[o,P]):(0,_babelhelpers.memberExpressionHelper)(o,P)}_serializeAbstractObjectGetProtoOf({},[p]){(0,_invariant.default)(this.realm.preludeGenerator!==undefined);let getPrototypeOf=this.realm.preludeGenerator.memoizeReference("Object.getPrototypeOf");return this.realm.isCompatibleWith(this.realm.MOBILE_JSC_VERSION)||
this.realm.isCompatibleWith("mobile")?t.memberExpression(p,_babelhelpers.protoExpression):t.callExpression(getPrototypeOf,[p])}_serializeCannotBecomeObject({},[n]){let callFunc=t.identifier("global.__cannotBecomeObject");return t.callExpression(callFunc,[n])}_serializeResidualCall({},nodes){return t.callExpression(nodes[0],nodes.slice(1))}_serializeModulesRequires({},[propName]){return t.callExpression(t.identifier("require"),[propName])}_serializeConcreteModel({},[valueNode,propName]){let propString=
propName.value;return t.expressionStatement(t.assignmentExpression("=",this.preludeGenerator.globalReference(propString,false),valueNode))}_serializeConsoleLog({},[propName,...nodes]){let propString=propName.value;return t.expressionStatement(t.callExpression(t.memberExpression(t.identifier("console"),t.identifier(propString)),[...nodes]))}_serializeDoWhile({generator,value},nodes,context,valuesToProcess){(0,_invariant.default)(context!==undefined);(0,_invariant.default)(valuesToProcess!==undefined);
(0,_invariant.default)(value!==undefined);let testId=value.intrinsicName;(0,_invariant.default)(testId!==undefined);(0,_invariant.default)(generator!==undefined);let statements=context.serializeGenerator(generator,valuesToProcess);let block=t.blockStatement(statements);return t.doWhileStatement(t.identifier(testId),block)}_serializeForIn({boundName,lh},[obj,tgt,src]){(0,_invariant.default)(boundName!==undefined);(0,_invariant.default)(lh!==undefined);return t.forInStatement(lh,obj,t.blockStatement([t.expressionStatement(t.assignmentExpression("=",
(0,_babelhelpers.memberExpressionHelper)(tgt,boundName),(0,_babelhelpers.memberExpressionHelper)(src,boundName)))]))}_serializeFullInvariant({},[propName,objectNode,valueNode]){return t.binaryExpression("!==",(0,_babelhelpers.memberExpressionHelper)(objectNode,propName),valueNode)}_serializeFullInvariantFunction({},[propName,objectNode]){return t.binaryExpression("!==",t.unaryExpression("typeof",(0,_babelhelpers.memberExpressionHelper)(objectNode,propName),true),t.stringLiteral("function"))}_serializeFullInvariantAbstract({concreteComparisons,
typeComparisons},[propName,valueNode]){(0,_invariant.default)(concreteComparisons!==undefined);(0,_invariant.default)(typeComparisons!==undefined);let checks=concreteComparisons.map((concreteValue)=>t.binaryExpression("!==",valueNode,t.valueToNode(concreteValue.serialize())));checks=checks.concat([...typeComparisons].map((typeValue)=>{let typeString=_singletons.Utils.typeToString(typeValue);(0,_invariant.default)(typeString!==undefined,typeValue);return t.binaryExpression("!==",t.unaryExpression("typeof",
valueNode,true),t.stringLiteral(typeString))}));return checks.reduce((expr,newCondition)=>t.logicalExpression("&&",expr,newCondition))}_serializeInvariantAppend({},[propName,objectNode]){return(0,_babelhelpers.memberExpressionHelper)(objectNode,propName)}_serializePropertyInvariant({state},[propName,objectNode]){(0,_invariant.default)(state!==undefined);let n=t.callExpression(t.memberExpression(this.preludeGenerator.memoizeReference("Object.prototype.hasOwnProperty"),t.identifier("call")),[objectNode,
propName]);if(state!=="MISSING"){n=t.unaryExpression("!",n,true);if(state==="DEFINED")n=t.logicalExpression("||",n,t.binaryExpression("===",(0,_babelhelpers.memberExpressionHelper)(objectNode,propName),t.valueToNode(undefined)))}return n}_serializeUpdateIncrementor({incrementor},[oldValNode]){(0,_invariant.default)(incrementor!==undefined);return t.binaryExpression(incrementor,oldValNode,t.numericLiteral(1))}_serializeDerivedAbstractInvariant({},[typeOfStringNode,typeofNode]){let typeofString=typeOfStringNode.value;
let condition=t.binaryExpression("!==",t.unaryExpression("typeof",typeofNode),t.stringLiteral(typeofString));if(typeofString==="object"){condition=t.logicalExpression("&&",condition,t.binaryExpression("!==",t.unaryExpression("typeof",typeofNode),t.stringLiteral("function")));condition=t.logicalExpression("||",condition,t.binaryExpression("===",typeofNode,_babelhelpers.nullExpression))}return condition}_serializeInvariant({appendLastToInvariantOperationDescriptor,violationConditionOperationDescriptor},
nodes){(0,_invariant.default)(violationConditionOperationDescriptor!==undefined);let messageComponents=[t.stringLiteral("Prepack model invariant violation ("),t.numericLiteral(this.preludeGenerator.nextInvariantId++)];if(appendLastToInvariantOperationDescriptor){let propName=nodes[0];let last=nodes.pop();messageComponents.push(t.stringLiteral("): "));messageComponents.push(this.serializeExpression(appendLastToInvariantOperationDescriptor,[propName,last]))}else messageComponents.push(t.stringLiteral(")"));
let throwString=messageComponents[0];for(let i=1;i<messageComponents.length;i++)throwString=t.binaryExpression("+",throwString,messageComponents[i]);let condition=this.serializeExpression(violationConditionOperationDescriptor,nodes);let consequent=this.getErrorStatement(throwString);return t.ifStatement(condition,consequent)}_serializeReactRelayMockContainer({},[reactRelayIdent,propName,...otherArgs]){let propString=propName.value;return t.callExpression(t.memberExpression(reactRelayIdent,t.identifier(propString)),
otherArgs)}_serializePropertyAssignment({path},[o,p,v,e],context,valuesToProcess){(0,_invariant.default)(path instanceof _index.AbstractValue);(0,_invariant.default)(path.operationDescriptor!==undefined);let lh=this.serializeExpression(path.operationDescriptor,[o,p],context,valuesToProcess);return t.expressionStatement(t.assignmentExpression("=",lh,v))}_serializeConditionalPropertyAssignment({path,value},[o,v,e,keyKey],context,valuesToProcess){(0,_invariant.default)(value instanceof _index.AbstractValue);
(0,_invariant.default)(path instanceof _index.AbstractValue);let mightHaveBeenDeleted=value.mightHaveBeenDeleted();let mightBeUndefined=value.mightBeUndefined();(0,_invariant.default)(path.operationDescriptor!==undefined);let lh=this.serializeExpression(path.operationDescriptor,[o,keyKey],context,valuesToProcess);let r=t.expressionStatement(t.assignmentExpression("=",lh,v));if(mightHaveBeenDeleted){let emptyTest=t.binaryExpression("===",v,e);let undefinedTest=t.binaryExpression("===",v,_babelhelpers.voidExpression);
let inTest=t.unaryExpression("!",t.binaryExpression("in",keyKey,o));let guard=t.logicalExpression("||",emptyTest,t.logicalExpression("&&",undefinedTest,inTest));let deleteIt=t.expressionStatement(t.unaryExpression("delete",lh));return t.ifStatement(mightBeUndefined?emptyTest:guard,deleteIt,r)}return r}_serializeLogicalPropertyAssignment({propertyBinding,value},[o,n]){(0,_invariant.default)(value instanceof _index.Value);(0,_invariant.default)(propertyBinding!==undefined);if(typeof propertyBinding.key===
"string"&&value.mightHaveBeenDeleted()&&isSelfReferential(value,propertyBinding.pathNode)){let inTest=t.binaryExpression("in",t.stringLiteral(propertyBinding.key),o);let addEmpty=t.conditionalExpression(inTest,n,_babelhelpers.emptyExpression);n=t.logicalExpression("||",n,addEmpty)}return n}_serializeLocalAssignment({value},[v],context,valuesToProcess){(0,_invariant.default)(value instanceof _index.AbstractValue);(0,_invariant.default)(value.operationDescriptor!==undefined);let id=this.serializeExpression(value.operationDescriptor,
[],context,valuesToProcess);return t.expressionStatement(t.assignmentExpression("=",id,v))}_serializeReactNativeStringLiteral({},[propName]){return propName}_serializeReactCreateContextProvider({},[consumerNode]){return t.memberExpression(consumerNode,t.identifier("Provider"))}_serializeReactTemporalFunc({},[renderNode,..._args]){return t.callExpression(renderNode,_args)}_serializeCallAbstractFunc({},nodes){let fun_args=nodes.slice(1);return t.callExpression(nodes[0],fun_args)}_serializeCallAbstractFuncThis({},
nodes){let fun_args=nodes.slice(1);return t.callExpression(t.memberExpression(nodes[0],t.identifier("call")),fun_args)}_serializeDirectCallWithArgList({},nodes){let fun_args=nodes.slice(1);return t.callExpression(nodes[0],fun_args)}_serializeObjectProtoHasOwnProperty({},[methodNode,objectNode,nameNode]){return t.callExpression(t.memberExpression(methodNode,t.identifier("call")),[objectNode,nameNode])}_serializeRebuiltObject({},[node,propName]){let propString=propName.value;return t.isValidIdentifier(propString)?
t.memberExpression(node,t.identifier(propString),false):t.memberExpression(node,propName,true)}_serializeGlobalDelete({},[propName]){let propString=propName.value;return t.expressionStatement(t.unaryExpression("delete",this.preludeGenerator.globalReference(propString,false)))}_serializeDefineProperty({object,descriptor},[propName],context){let propString=propName.value;(0,_invariant.default)(object!==undefined);(0,_invariant.default)(descriptor!==undefined);(0,_invariant.default)(context!==undefined);
return context.emitDefinePropertyBody(object,propString,descriptor)}_serializeFBMocksMagicGlobalFunction({},[propName,...args]){let propString=propName.value;return t.callExpression(t.identifier(propString),args)}_serializeFBMocksBootloaderLoadModules({},args){return t.callExpression(t.memberExpression(t.identifier("Bootloader"),t.identifier("loadModules")),args)}_serializeUnknownArrayGetPartial({},[o,p]){return(0,_babelhelpers.memberExpressionHelper)(o,p)}_serializeObjectGetPartial({},[o,p]){return(0,
_babelhelpers.memberExpressionHelper)(o,p)}_serializeAbstractObjectGetPartial({},[o,p]){return(0,_babelhelpers.memberExpressionHelper)(o,p)}_serializeObjectSetPartial({},[objectNode,keyNode,valueNode]){return t.expressionStatement(t.assignmentExpression("=",(0,_babelhelpers.memberExpressionHelper)(objectNode,keyNode),valueNode))}_serializeIdentifier({id},nodes){(0,_invariant.default)(id!==undefined);return t.identifier(id)}_serializeCoerceToString({},[p]){return t.binaryExpression("+",t.stringLiteral(""),
p)}_serializeBabelHelpersObjectWithoutProperties({},[methodNode,objNode,propRemoveNode]){return t.callExpression(methodNode,[objNode,propRemoveNode])}_serializeReactDefaultPropsHelper({},[methodNode,..._args]){return t.callExpression(methodNode,_args)}_serializeUnknownArrayMethodCall({},[methodNode,..._args]){return t.callExpression(methodNode,_args)}_serializeUnknownArrayLength({},[o]){return t.memberExpression(o,t.identifier("length"),false)}_serializeUnknownArrayMethodPropertyCall({},[objNode,
propName,..._args]){let propString=propName.value;return t.callExpression(t.memberExpression(objNode,t.identifier(propString)),_args)}_serializeThrow({},[argument]){return t.throwStatement(argument)}_serializeConditionalThrow({value},nodes,context){(0,_invariant.default)(value instanceof _index.Value);function createStatement(val){(0,_invariant.default)(context!==undefined);if(!(val instanceof _index.AbstractValue)||val.kind!=="conditional")return t.throwStatement(context.serializeValue(val));let [cond,
trueVal,falseVal]=val.args;let condVal=context.serializeValue(cond);let trueStat,falseStat;if(trueVal instanceof _index.EmptyValue)trueStat=t.blockStatement([]);else trueStat=createStatement(trueVal);if(falseVal instanceof _index.EmptyValue)falseStat=t.blockStatement([]);else falseStat=createStatement(falseVal);return t.ifStatement(condVal,trueStat,falseStat)}return createStatement(value)}_serializeReactSSRTemplateLiteral({quasis},valueNodes){(0,_invariant.default)(quasis!==undefined);return t.templateLiteral(quasis,
valueNodes)}_serializeReactRenderValueHelper({},[helperNode,valueNode]){return t.callExpression(helperNode,[valueNode])}_serializePropertyDelete({},[objectNode,propName]){return t.expressionStatement(t.unaryExpression("delete",(0,_babelhelpers.memberExpressionHelper)(objectNode,propName)))}_serializeGetBinding({binding},nodes,context){(0,_invariant.default)(binding!==undefined);(0,_invariant.default)(context!==undefined);return context.serializeBinding(binding)}_serializeForFunctionCall({usesThis},
[func,thisExpr]){return usesThis?t.callExpression(t.memberExpression(func,t.identifier("call")),[thisExpr]):t.callExpression(func,[])}_serializeNewExpression({},[constructorNode,...argListNodes]){return t.newExpression(constructorNode,argListNodes)}_serializeEmitCall({callFunctionRef},nodes){(0,_invariant.default)(callFunctionRef!==undefined);let callFunction=this.preludeGenerator.memoizeReference(callFunctionRef);return t.expressionStatement(t.callExpression(callFunction,[...nodes]))}_serializeEmitCallAndCaptureResults({callFunctionRef},
nodes){(0,_invariant.default)(callFunctionRef!==undefined);let callFunction=this.preludeGenerator.memoizeReference(callFunctionRef);return t.callExpression(callFunction,nodes)}_serializeObjectProtoGetOwnPropertyDescriptor({},[funcNode,...args]){return t.callExpression(funcNode,args)}_serializeCallBailout({propRef,thisArg},nodes){let callFunc;let argStart=1;if(thisArg instanceof _index.Value)if(typeof propRef==="string")callFunc=(0,_babelhelpers.memberExpressionHelper)(nodes[0],propRef);else{callFunc=
(0,_babelhelpers.memberExpressionHelper)(nodes[0],nodes[1]);argStart=2}else callFunc=nodes[0];let fun_args=nodes.slice(argStart);return t.callExpression(callFunc,fun_args)}_serializeJoinGenerators({generators},[cond],context,valuesToProcess){(0,_invariant.default)(context!==undefined);(0,_invariant.default)(valuesToProcess!==undefined);(0,_invariant.default)(generators!==undefined);let [generator1,generator2]=generators;let block1=generator1.empty()?null:serializeBody(generator1,context,valuesToProcess);
let block2=generator2.empty()?null:serializeBody(generator2,context,valuesToProcess);if(block1)return t.ifStatement(cond,block1,block2);(0,_invariant.default)(block2);return t.ifStatement(t.unaryExpression("!",cond),block2)}_serializeEmitPropertyAssignment({value},[objectNode,valueNode,propName],context){(0,_invariant.default)(context!==undefined);(0,_invariant.default)(value instanceof _index.Value);return context.getPropertyAssignmentStatement((0,_babelhelpers.memberExpressionHelper)(objectNode,
propName),value,value.mightHaveBeenDeleted(),true)}_serializeGlobalAssignment({},[valueNode,propName]){let propString=propName.value;return t.expressionStatement(t.assignmentExpression("=",this.preludeGenerator.globalReference(propString,false),valueNode))}_serializeSingleArg({},[o]){return o}_serializeAbstractProperty({},[o,propName]){return(0,_babelhelpers.memberExpressionHelper)(o,propName)}_serializeUnaryExpression({unaryOperator,prefix},[x,y]){(0,_invariant.default)(unaryOperator!==undefined);
return t.unaryExpression(unaryOperator,x,prefix)}_serializeBinaryExpression({binaryOperator},[x,y]){(0,_invariant.default)(binaryOperator!==undefined);return t.binaryExpression(binaryOperator,x,y)}_serializeLogicalExpression({logicalOperator},[x,y]){(0,_invariant.default)(logicalOperator!==undefined);return t.logicalExpression(logicalOperator,x,y)}_serializeConditionalExpression({},[c,x,y]){return t.conditionalExpression(c,x,y)}_serializeDerivedOperationDescriptor(id,babelNode){return t.variableDeclaration("var",
[t.variableDeclarator(t.identifier(id),babelNode)])}_serializeVoidOperationDescriptor(babelNode){return t.expressionStatement(babelNode)}_serializeAbstractFromTemplate({templateSource},nodes){let templateArguments={};let i=0;for(let node of nodes)templateArguments[_PreludeGenerator.Placeholders[i++]]=node;(0,_invariant.default)(templateSource!==undefined);return this.preludeGenerator.buildExpression(templateSource,templateArguments)}_serializeObjectAssign({},[targetNode,...sourceNodes]){return t.callExpression(this.preludeGenerator.memoizeReference("Object.assign"),
[targetNode,...sourceNodes])}}exports.ResidualOperationSerializer=ResidualOperationSerializer},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.LazyObjectsSerializer=void 0;var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var t=_interopRequireWildcard(__webpack_require__(21));var _invariant=_interopRequireDefault(__webpack_require__(9));var _logger=__webpack_require__(412);var _modules=__webpack_require__(411);var _HeapInspector=
__webpack_require__(426);var _ResidualHeapValueIdentifiers=__webpack_require__(441);var _ResidualHeapSerializer=__webpack_require__(433);var _utils=__webpack_require__(413);var _GeneratorTree=__webpack_require__(432);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&
Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}const LAZY_OBJECTS_SERIALIZER_BODY_TYPE="LazyObjectInitializer";class LazyObjectsSerializer extends _ResidualHeapSerializer.ResidualHeapSerializer{constructor(realm,logger,modules,residualHeapValueIdentifiers,residualHeapInspector,residualHeapInfo,options,additionalFunctionValuesAndEffects,referentializer,
generatorTree,residualOptimizedFunctions){super(realm,logger,modules,residualHeapValueIdentifiers,residualHeapInspector,residualHeapInfo,options,additionalFunctionValuesAndEffects,referentializer,generatorTree,residualOptimizedFunctions);this._lazyObjectIdSeed=1;this._valueLazyIds=new Map;this._lazyObjectInitializers=new Map;this._callbackLazyObjectParam=t.identifier("obj");(0,_invariant.default)(this._options.lazyObjectsRuntime!=null);this._lazyObjectJSRuntimeName=t.identifier(this._options.lazyObjectsRuntime);
this._initializationCallbackName=t.identifier("__initializerCallback")}_getValueLazyId(obj){return(0,_utils.getOrDefault)(this._valueLazyIds,obj,()=>this._lazyObjectIdSeed++)}_serializeLazyObjectInitializer(obj,emitIntegrityCommand){const initializerBody={type:LAZY_OBJECTS_SERIALIZER_BODY_TYPE,parentBody:undefined,entries:[],done:false};let oldBody=this.emitter.beginEmitting(LAZY_OBJECTS_SERIALIZER_BODY_TYPE,initializerBody);this._emitObjectProperties(obj);if(emitIntegrityCommand!==undefined)emitIntegrityCommand(this.emitter.getBody());
this.emitter.endEmitting(LAZY_OBJECTS_SERIALIZER_BODY_TYPE,oldBody);return initializerBody}_serializeLazyObjectInitializerSwitchCase(obj,initializer){const caseBody=initializer.entries.concat(t.breakStatement());const lazyId=this._getValueLazyId(obj);return t.switchCase(t.numericLiteral(lazyId),caseBody)}_serializeInitializationCallback(){const body=[];const switchCases=[];for(const [obj,initializer]of this._lazyObjectInitializers)switchCases.push(this._serializeLazyObjectInitializerSwitchCase(obj,
initializer));switchCases.push(t.switchCase(null,[t.throwStatement(t.newExpression(t.identifier("Error"),[t.stringLiteral("Unknown lazy id")]))]));const selector=t.identifier("id");body.push(t.switchStatement(selector,switchCases));const params=[this._callbackLazyObjectParam,selector];const initializerCallbackFunction=t.functionExpression(null,params,t.blockStatement(body));return t.variableDeclaration("var",[t.variableDeclarator(this._initializationCallbackName,initializerCallbackFunction)])}_serializeRegisterInitializationCallback(){return t.expressionStatement(t.callExpression(t.memberExpression(this._lazyObjectJSRuntimeName,
t.identifier("setLazyObjectInitializer")),[this._initializationCallbackName]))}_serializeCreateLazyObject(obj){const lazyId=this._getValueLazyId(obj);return t.callExpression(t.memberExpression(this._lazyObjectJSRuntimeName,t.identifier("createLazyObject"),false),[t.numericLiteral(lazyId)])}_isEmittingIntoLazyObjectInitializerBody(obj){const objLazyBody=this._lazyObjectInitializers.get(obj);return objLazyBody!==undefined&&this.emitter.isCurrentBodyOffspringOf(objLazyBody)}getSerializeObjectIdentifier(val){return val instanceof
_index.ObjectValue&&this._isEmittingIntoLazyObjectInitializerBody(val)?this._callbackLazyObjectParam:super.getSerializeObjectIdentifier(val)}serializeValueRawObject(obj,skipPrototype,emitIntegrityCommand){if(obj.temporalAlias!==undefined)return super.serializeValueRawObject(obj,skipPrototype,emitIntegrityCommand);this._lazyObjectInitializers.set(obj,this._serializeLazyObjectInitializer(obj,emitIntegrityCommand));return this._serializeCreateLazyObject(obj)}postGeneratorSerialization(){if(this._lazyObjectInitializers.size>
0){this.prelude.push(this._serializeInitializationCallback());this.prelude.push(this._serializeRegisterInitializationCallback())}}}exports.LazyObjectsSerializer=LazyObjectsSerializer},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ResidualHeapRefCounter=void 0;var _invariant=_interopRequireDefault(__webpack_require__(9));var _index=__webpack_require__(10);var _HeapInspector=__webpack_require__(426);var _ResidualHeapVisitor=__webpack_require__(423);
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ResidualHeapRefCounter extends _ResidualHeapVisitor.ResidualHeapVisitor{constructor(realm,logger,modules,additionalFunctionValuesAndEffects){super(realm,logger,modules,additionalFunctionValuesAndEffects);this._valueToEdgeRecord=new Map;this._path=[]}getResult(){return this._valueToEdgeRecord}_shouldIgnore(val){return val instanceof _index.EmptyValue||val.isIntrinsic()||_HeapInspector.HeapInspector.isLeaf(val)}preProcessValue(val){if(this._shouldIgnore(val))return false;
if(this._path.length>0)this._updateParentOutgoingEdgeCount();this._path.push(val);return this._updateValueIncomingEdgeCount(val)}_updateParentOutgoingEdgeCount(){const parent=this._path[this._path.length-1];const edgeRecord=this._valueToEdgeRecord.get(parent);(0,_invariant.default)(edgeRecord);++edgeRecord.outGoing}_updateValueIncomingEdgeCount(val){let edgeRecord=this._valueToEdgeRecord.get(val);if(edgeRecord===undefined){this._valueToEdgeRecord.set(val,{inComing:1,outGoing:0});return true}else{++edgeRecord.inComing;
return false}}postProcessValue(val){if(this._shouldIgnore(val))return;(0,_invariant.default)(this._path.length>0);this._path.pop()}visitRoots(){super.visitRoots();(0,_invariant.default)(this._path.length===0,"Path should be balanced empty after traversal.")}}exports.ResidualHeapRefCounter=ResidualHeapRefCounter},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ResidualHeapGraphGenerator=void 0;var _invariant=_interopRequireDefault(__webpack_require__(9));
var _index=__webpack_require__(10);var _HeapInspector=__webpack_require__(426);var _ResidualHeapVisitor=__webpack_require__(423);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ResidualHeapGraphGenerator extends _ResidualHeapVisitor.ResidualHeapVisitor{constructor(realm,logger,modules,additionalFunctionValuesAndEffects,valueIdentifiers,valueToEdgeRecord){super(realm,logger,modules,additionalFunctionValuesAndEffects);this._valueToEdgeRecord=valueToEdgeRecord;
this._valueIdentifiers=valueIdentifiers;this._visitedValues=new Set;this._valueIds=new Map;this._idSeed=0;this._path=[];this._edges=[]}preProcessValue(val){if(this._shouldIgnore(val))return true;this._updateEdge(val);if(this._visitedValues.has(val))return false;this._visitedValues.add(val);return true}postProcessValue(val){if(this._shouldIgnore(val))return;(0,_invariant.default)(this._path.length>0);this._path.pop()}_getValueId(val){let id=this._valueIds.get(val);if(id===undefined){this._valueIds.set(val,
++this._idSeed);id=this._idSeed}return id}_shouldIgnore(val){return val instanceof _index.EmptyValue||val.isIntrinsic()||_HeapInspector.HeapInspector.isLeaf(val)}_updateEdge(val){if(this._path.length>0){const parent=this._path[this._path.length-1];this._edges.push({fromId:this._getValueId(parent),toId:this._getValueId(val)})}this._path.push(val)}_getValueLabel(val){const serializedId=this._valueIdentifiers.getIdentifier(val);(0,_invariant.default)(serializedId);return val.__originalName!==undefined?
`${serializedId.name}(${val.__originalName})`:serializedId.name}_generateDotGraphData(nodes,edges){let content="digraph{\n";for(const val of nodes){const nodeId=this._getValueId(val);content+=`  node${nodeId} [shape=${this._getValueShape(val)} label=${this._getValueLabel(val)}];\n`}for(const edge of edges)content+=`  node${edge.fromId} -> node${edge.toId};\n`;content+="}";return content}_generateVisJSGraphData(nodes,edges){let nodesData=[];let edgesData=[];for(let node of nodes){const nodeId=this._getValueId(node);
let nodeData={id:`${nodeId}`,label:this._getValueLabel(node),shape:this._getValueShape(node),color:this._getValueColor(node)};nodesData.push(nodeData)}for(let [index,edge]of edges.entries()){let edgeData={id:index,from:`${edge.fromId}`,to:`${edge.toId}`,arrows:"to"};edgesData.push(edgeData)}let graphData={nodes:nodesData,edges:edgesData};return JSON.stringify(graphData)}_getValueShape(val){let shape=null;if(val instanceof _index.FunctionValue)shape="circle";else if(val instanceof _index.AbstractValue)shape=
"diamond";else if(val instanceof _index.ProxyValue)shape="triangle";else if(val instanceof _index.SymbolValue)shape="star";else if(val instanceof _index.ObjectValue)shape="box";else shape="ellipse";return shape}_getValueColor(val){let shape=null;if(val instanceof _index.FunctionValue)shape="red";else if(val instanceof _index.AbstractValue)shape="green";else if(val instanceof _index.ProxyValue)shape="orange";else if(val instanceof _index.SymbolValue)shape="yellow";else if(val instanceof _index.ObjectValue)shape=
"#3BB9FF";else shape="grey";return shape}generateResult(heapGraphFormat){return heapGraphFormat==="DotLanguage"?this._generateDotGraphData(this._visitedValues,this._edges):this._generateVisJSGraphData(this._visitedValues,this._edges)}}exports.ResidualHeapGraphGenerator=ResidualHeapGraphGenerator},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ResidualOptimizedFunctions=void 0;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));
var _GeneratorTree=__webpack_require__(432);var _environment=__webpack_require__(20);var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ResidualOptimizedFunctions{constructor(generatorTree,optimizedFunctionsAndEffects,residualValues){this._generatorTree=generatorTree;this._optimizedFunctionsAndEffects=optimizedFunctionsAndEffects;this._residualValues=residualValues}_isDefinedInsideFunction(childFunction,maybeParentFunctions){for(let maybeParentFunction of maybeParentFunctions){if(childFunction===
maybeParentFunction)continue;let maybeParentFunctionInfo=this._optimizedFunctionsAndEffects.get(maybeParentFunction);if(maybeParentFunctionInfo&&maybeParentFunctionInfo.effects.createdObjects.has(childFunction))return true;else{let env=childFunction.$Environment;while(env.parent!==null){let envRecord=env.environmentRecord;if(envRecord instanceof _environment.FunctionEnvironmentRecord&&envRecord.$FunctionObject===maybeParentFunction)return true;env=env.parent}}}return false}_definesFunctions(possibleParentFunction,
functions){let maybeParentFunctionInfo=this._optimizedFunctionsAndEffects.get(possibleParentFunction);(0,_invariant.default)(maybeParentFunctionInfo);let createdObjects=maybeParentFunctionInfo.effects.createdObjects;for(let func of functions)if(func!==possibleParentFunction&&!createdObjects.has(func))return false;return true}tryGetOptimizedFunctionRoot(val){let scopes=this._residualValues.get(val);(0,_invariant.default)(scopes!==undefined);return this.tryGetOutermostOptimizedFunction(scopes)}tryGetOutermostOptimizedFunction(scopes){let functionValues=
new Set;(0,_invariant.default)(scopes!==undefined);for(let scope of scopes){let s=scope;while(s instanceof _generator.Generator)s=this._generatorTree.getParent(s);if(s==="GLOBAL")return undefined;(0,_invariant.default)(s instanceof _index.FunctionValue);functionValues.add(s)}let outermostAdditionalFunctions=new Set;for(let functionValue of functionValues)if(this._optimizedFunctionsAndEffects.has(functionValue)){if(!this._isDefinedInsideFunction(functionValue,functionValues))outermostAdditionalFunctions.add(functionValue)}else{let f=
this.tryGetOptimizedFunctionRoot(functionValue);if(f===undefined)return undefined;if(!this._isDefinedInsideFunction(f,functionValues))outermostAdditionalFunctions.add(f)}if(outermostAdditionalFunctions.size===1)return[...outermostAdditionalFunctions][0];let possibleRoots=[...outermostAdditionalFunctions];while(possibleRoots.length>0){let possibleRoot=possibleRoots.shift();if(this._definesFunctions(possibleRoot,outermostAdditionalFunctions))return possibleRoot;let additionalFunctionEffects=this._optimizedFunctionsAndEffects.get(possibleRoot);
(0,_invariant.default)(additionalFunctionEffects);let parent=additionalFunctionEffects.parentAdditionalFunction;if(parent)possibleRoots.push(parent)}return undefined}}exports.ResidualOptimizedFunctions=ResidualOptimizedFunctions},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _realm=__webpack_require__(7);var _initializeSingletons=_interopRequireDefault(__webpack_require__(450));var _index=__webpack_require__(464);
var _global=_interopRequireDefault(__webpack_require__(561));var _statistics=__webpack_require__(8);var evaluators=_interopRequireWildcard(__webpack_require__(562));var _singletons=__webpack_require__(236);var _index3=__webpack_require__(10);var _Debugger=__webpack_require__(617);var _simplifier=_interopRequireDefault(__webpack_require__(629));var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=
null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(opts={},debuggerConfigArgs,statistics=undefined,debugReproArgs){(0,_initializeSingletons.default)();
let r=new _realm.Realm(opts,statistics||new _statistics.RealmStatistics);if(debuggerConfigArgs){let debugChannel=debuggerConfigArgs.debugChannel;if(debugChannel){(0,_invariant.default)(debugChannel.debuggerIsAttached(),"Debugger intends to be used but is not attached.");r.debuggerInstance=new _Debugger.DebugServer(debugChannel,r,debuggerConfigArgs)}}if(debugReproArgs!==undefined)r.debugReproManager=_singletons.DebugReproManager.construct(debugReproArgs);let i=r.intrinsics;(0,_index.initialize)(i,
r);r.$GlobalObject=new _index3.ObjectValue(r,i.ObjectPrototype,"global");(0,_global.default)(r);for(let name in evaluators)r.evaluators[name]=evaluators[name];r.simplifyAndRefineAbstractValue=_simplifier.default.bind(null,r,false);r.simplifyAndRefineAbstractCondition=_simplifier.default.bind(null,r,true);r.$GlobalEnv=_singletons.Environment.NewGlobalEnvironment(r,r.$GlobalObject,r.$GlobalObject);return r}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});
exports.default=_default;var Singletons=_interopRequireWildcard(__webpack_require__(236));var _create=__webpack_require__(451);var _environment=__webpack_require__(453);var _function=__webpack_require__(454);var _leak=__webpack_require__(455);var _join=__webpack_require__(456);var _paths=__webpack_require__(457);var _properties=__webpack_require__(458);var _to=__webpack_require__(459);var _widen=__webpack_require__(460);var _ConcreteModelConverter=__webpack_require__(461);var _DebugReproManager=__webpack_require__(462);
var _types=__webpack_require__(19);var utils=_interopRequireWildcard(__webpack_require__(443));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _default(){Singletons.setCreate(new _create.CreateImplementation);
Singletons.setEnvironment(new _environment.EnvironmentImplementation);Singletons.setFunctions(new _function.FunctionImplementation);Singletons.setLeak(new _leak.LeakImplementation);Singletons.setMaterialize(new _leak.MaterializeImplementation);Singletons.setJoin(new _join.JoinImplementation);Singletons.setPath(new _paths.PathImplementation);Singletons.setPathConditions((val)=>new _paths.PathConditionsImplementation(val));Singletons.setProperties(new _properties.PropertiesImplementation);Singletons.setTo(new _to.ToImplementation);
Singletons.setWiden(new _widen.WidenImplementation);Singletons.setConcretize(_ConcreteModelConverter.concretize);Singletons.setUtils(utils);Singletons.setDebugReproManager(new _DebugReproManager.DebugReproManagerImplementation)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.CreateImplementation=void 0;var _index=__webpack_require__(10);var _get=__webpack_require__(230);var _is=__webpack_require__(229);var _abstract=__webpack_require__(233);
var _construct=__webpack_require__(228);var _singletons=__webpack_require__(236);var _strict=_interopRequireDefault(__webpack_require__(452));var _invariant=_interopRequireDefault(__webpack_require__(9));var _parse=_interopRequireDefault(__webpack_require__(227));var _traverseFast=_interopRequireDefault(__webpack_require__(279));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const allElementTypes=["Undefined","Null","Boolean",
"String","Symbol","Number","Object"];class CreateImplementation{StringCreate(realm,value,prototype){(0,_invariant.default)(value instanceof _index.StringValue,"expected string value");let S=new _index.StringExotic(realm);S.$StringData=value;S.$Prototype=prototype;S.setExtensible(true);let length=value.value.length;_singletons.Properties.DefinePropertyOrThrow(realm,S,"length",new _descriptors.PropertyDescriptor({value:new _index.NumberValue(realm,length),writable:false,enumerable:false,configurable:false}));
return S}CreateHTML(realm,string,tag,attribute,value){let str=(0,_abstract.RequireObjectCoercible)(realm,string);let S=_singletons.To.ToStringPartial(realm,str);let p1=`<${tag}`;if(attribute){let V=_singletons.To.ToStringPartial(realm,value);let escapedV=V.replace(/"/g,"&quot;");p1=`${p1} ${attribute}="${escapedV}"`}let p2=`${p1}>`;let p3=`${p2}${S}`;let p4=`${p3}</${tag}>`;return new _index.StringValue(realm,p4)}MakeArgGetter(realm,name,env){return new _index.NativeFunctionValue(realm,undefined,
undefined,0,(context)=>{return env.GetBindingValue(name,false)},false)}MakeArgSetter(realm,name,env){return new _index.NativeFunctionValue(realm,undefined,undefined,1,(context,[value])=>{return env.SetMutableBinding(name,value,false)},false)}CreateStringIterator(realm,string){(0,_invariant.default)(string instanceof _index.StringValue,"expected string to be a string value");let iterator=this.ObjectCreate(realm,realm.intrinsics.StringIteratorPrototype,{$IteratedString:undefined,$StringIteratorNextIndex:undefined});
iterator.$IteratedString=string;iterator.$StringIteratorNextIndex=0;return iterator}ArraySpeciesCreate(realm,originalArray,length){(0,_invariant.default)(length>=0,"expected length >= 0");if(Object.is(length,-0))length=+0;let C=realm.intrinsics.undefined;let isArray=(0,_is.IsArray)(realm,originalArray);if(isArray){C=(0,_get.Get)(realm,originalArray,"constructor");if((0,_is.IsConstructor)(realm,C)){(0,_invariant.default)(C instanceof _index.ObjectValue);let thisRealm=realm;let realmC=(0,_get.GetFunctionRealm)(realm,
C);if(thisRealm!==realmC)if((0,_abstract.SameValue)(realm,C,realmC.intrinsics.Array))C=realm.intrinsics.undefined}if(C.mightBeObject()){if(C.mightNotBeObject())C.throwIfNotConcrete();(0,_invariant.default)(C instanceof _index.ObjectValue||C instanceof _index.AbstractObjectValue);C=(0,_get.Get)(realm,C,realm.intrinsics.SymbolSpecies);if(C instanceof _index.NullValue)C=realm.intrinsics.undefined}}if(C instanceof _index.UndefinedValue)return this.ArrayCreate(realm,length);if(!(0,_is.IsConstructor)(realm,
C))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a constructor");return(0,_construct.Construct)(realm,C.throwIfNotConcreteObject(),[new _index.NumberValue(realm,length)]).throwIfNotConcreteObject()}CreateIterResultObject(realm,value,done){(0,_invariant.default)(typeof done==="boolean","expected done to be a boolean");let obj=this.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);this.CreateDataProperty(realm,obj,"value",value);this.CreateDataProperty(realm,obj,"done",new _index.BooleanValue(realm,
done));return obj}CreateArrayIterator(realm,array,kind){(0,_invariant.default)(array instanceof _index.ObjectValue,"expected object");let iterator=this.ObjectCreate(realm,realm.intrinsics.ArrayIteratorPrototype,{$IteratedObject:undefined,$ArrayIteratorNextIndex:undefined,$ArrayIterationKind:undefined});iterator.$IteratedObject=array;iterator.$ArrayIteratorNextIndex=new _index.NumberValue(realm,0);iterator.$ArrayIterationKind=kind;return iterator}ArrayCreate(realm,length,proto){(0,_invariant.default)(length>=
0);if(Object.is(length,-0))length=+0;if(length>Math.pow(2,32)-1)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"length>2^32-1");proto=proto||realm.intrinsics.ArrayPrototype;let A=new _index.ArrayValue(realm);A.$Prototype=proto;A.setExtensible(true);_singletons.Properties.OrdinaryDefineOwnProperty(realm,A,"length",new _descriptors.PropertyDescriptor({value:new _index.NumberValue(realm,length),writable:true,enumerable:false,configurable:false}));return A}CreateArrayFromList(realm,
elems){for(let elem of elems)(0,_invariant.default)(elem instanceof _index.Value,"value expected");let arr=this.ArrayCreate(realm,0);let n=0;for(let elem of elems){let status=this.CreateDataProperty(realm,arr,new _index.StringValue(realm,n+""),elem);(0,_invariant.default)(status,"couldn't create data property");n++}return arr}CreateUnmappedArgumentsObject(realm,argumentsList){let len=argumentsList.length;let obj=this.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);obj.$ParameterMap=obj;_singletons.Properties.DefinePropertyOrThrow(realm,
obj,"length",new _descriptors.PropertyDescriptor({value:new _index.NumberValue(realm,len),writable:true,enumerable:false,configurable:true}));let index=0;while(index<len){let val=argumentsList[index];this.CreateDataProperty(realm,obj,new _index.StringValue(realm,index+""),val);index++}_singletons.Properties.DefinePropertyOrThrow(realm,obj,realm.intrinsics.SymbolIterator,new _descriptors.PropertyDescriptor({value:realm.intrinsics.ArrayProto_values,writable:true,enumerable:false,configurable:true}));
_singletons.Properties.DefinePropertyOrThrow(realm,obj,"callee",new _descriptors.PropertyDescriptor({get:realm.intrinsics.ThrowTypeError,set:realm.intrinsics.ThrowTypeError,enumerable:false,configurable:false}));return obj}CreateMappedArgumentsObject(realm,func,formals,argumentsList,env){for(let param of formals)(0,_invariant.default)(param.type==="Identifier","expected only simple params");let len=argumentsList.length;let obj=new _index.ArgumentsExotic(realm);obj.$Prototype=realm.intrinsics.ObjectPrototype;
obj.setExtensible(true);let map=new _index.ObjectValue(realm);obj.$ParameterMap=map;let parameterNames=[];for(let param of formals)parameterNames.push(param.name);let numberOfParameters=parameterNames.length;let index=0;while(index<len){let val=argumentsList[index];this.CreateDataProperty(realm,obj,new _index.StringValue(realm,index+""),val);index++}_singletons.Properties.DefinePropertyOrThrow(realm,obj,"length",new _descriptors.PropertyDescriptor({value:new _index.NumberValue(realm,len),writable:true,
enumerable:false,configurable:true}));let mappedNames=[];index=numberOfParameters-1;while(index>=0){let name=parameterNames[index];if(mappedNames.indexOf(name)<0){mappedNames.push(name);if(index<len){let g=this.MakeArgGetter(realm,name,env);let p=this.MakeArgSetter(realm,name,env);map.$DefineOwnProperty(new _index.StringValue(realm,index+""),new _descriptors.PropertyDescriptor({set:p,get:g,enumerable:false,configurable:true}))}}index--}_singletons.Properties.DefinePropertyOrThrow(realm,obj,realm.intrinsics.SymbolIterator,
new _descriptors.PropertyDescriptor({value:realm.intrinsics.ArrayProto_values,writable:true,enumerable:false,configurable:true}));_singletons.Properties.DefinePropertyOrThrow(realm,obj,"callee",new _descriptors.PropertyDescriptor({value:func,writable:true,enumerable:false,configurable:true}));return obj}CreateDataProperty(realm,O,P,V){(0,_invariant.default)((0,_is.IsPropertyKey)(realm,P),"Not a property key");let newDesc=new _descriptors.PropertyDescriptor({value:V,writable:true,enumerable:true,configurable:true});
return O.$DefineOwnProperty(P,newDesc)}CopyDataProperties(realm,target,source,excluded){(0,_invariant.default)(target instanceof _index.ObjectValue,"Not an object value");(0,_invariant.default)(excluded instanceof Array,"Not an array");if(source===realm.intrinsics.null||source===realm.intrinsics.undefined);else{let from=_singletons.To.ToObject(realm,source);let keys=from.$OwnPropertyKeys();for(let nextKey of keys){let found=false;for(let e of excluded){(0,_invariant.default)(e instanceof _index.StringValue);
(0,_invariant.default)(nextKey instanceof _index.StringValue);if(!e.mightBeFalse()&&(0,_abstract.SameValue)(realm,e,nextKey))found=true}if(found===false){let desc=from.$GetOwnProperty(nextKey);if(desc!==undefined&&desc.throwIfNotConcrete(realm).enumerable===true){let propValue=(0,_get.Get)(realm,from,nextKey);this.CreateDataProperty(realm,target,nextKey,propValue)}}}}return target}CreateMethodProperty(realm,O,P,V){(0,_invariant.default)(O instanceof _index.ObjectValue,"Not an object value");(0,_invariant.default)((0,
_is.IsPropertyKey)(realm,P),"Not a property key");let newDesc=new _descriptors.PropertyDescriptor({value:V,writable:true,enumerable:false,configurable:true});return O.$DefineOwnProperty(P,newDesc)}CreateDataPropertyOrThrow(realm,O,P,V){(0,_invariant.default)(O instanceof _index.ObjectValue,"Not an object value");(0,_invariant.default)((0,_is.IsPropertyKey)(realm,P),"Not a property key");let success=this.CreateDataProperty(realm,O,P,V);if(success===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"not a function");return success}ObjectCreate(realm,proto,internalSlotsList){internalSlotsList=internalSlotsList||{};let obj=new _index.ObjectValue(realm);Object.assign(obj,internalSlotsList);obj.$Prototype=proto;obj.setExtensible(true);return obj}OrdinaryCreateFromConstructor(realm,constructor,intrinsicDefaultProto,internalSlotsList){(0,_invariant.default)(realm.intrinsics[intrinsicDefaultProto],"not a valid proto ref");let proto=(0,_get.GetPrototypeFromConstructor)(realm,constructor,intrinsicDefaultProto);
return this.ObjectCreate(realm,proto,internalSlotsList)}CreateListFromArrayLike(realm,obj,elementTypes){elementTypes=elementTypes||allElementTypes;if(!(obj instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Not an object");let len=_singletons.To.ToLength(realm,(0,_get.Get)(realm,obj,"length"));let list=[];let index=0;while(index<len){let indexName=index+"";let next=(0,_get.Get)(realm,obj,indexName);if(elementTypes!==allElementTypes&&elementTypes.indexOf((0,
_abstract.Type)(realm,next))<0)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"invalid element type");list.push(next);index++}return list}CreateDynamicFunction(realm,constructor,newTarget,kind,args){newTarget=!newTarget?constructor:newTarget;let fallbackProto;if(kind==="normal")fallbackProto="FunctionPrototype";else fallbackProto="Generator";let argCount=args.length;let P="";let bodyText;if(argCount===0)bodyText=realm.intrinsics.emptyString;else if(argCount===1)bodyText=args[0];
else{let firstArg=args[0];P=_singletons.To.ToStringPartial(realm,firstArg);let k=1;while(k<argCount-1){let nextArg=args[k];let nextArgString=_singletons.To.ToStringPartial(realm,nextArg);P=P+","+nextArgString;k+=1}bodyText=args[k]}bodyText=_singletons.To.ToStringPartial(realm,bodyText);let ast;try{ast=(0,_parse.default)(realm,"function"+(kind==="generator"?"*":"")+" _("+P+"){"+bodyText+"}","eval")}catch(e){throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,"parse failed");}let {program:{body:[functionDeclaration]}}=
ast;if(!functionDeclaration)throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,"parse failed");(0,_invariant.default)(functionDeclaration.type==="FunctionDeclaration");let {params,body}=functionDeclaration;let strict=(0,_strict.default)(body);if(kind==="generator"){let containsYield=false;for(let param of params)(0,_traverseFast.default)(param,(node)=>{if(node.type==="YieldExpression"){containsYield=true;return true}if(node.type==="Identifier"&&node.name==="yield"){containsYield=
true;return true}return false});if(containsYield)throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,"parse failed");}if(strict===true);let proto=(0,_get.GetPrototypeFromConstructor)(realm,newTarget,fallbackProto);let F=_singletons.Functions.FunctionAllocate(realm,proto,strict,kind);let realmF=F.$Realm;let scope=realmF.$GlobalEnv;_singletons.Functions.FunctionInitialize(realm,F,"normal",params,body,scope);if(kind==="generator"){let prototype=this.ObjectCreate(realm,realm.intrinsics.GeneratorPrototype);
prototype.originalConstructor=F;_singletons.Properties.DefinePropertyOrThrow(realm,F,"prototype",new _descriptors.PropertyDescriptor({value:prototype,writable:true,enumerable:false,configurable:false}))}else(0,_construct.MakeConstructor)(realm,F);_singletons.Functions.SetFunctionName(realm,F,"anonymous");return F}}exports.CreateImplementation=CreateImplementation},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=IsStrict;function IsStrict(node){if(node.type!==
"BlockStatement"&&node.type!=="Program")return false;let directives=node.directives;if(!directives)return false;return directives.some((directive)=>{if(directive.type!=="Directive")return false;if(directive.value.type!=="DirectiveLiteral")return false;return directive.value.value==="use strict"})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.EnvironmentImplementation=void 0;var _invariant=_interopRequireDefault(__webpack_require__(9));
var _index=__webpack_require__(10);var _environment=__webpack_require__(20);var _completions=__webpack_require__(18);var _errors=__webpack_require__(3);var _ObjectExpression=__webpack_require__(275);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var t=_interopRequireWildcard(__webpack_require__(21));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=
Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class EnvironmentImplementation{RestBindingInitialization(realm,property,value,excludedNames,strictCode,environment){let BindingIdentifier=property.argument;let restObj=_singletons.Create.ObjectCreate(realm,
realm.intrinsics.ObjectPrototype);_singletons.Create.CopyDataProperties(realm,restObj,value,excludedNames);let bindingId=BindingIdentifier.name;let lhs=this.ResolveBinding(realm,bindingId,strictCode,environment);if(environment===undefined)return _singletons.Properties.PutValue(realm,lhs,restObj);return this.InitializeReferencedBinding(realm,lhs,restObj)}PropertyBindingInitialization(realm,properties,value,strictCode,environment){if(properties.length===0)return[];let BindingProperty=properties.slice(-1)[0];
let BindingPropertyList=properties.slice(0,-1);let boundNames=this.PropertyBindingInitialization(realm,BindingPropertyList,value,strictCode,environment);let nextNames;let env=environment?environment:realm.getRunningContext().lexicalEnvironment;let P=(0,_ObjectExpression.EvalPropertyName)(BindingProperty,env,realm,strictCode);this.KeyedBindingInitialization(realm,BindingProperty.value,value,strictCode,environment,P);nextNames=[P];boundNames=boundNames.concat(nextNames);return boundNames}IsSuperReference(realm,
V){return V.thisValue!==undefined}HasPrimitiveBase(realm,V){let base=this.GetBase(realm,V);if(!base||base instanceof _environment.EnvironmentRecord)return false;let type=base.getType();return type===_index.BooleanValue||type===_index.StringValue||type===_index.SymbolValue||type===_index.NumberValue||type===_index.IntegralValue}GetReferencedName(realm,V){if(V.referencedName instanceof _index.AbstractValue){_index.AbstractValue.reportIntrospectionError(V.referencedName);throw new _errors.FatalError;
}return V.referencedName}GetReferencedNamePartial(realm,V){return V.referencedName}GetValue(realm,V){let val=this._dereference(realm,V);if(val instanceof _index.AbstractValue)return realm.simplifyAndRefineAbstractValue(val);return val}GetConditionValue(realm,V){let val=this._dereference(realm,V);if(val instanceof _index.AbstractValue)return realm.simplifyAndRefineAbstractCondition(val);return val}_dereferenceConditional(realm,ref,condValue,consequentVal,alternateVal){return realm.evaluateWithAbstractConditional(condValue,
()=>{return realm.evaluateForEffects(()=>{if((0,_environment.isValidBaseValue)(consequentVal)){let consequentRef=new _environment.Reference(consequentVal,ref.referencedName,ref.strict,ref.thisValue);return this._dereference(realm,consequentRef)}return this._dereference(realm,ref,false)},null,"_dereferenceConditional consequent")},()=>{return realm.evaluateForEffects(()=>{if((0,_environment.isValidBaseValue)(alternateVal)){let alternateRef=new _environment.Reference(alternateVal,ref.referencedName,
ref.strict,ref.thisValue);return this._dereference(realm,alternateRef)}return this._dereference(realm,ref,false)},null,"_dereferenceConditional alternate")})}_dereference(realm,V,deferenceConditionals=true){if(!(V instanceof _environment.Reference))return V;let base=this.GetBase(realm,V);if(this.IsUnresolvableReference(realm,V))throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError,`${V.referencedName.toString()} is not defined`);if(this.IsPropertyReference(realm,V)){if(base instanceof
_index.AbstractValue){if(deferenceConditionals&&!(base instanceof _index.AbstractObjectValue))if(base.kind==="conditional"){let [condValue,consequentVal,alternateVal]=base.args;(0,_invariant.default)(condValue instanceof _index.AbstractValue);if((0,_environment.isValidBaseValue)(consequentVal)||(0,_environment.isValidBaseValue)(alternateVal))return this._dereferenceConditional(realm,V,condValue,consequentVal,alternateVal)}else if(base.kind==="||"){let [leftValue,rightValue]=base.args;(0,_invariant.default)(leftValue instanceof
_index.AbstractValue);return this._dereferenceConditional(realm,V,leftValue,leftValue,rightValue)}else if(base.kind==="&&"){let [leftValue,rightValue]=base.args;(0,_invariant.default)(leftValue instanceof _index.AbstractValue);return this._dereferenceConditional(realm,V,leftValue,rightValue,leftValue)}base=_singletons.To.ToObject(realm,base)}if(this.HasPrimitiveBase(realm,V)){(0,_invariant.default)(base instanceof _index.Value&&!(0,_index2.HasSomeCompatibleType)(base,_index.UndefinedValue,_index.NullValue));
base=_singletons.To.ToObject(realm,base)}(0,_invariant.default)(base instanceof _index.ObjectValue||base instanceof _index.AbstractObjectValue);return base.$GetPartial(this.GetReferencedNamePartial(realm,V),(0,_index2.GetThisValue)(realm,V))}if(base instanceof _environment.EnvironmentRecord){let referencedName=this.GetReferencedName(realm,V);(0,_invariant.default)(typeof referencedName==="string");return base.GetBindingValue(referencedName,this.IsStrictReference(realm,V))}(0,_invariant.default)(false)}IsStrictReference(realm,
V){return V.strict}IsPropertyReference(realm,V){return V.base instanceof _index.AbstractValue||V.base instanceof _index.ObjectValue||this.HasPrimitiveBase(realm,V)}GetBase(realm,V){return V.base}IsUnresolvableReference(realm,V){return!V.base}NewDeclarativeEnvironment(realm,E,active=true){let env=new _environment.LexicalEnvironment(realm);if(active)realm.activeLexicalEnvironments.add(env);let envRec=new _environment.DeclarativeEnvironmentRecord(realm);env.environmentRecord=envRec;env.parent=E;return env}BoundNames(realm,
node){return Object.keys(t.getOuterBindingIdentifiers(node))}ContainsExpression(realm,node){if(!node)return false;switch(node.type){case "ObjectPattern":for(let prop of node.properties)if(this.ContainsExpression(realm,prop))return true;return false;case "ArrayPattern":for(let elem of node.elements)if(this.ContainsExpression(realm,elem))return true;return false;case "RestElement":return this.ContainsExpression(realm,node.argument);case "AssignmentPattern":return true;default:return false}}ResolveBinding(realm,
name,strict,env){if(!env)env=realm.getRunningContext().lexicalEnvironment;(0,_invariant.default)(env instanceof _environment.LexicalEnvironment,"expected lexical environment");return this.GetIdentifierReference(realm,env,name,strict)}GetIdentifierReference(realm,lex,name,strict){if(!lex)return new _environment.Reference(undefined,name,strict);let envRec=lex.environmentRecord;let exists=envRec.HasBinding(name);if(exists)return new _environment.Reference(envRec,name,strict);else{let outer=lex.parent;
return this.GetIdentifierReference(realm,outer,name,strict)}}InitializeReferencedBinding(realm,V,W){(0,_invariant.default)(V instanceof _environment.Reference,"expected reference");(0,_invariant.default)(!this.IsUnresolvableReference(realm,V),"expected resolvable reference");let base=this.GetBase(realm,V);(0,_invariant.default)(base instanceof _environment.EnvironmentRecord,"expected environment record");let referencedName=this.GetReferencedName(realm,V);(0,_invariant.default)(typeof referencedName===
"string");return base.InitializeBinding(referencedName,W)}BlockDeclarationInstantiation(realm,strictCode,body,env){let envRec=env.environmentRecord;(0,_invariant.default)(envRec instanceof _environment.DeclarativeEnvironmentRecord,"expected declarative environment record");let declarations=[];for(let node of body)if(node.type==="ClassDeclaration"||node.type==="FunctionDeclaration"||node.type==="VariableDeclaration"&&node.kind!=="var")declarations.push(node);for(let d of declarations){for(let dn of this.BoundNames(realm,
d)){if(envRec.HasBinding(dn))throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,dn+" already declared");if(d.type==="VariableDeclaration"&&d.kind==="const")envRec.CreateImmutableBinding(dn,true);else envRec.CreateMutableBinding(dn,false)}if(d.type==="FunctionDeclaration"){let fn=this.BoundNames(realm,d)[0];let fo=env.evaluate(d,strictCode);(0,_invariant.default)(fo instanceof _index.Value);envRec.InitializeBinding(fn,fo)}}}NewGlobalEnvironment(realm,G,thisValue){let env=new _environment.LexicalEnvironment(realm);
let objRec=new _environment.ObjectEnvironmentRecord(realm,G);let dclRec=new _environment.DeclarativeEnvironmentRecord(realm);let globalRec=new _environment.GlobalEnvironmentRecord(realm);globalRec.$ObjectRecord=objRec;globalRec.$GlobalThisValue=thisValue;globalRec.$DeclarativeRecord=dclRec;globalRec.$VarNames=[];env.environmentRecord=globalRec;realm.activeLexicalEnvironments.add(env);env.parent=null;return env}NewObjectEnvironment(realm,O,E){let env=new _environment.LexicalEnvironment(realm);realm.activeLexicalEnvironments.add(env);
let envRec=new _environment.ObjectEnvironmentRecord(realm,O);env.environmentRecord=envRec;env.parent=E;return env}NewFunctionEnvironment(realm,F,newTarget){(0,_invariant.default)(F instanceof _index.ECMAScriptFunctionValue,"expected a function");(0,_invariant.default)(newTarget===undefined||newTarget instanceof _index.ObjectValue,"expected undefined or object value for new target");let env=new _environment.LexicalEnvironment(realm);realm.activeLexicalEnvironments.add(env);let envRec=new _environment.FunctionEnvironmentRecord(realm);
envRec.$FunctionObject=F;if(F.$ThisMode==="lexical")envRec.$ThisBindingStatus="lexical";else envRec.$ThisBindingStatus="uninitialized";let home=F.$HomeObject;envRec.$HomeObject=home;envRec.$NewTarget=newTarget;env.environmentRecord=envRec;env.parent=F.$Environment;return env}GetActiveScriptOrModule(realm){if(realm.contextStack.length===0)return null;let ec;for(let i=realm.contextStack.length-1;i>=0;i--){ec=realm.contextStack[i];let F=ec.function;if(F==null)continue;if(F.$ScriptOrModule instanceof
Object)return F.$ScriptOrModule}ec=realm.getRunningContext();(0,_invariant.default)(ec.ScriptOrModule!==null);return ec.ScriptOrModule}GetThisEnvironment(realm){let lex=realm.getRunningContext().lexicalEnvironment;while(true){let envRec=lex.environmentRecord;let exists=envRec.HasThisBinding();if(exists)return envRec;let outer=lex.parent;(0,_invariant.default)(outer);lex=outer}(0,_invariant.default)(false)}ResolveThisBinding(realm){let envRec=this.GetThisEnvironment(realm);return envRec.GetThisBinding()}BindingInitialization(realm,
node,value,strictCode,environment){if(node.type==="ArrayPattern"){let iterator=(0,_index2.GetIterator)(realm,value);let iteratorRecord={$Iterator:iterator,$Done:false};let result;try{result=this.IteratorBindingInitialization(realm,node.elements,iteratorRecord,strictCode,environment)}catch(error){if(iteratorRecord.$Done===false&&error instanceof _completions.AbruptCompletion)throw(0,_index2.IteratorClose)(realm,iterator,error);throw error;}if(iteratorRecord.$Done===false){let completion=(0,_index2.IteratorClose)(realm,
iterator,new _completions.SimpleNormalCompletion(realm.intrinsics.undefined));if(completion instanceof _completions.AbruptCompletion)throw completion;}return result}else if(node.type==="ObjectPattern"){(0,_index2.RequireObjectCoercible)(realm,value);let BindingPropertyList=[],BindingRestElement=null;for(let property of node.properties)if(property.type==="RestElement")BindingRestElement=property;else BindingPropertyList.push(property);if(!BindingRestElement){this.PropertyBindingInitialization(realm,
BindingPropertyList,value,strictCode,environment);return realm.intrinsics.empty}if(BindingPropertyList.length===0){let excludedNames=[];return this.RestBindingInitialization(realm,BindingRestElement,value,excludedNames,strictCode,environment)}else{let excludedNames=this.PropertyBindingInitialization(realm,BindingPropertyList,value,strictCode,environment);return this.RestBindingInitialization(realm,BindingRestElement,value,excludedNames,strictCode,environment)}}else if(node.type==="Identifier"){let name=
node.name;return this.InitializeBoundName(realm,name,value,environment)}else{(0,_invariant.default)(node.type==="VariableDeclaration");for(let decl of node.declarations)this.BindingInitialization(realm,decl.id,value,strictCode,environment)}}IteratorBindingInitialization(realm,formals,iteratorRecord,strictCode,environment){let env=environment?environment:realm.getRunningContext().lexicalEnvironment;let restEl;if(formals.length>0){let lastFormal=formals[formals.length-1];if(lastFormal!==null&&lastFormal.type===
"RestElement"){restEl=lastFormal;formals=formals.slice(0,-1)}}for(let param of formals){if(param===null){if(iteratorRecord.$Done===false){let next;try{next=(0,_index2.IteratorStep)(realm,iteratorRecord.$Iterator)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}if(next===false)iteratorRecord.$Done=true}continue}let Initializer;if(param.type==="AssignmentPattern"){Initializer=param.right;param=param.left}if(param.type==="Identifier"){let bindingId=param.name;
let lhs=this.ResolveBinding(realm,param.name,strictCode,environment);let v;if(iteratorRecord.$Done===false){let next;try{next=(0,_index2.IteratorStep)(realm,iteratorRecord.$Iterator)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}if(next===false){iteratorRecord.$Done=true;v=realm.intrinsics.undefined}else try{v=(0,_index2.IteratorValue)(realm,next)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}}else v=realm.intrinsics.undefined;
if(Initializer&&v instanceof _index.UndefinedValue){let defaultValue=env.evaluate(Initializer,strictCode);v=this.GetValue(realm,defaultValue);if((0,_index2.IsAnonymousFunctionDefinition)(realm,Initializer)&&v instanceof _index.ObjectValue){let hasNameProperty=(0,_index2.HasOwnProperty)(realm,v,"name");if(hasNameProperty===false)_singletons.Functions.SetFunctionName(realm,v,bindingId)}}if(!environment){_singletons.Properties.PutValue(realm,lhs,v);continue}this.InitializeReferencedBinding(realm,lhs,
v);continue}else{(0,_invariant.default)(param.type==="ObjectPattern"||param.type==="ArrayPattern");let v;if(iteratorRecord.$Done===false){let next;try{next=(0,_index2.IteratorStep)(realm,iteratorRecord.$Iterator)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}if(next===false){iteratorRecord.$Done=true;v=realm.intrinsics.undefined}else try{v=(0,_index2.IteratorValue)(realm,next)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;
throw e;}}else v=realm.intrinsics.undefined;if(Initializer&&v instanceof _index.UndefinedValue){let defaultValue=env.evaluate(Initializer,strictCode);v=this.GetValue(realm,defaultValue)}this.BindingInitialization(realm,param,v,strictCode,environment);continue}}if(restEl&&restEl.argument.type==="Identifier"){let lhs=this.ResolveBinding(realm,restEl.argument.name,strictCode,environment);let A=_singletons.Create.ArrayCreate(realm,0);let n=0;while(true){let next;if(iteratorRecord.$Done===false){try{next=
(0,_index2.IteratorStep)(realm,iteratorRecord.$Iterator)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}if(next===false)iteratorRecord.$Done=true}if(iteratorRecord.$Done===true){if(!environment){_singletons.Properties.PutValue(realm,lhs,A);break}this.InitializeReferencedBinding(realm,lhs,A);break}(0,_invariant.default)(next instanceof _index.ObjectValue);let nextValue;try{nextValue=(0,_index2.IteratorValue)(realm,next)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=
true;throw e;}let status=_singletons.Create.CreateDataProperty(realm,A,n.toString(),nextValue);(0,_invariant.default)(status,"expected to create data property");n+=1}}else if(restEl){(0,_invariant.default)(restEl.argument.type==="ArrayPattern"||restEl.argument.type==="ObjectPattern");let A=_singletons.Create.ArrayCreate(realm,0);let n=0;while(true){let next;if(iteratorRecord.$Done===false){try{next=(0,_index2.IteratorStep)(realm,iteratorRecord.$Iterator)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=
true;throw e;}if(next===false)iteratorRecord.$Done=true}if(iteratorRecord.$Done===true){this.BindingInitialization(realm,restEl.argument,A,strictCode,environment);break}(0,_invariant.default)(next instanceof _index.ObjectValue);let nextValue;try{nextValue=(0,_index2.IteratorValue)(realm,next)}catch(e){if(e instanceof _completions.AbruptCompletion)iteratorRecord.$Done=true;throw e;}let status=_singletons.Create.CreateDataProperty(realm,A,n.toString(),nextValue);(0,_invariant.default)(status,"expected to create data property");
n+=1}}}InitializeBoundName(realm,name,value,environment){(0,_invariant.default)(typeof name==="string","expected name to be a string");if(environment){let env=environment.environmentRecord;env.InitializeBinding(name,value);return realm.intrinsics.undefined}else{let lhs=this.ResolveBinding(realm,name,false);return _singletons.Properties.PutValue(realm,lhs,value)}}IsDestructuring(ast){switch(ast.type){case "VariableDeclaration":for(let decl of ast.declarations)switch(decl.type){case "VariableDeclarator":switch(decl.id.type){case "ArrayPattern":case "AssignmentPattern":case "ObjectPattern":return true;
default:break}break;default:break}return false;case "ArrayLiteral":case "ObjectLiteral":return true;case "ArrayPattern":case "ObjectPattern":return true;default:return false}}KeyedBindingInitialization(realm,node,value,strictCode,environment,propertyName){let env=environment?environment:realm.getRunningContext().lexicalEnvironment;let Initializer;if(node.type==="AssignmentPattern"){Initializer=node.right;node=node.left}if(node.type==="Identifier"){let bindingId=node.name;let lhs=this.ResolveBinding(realm,
bindingId,strictCode,environment);let v=(0,_index2.GetV)(realm,value,propertyName);if(Initializer&&v instanceof _index.UndefinedValue){let defaultValue=env.evaluate(Initializer,strictCode);v=this.GetValue(realm,defaultValue);if((0,_index2.IsAnonymousFunctionDefinition)(realm,Initializer)&&v instanceof _index.ObjectValue){let hasNameProperty=(0,_index2.HasOwnProperty)(realm,v,"name");if(hasNameProperty===false)_singletons.Functions.SetFunctionName(realm,v,bindingId)}}if(!environment)return _singletons.Properties.PutValue(realm,
lhs,v);return this.InitializeReferencedBinding(realm,lhs,v)}else if(node.type==="ObjectPattern"||node.type==="ArrayPattern"){let v=(0,_index2.GetV)(realm,value,propertyName);if(Initializer&&v instanceof _index.UndefinedValue){let defaultValue=env.evaluate(Initializer,strictCode);v=this.GetValue(realm,defaultValue)}return this.BindingInitialization(realm,node,v,strictCode,env)}}}exports.EnvironmentImplementation=EnvironmentImplementation},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.FunctionImplementation=void 0;var _errors=__webpack_require__(3);var _completions=__webpack_require__(18);var _environment=__webpack_require__(20);var _index=__webpack_require__(10);var _call=__webpack_require__(234);var _abstract=__webpack_require__(233);var _construct=__webpack_require__(228);var _index2=__webpack_require__(232);var _iterator=__webpack_require__(272);var _ObjectExpression=__webpack_require__(275);var _singletons=__webpack_require__(236);var _traverseFast=
_interopRequireDefault(__webpack_require__(279));var _invariant=_interopRequireDefault(__webpack_require__(9));var _parse=_interopRequireDefault(__webpack_require__(227));var _strict=_interopRequireDefault(__webpack_require__(452));var t=_interopRequireWildcard(__webpack_require__(21));var _descriptors=__webpack_require__(268);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=
Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function InternalCall(realm,F,thisArgument,argsList,tracerIndex){realm.startCall();try{(0,_invariant.default)(F instanceof _index.FunctionValue,"expected function value");while(tracerIndex<realm.tracers.length){let tracer=
realm.tracers[tracerIndex];let nextIndex=++tracerIndex;let detourResult=tracer.detourCall(F,thisArgument,argsList,undefined,()=>InternalCall(realm,F,thisArgument,argsList,nextIndex));if(detourResult instanceof _index.Value)return detourResult}if(F.$FunctionKind==="classConstructor")throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not callable");let callerContext=realm.getRunningContext();let calleeContext=(0,_call.PrepareForOrdinaryCall)(realm,F,undefined);let calleeEnv=calleeContext.lexicalEnvironment;
let result;try{for(let t1 of realm.tracers)t1.beforeCall(F,thisArgument,argsList,undefined);(0,_invariant.default)(realm.getRunningContext()===calleeContext,"calleeContext should be current execution context");(0,_call.OrdinaryCallBindThis)(realm,F,calleeContext,thisArgument);result=(0,_call.OrdinaryCallEvaluateBody)(realm,F,argsList)}finally{realm.popContext(calleeContext);realm.onDestroyScope(calleeContext.lexicalEnvironment);if(calleeContext.lexicalEnvironment!==calleeEnv)realm.onDestroyScope(calleeEnv);
(0,_invariant.default)(realm.getRunningContext()===callerContext);for(let t2 of realm.tracers)t2.afterCall(F,thisArgument,argsList,undefined,result)}if(result instanceof _completions.ReturnCompletion)return result.value;if(result instanceof _completions.AbruptCompletion)throw result;return realm.intrinsics.undefined}finally{realm.endCall()}}function $BoundCall(realm,F,thisArgument,argumentsList){let target=F.$BoundTargetFunction;let boundThis=F.$BoundThis;let boundArgs=F.$BoundArguments;let args=
boundArgs.concat(argumentsList);return(0,_call.Call)(realm,target,boundThis,args)}function $BoundConstruct(realm,F,argumentsList,newTarget){let target=F.$BoundTargetFunction;(0,_invariant.default)(target.$Construct!==undefined,"doesn't have a construct internal method");let boundArgs=F.$BoundArguments;let args=boundArgs.concat(argumentsList);if((0,_abstract.SameValue)(realm,F,newTarget))newTarget=target;return(0,_construct.Construct)(realm,target,args,newTarget)}function InternalConstruct(realm,F,
argumentsList,newTarget,thisArgument,tracerIndex){realm.startCall();try{(0,_invariant.default)(F instanceof _index.FunctionValue,"expected function");(0,_invariant.default)(newTarget instanceof _index.ObjectValue,"expected object");if(!realm.hasRunningContext()){(0,_invariant.default)(realm.useAbstractInterpretation);throw new _errors.FatalError("no running context");}let callerContext=realm.getRunningContext();let kind=F.$ConstructorKind;if(thisArgument===undefined&&kind==="base")thisArgument=_singletons.Create.OrdinaryCreateFromConstructor(realm,
newTarget,"ObjectPrototype");while(tracerIndex<realm.tracers.length){let tracer=realm.tracers[tracerIndex];let nextIndex=++tracerIndex;let detourResult=tracer.detourCall(F,thisArgument,argumentsList,newTarget,()=>InternalConstruct(realm,F,argumentsList,newTarget,thisArgument,nextIndex));if(detourResult instanceof _index.ObjectValue)return detourResult;(0,_invariant.default)(detourResult===undefined)}let calleeContext=(0,_call.PrepareForOrdinaryCall)(realm,F,newTarget);let calleeEnv=calleeContext.lexicalEnvironment;
(0,_invariant.default)(realm.getRunningContext()===calleeContext,"expected calleeContext to be running context");let result,envRec;try{for(let t1 of realm.tracers)t1.beforeCall(F,thisArgument,argumentsList,newTarget);if(kind==="base"){(0,_invariant.default)(thisArgument,"this wasn't initialized for some reason");(0,_call.OrdinaryCallBindThis)(realm,F,calleeContext,thisArgument)}let constructorEnv=calleeContext.lexicalEnvironment;envRec=constructorEnv.environmentRecord;result=(0,_call.OrdinaryCallEvaluateBody)(realm,
F,argumentsList)}finally{realm.popContext(calleeContext);realm.onDestroyScope(calleeContext.lexicalEnvironment);if(calleeContext.lexicalEnvironment!==calleeEnv)realm.onDestroyScope(calleeEnv);(0,_invariant.default)(realm.getRunningContext()===callerContext);for(let t2 of realm.tracers)t2.afterCall(F,thisArgument,argumentsList,newTarget,result)}if(result instanceof _completions.ReturnCompletion){const v=map(result.value);(0,_invariant.default)(v instanceof _index.ObjectValue||v instanceof _index.AbstractObjectValue);
return v;function map(value){if(value===realm.intrinsics.__bottomValue)return value;if(value instanceof _index.AbstractValue){if(value.kind==="conditional"){const [condition,consequent,alternate]=value.args;return realm.evaluateWithAbstractConditional(condition,()=>realm.evaluateForEffects(()=>map(consequent),undefined,"AbstractValue/conditional/true"),()=>realm.evaluateForEffects(()=>map(alternate),undefined,"AbstractValue/conditional/false"))}if(!(value instanceof _index.AbstractObjectValue))if(kind===
"base"){(0,_invariant.default)(thisArgument,"this wasn't initialized for some reason");return _index.AbstractValue.createFromTemplate(realm,"typeof A === 'object' || typeof A === 'function' ? A : B",_index.ObjectValue,[value,thisArgument])}else value.throwIfNotConcreteObject()}if(value instanceof _index.ObjectValue||value instanceof _index.AbstractObjectValue)return value;if(kind==="base"){(0,_invariant.default)(thisArgument,"this wasn't initialized for some reason");return thisArgument}if(!value.mightBeUndefined())throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"constructor must return Object");value.throwIfNotConcrete();let envRecThisBinding=envRec.GetThisBinding();(0,_invariant.default)(envRecThisBinding instanceof _index.ObjectValue);return envRecThisBinding}}else if(result instanceof _completions.AbruptCompletion)throw result;let envRecThisBinding=envRec.GetThisBinding();(0,_invariant.default)(envRecThisBinding instanceof _index.ObjectValue);return envRecThisBinding}finally{realm.endCall()}}class FunctionImplementation{FindVarScopedDeclarations(ast_node){function FindVarScopedDeclarationsFor(ast,
level){let statements=[];switch(ast.type){case "Program":statements=ast.body;break;case "BlockStatement":statements=ast.body;break;case "DoWhileStatement":statements=[ast.body];break;case "WhileStatement":statements=[ast.body];break;case "IfStatement":let astIfStatement=ast;statements=[astIfStatement.consequent,astIfStatement.alternate];break;case "ForStatement":let astForStatement=ast;statements=[astForStatement.init,astForStatement.body];break;case "ForInStatement":let astForInStatement=ast;statements=
[astForInStatement.left,astForInStatement.body];break;case "ForOfStatement":let astForOfStatement=ast;statements=[astForOfStatement.left,astForOfStatement.body];break;case "LabeledStatement":statements=[ast.body];break;case "WithStatement":statements=[ast.body];break;case "SwitchStatement":for(let switchCase of ast.cases)statements.push(...switchCase.consequent);break;case "TryStatement":let astTryStatement=ast;statements=[astTryStatement.block];if(astTryStatement.finalizer)statements.push(astTryStatement.finalizer);
if(astTryStatement.handler)statements.push(astTryStatement.handler.body);break;case "VariableDeclaration":return ast.kind==="var"?[ast]:[];case "FunctionDeclaration":return level<2?[ast]:[];default:return[]}let decls=[];for(let statement of statements)if(statement)decls=decls.concat(FindVarScopedDeclarationsFor(statement,level+1));return decls}return FindVarScopedDeclarationsFor(ast_node,0)}FunctionDeclarationInstantiation(realm,func,argumentsList){let calleeContext=realm.getRunningContext();let env=
calleeContext.lexicalEnvironment;let envRec=env.environmentRecord;let code=func.$ECMAScriptCode;(0,_invariant.default)(code!==undefined);let strict=func.$Strict;let formals=func.$FormalParameters;(0,_invariant.default)(formals!==undefined);let parameterNames=Object.create(null);for(let param of formals){let paramBindings=t.getBindingIdentifiers(param,true);for(let name in paramBindings)parameterNames[name]=(parameterNames[name]||[]).concat(paramBindings[name])}let hasDuplicates=false;for(let name in parameterNames){let identifiers=
parameterNames[name];if(identifiers.length>1)hasDuplicates=true}parameterNames=Object.keys(parameterNames);let simpleParameterList=true;for(let param of formals)if(param.type!=="Identifier"){simpleParameterList=false;break}let hasParameterExpressions=false;(0,_invariant.default)(formals!==undefined);for(let param of formals)if(_singletons.Environment.ContainsExpression(realm,param)){hasParameterExpressions=true;break}let varNames=[];(0,_traverseFast.default)(code,(node)=>{if(node.type==="VariableDeclaration"&&
node.kind==="var")varNames=varNames.concat(Object.keys(t.getBindingIdentifiers(node)));if(node.type==="FunctionExpression"||node.type==="FunctionDeclaration")return true;return false});let varDeclarations=this.FindVarScopedDeclarations(code);let lexicalNames=[];let functionNames=[];let functionsToInitialize=[];for(let d of varDeclarations.reverse())if(d.type!=="VariableDeclaration"){(0,_invariant.default)(d.type==="FunctionDeclaration"||d.type==="GeneratorDeclaration");let fn=_singletons.Environment.BoundNames(realm,
d)[0];if(functionNames.indexOf(fn)<0){functionNames.unshift(fn);functionsToInitialize.unshift(d)}}let argumentsObjectNeeded=true;if(func.$ThisMode==="lexical")argumentsObjectNeeded=false;else if(parameterNames.indexOf("arguments")>=0)argumentsObjectNeeded=false;else if(hasParameterExpressions===false)if(functionNames.indexOf("arguments")>=0||lexicalNames.indexOf("arguments")>=0)argumentsObjectNeeded=true;for(let paramName of parameterNames){let alreadyDeclared=envRec.HasBinding(paramName);if(alreadyDeclared===
false){envRec.CreateMutableBinding(paramName,false);if(hasDuplicates===true)envRec.InitializeBinding(paramName,realm.intrinsics.undefined)}}if(argumentsObjectNeeded===true){let ao;if(strict===true||simpleParameterList===false)ao=_singletons.Create.CreateUnmappedArgumentsObject(realm,argumentsList);else{(0,_invariant.default)(formals!==undefined);ao=_singletons.Create.CreateMappedArgumentsObject(realm,func,formals,argumentsList,envRec)}if(strict===true)envRec.CreateImmutableBinding("arguments",false);
else envRec.CreateMutableBinding("arguments",false);envRec.InitializeBinding("arguments",ao);parameterNames.push("arguments")}let iteratorRecord={$Iterator:(0,_iterator.CreateListIterator)(realm,argumentsList),$Done:false};if(hasDuplicates===true){(0,_invariant.default)(formals!==undefined);_singletons.Environment.IteratorBindingInitialization(realm,formals,iteratorRecord,strict)}else{(0,_invariant.default)(formals!==undefined);_singletons.Environment.IteratorBindingInitialization(realm,formals,iteratorRecord,
strict,env)}let varEnv,varEnvRec;if(hasParameterExpressions===false){let instantiatedVarNames=parameterNames.slice();for(let n of varNames)if(instantiatedVarNames.indexOf(n)<0){instantiatedVarNames.push(n);envRec.CreateMutableBinding(n,false);envRec.InitializeBinding(n,realm.intrinsics.undefined)}varEnv=env;varEnvRec=envRec}else{varEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,env);realm.activeLexicalEnvironments.delete(varEnv);varEnvRec=varEnv.environmentRecord;calleeContext.variableEnvironment=
varEnv;let instantiatedVarNames=[];for(let n of varNames)if(instantiatedVarNames.indexOf(n)<0){instantiatedVarNames.push(n);varEnvRec.CreateMutableBinding(n,false);let initialValue;if(parameterNames.indexOf(n)<0||functionNames.indexOf(n)<0)initialValue=realm.intrinsics.undefined;else initialValue=envRec.GetBindingValue(n,false);varEnvRec.InitializeBinding(n,initialValue)}}let lexEnv;if(strict===false)lexEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,varEnv);else{lexEnv=varEnv;realm.activeLexicalEnvironments.add(varEnv)}let lexEnvRec=
lexEnv.environmentRecord;calleeContext.lexicalEnvironment=lexEnv;let lexDeclarations=[];for(let d of lexDeclarations)for(let dn of _singletons.Environment.BoundNames(realm,d))if(d.kind==="const")lexEnvRec.CreateImmutableBinding(dn,true);else lexEnvRec.CreateMutableBinding(dn,false);for(let f of functionsToInitialize){let fn=_singletons.Environment.BoundNames(realm,f)[0];let fo=lexEnv.evaluate(f,strict);(0,_invariant.default)(fo instanceof _index.Value);varEnvRec.SetMutableBinding(fn,fo,false)}return realm.intrinsics.empty}SetFunctionName(realm,
F,_name,prefix){(0,_invariant.default)(F.getExtensible(),"expected object to be extensible and not have a name property");(0,_invariant.default)(typeof _name==="string"||_name instanceof _index.StringValue||_name instanceof _index.SymbolValue||_name instanceof _index.AbstractValue,"expected name to be a string or symbol");let name=typeof _name==="string"?new _index.StringValue(realm,_name):_name;(0,_invariant.default)(prefix===undefined||typeof prefix==="string","expected prefix to be a string if passed");
if(name instanceof _index.SymbolValue){let description=name.$Description;if(description===undefined)name=realm.intrinsics.emptyString;else{(0,_invariant.default)(description instanceof _index.Value);name=new _index.StringValue(realm,`[${description.throwIfNotConcreteString().value}]`)}}if(prefix)if(name instanceof _index.AbstractValue){let prefixVal=new _index.StringValue(realm,prefix+" ");name=_index.AbstractValue.createFromBinaryOp(realm,"+",prefixVal,name,name.expressionLocation)}else name=new _index.StringValue(realm,
`${prefix} ${name.value}`);return _singletons.Properties.DefinePropertyOrThrow(realm,F,"name",new _descriptors.PropertyDescriptor({value:name,enumerable:false,writable:false,configurable:true}))}FunctionInitialize(realm,F,kind,ParameterList,Body,Scope){realm.markVisibleLocalBindingsAsPotentiallyCaptured();(0,_invariant.default)(realm.isNewObject(F));(0,_invariant.default)(F.getExtensible(),"expected to be extensible and no length property");let len=0;for(let FormalParameter of ParameterList){if(FormalParameter.type===
"AssignmentPattern")break;len+=1}_singletons.Properties.DefinePropertyOrThrow(realm,F,"length",new _descriptors.PropertyDescriptor({value:new _index.NumberValue(realm,len),writable:false,enumerable:false,configurable:true}));let Strict=F.$Strict;if(!Strict)_singletons.Properties.DefinePropertyOrThrow(realm,F,"caller",new _descriptors.PropertyDescriptor({value:new _index.UndefinedValue(realm),writable:true,enumerable:false,configurable:true}));F.$Environment=Scope;F.initialize(ParameterList,Body);
F.$ScriptOrModule=_singletons.Environment.GetActiveScriptOrModule(realm);if(kind==="arrow")F.$ThisMode="lexical";else if(Strict===true)F.$ThisMode="strict";else F.$ThisMode="global";return F}GeneratorFunctionCreate(realm,kind,ParameterList,Body,Scope,Strict){let functionPrototype=realm.intrinsics.Generator;let F=this.FunctionAllocate(realm,functionPrototype,Strict,"generator");return this.FunctionInitialize(realm,F,kind,ParameterList,Body,Scope)}AddRestrictedFunctionProperties(F,realm){let thrower=
realm.intrinsics.ThrowTypeError;(0,_invariant.default)(thrower);let desc=new _descriptors.PropertyDescriptor({get:thrower,set:thrower,enumerable:false,configurable:true});_singletons.Properties.DefinePropertyOrThrow(realm,F,"caller",desc);return _singletons.Properties.DefinePropertyOrThrow(realm,F,"arguments",desc)}$Call(realm,F,thisArgument,argsList){return InternalCall(realm,F,thisArgument,argsList,0)}$Construct(realm,F,argumentsList,newTarget){return InternalConstruct(realm,F,argumentsList,newTarget,
undefined,0)}FunctionAllocate(realm,functionPrototype,strict,functionKind){(0,_invariant.default)(functionPrototype instanceof _index.ObjectValue,"expected functionPrototype to be an object");(0,_invariant.default)(functionKind==="normal"||functionKind==="non-constructor"||functionKind==="generator","invalid functionKind");let needsConstruct;if(functionKind==="normal")needsConstruct=true;else needsConstruct=false;if(functionKind==="non-constructor")functionKind="normal";let F=new _index.ECMAScriptSourceFunctionValue(realm);
F.$Call=(thisArgument,argsList)=>{return this.$Call(realm,F,thisArgument,argsList)};if(needsConstruct===true){F.$Construct=(argumentsList,newTarget)=>{return this.$Construct(realm,F,argumentsList,newTarget)};F.$ConstructorKind="base"}F.$Strict=strict;F.$FunctionKind=functionKind;F.$Prototype=functionPrototype;F.setExtensible(true);F.$Realm=realm;return F}BoundFunctionCreate(realm,targetFunction,boundThis,boundArgs){(0,_invariant.default)(targetFunction instanceof _index.ObjectValue,"expected an object");
let proto=targetFunction.$GetPrototypeOf();let obj=new _index.BoundFunctionValue(realm);obj.$Call=(thisArgument,argsList)=>{return $BoundCall(realm,obj,thisArgument,argsList)};if(targetFunction.$Construct)obj.$Construct=(thisArgument,argsList)=>{return $BoundConstruct(realm,obj,thisArgument,argsList)};obj.$Prototype=proto;obj.setExtensible(true);obj.$BoundTargetFunction=targetFunction;obj.$BoundThis=boundThis;obj.$BoundArguments=boundArgs;return obj}PerformEval(realm,x,evalRealm,strictCaller,direct){if(direct===
false)(0,_invariant.default)(strictCaller===false,"strictCaller is only allowed on direct eval");if(!(x instanceof _index.StringValue))return x;let ast=(0,_parse.default)(realm,x.value,"eval","script");let script=ast.program;if(!script.body)return realm.intrinsics.undefined;let body=t.blockStatement(script.body,script.directives);let strictEval;if(strictCaller)strictEval=true;else strictEval=(0,_strict.default)(script);let ctx=realm.getRunningContext();let lexEnv,varEnv;if(direct){lexEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,
ctx.lexicalEnvironment);varEnv=ctx.variableEnvironment}else{lexEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,evalRealm.$GlobalEnv);varEnv=evalRealm.$GlobalEnv}if(strictEval)varEnv=lexEnv;ctx.suspend();let evalCxt=realm.createExecutionContext();evalCxt.isStrict=strictEval;evalCxt.setFunction(null);evalCxt.setRealm(evalRealm);evalCxt.ScriptOrModule=ctx.ScriptOrModule;evalCxt.variableEnvironment=varEnv;evalCxt.lexicalEnvironment=lexEnv;realm.pushContext(evalCxt);let result;try{(0,_invariant.default)(varEnv);
try{result=this.EvalDeclarationInstantiation(realm,body,varEnv,lexEnv,strictEval)}catch(e){if(e instanceof _completions.AbruptCompletion)result=e;else throw e;}(0,_invariant.default)(result instanceof _index.Value||result instanceof _completions.AbruptCompletion);if(result instanceof _index.Value){if(script.directives)for(let directive of script.directives)result=new _index.StringValue(realm,directive.value.value);result=this.EvaluateStatements(script.body,result,strictEval,lexEnv,realm)}if(result instanceof
_index.EmptyValue)result=realm.intrinsics.undefined}finally{evalCxt.suspend();realm.popContext(evalCxt);realm.onDestroyScope(evalCxt.lexicalEnvironment)}(0,_invariant.default)(realm.getRunningContext()===ctx);ctx.resume();if(result instanceof _index.Value)return result;else{(0,_invariant.default)(result instanceof _completions.AbruptCompletion);throw result;}}incorporateSavedCompletion(realm,c){let savedCompletion=realm.savedCompletion;if(savedCompletion!==undefined){realm.savedCompletion=undefined;
realm.pathConditions=savedCompletion.pathConditionsAtCreation;if(c===undefined)c=realm.intrinsics.empty;if(c instanceof _index.Value)c=new _completions.SimpleNormalCompletion(c);if(savedCompletion instanceof _completions.JoinedNormalAndAbruptCompletions){let subsequentEffects=realm.getCapturedEffects(c);realm.stopEffectCaptureAndUndoEffects(savedCompletion);let joinedEffects=_singletons.Join.composeWithEffects(savedCompletion,subsequentEffects);realm.applyEffects(joinedEffects);realm.savedCompletion=
savedCompletion.composedWith;if(realm.savedCompletion!==undefined)return this.incorporateSavedCompletion(realm,joinedEffects.result);return joinedEffects.result}return _singletons.Join.composeCompletions(savedCompletion,c)}return c}EvaluateStatements(body,initialBlockValue,strictCode,blockEnv,realm){let blockValue=initialBlockValue;for(let node of body)if(node.type!=="FunctionDeclaration"){let res=blockEnv.evaluateCompletionDeref(node,strictCode);if(!(res instanceof _index.EmptyValue)){if(res instanceof
_completions.AbruptCompletion)throw(0,_index2.UpdateEmpty)(realm,res,blockValue||realm.intrinsics.empty);(0,_invariant.default)(res instanceof _index.Value);blockValue=res}}return blockValue||realm.intrinsics.empty}FunctionCreate(realm,kind,ParameterList,Body,Scope,Strict,prototype){if(!prototype)prototype=realm.intrinsics.FunctionPrototype;let allocKind;if(kind!=="normal")allocKind="non-constructor";else allocKind="normal";let F=this.FunctionAllocate(realm,prototype,Strict,allocKind);if(!Strict&&
kind==="normal")_singletons.Properties.DefinePropertyOrThrow(realm,F,"arguments",new _descriptors.PropertyDescriptor({value:realm.intrinsics.undefined,enumerable:false,writable:true,configurable:true}));let result=this.FunctionInitialize(realm,F,kind,ParameterList,Body,Scope);(0,_invariant.default)(F.pathConditionDuringDeclaration===undefined,"Function should only have one declaration site");F.pathConditionDuringDeclaration=realm.pathConditions.isEmpty()?undefined:realm.pathConditions;if(F.pathConditionDuringDeclaration)(0,
_invariant.default)(F.pathConditionDuringDeclaration.isReadOnly());return result}EvalDeclarationInstantiation(realm,body,varEnv,lexEnv,strict){let varNames=[];(0,_traverseFast.default)(body,(node)=>{if(node.type==="VariableDeclaration"&&node.kind==="var")varNames=varNames.concat(Object.keys(t.getBindingIdentifiers(node)));if(node.type==="FunctionExpression"||node.type==="FunctionDeclaration")return true;return false});let varDeclarations=this.FindVarScopedDeclarations(body);let lexEnvRec=lexEnv.environmentRecord;
let varEnvRec=varEnv.environmentRecord;if(!strict){if(varEnvRec instanceof _environment.GlobalEnvironmentRecord)for(let name of varNames)if(varEnvRec.HasLexicalDeclaration(name))throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,new _index.StringValue(realm,name+" global object is restricted"));let thisLex=lexEnv;while(thisLex!==varEnv){let thisEnvRec=thisLex.environmentRecord;if(!(thisEnvRec instanceof _environment.ObjectEnvironmentRecord))for(let name of varNames)if(thisEnvRec.HasBinding(name))throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,
name+" global object is restricted");thisLex=thisLex.parent;(0,_invariant.default)(thisLex!==null)}}let functionsToInitialize=[];let declaredFunctionNames=[];for(let d of varDeclarations.reverse())if(d.type!=="VariableDeclaration"){(0,_invariant.default)(d.type==="FunctionDeclaration"||d.type==="GeneratorDeclaration");let fn=_singletons.Environment.BoundNames(realm,d)[0];if(declaredFunctionNames.indexOf(fn)<0){if(varEnvRec instanceof _environment.GlobalEnvironmentRecord){let fnDefinable=varEnvRec.CanDeclareGlobalFunction(fn);
if(!fnDefinable)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,fn+" is not definable");}declaredFunctionNames.push(fn);functionsToInitialize.unshift(d)}}let declaredVarNames=[];for(let d of varDeclarations)if(d.type==="VariableDeclaration")for(let vn of _singletons.Environment.BoundNames(realm,d))if(declaredFunctionNames.indexOf(vn)<0){if(varEnvRec instanceof _environment.GlobalEnvironmentRecord){let vnDefinable=varEnvRec.CanDeclareGlobalVar(vn);if(!vnDefinable)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
vn+" is not definable");}if(declaredVarNames.indexOf(vn)<0)declaredVarNames.push(vn)}let lexDeclarations=[];for(let s of body.body)if(s.type==="VariableDeclaration"&&s.kind!=="var")lexDeclarations.push(s);for(let d of lexDeclarations)for(let dn of _singletons.Environment.BoundNames(realm,d))if(d.kind==="const")lexEnvRec.CreateImmutableBinding(dn,true);else lexEnvRec.CreateMutableBinding(dn,false);for(let f of functionsToInitialize){let fn=_singletons.Environment.BoundNames(realm,f)[0];let fo=lexEnv.evaluate(f,
strict);(0,_invariant.default)(fo instanceof _index.Value);if(varEnvRec instanceof _environment.GlobalEnvironmentRecord)varEnvRec.CreateGlobalFunctionBinding(fn,fo,true);else{let bindingExists=varEnvRec.HasBinding(fn);if(!bindingExists){varEnvRec.CreateMutableBinding(fn,true);varEnvRec.InitializeBinding(fn,fo)}else varEnvRec.SetMutableBinding(fn,fo,false)}}for(let vn of declaredVarNames)if(varEnvRec instanceof _environment.GlobalEnvironmentRecord)varEnvRec.CreateGlobalVarBinding(vn,true);else{let bindingExists=
varEnvRec.HasBinding(vn);if(!bindingExists){varEnvRec.CreateMutableBinding(vn,true);varEnvRec.InitializeBinding(vn,realm.intrinsics.undefined)}}return realm.intrinsics.empty}MakeMethod(realm,F,homeObject){(0,_invariant.default)(realm.isNewObject(F));(0,_invariant.default)(F instanceof _index.ECMAScriptSourceFunctionValue,"F is an ECMAScript function object.");(0,_invariant.default)(homeObject instanceof _index.ObjectValue,"Type(homeObject) is Object.");F.$HomeObject=homeObject;return realm.intrinsics.undefined}DefineMethod(realm,
prop,obj,env,strictCode,functionPrototype){let propKey=(0,_ObjectExpression.EvalPropertyName)(prop,env,realm,strictCode);let strict=strictCode||(0,_strict.default)(prop.body);let scope=env;let kind;if(functionPrototype)kind="normal";else kind="method";let closure=this.FunctionCreate(realm,kind,prop.params,prop.body,scope,strict,functionPrototype);this.MakeMethod(realm,closure,obj);return{$Key:propKey,$Closure:closure}}}exports.FunctionImplementation=FunctionImplementation},function(module,exports,
__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.MaterializeImplementation=exports.LeakImplementation=void 0;var _errors=__webpack_require__(3);var _environment=__webpack_require__(20);var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var t=_interopRequireWildcard(__webpack_require__(21));var _traverse=_interopRequireDefault(__webpack_require__(293));var _invariant=_interopRequireDefault(__webpack_require__(9));var _HeapInspector=__webpack_require__(426);
var _logger=__webpack_require__(412);var _utils=__webpack_require__(291);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,
key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function visitName(path,state,name,read,write){if(path.scope.hasBinding(name,true))return;if(read)state.unboundReads.add(name);if(write)state.unboundWrites.add(name)}function ignorePath(path){let parent=path.parent;return t.isLabeledStatement(parent)||t.isBreakStatement(parent)||t.isContinueStatement(parent)}let LeakedClosureRefVisitor={ReferencedIdentifier(path,state){if(ignorePath(path))return;let innerName=path.node.name;if(innerName===
"arguments")return;visitName(path,state,innerName,true,false)},["AssignmentExpression|UpdateExpression"](path,state){let doesRead=path.node.operator!=="=";for(let name in path.getBindingIdentifiers())visitName(path,state,name,doesRead,true)}};function getLeakedFunctionInfo(value){(0,_invariant.default)(value instanceof _index.ECMAScriptSourceFunctionValue);(0,_invariant.default)(value.constructor===_index.ECMAScriptSourceFunctionValue);let functionInfo={unboundReads:new Set,unboundWrites:new Set};
let formalParameters=value.$FormalParameters;(0,_invariant.default)(formalParameters!=null);let code=value.$ECMAScriptCode;(0,_invariant.default)(code!=null);(0,_traverse.default)(t.file(t.program([t.expressionStatement(t.functionExpression(null,formalParameters,code))])),LeakedClosureRefVisitor,null,functionInfo);_traverse.default.cache.clear();return functionInfo}function materializeObject(realm,object,getCachingHeapInspector){let generator=realm.generator;if(object.symbols.size>0)throw new _errors.FatalError("TODO: Support havocing objects with symbols");
if(object.unknownProperty!==undefined);let getHeapInspector=getCachingHeapInspector||(()=>new _HeapInspector.HeapInspector(realm,new _logger.Logger(realm,false)));for(let [name,propertyBinding]of object.properties){if(getHeapInspector().canIgnoreProperty(object,name))continue;let descriptor=propertyBinding.descriptor;if(descriptor===undefined){if(generator!==undefined)generator.emitPropertyDelete(object,name)}else{(0,_invariant.default)(descriptor instanceof _descriptors.PropertyDescriptor);let value=
descriptor.value;(0,_invariant.default)(value===undefined||value instanceof _index.Value,"cannot be an array because we are not dealing with intrinsics here");if(value===undefined);else{(0,_invariant.default)(value instanceof _index.Value);if(value instanceof _index.EmptyValue){if(generator!==undefined)generator.emitPropertyDelete(object,name)}else if(generator!==undefined){let targetDescriptor=getHeapInspector().getTargetIntegrityDescriptor(object);if(!(0,_utils.isReactElement)(object))if(descriptor.writable!==
targetDescriptor.writable||descriptor.configurable!==targetDescriptor.configurable)generator.emitDefineProperty(object,name,descriptor);else generator.emitPropertyAssignment(object,name,value)}}}}}class ObjectValueLeakingVisitor{constructor(realm,objectsTrackedForLeaks){this.realm=realm;this.objectsTrackedForLeaks=objectsTrackedForLeaks;this.visitedValues=new Set}mustVisit(val){if(val instanceof _index.ObjectValue)if(!this.objectsTrackedForLeaks.has(val))return false;if(this.visitedValues.has(val))return false;
this.visitedValues.add(val);return true}visitObjectProperty(binding){let desc=binding.descriptor;if(desc===undefined)return;this.visitDescriptor(desc)}visitObjectProperties(obj,kind){for(let [,propertyBindingValue]of obj.symbols){(0,_invariant.default)(propertyBindingValue);this.visitObjectProperty(propertyBindingValue)}for(let [,propertyBindingValue]of obj.properties){(0,_invariant.default)(propertyBindingValue);this.visitObjectProperty(propertyBindingValue)}if(obj.unknownProperty!==undefined){let desc=
obj.unknownProperty.descriptor;this.visitObjectPropertiesWithComputedNamesDescriptor(desc)}this.visitObjectPrototype(obj);if((0,_index2.TestIntegrityLevel)(this.realm,obj,"frozen"))return;if(obj.mightNotBeLeakedObject()){obj.leak();let makeAndCacheHeapInspector=()=>{let heapInspector=this._heapInspector;if(heapInspector!==undefined)return heapInspector;else{heapInspector=new _HeapInspector.HeapInspector(this.realm,new _logger.Logger(this.realm,false));this._heapInspector=heapInspector;return heapInspector}};
(0,_invariant.default)(this.realm.generator!==undefined);materializeObject(this.realm,obj,makeAndCacheHeapInspector)}}visitObjectPrototype(obj){let proto=obj.$Prototype;this.visitValue(proto)}visitObjectPropertiesWithComputedNamesDescriptor(desc){if(desc!==undefined)if(desc instanceof _descriptors.PropertyDescriptor){let val=desc.value;(0,_invariant.default)(val instanceof _index.AbstractValue);this.visitObjectPropertiesWithComputedNames(val)}else if(desc instanceof _descriptors.AbstractJoinedDescriptor){this.visitValue(desc.joinCondition);
this.visitObjectPropertiesWithComputedNamesDescriptor(desc.descriptor1);this.visitObjectPropertiesWithComputedNamesDescriptor(desc.descriptor2)}else(0,_invariant.default)(false,"unknown descriptor")}visitObjectPropertiesWithComputedNames(absVal){if(absVal.kind==="widened property")return;if(absVal.kind==="template for prototype member expression")return;if(absVal.kind==="conditional"){let cond=absVal.args[0];(0,_invariant.default)(cond instanceof _index.AbstractValue);if(cond.kind==="template for property name condition"){let P=
cond.args[0];(0,_invariant.default)(P instanceof _index.AbstractValue);let V=absVal.args[1];let earlier_props=absVal.args[2];if(earlier_props instanceof _index.AbstractValue)this.visitObjectPropertiesWithComputedNames(earlier_props);this.visitValue(P);this.visitValue(V)}else{this.visitValue(cond);let consequent=absVal.args[1];if(consequent instanceof _index.AbstractValue)this.visitObjectPropertiesWithComputedNames(consequent);let alternate=absVal.args[2];if(alternate instanceof _index.AbstractValue)this.visitObjectPropertiesWithComputedNames(alternate)}}else this.visitValue(absVal)}visitDescriptor(desc){if(desc===
undefined);else if(desc instanceof _descriptors.PropertyDescriptor){if(desc.value!==undefined)this.visitValue(desc.value);if(desc.get!==undefined)this.visitValue(desc.get);if(desc.set!==undefined)this.visitValue(desc.set)}else if(desc instanceof _descriptors.AbstractJoinedDescriptor){this.visitValue(desc.joinCondition);if(desc.descriptor1!==undefined)this.visitDescriptor(desc.descriptor1);if(desc.descriptor2!==undefined)this.visitDescriptor(desc.descriptor2)}else(0,_invariant.default)(false,"unknown descriptor")}visitDeclarativeEnvironmentRecordBinding(record,
remainingLeakedBindings){let bindings=record.bindings;for(let bindingName of Object.keys(bindings)){let binding=bindings[bindingName];let isRead=remainingLeakedBindings.unboundReads.delete(bindingName);let isWritten=remainingLeakedBindings.unboundWrites.delete(bindingName);if(isRead){let value=binding.value;if(value)this.visitValue(value)}if(isWritten||isRead)(0,_environment.leakBinding)(binding)}}visitValueMap(val){let kind=val.getKind();let entries;if(kind==="Map")entries=val.$MapData;else{(0,_invariant.default)(kind===
"WeakMap");entries=val.$WeakMapData}(0,_invariant.default)(entries!==undefined);let len=entries.length;for(let i=0;i<len;i++){let entry=entries[i];let key=entry.$Key;let value=entry.$Value;if(key===undefined||value===undefined)continue;this.visitValue(key);this.visitValue(value)}}visitValueSet(val){let kind=val.getKind();let entries;if(kind==="Set")entries=val.$SetData;else{(0,_invariant.default)(kind==="WeakSet");entries=val.$WeakSetData}(0,_invariant.default)(entries!==undefined);let len=entries.length;
for(let i=0;i<len;i++){let entry=entries[i];if(entry===undefined)continue;this.visitValue(entry)}}visitValueFunction(val){if(!val.mightNotBeLeakedObject())return;this.visitObjectProperties(val);if(val instanceof _index.BoundFunctionValue){this.visitValue(val.$BoundTargetFunction);this.visitValue(val.$BoundThis);for(let boundArg of val.$BoundArguments)this.visitValue(boundArg);return}(0,_invariant.default)(!(val instanceof _index.NativeFunctionValue),"all native function values should have already been created outside this pure function");
let remainingLeakedBindings=getLeakedFunctionInfo(val);let environment=val.$Environment;while(environment){let record=environment.environmentRecord;if(record instanceof _environment.ObjectEnvironmentRecord){this.visitValue(record.object);continue}if(record instanceof _environment.GlobalEnvironmentRecord)break;(0,_invariant.default)(record instanceof _environment.DeclarativeEnvironmentRecord);this.visitDeclarativeEnvironmentRecordBinding(record,remainingLeakedBindings);if(record instanceof _environment.FunctionEnvironmentRecord){let fn=
record.$FunctionObject;if(!this.objectsTrackedForLeaks.has(fn))break}environment=environment.parent}}visitValueObject(val){if(!val.mightNotBeLeakedObject())return;let kind=val.getKind();this.visitObjectProperties(val,kind);switch(kind){case "RegExp":case "Number":case "String":case "Boolean":case "ReactElement":case "ArrayBuffer":case "Array":return;case "Date":let dateValue=val.$DateValue;(0,_invariant.default)(dateValue!==undefined);this.visitValue(dateValue);return;case "Float32Array":case "Float64Array":case "Int8Array":case "Int16Array":case "Int32Array":case "Uint8Array":case "Uint16Array":case "Uint32Array":case "Uint8ClampedArray":case "DataView":let buf=
val.$ViewedArrayBuffer;(0,_invariant.default)(buf!==undefined);this.visitValue(buf);return;case "Map":case "WeakMap":this.visitValueMap(val);return;case "Set":case "WeakSet":this.visitValueSet(val);return;default:(0,_invariant.default)(kind==="Object",`Object of kind ${kind} is not supported in calls to abstract functions.`);(0,_invariant.default)(val.$ParameterMap===undefined,`Arguments object is not supported in calls to abstract functions.`);return}}visitValueProxy(val){this.visitValue(val.$ProxyTarget);
this.visitValue(val.$ProxyHandler)}visitAbstractValue(val){if(!val.mightBeObject())return;if(val.values.isTop()){if(val.kind==="conditional"){this.visitValue(val.args[1]);this.visitValue(val.args[2]);return}let whitelistedKind=val.kind&&(val.kind==="widened numeric property"||val.kind.startsWith("abstractCounted"));(0,_invariant.default)(whitelistedKind!==undefined||val.intrinsicName!==undefined||val.args.length>0,"Havoced unknown object requires havocable arguments");for(let i=0,n=val.args.length;i<
n;i++)this.visitValue(val.args[i]);return}for(let element of val.values.getElements())this.visitValue(element)}visitValue(val){if(val instanceof _index.AbstractValue){if(this.mustVisit(val))this.visitAbstractValue(val)}else if(val.isIntrinsic())if(val instanceof _index.ArrayValue&&_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(val)){if(this.mustVisit(val))this.visitValueObject(val)}else this.mustVisit(val);else if(val instanceof _index.EmptyValue)this.mustVisit(val);else if(val instanceof
_index.PrimitiveValue)this.mustVisit(val);else if(val instanceof _index.ProxyValue){if(this.mustVisit(val))this.visitValueProxy(val)}else if(val instanceof _index.FunctionValue){(0,_invariant.default)(val instanceof _index.FunctionValue);if(this.mustVisit(val))this.visitValueFunction(val)}else{(0,_invariant.default)(val instanceof _index.ObjectValue);if(this.mustVisit(val))this.visitValueObject(val)}}}function ensureFrozenValue(realm,value,loc){if(value instanceof _index.ObjectValue&&!(0,_index2.TestIntegrityLevel)(realm,
value,"frozen")){let diag=new _errors.CompilerDiagnostic("Unfrozen object leaked before end of global code",loc||realm.currentLocation,"PP0017","RecoverableError");if(realm.handleError(diag)!=="Recover")throw new _errors.FatalError;}}class LeakImplementation{value(realm,value,loc){if(realm.instantRender.enabled)return;let objectsTrackedForLeaks=realm.createdObjectsTrackedForLeaks;if(objectsTrackedForLeaks===undefined)ensureFrozenValue(realm,value,loc);else{let visitor=new ObjectValueLeakingVisitor(realm,
objectsTrackedForLeaks);visitor.visitValue(value)}}}exports.LeakImplementation=LeakImplementation;class MaterializeImplementation{materializeObject(realm,val){if(realm.instantRender.enabled)val.makeFinal();else materializeObject(realm,val)}computeReachableObjects(realm,rootValue){(0,_invariant.default)(realm.isInPureScope());let reachableObjects=new Set;let visitedValues=new Set;computeFromValue(rootValue);return reachableObjects;function computeFromBindings(func,nonLocalReadBindings){(0,_invariant.default)(func instanceof
_index.ECMAScriptSourceFunctionValue);let environment=func.$Environment;while(environment){let record=environment.environmentRecord;if(record instanceof _environment.ObjectEnvironmentRecord)computeFromValue(record.object);else if(record instanceof _environment.DeclarativeEnvironmentRecord||record instanceof _environment.FunctionEnvironmentRecord)computeFromDeclarativeEnvironmentRecord(record,nonLocalReadBindings);else if(record instanceof _environment.GlobalEnvironmentRecord)break;environment=environment.parent}}
function computeFromDeclarativeEnvironmentRecord(record,nonLocalReadBindings){let environmentBindings=record.bindings;for(let bindingName of Object.keys(environmentBindings)){let binding=environmentBindings[bindingName];(0,_invariant.default)(binding!==undefined);let found=nonLocalReadBindings.delete(bindingName);if(found&&binding.value!==undefined)computeFromValue(binding.value)}}function computeFromAbstractValue(value){if(value.values.isTop())for(let arg of value.args)computeFromValue(arg);else for(let element of value.values.getElements())computeFromValue(element)}
function computeFromProxyValue(value){computeFromValue(value.$ProxyTarget);computeFromValue(value.$ProxyHandler)}function computeFromValue(value){(0,_invariant.default)(value!==undefined);if(value.isIntrinsic()||value instanceof _index.EmptyValue||value instanceof _index.PrimitiveValue)visit(value);else if(value instanceof _index.AbstractValue)ifNotVisited(value,computeFromAbstractValue);else if(value instanceof _index.FunctionValue)ifNotVisited(value,computeFromFunctionValue);else if(value instanceof
_index.ObjectValue)ifNotVisited(value,computeFromObjectValue);else if(value instanceof _index.ProxyValue)ifNotVisited(value,computeFromProxyValue)}function computeFromObjectValue(value){(0,_invariant.default)(value instanceof _index.ObjectValue);let kind=value.getKind();computeFromObjectProperties(value,kind);switch(kind){case "RegExp":case "Number":case "String":case "Boolean":case "ReactElement":case "ArrayBuffer":case "Array":break;case "Date":let dateValue=value.$DateValue;(0,_invariant.default)(dateValue!==
undefined);computeFromValue(dateValue);break;case "Float32Array":case "Float64Array":case "Int8Array":case "Int16Array":case "Int32Array":case "Uint8Array":case "Uint16Array":case "Uint32Array":case "Uint8ClampedArray":case "DataView":let buf=value.$ViewedArrayBuffer;(0,_invariant.default)(buf!==undefined);computeFromValue(buf);break;case "Map":case "WeakMap":ifNotVisited(value,computeFromMap);break;case "Set":case "WeakSet":ifNotVisited(value,computeFromSet);break;default:(0,_invariant.default)(kind===
"Object",`Object of kind ${kind} is not supported in calls to abstract functions.`);(0,_invariant.default)(value.$ParameterMap===undefined,`Arguments object is not supported in calls to abstract functions.`);break}if(!reachableObjects.has(value))reachableObjects.add(value)}function computeFromDescriptor(descriptor){if(descriptor===undefined);else if(descriptor instanceof _descriptors.PropertyDescriptor){if(descriptor.value!==undefined)computeFromValue(descriptor.value);if(descriptor.get!==undefined)computeFromValue(descriptor.get);
if(descriptor.set!==undefined)computeFromValue(descriptor.set)}else if(descriptor instanceof _descriptors.AbstractJoinedDescriptor){computeFromValue(descriptor.joinCondition);if(descriptor.descriptor1!==undefined)computeFromDescriptor(descriptor.descriptor1);if(descriptor.descriptor2!==undefined)computeFromDescriptor(descriptor.descriptor2)}else(0,_invariant.default)(false,"unknown descriptor")}function computeFromObjectPropertyBinding(binding){let descriptor=binding.descriptor;if(descriptor===undefined)return;
computeFromDescriptor(descriptor)}function computeFromObjectProperties(obj,kind){for(let [,propertyBindingValue]of obj.symbols){(0,_invariant.default)(propertyBindingValue);computeFromObjectPropertyBinding(propertyBindingValue)}for(let [,propertyBindingValue]of obj.properties){(0,_invariant.default)(propertyBindingValue);computeFromObjectPropertyBinding(propertyBindingValue)}if(obj.unknownProperty!==undefined){let descriptor=obj.unknownProperty.descriptor;computeFromObjectPropertiesWithComputedNamesDescriptor(descriptor)}computeFromObjectPrototype(obj)}
function computeFromObjectPrototype(obj){if(obj.$Prototype!==undefined)computeFromValue(obj.$Prototype)}function computeFromFunctionValue(fn){computeFromObjectProperties(fn);if(fn instanceof _index.BoundFunctionValue){computeFromValue(fn.$BoundTargetFunction);computeFromValue(fn.$BoundThis);for(let boundArg of fn.$BoundArguments)computeFromValue(boundArg);return}(0,_invariant.default)(!(fn instanceof _index.NativeFunctionValue),"all native function values should have already been created outside this pure function");
let nonLocalReadBindings=nonLocalReadBindingsOfFunction(fn);computeFromBindings(fn,nonLocalReadBindings)}function computeFromObjectPropertiesWithComputedNamesDescriptor(descriptor){notSupportedForTransitiveMaterialization()}function computeFromMap(val){let kind=val.getKind();let entries;if(kind==="Map")entries=val.$MapData;else{(0,_invariant.default)(kind==="WeakMap");entries=val.$WeakMapData}(0,_invariant.default)(entries!==undefined);let len=entries.length;for(let i=0;i<len;i++){let entry=entries[i];
let key=entry.$Key;let value=entry.$Value;if(key===undefined||value===undefined)continue;computeFromValue(key);computeFromValue(value)}}function computeFromSet(val){let kind=val.getKind();let entries;if(kind==="Set")entries=val.$SetData;else{(0,_invariant.default)(kind==="WeakSet");entries=val.$WeakSetData}(0,_invariant.default)(entries!==undefined);let len=entries.length;for(let i=0;i<len;i++){let entry=entries[i];if(entry===undefined)continue;computeFromValue(entry)}}function nonLocalReadBindingsOfFunction(func){let functionInfo=
{unboundReads:new Set,unboundWrites:new Set};(0,_invariant.default)(func instanceof _index.ECMAScriptSourceFunctionValue);let formalParameters=func.$FormalParameters;(0,_invariant.default)(formalParameters!=null);let code=func.$ECMAScriptCode;(0,_invariant.default)(code!=null);(0,_traverse.default)(t.file(t.program([t.expressionStatement(t.functionExpression(null,formalParameters,code))])),LeakedClosureRefVisitor,null,functionInfo);_traverse.default.cache.clear();return functionInfo.unboundReads}
function ifNotVisited(value,computeFrom){if(!visitedValues.has(value)){visitedValues.add(value);computeFrom(value)}}function visit(value){visitedValues.add(value)}function notSupportedForTransitiveMaterialization(){let error=new _errors.CompilerDiagnostic("Not supported for transitive materialization",rootValue.expressionLocation,"PP0041","FatalError");realm.handleError(error);throw new _errors.FatalError;}}}exports.MaterializeImplementation=MaterializeImplementation},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.JoinImplementation=void 0;var _realm=__webpack_require__(7);var _descriptors=__webpack_require__(268);var _completions=__webpack_require__(18);var _index=__webpack_require__(232);var _singletons=__webpack_require__(236);var _generator=__webpack_require__(237);var _index2=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function joinGenerators(joinCondition,
generator1,generator2){let realm=joinCondition.$Realm;let result=new _generator.Generator(realm,"joined",realm.pathConditions);if(!generator1.empty()||!generator2.empty())result.joinGenerators(joinCondition,generator1,generator2);return result}function joinArrays(realm,v1,v2,getAbstractValue){let e=v1&&v1[0]||v2&&v2[0];if(e instanceof _index2.Value)return joinArraysOfValues(realm,v1,v2,getAbstractValue);else return joinArrayOfsMapEntries(realm,v1,v2,getAbstractValue)}function joinArrayOfsMapEntries(realm,
a1,a2,getAbstractValue){let empty=realm.intrinsics.empty;let n=Math.max(a1&&a1.length||0,a2&&a2.length||0);let result=[];for(let i=0;i<n;i++){let {$Key:key1,$Value:val1}=a1&&a1[i]||{$Key:empty,$Value:empty};let {$Key:key2,$Value:val2}=a2&&a2[i]||{$Key:empty,$Value:empty};if(key1===undefined&&key2===undefined)result[i]={$Key:undefined,$Value:undefined};else{let key3=getAbstractValue(key1,key2);let val3=getAbstractValue(val1,val2);result[i]={$Key:key3,$Value:val3}}}return result}function joinArraysOfValues(realm,
a1,a2,getAbstractValue){let n=Math.max(a1&&a1.length||0,a2&&a2.length||0);let result=[];for(let i=0;i<n;i++)result[i]=getAbstractValue(a1&&a1[i]||undefined,a2&&a2[i]||undefined);return result}class JoinImplementation{composeCompletions(leftCompletion,rightCompletion){if(leftCompletion instanceof _completions.AbruptCompletion)return leftCompletion;if(leftCompletion instanceof _completions.JoinedNormalAndAbruptCompletions){if(rightCompletion instanceof _completions.JoinedNormalAndAbruptCompletions){rightCompletion.composedWith=
leftCompletion;rightCompletion.pathConditionsAtCreation=leftCompletion.pathConditionsAtCreation;return rightCompletion}let c=this.composeCompletions(leftCompletion.consequent,rightCompletion);if(c instanceof _index2.Value)c=new _completions.SimpleNormalCompletion(c);let a=this.composeCompletions(leftCompletion.alternate,rightCompletion);if(a instanceof _index2.Value)a=new _completions.SimpleNormalCompletion(a);let joinedCompletion=this.joinCompletions(leftCompletion.joinCondition,c,a);if(joinedCompletion instanceof
_completions.JoinedNormalAndAbruptCompletions){joinedCompletion.composedWith=leftCompletion.composedWith;joinedCompletion.pathConditionsAtCreation=leftCompletion.pathConditionsAtCreation;joinedCompletion.savedEffects=leftCompletion.savedEffects}return joinedCompletion}if(leftCompletion instanceof _index2.Value)leftCompletion=new _completions.SimpleNormalCompletion(leftCompletion);if(leftCompletion instanceof _completions.Completion&&leftCompletion.value===leftCompletion.value.$Realm.intrinsics.__bottomValue)return leftCompletion;
if(rightCompletion instanceof _index2.Value)rightCompletion=new _completions.SimpleNormalCompletion(rightCompletion);return rightCompletion}composeWithEffects(completion,normalEffects){if(completion instanceof _completions.JoinedNormalAndAbruptCompletions){let selectAbrupt=(c)=>c instanceof _completions.AbruptCompletion&&c.value!==c.value.$Realm.intrinsics.__bottomValue;let composableCompletions=_completions.Completion.makeSelectedCompletionsInfeasibleInCopy(selectAbrupt,completion);let composedNormalCompletion=
this.composeCompletions(composableCompletions,normalEffects.result);normalEffects.result=composedNormalCompletion;let selectNormal=(c)=>c instanceof _completions.SimpleNormalCompletion&&c.value!==c.value.$Realm.intrinsics.__bottomValue;let nonComposableCompletions=_completions.Completion.makeSelectedCompletionsInfeasibleInCopy(selectNormal,completion);let nonComposedEffects=(0,_realm.construct_empty_effects)(completion.value.$Realm,nonComposableCompletions);let joinCondition=_index2.AbstractValue.createJoinConditionForSelectedCompletions(selectNormal,
completion);return this.joinEffects(joinCondition,normalEffects,nonComposedEffects)}else if(completion instanceof _completions.AbruptCompletion)return(0,_realm.construct_empty_effects)(completion.value.$Realm,completion);else return normalEffects}_collapseSimilarCompletions(joinCondition,c1,c2){let realm=joinCondition.$Realm;let getAbstractValue=(v1,v2)=>{if(v1 instanceof _index2.EmptyValue)return v2||realm.intrinsics.undefined;if(v2 instanceof _index2.EmptyValue)return v1||realm.intrinsics.undefined;
return _index2.AbstractValue.createFromConditionalOp(realm,joinCondition,v1,v2)};if(c1 instanceof _completions.BreakCompletion&&c2 instanceof _completions.BreakCompletion&&c1.target===c2.target){let val=this.joinValues(realm,c1.value,c2.value,getAbstractValue);(0,_invariant.default)(val instanceof _index2.Value);return new _completions.BreakCompletion(val,joinCondition.expressionLocation,c1.target)}if(c1 instanceof _completions.ContinueCompletion&&c2 instanceof _completions.ContinueCompletion&&c1.target===
c2.target)return new _completions.ContinueCompletion(realm.intrinsics.empty,joinCondition.expressionLocation,c1.target);if(c1 instanceof _completions.ReturnCompletion&&c2 instanceof _completions.ReturnCompletion){let val=this.joinValues(realm,c1.value,c2.value,getAbstractValue);(0,_invariant.default)(val instanceof _index2.Value);return new _completions.ReturnCompletion(val,joinCondition.expressionLocation)}if(c1 instanceof _completions.ThrowCompletion&&c2 instanceof _completions.ThrowCompletion){getAbstractValue=
(v1,v2)=>{return _index2.AbstractValue.createFromConditionalOp(realm,joinCondition,v1,v2)};let val=this.joinValues(realm,c1.value,c2.value,getAbstractValue);(0,_invariant.default)(val instanceof _index2.Value);return new _completions.ThrowCompletion(val,c1.location)}if(c1 instanceof _completions.SimpleNormalCompletion&&c2 instanceof _completions.SimpleNormalCompletion)return new _completions.SimpleNormalCompletion(getAbstractValue(c1.value,c2.value));return undefined}joinCompletions(joinCondition,
c1,c2){if(!joinCondition.mightNotBeTrue())return c1;if(!joinCondition.mightNotBeFalse())return c2;(0,_invariant.default)(joinCondition instanceof _index2.AbstractValue);let c=this._collapseSimilarCompletions(joinCondition,c1,c2);if(c===undefined)if(c1 instanceof _completions.AbruptCompletion&&c2 instanceof _completions.AbruptCompletion)c=new _completions.JoinedAbruptCompletions(joinCondition,c1,c2);else{(0,_invariant.default)(c1 instanceof _completions.AbruptCompletion||c1 instanceof _completions.NormalCompletion);
(0,_invariant.default)(c2 instanceof _completions.AbruptCompletion||c2 instanceof _completions.NormalCompletion);c=new _completions.JoinedNormalAndAbruptCompletions(joinCondition,c1,c2)}return c}joinEffects(joinCondition,e1,e2){(0,_invariant.default)(e1.canBeApplied);(0,_invariant.default)(e2.canBeApplied);if(!joinCondition.mightNotBeTrue())return e1;if(!joinCondition.mightNotBeFalse())return e2;(0,_invariant.default)(joinCondition instanceof _index2.AbstractValue);let {result:c1,generator:generator1,
modifiedBindings:modifiedBindings1,modifiedProperties:modifiedProperties1,createdObjects:createdObjects1}=e1;let {result:c2,generator:generator2,modifiedBindings:modifiedBindings2,modifiedProperties:modifiedProperties2,createdObjects:createdObjects2}=e2;let realm=joinCondition.$Realm;let c=this.joinCompletions(joinCondition,c1,c2);let [modifiedGenerator1,modifiedGenerator2,bindings]=this._joinBindings(joinCondition,generator1,modifiedBindings1,generator2,modifiedBindings2);let generator=joinGenerators(joinCondition,
modifiedGenerator1,modifiedGenerator2);let properties=this.joinPropertyBindings(realm,joinCondition,modifiedProperties1,modifiedProperties2,createdObjects1,createdObjects2);let createdObjects=new Set;createdObjects1.forEach((o)=>{createdObjects.add(o)});createdObjects2.forEach((o)=>{createdObjects.add(o)});return new _realm.Effects(c,generator,bindings,properties,createdObjects)}joinValuesOfSelectedCompletions(selector,completion,keepInfeasiblePaths=false){let realm=completion.value.$Realm;let bottom=
realm.intrinsics.__bottomValue;if(completion instanceof _completions.JoinedAbruptCompletions||completion instanceof _completions.JoinedNormalAndAbruptCompletions){let joinCondition=completion.joinCondition;let c=this.joinValuesOfSelectedCompletions(selector,completion.consequent);let a=this.joinValuesOfSelectedCompletions(selector,completion.alternate);if(c===bottom){if(a instanceof _index2.AbstractValue)a=_singletons.Path.withInverseCondition(joinCondition,()=>{(0,_invariant.default)(a instanceof
_index2.AbstractValue);return realm.simplifyAndRefineAbstractValue(a)});if(!keepInfeasiblePaths)return a}else if(a===bottom){if(c instanceof _index2.AbstractValue)c=_singletons.Path.withCondition(joinCondition,()=>{(0,_invariant.default)(c instanceof _index2.AbstractValue);return realm.simplifyAndRefineAbstractValue(c)});if(!keepInfeasiblePaths)return c}let getAbstractValue=(v1,v2)=>{if(v1===bottom)v1=realm.intrinsics.empty;if(v2===bottom)v2=realm.intrinsics.empty;return _index2.AbstractValue.createFromConditionalOp(realm,
joinCondition,v1,v2)};let jv=this.joinValues(realm,c,a,getAbstractValue);(0,_invariant.default)(jv instanceof _index2.Value);if(completion instanceof _completions.JoinedNormalAndAbruptCompletions&&completion.composedWith!==undefined){let composedWith=completion.composedWith;if(!composedWith.containsSelectedCompletion(selector))return jv;let cjv=this.joinValuesOfSelectedCompletions(selector,composedWith);joinCondition=_index2.AbstractValue.createJoinConditionForSelectedCompletions(selector,composedWith);
jv=this.joinValues(realm,jv,cjv,getAbstractValue);(0,_invariant.default)(jv instanceof _index2.Value)}return jv}if(selector(completion))return completion.value;return bottom}joinMaps(m1,m2,join){let m3=new Map;m1.forEach((val1,key,map1)=>{let val2=m2.get(key);let val3=join(key,val1,val2);m3.set(key,val3)});m2.forEach((val2,key,map2)=>{if(!m1.has(key))m3.set(key,join(key,undefined,val2))});return m3}_joinBindings(joinCondition,g1,m1,g2,m2){let realm=joinCondition.$Realm;let getAbstractValue=(v1,v2)=>
{return _index2.AbstractValue.createFromConditionalOp(realm,joinCondition,v1,v2,undefined,true,true)};let rewritten1=false;let rewritten2=false;let leak=(b,g,v,rewritten)=>{if(!rewritten){let h=new _generator.Generator(realm,"RewrittenToAppendBindingAssignments",g.pathConditions);if(!g.empty())h.appendGenerator(g,"");g=h;rewritten=true}if(v!==undefined&&v!==realm.intrinsics.undefined)g.emitBindingAssignment(b,v);return[g,rewritten]};let join=(b,b1,b2)=>{let l1=b1===undefined?b.hasLeaked:b1.hasLeaked;
let l2=b2===undefined?b.hasLeaked:b2.hasLeaked;let v1=b1===undefined?b.value:b1.value;let v2=b2===undefined?b.value:b2.value;if(!l1&&l2)[g1,rewritten1]=leak(b,g1,v1,rewritten1);else if(l1&&!l2)[g2,rewritten2]=leak(b,g2,v2,rewritten2);let hasLeaked=l1||l2;let value=hasLeaked?undefined:this.joinValues(realm,v1,v2,getAbstractValue);(0,_invariant.default)(value===undefined||value instanceof _index2.Value);return{hasLeaked,value}};let joinedBindings=this.joinMaps(m1,m2,join);return[g1,g2,joinedBindings]}joinValues(realm,
v1,v2,getAbstractValue){if(Array.isArray(v1)||Array.isArray(v2)){(0,_invariant.default)(v1===undefined||Array.isArray(v1));(0,_invariant.default)(v2===undefined||Array.isArray(v2));return joinArrays(realm,v1,v2,getAbstractValue)}(0,_invariant.default)(v1===undefined||v1 instanceof _index2.Value);(0,_invariant.default)(v2===undefined||v2 instanceof _index2.Value);if(v1!==undefined&&v2!==undefined&&!(v1 instanceof _index2.AbstractValue)&&!(v2 instanceof _index2.AbstractValue)&&(0,_index.StrictEqualityComparison)(realm,
v1.throwIfNotConcrete(),v2.throwIfNotConcrete()))return v1;else return getAbstractValue(v1,v2)}joinPropertyBindings(realm,joinCondition,m1,m2,c1,c2){let join=(b,d1,d2)=>{if(d1===undefined){if(c2.has(b.object))return d2;if(b.descriptor!==undefined&&m1.has(b)){d1=(0,_descriptors.cloneDescriptor)(b.descriptor.throwIfNotConcrete(realm));(0,_invariant.default)(d1!==undefined);d1.value=realm.intrinsics.empty}else d1=b.descriptor}if(d2===undefined){if(c1.has(b.object))return d1;if(b.descriptor!==undefined&&
m2.has(b)){d2=(0,_descriptors.cloneDescriptor)(b.descriptor.throwIfNotConcrete(realm));(0,_invariant.default)(d2!==undefined);d2.value=realm.intrinsics.empty}else d2=b.descriptor}return this.joinDescriptors(realm,joinCondition,d1,d2)};return this.joinMaps(m1,m2,join)}joinDescriptors(realm,joinCondition,d1,d2){let getAbstractValue=(v1,v2)=>{return _index2.AbstractValue.createFromConditionalOp(realm,joinCondition,v1,v2)};let clone_with_abstract_value=(d)=>{(0,_invariant.default)(d===d1||d===d2);if(!(0,
_index.IsDataDescriptor)(realm,d))return new _descriptors.AbstractJoinedDescriptor(joinCondition);let dc;let dcValue;if(d instanceof _descriptors.InternalSlotDescriptor){dc=new _descriptors.InternalSlotDescriptor(d.value);dcValue=dc.value;if(Array.isArray(dcValue)){(0,_invariant.default)(dcValue.length>0);let elem0=dcValue[0];if(elem0 instanceof _index2.Value)dc.value=dcValue.map((e)=>{return d===d1?getAbstractValue(e,realm.intrinsics.empty):getAbstractValue(realm.intrinsics.empty,e)});else dc.value=
dcValue.map((e)=>{let {$Key:key1,$Value:val1}=e;let key3=d===d1?getAbstractValue(key1,realm.intrinsics.empty):getAbstractValue(realm.intrinsics.empty,key1);let val3=d===d1?getAbstractValue(val1,realm.intrinsics.empty):getAbstractValue(realm.intrinsics.empty,val1);return{$Key:key3,$Value:val3}})}}else{dc=(0,_descriptors.cloneDescriptor)(d.throwIfNotConcrete(realm));(0,_invariant.default)(dc!==undefined);dcValue=dc.value}(0,_invariant.default)(dcValue===undefined||dcValue instanceof _index2.Value);
dc.value=d===d1?getAbstractValue(dcValue,realm.intrinsics.empty):getAbstractValue(realm.intrinsics.empty,dcValue);return dc};if(d1===undefined){if(d2===undefined)return undefined;let d3=clone_with_abstract_value(d2);if(d3 instanceof _descriptors.AbstractJoinedDescriptor)d3.descriptor2=d2;return d3}else if(d2===undefined){(0,_invariant.default)(d1!==undefined);let d3=clone_with_abstract_value(d1);if(d3 instanceof _descriptors.AbstractJoinedDescriptor)d3.descriptor1=d1;return d3}else{if(d1 instanceof
_descriptors.PropertyDescriptor&&d2 instanceof _descriptors.PropertyDescriptor&&(0,_descriptors.equalDescriptors)(d1,d2)&&(0,_index.IsDataDescriptor)(realm,d1)){let dc=(0,_descriptors.cloneDescriptor)(d1);(0,_invariant.default)(dc!==undefined);let dcValue=this.joinValues(realm,d1.value,d2.value,getAbstractValue);(0,_invariant.default)(dcValue instanceof _index2.Value);dc.value=dcValue;return dc}if(d1 instanceof _descriptors.InternalSlotDescriptor&&d2 instanceof _descriptors.InternalSlotDescriptor)return new _descriptors.InternalSlotDescriptor(this.joinValues(realm,
d1.value,d2.value,getAbstractValue));return new _descriptors.AbstractJoinedDescriptor(joinCondition,d1,d2)}}mapAndJoin(realm,values,joinConditionFactory,functionToMap){(0,_invariant.default)(values.size>1);let joinedEffects;for(let val of values){let condition=joinConditionFactory(val);let effects=realm.evaluateForEffects(()=>{(0,_invariant.default)(condition instanceof _index2.AbstractValue);return _singletons.Path.withCondition(condition,()=>{return functionToMap(val)})},undefined,"mapAndJoin");
joinedEffects=joinedEffects===undefined?effects:this.joinEffects(condition,effects,joinedEffects)}(0,_invariant.default)(joinedEffects!==undefined);realm.applyEffects(joinedEffects);return realm.returnOrThrowCompletion(joinedEffects.result)}}exports.JoinImplementation=JoinImplementation},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.PathImplementation=exports.PathConditionsImplementation=void 0;var _errors=__webpack_require__(3);var _invariant=
_interopRequireDefault(__webpack_require__(9));var _realm=__webpack_require__(7);var _types=__webpack_require__(19);var _index=__webpack_require__(10);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class PathConditionsImplementation extends _types.PathConditions{constructor(baseConditions){super();this._assumedConditions=new Set;this._readonly=false;if(baseConditions!==undefined){(0,_invariant.default)(baseConditions instanceof PathConditionsImplementation);this._baseConditions=
baseConditions}}add(c){(0,_invariant.default)(!this._readonly);this._assumedConditions.add(c);this._failedImplications=undefined;this._failedNegativeImplications=undefined}isReadOnly(){return this._readonly}implies(e,depth=0){if(!e.mightNotBeTrue())return true;if(!e.mightNotBeFalse())return false;(0,_invariant.default)(e instanceof _index.AbstractValue);if(this._assumedConditions.has(e))return true;if(this._impliedConditions!==undefined&&this._impliedConditions.has(e))return true;if(this._impliedNegatives!==
undefined&&this._impliedNegatives.has(e))return false;if(this._failedImplications!==undefined&&this._failedImplications.has(e))return false;if(depth>10)return false;if(this._baseConditions!==undefined&&this._baseConditions.implies(e,depth+1))return true;for(let assumedCondition of this._assumedConditions)if(assumedCondition.implies(e,depth+1))return this.cacheImplicationSuccess(e);if(e.kind==="||"){let [x,y]=e.args;if(!x.mightNotBeTrue()||!y.mightNotBeTrue())return this.cacheImplicationSuccess(e);
if(!x.mightNotBeFalse()&&this.implies(y,depth+1))return this.cacheImplicationSuccess(e);if(!y.mightNotBeFalse()&&this.implies(x,depth+1))return this.cacheImplicationSuccess(e);if(this.implies(x,depth+1))return this.cacheImplicationSuccess(e);if(this.implies(y,depth+1))return this.cacheImplicationSuccess(e)}if(e.kind==="!=="||e.kind==="!="){let [x,y]=e.args;if(x instanceof _index.AbstractValue){if((y instanceof _index.NullValue||y instanceof _index.UndefinedValue)&&this.implies(x,depth+1))return this.cacheImplicationSuccess(e)}else{(0,
_invariant.default)(y instanceof _index.AbstractValue);if((x instanceof _index.NullValue||x instanceof _index.UndefinedValue)&&this.implies(y,depth+1))return this.cacheImplicationSuccess(e)}}if(e.kind==="!"){let [x]=e.args;if(this.impliesNot(x,depth+1))return this.cacheImplicationSuccess(e)}if(this._failedImplications===undefined)this._failedImplications=new Set;this._failedImplications.add(e);return false}cacheImplicationSuccess(e){if(this._impliedConditions===undefined)this._impliedConditions=new Set;
this._impliedConditions.add(e);return true}impliesNot(e,depth=0){if(!e.mightNotBeTrue())return false;if(!e.mightNotBeFalse())return true;(0,_invariant.default)(e instanceof _index.AbstractValue);if(this._assumedConditions.has(e))return false;if(this._impliedConditions!==undefined&&this._impliedConditions.has(e))return false;if(this._impliedNegatives!==undefined&&this._impliedNegatives.has(e))return true;if(this._failedNegativeImplications!==undefined&&this._failedNegativeImplications.has(e))return false;
if(depth>10)return false;if(this._baseConditions!==undefined&&this._baseConditions.impliesNot(e,depth+1))return true;for(let assumedCondition of this._assumedConditions)if(assumedCondition.impliesNot(e,depth+1))return this.cacheNegativeImplicationSuccess(e);if(e.kind==="&&"){let [x,y]=e.args;if(!x.mightNotBeFalse()||!y.mightNotBeFalse())return this.cacheNegativeImplicationSuccess(e);if(!x.mightNotBeTrue()&&this.impliesNot(y,depth+1))return this.cacheNegativeImplicationSuccess(e);if(!y.mightNotBeTrue()&&
this.impliesNot(x,depth+1))return this.cacheNegativeImplicationSuccess(e);if(this.impliesNot(x,depth+1))return this.cacheNegativeImplicationSuccess(e);if(this.impliesNot(y,depth+1))return this.cacheNegativeImplicationSuccess(e)}if(e.kind==="==="||e.kind==="=="){let [x,y]=e.args;if(x instanceof _index.AbstractValue){if((y instanceof _index.NullValue||y instanceof _index.UndefinedValue)&&this.implies(x,depth+1))return this.cacheNegativeImplicationSuccess(e)}else{(0,_invariant.default)(y instanceof _index.AbstractValue);
if((x instanceof _index.NullValue||x instanceof _index.UndefinedValue)&&this.implies(y,depth+1))return this.cacheNegativeImplicationSuccess(e)}}if(e.kind==="!"){let [x]=e.args;if(this.implies(x,depth+1))return this.cacheNegativeImplicationSuccess(e)}if(this._failedNegativeImplications===undefined)this._failedNegativeImplications=new Set;this._failedNegativeImplications.add(e);return false}cacheNegativeImplicationSuccess(e){if(this._impliedNegatives===undefined)this._impliedNegatives=new Set;this._impliedNegatives.add(e);
return true}isEmpty(){return this._assumedConditions.size===0}getLength(){return this._assumedConditions.size}getAssumedConditions(){return this._assumedConditions}refineBaseConditons(realm,totalRefinements=0,refinementTarget=this){try{if(realm.abstractValueImpliesMax>0)return;let total=totalRefinements;let refine=(condition)=>{let refinedCondition=realm.simplifyAndRefineAbstractCondition(condition);if(refinedCondition!==condition){if(!refinedCondition.mightNotBeFalse())throw new _errors.InfeasiblePathError;
if(refinedCondition instanceof _index.AbstractValue){refinementTarget._readonly=false;refinementTarget.add(refinedCondition)}}};if(this._baseConditions!==undefined){let savedBaseConditions=this._baseConditions;try{this._baseConditions=undefined;for(let assumedCondition of savedBaseConditions._assumedConditions)if(assumedCondition.kind==="||"){if(++total>4)break;refine(assumedCondition)}}finally{this._baseConditions=savedBaseConditions}savedBaseConditions.refineBaseConditons(realm,total,refinementTarget)}}finally{refinementTarget._readonly=
true}}}exports.PathConditionsImplementation=PathConditionsImplementation;class PathImplementation{implies(condition,depth=0){if(!condition.mightNotBeTrue())return true;if(!condition.mightNotBeFalse())return false;(0,_invariant.default)(condition instanceof _index.AbstractValue);return condition.$Realm.pathConditions.implies(condition,depth)}impliesNot(condition,depth=0){if(!condition.mightNotBeFalse())return true;if(!condition.mightNotBeTrue())return false;(0,_invariant.default)(condition instanceof
_index.AbstractValue);return condition.$Realm.pathConditions.impliesNot(condition,depth)}withCondition(condition,evaluate){let realm=condition.$Realm;if(!condition.mightNotBeFalse()){if(realm.impliesCounterOverflowed)throw new _errors.InfeasiblePathError;(0,_invariant.default)(false,"assuming that false equals true is asking for trouble")}let savedPath=realm.pathConditions;realm.pathConditions=new PathConditionsImplementation(savedPath);try{pushPathCondition(condition);realm.pathConditions.refineBaseConditons(realm);
return evaluate()}catch(e){if(e instanceof _errors.InfeasiblePathError){realm.pathConditions=savedPath;pushInversePathCondition(condition)}throw e;}finally{realm.pathConditions=savedPath}}withInverseCondition(condition,evaluate){let realm=condition.$Realm;if(!condition.mightNotBeTrue()){if(realm.impliesCounterOverflowed)throw new _errors.InfeasiblePathError;(0,_invariant.default)(false,"assuming that false equals true is asking for trouble")}let savedPath=realm.pathConditions;realm.pathConditions=
new PathConditionsImplementation(savedPath);try{pushInversePathCondition(condition);realm.pathConditions.refineBaseConditons(realm);return evaluate()}catch(e){if(e instanceof _errors.InfeasiblePathError){realm.pathConditions=savedPath;pushPathCondition(condition)}throw e;}finally{realm.pathConditions=savedPath}}pushAndRefine(condition){let realm=condition.$Realm;let savedPath=realm.pathConditions;realm.pathConditions=new PathConditionsImplementation(savedPath);pushPathCondition(condition);realm.pathConditions.refineBaseConditons(realm)}pushInverseAndRefine(condition){let realm=
condition.$Realm;let savedPath=realm.pathConditions;realm.pathConditions=new PathConditionsImplementation(savedPath);pushInversePathCondition(condition);realm.pathConditions.refineBaseConditons(realm)}}exports.PathImplementation=PathImplementation;function pushPathCondition(condition){let realm=condition.$Realm;if(realm.pathConditions.isReadOnly())realm.pathConditions=new PathConditionsImplementation(realm.pathConditions);if(!condition.mightNotBeFalse()){if(realm.impliesCounterOverflowed)throw new _errors.InfeasiblePathError;
(0,_invariant.default)(false,"assuming that false equals true is asking for trouble")}if(condition instanceof _index.ConcreteValue)return;if(!condition.mightNotBeTrue())return;(0,_invariant.default)(condition instanceof _index.AbstractValue);if(condition.kind==="&&"){let left=condition.args[0];let right=condition.args[1];(0,_invariant.default)(left instanceof _index.AbstractValue);pushPathCondition(left);pushPathCondition(right)}else if(condition.kind==="==="){let [left,right]=condition.args;if(right instanceof
_index.AbstractValue&&right.kind==="conditional")[left,right]===[right,left];if(left instanceof _index.AbstractValue&&left.kind==="conditional"){let [cond,x,y]=left.args;if(right instanceof _index.ConcreteValue&&x instanceof _index.ConcreteValue&&y instanceof _index.ConcreteValue)if(right.equals(x)&&!right.equals(y))pushPathCondition(cond);else if(!right.equals(x)&&right.equals(y))pushInversePathCondition(cond)}realm.pathConditions.add(condition)}else{if(condition.kind==="!="||condition.kind==="=="){let left=
condition.args[0];let right=condition.args[1];if(left instanceof _index.ConcreteValue&&right instanceof _index.AbstractValue)[left,right]=[right,left];if(left instanceof _index.AbstractValue&&(right instanceof _index.UndefinedValue||right instanceof _index.NullValue)){if(condition.kind==="!="){pushPathCondition(left);let leftNeNull=_index.AbstractValue.createFromBinaryOp(realm,"!==",left,realm.intrinsics.null);let leftNeUndefined=_index.AbstractValue.createFromBinaryOp(realm,"!==",left,realm.intrinsics.undefined);
pushPathCondition(leftNeNull);pushPathCondition(leftNeUndefined)}else if(condition.kind==="=="){pushInversePathCondition(left);let leftEqNull=_index.AbstractValue.createFromBinaryOp(realm,"===",left,realm.intrinsics.null);let leftEqUndefined=_index.AbstractValue.createFromBinaryOp(realm,"===",left,realm.intrinsics.undefined);let c;if(!leftEqNull.mightNotBeFalse())c=leftEqUndefined;else if(!leftEqUndefined.mightNotBeFalse())c=leftEqNull;else c=_index.AbstractValue.createFromLogicalOp(realm,"||",leftEqNull,
leftEqUndefined);pushPathCondition(c)}return}}realm.pathConditions.add(condition)}}function pushInversePathCondition(condition){let realm=condition.$Realm;if(realm.pathConditions.isReadOnly())realm.pathConditions=new PathConditionsImplementation(realm.pathConditions);if(!condition.mightNotBeTrue()){if(realm.impliesCounterOverflowed)throw new _errors.InfeasiblePathError;(0,_invariant.default)(false,"assuming that false equals true is asking for trouble")}if(condition instanceof _index.ConcreteValue)return;
(0,_invariant.default)(condition instanceof _index.AbstractValue);if(condition.kind==="||"){let left=condition.args[0];let right=condition.args[1];(0,_invariant.default)(left instanceof _index.AbstractValue);pushInversePathCondition(left);if(right instanceof _index.AbstractValue)right=realm.simplifyAndRefineAbstractCondition(right);if(right.mightNotBeTrue())pushInversePathCondition(right)}else{if(condition.kind==="!="||condition.kind==="=="){let left=condition.args[0];let right=condition.args[1];
if(left instanceof _index.ConcreteValue&&right instanceof _index.AbstractValue)[left,right]=[right,left];if(left instanceof _index.AbstractValue&&(right instanceof _index.UndefinedValue||right instanceof _index.NullValue)){let op=condition.kind==="!="?"===":"!==";if(op==="!==")pushPathCondition(left);else pushInversePathCondition(left);let leftEqNull=_index.AbstractValue.createFromBinaryOp(realm,op,left,realm.intrinsics.null);if(leftEqNull.mightNotBeFalse())pushPathCondition(leftEqNull);let leftEqUndefined=
_index.AbstractValue.createFromBinaryOp(realm,op,left,realm.intrinsics.undefined);if(leftEqUndefined.mightNotBeFalse())pushPathCondition(leftEqUndefined);return}}let inverseCondition=_index.AbstractValue.createFromUnaryOp(realm,"!",condition,false,undefined,true,true);pushPathCondition(inverseCondition);if(inverseCondition instanceof _index.AbstractValue){let simplifiedInverseCondition=realm.simplifyAndRefineAbstractCondition(inverseCondition);if(!simplifiedInverseCondition.equals(inverseCondition))pushPathCondition(simplifiedInverseCondition)}}}
},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.PropertiesImplementation=void 0;var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _ObjectExpression=__webpack_require__(275);var _environment=__webpack_require__(20);var _errors=__webpack_require__(3);var _invariant=_interopRequireDefault(__webpack_require__(9));var _index2=__webpack_require__(232);var _types=__webpack_require__(21);var _singletons=__webpack_require__(236);
var _strict=_interopRequireDefault(__webpack_require__(452));var _generator=__webpack_require__(237);var _index3=__webpack_require__(15);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function StringKey(key){if(key instanceof _index.StringValue)key=key.value;if(typeof key!=="string")throw new _errors.FatalError;return key}function InternalDescriptorPropertyToValue(realm,value){if(value===undefined)return realm.intrinsics.undefined;
if(typeof value==="boolean")return new _index.BooleanValue(realm,value);(0,_invariant.default)(value instanceof _index.Value);return value}function InternalGetPropertiesKey(P){if(typeof P==="string")return P;else if(P instanceof _index.StringValue)return P.value;else if(P instanceof _index.SymbolValue)return P}function InternalGetPropertiesMap(O,P){if(typeof P==="string"||P instanceof _index.StringValue)return O.properties;else if(P instanceof _index.SymbolValue)return O.symbols;else(0,_invariant.default)(false)}
function InternalSetProperty(realm,O,P,desc){let map=InternalGetPropertiesMap(O,P);let key=InternalGetPropertiesKey(P);let propertyBinding=map.get(key);if(propertyBinding===undefined){propertyBinding={descriptor:undefined,object:O,key:key};map.set(key,propertyBinding)}realm.recordModifiedProperty(propertyBinding);propertyBinding.descriptor=desc}function InternalUpdatedProperty(realm,O,P,oldDesc){let generator=realm.generator;if(!generator)return;if(!O.isIntrinsic()&&O.temporalAlias===undefined)return;
if(P instanceof _index.SymbolValue)return;if(P instanceof _index.StringValue)P=P.value;(0,_invariant.default)(!O.mightBeLeakedObject());(0,_invariant.default)(!O.mightBeFinalObject());(0,_invariant.default)(typeof P==="string");let propertyBinding=InternalGetPropertiesMap(O,P).get(P);(0,_invariant.default)(propertyBinding!==undefined);let desc=propertyBinding.descriptor;if(desc===undefined)if(O===realm.$GlobalObject)generator.emitGlobalDelete(P);else generator.emitPropertyDelete(O,P);else{desc=desc.throwIfNotConcrete(realm);
if(oldDesc===undefined)if(O===realm.$GlobalObject)if((0,_index2.IsDataDescriptor)(realm,desc)){let descValue=desc.value||realm.intrinsics.undefined;if((0,_types.isValidIdentifier)(P)&&!desc.configurable&&desc.enumerable&&desc.writable)generator.emitGlobalDeclaration(P,descValue);else if(desc.configurable&&desc.enumerable&&desc.writable)generator.emitGlobalAssignment(P,descValue);else generator.emitDefineProperty(O,P,desc)}else generator.emitDefineProperty(O,P,desc);else if((0,_index2.IsDataDescriptor)(realm,
desc)&&desc.configurable&&desc.enumerable&&desc.writable){let descValue=desc.value||realm.intrinsics.undefined;generator.emitPropertyAssignment(O,P,descValue)}else generator.emitDefineProperty(O,P,desc);else{(0,_invariant.default)(oldDesc instanceof _descriptors.PropertyDescriptor);if((0,_descriptors.equalDescriptors)(desc,oldDesc)){(0,_invariant.default)((0,_index2.IsDataDescriptor)(realm,desc));let descValue=desc.value||realm.intrinsics.undefined;if(O===realm.$GlobalObject)generator.emitGlobalAssignment(P,
descValue);else generator.emitPropertyAssignment(O,P,descValue)}else generator.emitDefineProperty(O,P,desc,true)}}}function leakDescriptor(realm,desc){if(desc instanceof _descriptors.AbstractJoinedDescriptor){if(desc.descriptor1)leakDescriptor(realm,desc.descriptor1);if(desc.descriptor2)leakDescriptor(realm,desc.descriptor2)}(0,_invariant.default)(desc instanceof _descriptors.PropertyDescriptor);if(desc.value)if(desc.value instanceof _index.Value)_singletons.Leak.value(realm,desc.value);else if(desc.value!==
undefined)for(let val of desc.value)_singletons.Leak.value(realm,val);if(desc.get)_singletons.Leak.value(realm,desc.get);if(desc.set)_singletons.Leak.value(realm,desc.set)}function parentPermitsChildPropertyCreation(realm,O,P){if(O.isSimpleObject())return true;let ownDesc=O.$GetOwnProperty(P);if(!ownDesc||ownDesc.mightHaveBeenDeleted()){let parent=O.$GetPrototypeOf();if(!(parent instanceof _index.NullValue)){parent=parent.throwIfNotConcreteObject();if(!parentPermitsChildPropertyCreation(realm,parent,
P))return false}if(!ownDesc)return true}(0,_invariant.default)(ownDesc!==undefined);if((0,_index2.IsDataDescriptor)(realm,ownDesc))if(ownDesc.writable)return true;return false}function ensureIsNotFinal(realm,O,P){if(O.mightNotBeFinalObject())return;if(realm.instantRender.enabled)realm.instantRenderBailout("Object mutations that require materialization are currently not supported by InstantRender",realm.currentLocation);else{let error=new _errors.CompilerDiagnostic("Mutating a final object, or an object with unknown properties, after some of those "+
"properties have already been used, is not supported.",realm.currentLocation,"PP0026","FatalError");realm.handleError(error);throw new _errors.FatalError;}}function isWidenedValue(v){if(!(v instanceof _index.AbstractValue))return false;if(v.kind==="widened"||v.kind==="widened property")return true;for(let a of v.args)if(isWidenedValue(a))return true;return false}class PropertiesImplementation{OrdinarySet(realm,O,P,V,Receiver){ensureIsNotFinal(realm,O,P);if(!realm.ignoreLeakLogic&&O.mightBeLeakedObject()){_singletons.Leak.value(realm,
V);_singletons.Leak.value(realm,Receiver);if(realm.generator!==undefined)realm.generator.emitPropertyAssignment(Receiver,StringKey(P),V);return true}let weakDeletion=V.mightHaveBeenDeleted();(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,P),"expected property key");let ownDesc=O.$GetOwnProperty(P);if(!ownDesc||ownDesc.mightHaveBeenDeleted()){let parent=O.$GetPrototypeOf();if(!(parent instanceof _index.NullValue)){parent=parent.throwIfNotConcreteObject();if(!ownDesc)return parent.$Set(P,V,
Receiver);if(!parentPermitsChildPropertyCreation(realm,parent,P)){let error=new _errors.CompilerDiagnostic("assignment might or might not invoke a setter",realm.currentLocation,"PP0043","RecoverableError");if(realm.handleError(error)!=="Recover")throw new _errors.FatalError;}}if(!ownDesc)ownDesc=new _descriptors.PropertyDescriptor({value:realm.intrinsics.undefined,writable:true,enumerable:true,configurable:true})}if(ownDesc instanceof _descriptors.AbstractJoinedDescriptor){let joinCondition=ownDesc.joinCondition;
let descriptor2=ownDesc.descriptor2;ownDesc=ownDesc.descriptor1;let e1=_singletons.Path.withCondition(joinCondition,()=>{return ownDesc!==undefined?realm.evaluateForEffects(()=>new _index.BooleanValue(realm,OrdinarySetHelper()),undefined,"OrdinarySet/1"):(0,_realm.construct_empty_effects)(realm)});let {result:result1,generator:generator1,modifiedBindings:modifiedBindings1,modifiedProperties:modifiedProperties1,createdObjects:createdObjects1}=e1;ownDesc=descriptor2;let e2=_singletons.Path.withInverseCondition(joinCondition,
()=>{return ownDesc!==undefined?realm.evaluateForEffects(()=>new _index.BooleanValue(realm,OrdinarySetHelper()),undefined,"OrdinarySet/2"):(0,_realm.construct_empty_effects)(realm)});let {result:result2,generator:generator2,modifiedBindings:modifiedBindings2,modifiedProperties:modifiedProperties2,createdObjects:createdObjects2}=e2;let joinedEffects=_singletons.Join.joinEffects(joinCondition,new _realm.Effects(result1,generator1,modifiedBindings1,modifiedProperties1,createdObjects1),new _realm.Effects(result2,
generator2,modifiedBindings2,modifiedProperties2,createdObjects2));realm.applyEffects(joinedEffects);return _singletons.To.ToBooleanPartial(realm,realm.returnOrThrowCompletion(joinedEffects.result))}return OrdinarySetHelper();function OrdinarySetHelper(){(0,_invariant.default)(ownDesc!==undefined);if((0,_index2.IsDataDescriptor)(realm,ownDesc)){if(!ownDesc.writable&&!weakDeletion){if(ownDesc.value&&ownDesc.value.mightHaveBeenDeleted()){let error=new _errors.CompilerDiagnostic("assignment might or might not invoke a setter",
realm.currentLocation,"PP0043","RecoverableError");if(realm.handleError(error)!=="Recover")throw new _errors.FatalError;}return false}if(!Receiver.mightBeObject())return false;(0,_invariant.default)(Receiver instanceof _index.ObjectValue||Receiver instanceof _index.AbstractObjectValue);let existingDescriptor=Receiver.$GetOwnProperty(P);if(existingDescriptor instanceof _descriptors.AbstractJoinedDescriptor)if(existingDescriptor.descriptor1===ownDesc)existingDescriptor=ownDesc;else if(existingDescriptor.descriptor2===
ownDesc)existingDescriptor=ownDesc;let existingDescValue=!existingDescriptor?realm.intrinsics.undefined:existingDescriptor.value===undefined?realm.intrinsics.undefined:existingDescriptor.value;(0,_invariant.default)(existingDescValue instanceof _index.Value);if(existingDescriptor!==undefined){if((0,_index2.IsAccessorDescriptor)(realm,existingDescriptor)){(0,_invariant.default)(!existingDescValue.mightHaveBeenDeleted(),"should not fail until weak deletes of accessors are suppported");return false}if(!existingDescriptor.writable&&
!(weakDeletion&&existingDescriptor.configurable)){if(existingDescValue.mightHaveBeenDeleted()){(0,_invariant.default)(existingDescValue instanceof _index.AbstractValue);_index.AbstractValue.reportIntrospectionError(existingDescValue);throw new _errors.FatalError;}return false}let valueDesc=new _descriptors.PropertyDescriptor({value:V});if(weakDeletion||existingDescValue.mightHaveBeenDeleted()){valueDesc=existingDescriptor;valueDesc.throwIfNotConcrete(realm).value=V}return Receiver.$DefineOwnProperty(P,
valueDesc)}else return _singletons.Create.CreateDataProperty(realm,Receiver,P,V)}(0,_invariant.default)((0,_index2.IsAccessorDescriptor)(realm,ownDesc),"expected accessor");let setter=ownDesc.set;if(!setter||setter instanceof _index.UndefinedValue)return false;(0,_index2.Call)(realm,setter.throwIfNotConcrete(),Receiver,[V]);return true}}OrdinarySetPartial(realm,O,P,V,Receiver){if(!(P instanceof _index.AbstractValue))return O.$Set(P,V,Receiver);let pIsLoopVar=isWidenedValue(P);let pIsNumeric=_index.Value.isTypeCompatibleWith(P.getType(),
_index.NumberValue);if(P.mightNotBeString()&&P.mightNotBeNumber()&&!P.isSimpleObject())if(realm.isInPureScope())_singletons.Leak.value(realm,P);else{let error=new _errors.CompilerDiagnostic("property key might not have a well behaved toString or be a symbol",realm.currentLocation,"PP0002","RecoverableError");if(realm.handleError(error)!=="Recover")throw new _errors.FatalError;}if(!O.isSimpleObject())if(realm.isInPureScope()){_singletons.Leak.value(realm,Receiver);_singletons.Leak.value(realm,V);realm.evaluateWithPossibleThrowCompletion(()=>
{let generator=realm.generator;(0,_invariant.default)(generator);(0,_invariant.default)(P instanceof _index.AbstractValue);generator.emitPropertyAssignment(Receiver,P,V);return realm.intrinsics.undefined},_index3.TypesDomain.topVal,_index3.ValuesDomain.topVal);return true}else{let error=new _errors.CompilerDiagnostic("unknown property access might need to invoke a setter",realm.currentLocation,"PP0030","RecoverableError");if(realm.handleError(error)!=="Recover")throw new _errors.FatalError;}let abstractOverO=
false;if(Receiver instanceof _index.AbstractObjectValue&&!Receiver.values.isTop()){let elements=Receiver.values.getElements();(0,_invariant.default)(elements);if(elements.has(O))abstractOverO=true}(0,_invariant.default)(O===Receiver||(0,_index2.HasCompatibleType)(Receiver,_index.PrimitiveValue)||abstractOverO);P=_singletons.To.ToStringAbstract(realm,P);function createTemplate(propName){return _index.AbstractValue.createFromBinaryOp(realm,"===",propName,new _index.StringValue(realm,""),undefined,"template for property name condition")}
let prop;if(O.unknownProperty===undefined){prop={descriptor:undefined,object:O,key:P};O.unknownProperty=prop}else prop=O.unknownProperty;realm.recordModifiedProperty(prop);let desc=prop.descriptor;if(desc===undefined){let newVal=V;if(!(V instanceof _index.UndefinedValue)&&!isWidenedValue(P)){let cond=createTemplate(P);let sentinel=_index.AbstractValue.createFromType(realm,_index.Value,"template for prototype member expression",[Receiver,P]);newVal=_index.AbstractValue.createFromConditionalOp(realm,
cond,V,sentinel)}prop.descriptor=new _descriptors.PropertyDescriptor({writable:true,enumerable:true,configurable:true,value:newVal})}else{(0,_invariant.default)(desc instanceof _descriptors.PropertyDescriptor,"unknown properties are only created with Set and have equal descriptors");let oldVal=desc.value;(0,_invariant.default)(oldVal);let newVal=oldVal;if(!(V instanceof _index.UndefinedValue))if(isWidenedValue(P))newVal=V;else{let cond=createTemplate(P);newVal=_index.AbstractValue.createFromConditionalOp(realm,
cond,V,oldVal)}desc.value=newVal}let savedUnknownProperty=O.unknownProperty;O.unknownProperty=undefined;for(let [key,propertyBinding]of O.properties){if(pIsLoopVar&&pIsNumeric){if(key!==+key+"")continue;O.properties.delete(key);continue}let oldVal=realm.intrinsics.empty;if(propertyBinding.descriptor){let d=propertyBinding.descriptor.throwIfNotConcrete(realm);if(d.value)oldVal=d.value}let cond=_index.AbstractValue.createFromBinaryOp(realm,"===",P,new _index.StringValue(realm,key));let newVal=_index.AbstractValue.createFromConditionalOp(realm,
cond,V,oldVal);this.OrdinarySet(realm,O,key,newVal,Receiver)}O.unknownProperty=savedUnknownProperty;return true}FromPropertyDescriptor(realm,Desc){if(!Desc)return realm.intrinsics.undefined;if(Desc instanceof _descriptors.AbstractJoinedDescriptor)return _index.AbstractValue.createFromConditionalOp(realm,Desc.joinCondition,this.FromPropertyDescriptor(realm,Desc.descriptor1),this.FromPropertyDescriptor(realm,Desc.descriptor2));(0,_invariant.default)(Desc instanceof _descriptors.PropertyDescriptor);
let obj=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);(0,_invariant.default)(obj.getExtensible(),"expected an extensible object");(0,_invariant.default)(!obj.properties.size,"expected an object with no own properties");let success=true;if(Desc.value!==undefined)success=_singletons.Create.CreateDataProperty(realm,obj,"value",Desc.value)&&success;if(Desc.writable!==undefined)success=_singletons.Create.CreateDataProperty(realm,obj,"writable",new _index.BooleanValue(realm,Desc.writable))&&
success;if(Desc.get!==undefined)success=_singletons.Create.CreateDataProperty(realm,obj,"get",Desc.get)&&success;if(Desc.set!==undefined)success=_singletons.Create.CreateDataProperty(realm,obj,"set",Desc.set)&&success;if(Desc.enumerable!==undefined)success=_singletons.Create.CreateDataProperty(realm,obj,"enumerable",new _index.BooleanValue(realm,Desc.enumerable))&&success;if(Desc.configurable!==undefined)success=_singletons.Create.CreateDataProperty(realm,obj,"configurable",new _index.BooleanValue(realm,
Desc.configurable))&&success;(0,_invariant.default)(success,"fails to create data property");return obj}OrdinaryDelete(realm,O,P){(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,P),"expected a property key");let desc=O.$GetOwnProperty(P);if(!desc){ensureIsNotFinal(realm,O,P);if(!realm.ignoreLeakLogic&&O.mightBeLeakedObject())if(realm.generator!==undefined)realm.generator.emitPropertyDelete(O,StringKey(P));return true}desc=desc.throwIfNotConcrete(realm);if(desc.configurable){ensureIsNotFinal(realm,
O,P);if(O.mightBeLeakedObject()){if(realm.generator!==undefined)realm.generator.emitPropertyDelete(O,StringKey(P));return true}let key=InternalGetPropertiesKey(P);let map=InternalGetPropertiesMap(O,P);let propertyBinding=map.get(key);if(propertyBinding===undefined&&O.isPartialObject()&&O.isSimpleObject()){let generator=realm.generator;if(generator){(0,_invariant.default)(typeof key==="string"||key instanceof _index.SymbolValue);generator.emitPropertyDelete(O,StringKey(key));return true}}(0,_invariant.default)(propertyBinding!==
undefined);realm.recordModifiedProperty(propertyBinding);propertyBinding.descriptor=undefined;InternalUpdatedProperty(realm,O,P,desc);return true}return false}DeletePropertyOrThrow(realm,O,P){(0,_invariant.default)(O instanceof _index.ObjectValue,"expected an object");(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,P),"expected a property key");let success=O.$Delete(P);if(!success)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"couldn't delete property");return success}CompletePropertyDescriptor(realm,
_Desc){let Desc=_Desc.throwIfNotConcrete(realm);let like={value:realm.intrinsics.undefined,get:realm.intrinsics.undefined,set:realm.intrinsics.undefined,writable:false,enumerable:false,configurable:false};if((0,_index2.IsGenericDescriptor)(realm,Desc)||(0,_index2.IsDataDescriptor)(realm,Desc)){if(Desc.value===undefined)Desc.value=like.value;if(Desc.writable===undefined)Desc.writable=like.writable}else{if(Desc.get===undefined)Desc.get=like.get;if(Desc.set===undefined)Desc.set=like.set}if(Desc.enumerable===
undefined)Desc.enumerable=like.enumerable;if(Desc.configurable===undefined)Desc.configurable=like.configurable;return Desc}IsCompatiblePropertyDescriptor(realm,extensible,Desc,current){return this.ValidateAndApplyPropertyDescriptor(realm,undefined,undefined,extensible,Desc,current)}ValidateAndApplyPropertyDescriptor(realm,O,P,extensible,_Desc,_current){let Desc=_Desc;let current=_current;if(O!==undefined){(0,_invariant.default)(P!==undefined);(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,
P))}if(current instanceof _descriptors.AbstractJoinedDescriptor){let jc=current.joinCondition;if(_singletons.Path.implies(jc))current=current.descriptor1;else if(!_index.AbstractValue.createFromUnaryOp(realm,"!",jc,true).mightNotBeTrue())current=current.descriptor2}if(!current){if(!extensible)return false;(0,_invariant.default)(extensible===true,"expected extensible to be true");if(O!==undefined&&P!==undefined){ensureIsNotFinal(realm,O,P);if(!realm.ignoreLeakLogic&&O.mightBeLeakedObject()){leakDescriptor(realm,
Desc);if(realm.generator!==undefined)realm.generator.emitDefineProperty(O,StringKey(P),Desc.throwIfNotConcrete(realm));return true}}if((0,_index2.IsGenericDescriptor)(realm,Desc)||(0,_index2.IsDataDescriptor)(realm,Desc)){if(O!==undefined){(0,_invariant.default)(P!==undefined);InternalSetProperty(realm,O,P,new _descriptors.PropertyDescriptor({value:Desc.value!==undefined?Desc.value:realm.intrinsics.undefined,writable:Desc.writable!==undefined?Desc.writable:false,enumerable:Desc.enumerable!==undefined?
Desc.enumerable:false,configurable:Desc.configurable!==undefined?Desc.configurable:false}));InternalUpdatedProperty(realm,O,P,undefined)}}else if(O!==undefined){(0,_invariant.default)(P!==undefined);Desc=Desc.throwIfNotConcrete(realm);InternalSetProperty(realm,O,P,new _descriptors.PropertyDescriptor({get:Desc.get!==undefined?Desc.get:realm.intrinsics.undefined,set:Desc.set!==undefined?Desc.set:realm.intrinsics.undefined,enumerable:Desc.enumerable!==undefined?Desc.enumerable:false,configurable:Desc.configurable!==
undefined?Desc.configurable:false}));InternalUpdatedProperty(realm,O,P,undefined)}return true}current=current.throwIfNotConcrete(realm);Desc=Desc.throwIfNotConcrete(realm);let allAbsent=true;for(let field in Desc)if(Desc[field]!==undefined){allAbsent=false;break}if(allAbsent)return true;let identical=true;for(let field in Desc){if(Desc[field]===undefined)continue;if(current[field]===undefined)identical=false;else{let dval=InternalDescriptorPropertyToValue(realm,Desc[field]);let cval=InternalDescriptorPropertyToValue(realm,
current[field]);if(dval instanceof _index.ConcreteValue&&cval instanceof _index.ConcreteValue)identical=(0,_index2.SameValue)(realm,dval,cval);else identical=dval===cval}if(!identical)break}if(identical&&(O===realm.$GlobalObject||O!==undefined&&!O.isIntrinsic()))return true;let mightHaveBeenDeleted=current.value instanceof _index.Value&&current.value.mightHaveBeenDeleted();if(!current.configurable){(0,_invariant.default)(!mightHaveBeenDeleted,"a non-configurable property can't be deleted");if(Desc.configurable)return false;
if(Desc.enumerable!==undefined&&Desc.enumerable!==current.enumerable)return false}current=current.throwIfNotConcrete(realm);Desc=Desc.throwIfNotConcrete(realm);if(O!==undefined&&P!==undefined){ensureIsNotFinal(realm,O,P);if(!realm.ignoreLeakLogic&&O.mightBeLeakedObject()){leakDescriptor(realm,Desc);if(realm.generator!==undefined)realm.generator.emitDefineProperty(O,StringKey(P),Desc);return true}}let oldDesc=current;current=(0,_descriptors.cloneDescriptor)(current);(0,_invariant.default)(current!==
undefined);if((0,_index2.IsGenericDescriptor)(realm,Desc));else if((0,_index2.IsDataDescriptor)(realm,current)!==(0,_index2.IsDataDescriptor)(realm,Desc)){if(!current.configurable)return false;if((0,_index2.IsDataDescriptor)(realm,current)){if(O!==undefined){(0,_invariant.default)(P!==undefined);current.writable=undefined;current.value=undefined;current.get=realm.intrinsics.undefined;current.set=realm.intrinsics.undefined}}else if(O!==undefined){(0,_invariant.default)(P!==undefined);current.get=undefined;
current.set=undefined;current.writable=false;current.value=realm.intrinsics.undefined}}else if((0,_index2.IsDataDescriptor)(realm,current)&&(0,_index2.IsDataDescriptor)(realm,Desc))if(!current.configurable){if(!current.writable&&Desc.writable)return false;if(!current.writable){let descValue=Desc.value||realm.intrinsics.undefined;(0,_invariant.default)(descValue instanceof _index.Value);let currentValue=current.value||realm.intrinsics.undefined;(0,_invariant.default)(currentValue instanceof _index.Value);
if(Desc.value&&!(0,_index2.SameValuePartial)(realm,descValue,currentValue))return false}}else;else if(!current.configurable){if(Desc.set&&!(0,_index2.SameValuePartial)(realm,Desc.set,current.set||realm.intrinsics.undefined))return false;if(Desc.get&&!(0,_index2.SameValuePartial)(realm,Desc.get,current.get||realm.intrinsics.undefined))return false}if(mightHaveBeenDeleted){let unknownEnumerable=Desc.enumerable===undefined&&!!current.enumerable;let unknownWritable=Desc.writable===undefined&&!!current.writable;
if(unknownEnumerable||unknownWritable){let error=new _errors.CompilerDiagnostic("unknown descriptor attributes on deleted property",realm.currentLocation,"PP0038","RecoverableError");if(realm.handleError(error)!=="Recover")throw new _errors.FatalError;}}if(O!==undefined){(0,_invariant.default)(P!==undefined);let key=InternalGetPropertiesKey(P);let map=InternalGetPropertiesMap(O,P);let propertyBinding=map.get(key);if(propertyBinding===undefined){propertyBinding={descriptor:undefined,object:O,key:key};
realm.recordModifiedProperty(propertyBinding);propertyBinding.descriptor=current;map.set(key,propertyBinding)}else if(propertyBinding.descriptor===undefined){realm.recordModifiedProperty(propertyBinding);propertyBinding.descriptor=current}else{realm.recordModifiedProperty(propertyBinding);propertyBinding.descriptor=current}for(let field in Desc)if(Desc[field]!==undefined)current[field]=Desc[field];InternalUpdatedProperty(realm,O,P,oldDesc)}return true}OrdinaryDefineOwnProperty(realm,O,P,Desc){(0,
_invariant.default)(O instanceof _index.ObjectValue);let current=O.$GetOwnProperty(P);let extensible=O.getExtensible();return this.ValidateAndApplyPropertyDescriptor(realm,O,P,extensible,Desc,current)}ObjectDefineProperties(realm,O,Properties){if(O.mightNotBeObject()){if(O.mightBeObject())O.throwIfNotConcrete();throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}(0,_invariant.default)(O instanceof _index.ObjectValue||O instanceof _index.AbstractObjectValue);let props=_singletons.To.ToObject(realm,
Properties);let keys=props.$OwnPropertyKeys();let descriptors=[];for(let nextKey of keys){let propDesc=props.$GetOwnProperty(nextKey);if(propDesc&&propDesc.throwIfNotConcrete(realm).enumerable){this.ThrowIfMightHaveBeenDeleted(propDesc);let descObj=(0,_index2.Get)(realm,props,nextKey);let desc=_singletons.To.ToPropertyDescriptor(realm,descObj);descriptors.push([nextKey,desc])}}for(let pair of descriptors){let P=pair[0];let desc=pair[1];this.DefinePropertyOrThrow(realm,O,P,desc)}return O}Set(realm,
O,P,V,Throw){(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,P),"expected property key");(0,_invariant.default)(typeof Throw==="boolean","expected boolean");let success=O.$Set(P,V,O);if(success===false&&Throw===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return success}DefinePropertyOrThrow(realm,O,P,desc){(0,_invariant.default)(typeof P==="string"||(0,_index2.IsPropertyKey)(realm,P),"expected property key");let success=O.$DefineOwnProperty(P,desc);if(success===
false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return success}PutValue(realm,V,W){W=W.promoteEmptyToUndefined();if(!(V instanceof _environment.Reference))throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError,"can't put a value to a non-reference");let base=_singletons.Environment.GetBase(realm,V);if(_singletons.Environment.IsUnresolvableReference(realm,V)){if(_singletons.Environment.IsStrictReference(realm,V))throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError);
let globalObj=(0,_index2.GetGlobalObject)(realm);return this.Set(realm,globalObj,_singletons.Environment.GetReferencedName(realm,V),W,false)}if(_singletons.Environment.IsPropertyReference(realm,V)){if(base instanceof _index.AbstractValue)base=_singletons.To.ToObject(realm,base);if(_singletons.Environment.HasPrimitiveBase(realm,V)){(0,_invariant.default)(base instanceof _index.Value&&!(0,_index2.HasSomeCompatibleType)(base,_index.UndefinedValue,_index.NullValue));base=_singletons.To.ToObject(realm,
base)}(0,_invariant.default)(base instanceof _index.ObjectValue||base instanceof _index.AbstractObjectValue);let succeeded=base.$SetPartial(_singletons.Environment.GetReferencedNamePartial(realm,V),W,(0,_index2.GetThisValue)(realm,V));if(succeeded===false&&_singletons.Environment.IsStrictReference(realm,V))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return}if(base instanceof _environment.EnvironmentRecord){let referencedName=_singletons.Environment.GetReferencedName(realm,V);
(0,_invariant.default)(typeof referencedName==="string");return base.SetMutableBinding(referencedName,W,_singletons.Environment.IsStrictReference(realm,V))}(0,_invariant.default)(false)}ArraySetLength(realm,A,_Desc){let Desc=_Desc.throwIfNotConcrete(realm);let DescValue=Desc.value;if(!DescValue)return this.OrdinaryDefineOwnProperty(realm,A,"length",Desc);(0,_invariant.default)(DescValue instanceof _index.Value);let newLenDesc=new _descriptors.PropertyDescriptor(Desc);let newLen=_singletons.To.ToUint32(realm,
DescValue);let numberLen=_singletons.To.ToNumber(realm,DescValue);if(newLen!==numberLen)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"should be a uint");newLenDesc.value=new _index.NumberValue(realm,newLen);let oldLenDesc=this.OrdinaryGetOwnProperty(realm,A,"length");(0,_invariant.default)(oldLenDesc!==undefined&&!(0,_index2.IsAccessorDescriptor)(realm,oldLenDesc),"cannot be undefined or an accessor descriptor");oldLenDesc=oldLenDesc.throwIfNotConcrete(realm);let oldLen=oldLenDesc.value;
(0,_invariant.default)(oldLen instanceof _index.Value);oldLen=oldLen.throwIfNotConcrete();(0,_invariant.default)(oldLen instanceof _index.NumberValue,"should be a number");oldLen=oldLen.value;if(newLen>=oldLen)return this.OrdinaryDefineOwnProperty(realm,A,"length",newLenDesc);if(!oldLenDesc.writable)return false;let newWritable;if(newLenDesc.writable===undefined||newLenDesc.writable===true)newWritable=true;else{newWritable=false;newLenDesc.writable=true}let succeeded=this.OrdinaryDefineOwnProperty(realm,
A,"length",newLenDesc);if(succeeded===false)return false;let oldLenCopy=oldLen;let keys=Array.from(A.properties.keys()).map((x)=>parseInt(x,10)).filter((x)=>newLen<=x&&x<=oldLenCopy).sort().reverse();for(let key of keys){oldLen=key;let deleteSucceeded=A.$Delete(oldLen+"");if(deleteSucceeded===false){newLenDesc.value=new _index.NumberValue(realm,oldLen+1);if(newWritable===false)newLenDesc.writable=false;succeeded=this.OrdinaryDefineOwnProperty(realm,A,"length",newLenDesc);return false}}if(!newWritable)return this.OrdinaryDefineOwnProperty(realm,
A,"length",new _descriptors.PropertyDescriptor({writable:false}));return true}OrdinaryGetOwnProperty(realm,O,P){if(!realm.ignoreLeakLogic&&O.mightBeLeakedObject()){if(!O.mightNotBeFinalObject()){let existingBinding=InternalGetPropertiesMap(O,P).get(InternalGetPropertiesKey(P));if(existingBinding&&existingBinding.descriptor)return existingBinding.descriptor;else return undefined}let propName=P;if(typeof propName==="string")propName=new _index.StringValue(realm,propName);let absVal=_index.AbstractValue.createTemporalFromBuildFunction(realm,
_index.Value,[O._templateFor||O,propName],(0,_generator.createOperationDescriptor)("ABSTRACT_PROPERTY"),{isPure:true});return new _descriptors.PropertyDescriptor({configurable:true,enumerable:true,value:absVal,writable:true})}(0,_invariant.default)((0,_index2.IsPropertyKey)(realm,P),"expected a property key");let existingBinding=InternalGetPropertiesMap(O,P).get(InternalGetPropertiesKey(P));if(!existingBinding){if(O.isPartialObject()){(0,_invariant.default)(realm.useAbstractInterpretation);if(O.isSimpleObject()){if(P instanceof
_index.StringValue)P=P.value;if(typeof P==="string"){let absVal;function createAbstractPropertyValue(type){(0,_invariant.default)(typeof P==="string");if(O.isTransitivelySimple())return _index.AbstractValue.createFromBuildFunction(realm,type,[O._templateFor||O,new _index.StringValue(realm,P)],(0,_generator.createOperationDescriptor)("ABSTRACT_PROPERTY"),{kind:_index.AbstractValue.makeKind("property",P)});else if(realm.generator!==undefined)return _index.AbstractValue.createTemporalFromBuildFunction(realm,
type,[O._templateFor||O,new _index.StringValue(realm,P)],(0,_generator.createOperationDescriptor)("ABSTRACT_PROPERTY"),{skipInvariant:true,isPure:true});else return _index.AbstractValue.createFromBuildFunction(realm,type,[O._templateFor||O,new _index.StringValue(realm,P)],(0,_generator.createOperationDescriptor)("ABSTRACT_PROPERTY"),{kind:"environment initialization expression"})}if(O.isTransitivelySimple()){absVal=createAbstractPropertyValue(_index.ObjectValue);(0,_invariant.default)(absVal instanceof
_index.AbstractObjectValue);absVal.makeSimple("transitive");absVal=_index.AbstractValue.createAbstractConcreteUnion(realm,absVal,[realm.intrinsics.undefined,realm.intrinsics.null])}else absVal=createAbstractPropertyValue(_index.Value);return new _descriptors.PropertyDescriptor({configurable:true,enumerable:true,value:absVal,writable:true})}else{(0,_invariant.default)(P instanceof _index.SymbolValue);return undefined}}_index.AbstractValue.reportIntrospectionError(O,P);throw new _errors.FatalError;
}else if(realm.invariantLevel>=2&&O.isIntrinsic()&&!_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)){let realmGenerator=realm.generator;if(realmGenerator&&typeof P==="string"&&O!==realm.$GlobalObject&&!realm.hasBindingBeenChecked(O,P)){realm.markPropertyAsChecked(O,P);realmGenerator.emitPropertyInvariant(O,P,"MISSING")}}return undefined}realm.callReportPropertyAccess(existingBinding,false);if(!existingBinding.descriptor){if(realm.invariantLevel>=2&&O.isIntrinsic()){let realmGenerator=
realm.generator;if(realmGenerator&&typeof P==="string"&&O!==realm.$GlobalObject&&!realm.hasBindingBeenChecked(O,P)){realm.markPropertyAsChecked(O,P);realmGenerator.emitPropertyInvariant(O,P,"MISSING")}}return undefined}let D=new _descriptors.PropertyDescriptor({});let X=existingBinding.descriptor;(0,_invariant.default)(X!==undefined);if(X instanceof _descriptors.AbstractJoinedDescriptor)return new _descriptors.AbstractJoinedDescriptor(X.joinCondition,X.descriptor1,X.descriptor2);(0,_invariant.default)(X instanceof
_descriptors.PropertyDescriptor);if((0,_index2.IsDataDescriptor)(realm,X)){let value=X.value;if(O.isIntrinsic()&&O.isPartialObject())if(value instanceof _index.AbstractValue){let savedUnion;if(value.kind==="abstractConcreteUnion"){savedUnion=value;value=savedUnion.args[0];(0,_invariant.default)(value instanceof _index.AbstractValue)}if(value.kind!=="resolved"){let realmGenerator=realm.generator;(0,_invariant.default)(realmGenerator);(0,_invariant.default)(value.operationDescriptor);const functionResultType=
value instanceof _index.AbstractObjectValue?value.functionResultType:undefined;value=realmGenerator.deriveAbstract(value.types,value.values,value.args,value.operationDescriptor,{isPure:true,kind:"resolved",skipInvariant:true});if(savedUnion!==undefined){(0,_invariant.default)(value instanceof _index.AbstractValue);let concreteValues=savedUnion.args.filter((e)=>e instanceof _index.ConcreteValue);(0,_invariant.default)(concreteValues.length===savedUnion.args.length-1);value=_index.AbstractValue.createAbstractConcreteUnion(realm,
value,concreteValues)}if(functionResultType!==undefined){(0,_invariant.default)(value instanceof _index.AbstractObjectValue);value.functionResultType=functionResultType}if(realm.invariantLevel>=1&&typeof P==="string"&&!realm.hasBindingBeenChecked(O,P)){realm.markPropertyAsChecked(O,P);realmGenerator.emitFullInvariant(O,P,value)}InternalSetProperty(realm,O,P,new _descriptors.PropertyDescriptor({value:value,writable:X.writable!==undefined?X.writable:false,enumerable:X.enumerable!==undefined?X.enumerable:
false,configurable:X.configurable!==undefined?X.configurable:false}))}}else{if(realm.invariantLevel>=1&&value instanceof _index.Value&&!(value instanceof _index.AbstractValue)){let realmGenerator=realm.generator;(0,_invariant.default)(realmGenerator);if(typeof P==="string"&&!realm.hasBindingBeenChecked(O,P)){realm.markPropertyAsChecked(O,P);realmGenerator.emitFullInvariant(O,P,value)}}}else if(O!==realm.$GlobalObject&&O.isIntrinsic()&&realm.invariantLevel>=2&&value instanceof _index.Value){let realmGenerator=
realm.generator;if(realmGenerator&&typeof P==="string"&&!realm.hasBindingBeenChecked(O,P)){realm.markPropertyAsChecked(O,P);realmGenerator.emitFullInvariant(O,P,value)}}D.value=value;D.writable=X.writable}else{(0,_invariant.default)((0,_index2.IsAccessorDescriptor)(realm,X),"expected accessor property");D.get=X.get;D.set=X.set}D.enumerable=X.enumerable;D.configurable=X.configurable;return D}OrdinarySetPrototypeOf(realm,O,V){ensureIsNotFinal(realm,O);if(!realm.ignoreLeakLogic&&O.mightBeLeakedObject())throw new _errors.FatalError;
(0,_invariant.default)(V instanceof _index.ObjectValue||V instanceof _index.NullValue);let extensible=O.getExtensible();let current=O.$Prototype;if((0,_index2.SameValuePartial)(realm,V,current))return true;if(!extensible)return false;let p=V;let done=false;while(!done)if(p instanceof _index.NullValue)done=true;else if((0,_index2.SameValuePartial)(realm,p,O))return false;else if(!p.usesOrdinaryObjectInternalPrototypeMethods())done=true;else{p=p.$Prototype;if(p instanceof _index.AbstractObjectValue){_index.AbstractValue.reportIntrospectionError(p);
throw new _errors.FatalError;}}O.$Prototype=V;return true}EnumerateObjectProperties(realm,O){let visited=new global.Set;let obj=O;let keys=O.$OwnPropertyKeys();let index=0;let iterator=new _index.ObjectValue(realm);iterator.defineNativeMethod("next",0,()=>{while(true){if(index>=keys.length){let proto=obj.$GetPrototypeOf();if(proto instanceof _index.NullValue)return _singletons.Create.CreateIterResultObject(realm,realm.intrinsics.undefined,true);obj=proto;keys=obj.$OwnPropertyKeys();index=0}let key=
keys[index];if(!(key instanceof _index.StringValue)){index+=1;continue}let desc=obj.$GetOwnProperty(key);if(desc&&!desc.throwIfNotConcrete(realm).enumerable){this.ThrowIfMightHaveBeenDeleted(desc);index+=1;visited.add(key.value);continue}if(visited.has(key.value)){index+=1;continue}visited.add(key.value);return _singletons.Create.CreateIterResultObject(realm,key,false)}});return iterator}ThrowIfMightHaveBeenDeleted(desc){if(desc instanceof _descriptors.AbstractJoinedDescriptor){if(desc.descriptor1)this.ThrowIfMightHaveBeenDeleted(desc.descriptor1);
if(desc.descriptor2)this.ThrowIfMightHaveBeenDeleted(desc.descriptor2)}(0,_invariant.default)(desc instanceof _descriptors.PropertyDescriptor,"internal slots should never assert using this");let value=desc.value;if(value===undefined)return;if(!value.mightHaveBeenDeleted())return;(0,_invariant.default)(value instanceof _index.AbstractValue);let v=value.$Realm.simplifyAndRefineAbstractValue(value);if(!v.mightHaveBeenDeleted())return;_index.AbstractValue.reportIntrospectionError(value);throw new _errors.FatalError;
}ThrowIfInternalSlotNotWritable(realm,object,key){if(!realm.isNewObject(object)){_index.AbstractValue.reportIntrospectionError(object,key);throw new _errors.FatalError;}return object}PropertyDefinitionEvaluation(realm,MethodDefinition,object,env,strictCode,enumerable){if(MethodDefinition.kind==="method"){let methodDef=_singletons.Functions.DefineMethod(realm,MethodDefinition,object,env,strictCode);_singletons.Functions.SetFunctionName(realm,methodDef.$Closure,methodDef.$Key);methodDef.$Closure.$HasComputedName=
!!MethodDefinition.computed;let desc=new _descriptors.PropertyDescriptor({value:methodDef.$Closure,writable:true,enumerable:enumerable,configurable:true});return this.DefinePropertyOrThrow(realm,object,methodDef.$Key,desc)}else if(MethodDefinition.kind==="generator"){let propKey=(0,_ObjectExpression.EvalPropertyName)(MethodDefinition,env,realm,strictCode);let strict=strictCode||(0,_strict.default)(MethodDefinition.body);let scope=env;let closure=_singletons.Functions.GeneratorFunctionCreate(realm,
"method",MethodDefinition.params,MethodDefinition.body,scope,strict);_singletons.Functions.MakeMethod(realm,closure,object);let prototype=_singletons.Create.ObjectCreate(realm,realm.intrinsics.GeneratorPrototype);prototype.originalConstructor=closure;(0,_index2.MakeConstructor)(realm,closure,true,prototype);_singletons.Functions.SetFunctionName(realm,closure,propKey);let desc=new _descriptors.PropertyDescriptor({value:closure,writable:true,enumerable:enumerable,configurable:true});return this.DefinePropertyOrThrow(realm,
object,propKey,desc)}else if(MethodDefinition.kind==="get"){let propKey=(0,_ObjectExpression.EvalPropertyName)(MethodDefinition,env,realm,strictCode);let strict=strictCode||(0,_strict.default)(MethodDefinition.body);let scope=env;let formalParameterList=[];let closure=_singletons.Functions.FunctionCreate(realm,"method",formalParameterList,MethodDefinition.body,scope,strict);_singletons.Functions.MakeMethod(realm,closure,object);_singletons.Functions.SetFunctionName(realm,closure,propKey,"get");closure.$HasComputedName=
!!MethodDefinition.computed;let desc=new _descriptors.PropertyDescriptor({get:closure,enumerable:true,configurable:true});return this.DefinePropertyOrThrow(realm,object,propKey,desc)}else{(0,_invariant.default)(MethodDefinition.kind==="set");let propKey=(0,_ObjectExpression.EvalPropertyName)(MethodDefinition,env,realm,strictCode);let strict=strictCode||(0,_strict.default)(MethodDefinition.body);let scope=env;let closure=_singletons.Functions.FunctionCreate(realm,"method",MethodDefinition.params,MethodDefinition.body,
scope,strict);_singletons.Functions.MakeMethod(realm,closure,object);_singletons.Functions.SetFunctionName(realm,closure,propKey,"set");closure.$HasComputedName=!!MethodDefinition.computed;let desc=new _descriptors.PropertyDescriptor({set:closure,enumerable:true,configurable:true});return this.DefinePropertyOrThrow(realm,object,propKey,desc)}}GetOwnPropertyKeysArray(realm,O,allowAbstractKeys,getOwnPropertyKeysEvenIfPartial){if(O.isPartialObject()&&!getOwnPropertyKeysEvenIfPartial||O.mightBeLeakedObject()||
O.unknownProperty!==undefined){_index.AbstractValue.reportIntrospectionError(O);throw new _errors.FatalError;}let keyArray=Array.from(O.properties.keys());keyArray=keyArray.filter((x)=>{let pb=O.properties.get(x);if(!pb||pb.descriptor===undefined)return false;let pv=pb.descriptor.throwIfNotConcrete(realm).value;if(pv===undefined)return true;(0,_invariant.default)(pv instanceof _index.Value);if(!pv.mightHaveBeenDeleted())return true;(0,_invariant.default)(pv instanceof _index.AbstractValue);if(allowAbstractKeys)return true;
_index.AbstractValue.reportIntrospectionError(pv);throw new _errors.FatalError;});realm.callReportObjectGetOwnProperties(O);return keyArray}}exports.PropertiesImplementation=PropertiesImplementation},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ToImplementation=void 0;var _index=__webpack_require__(15);var _get=__webpack_require__(230);var _singletons=__webpack_require__(236);var _has=__webpack_require__(269);var _call=__webpack_require__(234);
var _errors=__webpack_require__(3);var _is=__webpack_require__(229);var _abstract=__webpack_require__(233);var _index2=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var _generator=__webpack_require__(237);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function modulo(x,y){return x<0?x%y+y:x%y}class ToImplementation{constructor(){this.ElementConv={Int8:this.ToInt8.bind(this),Int16:this.ToInt16.bind(this),
Int32:this.ToInt32.bind(this),Uint8:this.ToUint8.bind(this),Uint16:this.ToUint16.bind(this),Uint32:this.ToUint32.bind(this),Uint8Clamped:this.ToUint8Clamp.bind(this)}}ToInt32(realm,argument){let number=this.ToNumber(realm,argument);if(isNaN(number)||number===0||!isFinite(number))return+0;let int=number<0?-Math.floor(Math.abs(number)):Math.floor(Math.abs(number));let int32bit=modulo(int,Math.pow(2,32));return int32bit>=Math.pow(2,31)?int32bit-Math.pow(2,32):int32bit}ToUint32(realm,argument){let number=
this.ToNumber(realm,argument);if(isNaN(number)||number===0||!isFinite(number))return+0;let int=number<0?-Math.floor(Math.abs(number)):Math.floor(Math.abs(number));let int32bit=modulo(int,Math.pow(2,32));return int32bit}ToInt16(realm,argument){let number=this.ToNumber(realm,argument);if(isNaN(number)||number===0||!isFinite(number))return+0;let int=number<0?-Math.floor(Math.abs(number)):Math.floor(Math.abs(number));let int16bit=modulo(int,Math.pow(2,16));return int16bit>=Math.pow(2,15)?int16bit-Math.pow(2,
16):int16bit}ToUint16(realm,argument){let number=this.ToNumber(realm,argument);if(isNaN(number)||number===0||!isFinite(number))return+0;let int=number<0?-Math.floor(Math.abs(number)):Math.floor(Math.abs(number));let int16bit=modulo(int,Math.pow(2,16));return int16bit}ToInt8(realm,argument){let number=this.ToNumber(realm,argument);if(isNaN(number)||number===0||!isFinite(number))return+0;let int=number<0?-Math.floor(Math.abs(number)):Math.floor(Math.abs(number));let int8bit=modulo(int,Math.pow(2,8));
return int8bit>=Math.pow(2,7)?int8bit-Math.pow(2,8):int8bit}ToUint8(realm,argument){let number=this.ToNumber(realm,argument);if(isNaN(number)||number===0||!isFinite(number))return+0;let int=number<0?-Math.floor(Math.abs(number)):Math.floor(Math.abs(number));let int8bit=modulo(int,Math.pow(2,8));return int8bit}ToUint8Clamp(realm,argument){let number=this.ToNumber(realm,argument);if(isNaN(number))return+0;if(number<=0)return+0;if(number>=255)return 255;let f=Math.floor(number);if(f+.5<number)return f+
1;if(number<f+.5)return f;if(f%2===1)return f+1;return f}thisBooleanValue(realm,value){if(value instanceof _index2.BooleanValue)return value;if(value instanceof _index2.ObjectValue&&value.$BooleanData){const booleanData=value.$BooleanData.throwIfNotConcreteBoolean();(0,_invariant.default)(booleanData instanceof _index2.BooleanValue,"expected boolean data internal slot to be a boolean value");return booleanData}value.throwIfNotConcrete();throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
}thisNumberValue(realm,value){if(value instanceof _index2.NumberValue)return value;if(value instanceof _index2.ObjectValue&&value.$NumberData){const numberData=value.$NumberData.throwIfNotConcreteNumber();(0,_invariant.default)(numberData instanceof _index2.NumberValue,"expected number data internal slot to be a number value");return numberData}value=value.throwIfNotConcrete();throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}thisStringValue(realm,value){if(value instanceof _index2.StringValue)return value;
if(value instanceof _index2.ObjectValue&&value.$StringData){const stringData=value.$StringData.throwIfNotConcreteString();(0,_invariant.default)(stringData instanceof _index2.StringValue,"expected string data internal slot to be a string value");return stringData}value=value.throwIfNotConcrete();throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}ToPropertyDescriptor(realm,Obj){Obj=Obj.throwIfNotConcrete();if(!(Obj instanceof _index2.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
let desc=new _descriptors.PropertyDescriptor({});let hasEnumerable=(0,_has.HasProperty)(realm,Obj,"enumerable");if(hasEnumerable===true){let enu=this.ToBooleanPartial(realm,(0,_get.Get)(realm,Obj,"enumerable"));desc.enumerable=enu===true}let hasConfigurable=(0,_has.HasProperty)(realm,Obj,"configurable");if(hasConfigurable===true){let conf=this.ToBooleanPartial(realm,(0,_get.Get)(realm,Obj,"configurable"));desc.configurable=conf===true}let hasValue=(0,_has.HasProperty)(realm,Obj,"value");if(hasValue===
true){let value=(0,_get.Get)(realm,Obj,"value");desc.value=value}let hasWritable=(0,_has.HasProperty)(realm,Obj,"writable");if(hasWritable===true){let writable=this.ToBooleanPartial(realm,(0,_get.Get)(realm,Obj,"writable"));desc.writable=writable===true}let hasGet=(0,_has.HasProperty)(realm,Obj,"get");if(hasGet===true){let getter=(0,_get.Get)(realm,Obj,"get");if((0,_is.IsCallable)(realm,getter)===false&&!getter.mightBeUndefined())throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
getter.throwIfNotConcrete();desc.get=getter}let hasSet=(0,_has.HasProperty)(realm,Obj,"set");if(hasSet===true){let setter=(0,_get.Get)(realm,Obj,"set");if((0,_is.IsCallable)(realm,setter)===false&&!setter.mightBeUndefined())throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);setter.throwIfNotConcrete();desc.set=setter}if(desc.get||desc.set)if(desc.value!==undefined||desc.writable!==undefined)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return desc}ToObject(realm,
arg){if(arg instanceof _index2.AbstractObjectValue)return arg;if(arg instanceof _index2.AbstractValue)return this._WrapAbstractInObject(realm,arg);if(arg instanceof _index2.UndefinedValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);else if(arg instanceof _index2.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);else if(arg instanceof _index2.BooleanValue){let obj=new _index2.ObjectValue(realm,realm.intrinsics.BooleanPrototype);obj.$BooleanData=arg;
return obj}else if(arg instanceof _index2.NumberValue){let obj=new _index2.ObjectValue(realm,realm.intrinsics.NumberPrototype);obj.$NumberData=arg;return obj}else if(arg instanceof _index2.StringValue){let obj=_singletons.Create.StringCreate(realm,arg,realm.intrinsics.StringPrototype);return obj}else if(arg instanceof _index2.SymbolValue){let obj=new _index2.ObjectValue(realm,realm.intrinsics.SymbolPrototype);obj.$SymbolData=arg;return obj}else if(arg instanceof _index2.ObjectValue)return arg;(0,
_invariant.default)(false)}_WrapAbstractInObject(realm,arg){let obj;switch(arg.getType()){case _index2.IntegralValue:case _index2.NumberValue:obj=new _index2.ObjectValue(realm,realm.intrinsics.NumberPrototype);obj.$NumberData=arg;break;case _index2.StringValue:obj=new _index2.ObjectValue(realm,realm.intrinsics.StringPrototype);obj.$StringData=arg;break;case _index2.BooleanValue:obj=new _index2.ObjectValue(realm,realm.intrinsics.BooleanPrototype);obj.$BooleanData=arg;break;case _index2.SymbolValue:obj=
new _index2.ObjectValue(realm,realm.intrinsics.SymbolPrototype);obj.$SymbolData=arg;break;case _index2.UndefinedValue:case _index2.NullValue:case _index2.PrimitiveValue:if(arg.mightBeNull()||arg.mightHaveBeenDeleted()||arg.mightBeUndefined())throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);default:if(realm.isInPureScope()){obj=_index2.AbstractValue.createFromType(realm,_index2.ObjectValue,"explicit conversion to object",[arg]);(0,_invariant.default)(obj instanceof _index2.AbstractObjectValue)}else obj=
arg.throwIfNotConcreteObject();break}return obj}ToLength(realm,argument){let len=this.ToInteger(realm,argument);if(len<=0)return+0;if(len===+Infinity)return Math.pow(2,53)-1;return Math.min(len,Math.pow(2,53)-1)}ToInteger(realm,argument){let number=this.ToNumber(realm,argument);if(isNaN(number))return+0;if(!isFinite(number)||number===0)return number;return number<0?-Math.floor(Math.abs(number)):Math.floor(Math.abs(number))}ToIndex(realm,value){let index;if(value instanceof _index2.UndefinedValue)index=
0;else{let integerIndex=this.ToInteger(realm,value);if(integerIndex<0)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"integerIndex < 0");index=this.ToLength(realm,integerIndex);if((0,_abstract.SameValueZero)(realm,new _index2.NumberValue(realm,integerIndex),new _index2.NumberValue(realm,index))===false)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"integerIndex < 0");}return index}ToIndexPartial(realm,value){return this.ToIndex(realm,typeof value==="number"?
value:value.throwIfNotConcrete())}ToNumber(realm,val){const num=this.ToNumberOrAbstract(realm,val);if(typeof num!=="number"){_index2.AbstractValue.reportIntrospectionError(num);throw new _errors.FatalError;}return num}ToNumberOrAbstract(realm,val){if(typeof val==="number")return val;else if(val instanceof _index2.AbstractValue)return val;else if(val instanceof _index2.UndefinedValue)return NaN;else if(val instanceof _index2.NullValue)return+0;else if(val instanceof _index2.ObjectValue){let prim=this.ToPrimitiveOrAbstract(realm,
val,"number");return this.ToNumberOrAbstract(realm,prim)}else if(val instanceof _index2.BooleanValue)if(val.value===true)return 1;else return 0;else if(val instanceof _index2.NumberValue)return val.value;else if(val instanceof _index2.StringValue)return Number(val.value);else if(val instanceof _index2.SymbolValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);else(0,_invariant.default)(false,"unexpected type of value")}IsToNumberPure(realm,val){if(val instanceof _index2.Value){if(this.IsToPrimitivePure(realm,
val)){let type=val.getType();return type!==_index2.SymbolValue&&type!==_index2.PrimitiveValue&&type!==_index2.Value}return false}return true}ToPrimitive(realm,input,hint){return this.ToPrimitiveOrAbstract(realm,input,hint).throwIfNotConcretePrimitive()}ToPrimitiveOrAbstract(realm,input,hint){if(input instanceof _index2.PrimitiveValue)return input;(0,_invariant.default)(input instanceof _index2.ObjectValue,"expected an object");hint=hint||"default";let exoticToPrim=(0,_get.GetMethod)(realm,input,realm.intrinsics.SymbolToPrimitive);
if(!(exoticToPrim instanceof _index2.UndefinedValue)){let result=(0,_call.Call)(realm,exoticToPrim,input,[new _index2.StringValue(realm,hint)]);if(!(result instanceof _index2.ObjectValue)){(0,_invariant.default)(result instanceof _index2.PrimitiveValue);return result}throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}if(hint==="default")hint="number";return this.OrdinaryToPrimitiveOrAbstract(realm,input,hint)}GetToPrimitivePureResultType(realm,input){let type=input.getType();if(input instanceof
_index2.PrimitiveValue)return type;if(input instanceof _index2.AbstractValue&&!input.mightBeObject())return _index2.PrimitiveValue;return undefined}IsToPrimitivePure(realm,input){return this.GetToPrimitivePureResultType(realm,input)!==undefined}OrdinaryToPrimitive(realm,input,hint){return this.OrdinaryToPrimitiveOrAbstract(realm,input,hint).throwIfNotConcretePrimitive()}OrdinaryToPrimitiveOrAbstract(realm,input,hint){let methodNames;(0,_invariant.default)(input instanceof _index2.ObjectValue,"Expected object");
(0,_invariant.default)(hint==="string"||hint==="number","Expected string or number hint");if(hint==="string")methodNames=["toString","valueOf"];else methodNames=["valueOf","toString"];for(let name of methodNames){let method=(0,_get.Get)(realm,input,new _index2.StringValue(realm,name));if((0,_is.IsCallable)(realm,method)){let result=(0,_call.Call)(realm,method,input);let resultType=result.getType();if(resultType===_index2.Value){(0,_invariant.default)(result instanceof _index2.AbstractValue);let error=
new _errors.CompilerDiagnostic(`${name} might return either an object or primitive`,realm.currentLocation,"PP0028","RecoverableError");realm.handleError(error);throw new _errors.FatalError;}if(_index2.Value.isTypeCompatibleWith(resultType,_index2.PrimitiveValue)){(0,_invariant.default)(result instanceof _index2.AbstractValue||result instanceof _index2.PrimitiveValue);return result}}}throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"can't turn to primitive");}ToString(realm,val){if(typeof val===
"string")return val;else if(val instanceof _index2.StringValue)return val.value;else if(val instanceof _index2.NumberValue)return val.value+"";else if(val instanceof _index2.UndefinedValue)return"undefined";else if(val instanceof _index2.NullValue)return"null";else if(val instanceof _index2.SymbolValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);else if(val instanceof _index2.BooleanValue)return val.value?"true":"false";else if(val instanceof _index2.ObjectValue){let primValue=
this.ToPrimitive(realm,val,"string");return this.ToString(realm,primValue)}else throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"unknown value type, can't coerce to string");}IsToStringPure(realm,input){if(input instanceof _index2.Value)if(this.IsToPrimitivePure(realm,input)){let type=input.getType();return type!==_index2.SymbolValue&&type!==_index2.PrimitiveValue&&type!==_index2.Value}return true}ToStringPartial(realm,val){return this.ToString(realm,typeof val==="string"?val:val.throwIfNotConcrete())}ToStringValue(realm,
val){if(val.getType()===_index2.StringValue)return val;if(val instanceof _index2.ObjectValue){let primValue=this.ToPrimitiveOrAbstract(realm,val,"string");if(primValue.getType()===_index2.StringValue)return primValue;return this.ToStringValue(realm,primValue)}else if(val instanceof _index2.ConcreteValue){let str=this.ToString(realm,val);return new _index2.StringValue(realm,str)}else if(val instanceof _index2.AbstractValue)return this.ToStringAbstract(realm,val);else(0,_invariant.default)(false,"unknown value type, can't coerce to string")}ToStringAbstract(realm,
value){if(value.mightNotBeString()){let result;let coerceToString=(0,_generator.createOperationDescriptor)("COERCE_TO_STRING");if(value.mightBeObject()&&!value.isSimpleObject())result=realm.evaluateWithPossibleThrowCompletion(()=>_index2.AbstractValue.createTemporalFromBuildFunction(realm,_index2.StringValue,[value],coerceToString),_index.TypesDomain.topVal,_index.ValuesDomain.topVal);else result=_index2.AbstractValue.createFromBuildFunction(realm,_index2.StringValue,[value],coerceToString);(0,_invariant.default)(result instanceof
_index2.AbstractValue);return result}return value}ToBoolean(realm,val){if(val instanceof _index2.BooleanValue)return val.value;else if(val instanceof _index2.UndefinedValue)return false;else if(val instanceof _index2.NullValue)return false;else if(val instanceof _index2.NumberValue)return val.value!==0&&!isNaN(val.value);else if(val instanceof _index2.StringValue)return val.value.length>0;else if(val instanceof _index2.ObjectValue)return true;else if(val instanceof _index2.SymbolValue)return true;
else{(0,_invariant.default)(!(val instanceof _index2.AbstractValue));throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"unknown value type, can't coerce to a boolean");}}ToBooleanPartial(realm,val){if(!val.mightNotBeObject())return true;return this.ToBoolean(realm,val.throwIfNotConcrete())}ToPropertyKey(realm,arg){let key=this.ToPrimitive(realm,arg,"string");if(key instanceof _index2.SymbolValue)return key;return this.ToString(realm,key)}ToPropertyKeyPartial(realm,arg){if(arg instanceof
_index2.ConcreteValue)return this.ToPropertyKey(realm,arg);if(arg.mightNotBeString()&&arg.mightNotBeNumber()&&!arg.isSimpleObject()&&!realm.isInPureScope())arg.throwIfNotConcrete();(0,_invariant.default)(arg instanceof _index2.AbstractValue);return arg}CanonicalNumericIndexString(realm,argument){(0,_invariant.default)(argument instanceof _index2.StringValue);if(argument.value==="-0")return-0;let n=this.ToNumber(realm,argument);if((0,_abstract.SameValue)(realm,new _index2.StringValue(realm,this.ToString(realm,
new _index2.NumberValue(realm,n))),argument)===false)return undefined;return n}}exports.ToImplementation=ToImplementation},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.WidenImplementation=void 0;var _errors=__webpack_require__(3);var _realm=__webpack_require__(7);var _descriptors=__webpack_require__(268);var _completions=__webpack_require__(18);var _environment=__webpack_require__(20);var _index=__webpack_require__(232);var _generator=
__webpack_require__(237);var _index2=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class WidenImplementation{_widenArrays(realm,v1,v2){if(v1[0]instanceof _index2.Value){(0,_invariant.default)(v2[0]instanceof _index2.Value);return this._widenArraysOfValues(realm,v1,v2)}(0,_invariant.default)(!(v2[0]instanceof _index2.Value));return this._widenArrayOfsMapEntries(realm,v1,v2)}_widenArrayOfsMapEntries(realm,
a1,a2){let n=Math.max(a1&&a1.length||0,a2&&a2.length||0);let result=[];for(let i=0;i<n;i++){let {$Key:key1,$Value:val1}=a1[i]||{$Key:undefined,$Value:undefined};let {$Key:key2,$Value:val2}=a2[i]||{$Key:undefined,$Value:undefined};if(key1===undefined&&key2===undefined)result[i]={$Key:undefined,$Value:undefined};else{if(key1===undefined)key1=key2;else if(key2===undefined)key2=key1;(0,_invariant.default)(key1!==undefined);(0,_invariant.default)(key2!==undefined);let key3=this.widenValues(realm,key1,
key2);(0,_invariant.default)(key3 instanceof _index2.Value);if(val1===undefined&&val2===undefined)result[i]={$Key:key3,$Value:undefined};else{if(val1===undefined)val1=val2;else if(val2===undefined)val2=val1;(0,_invariant.default)(val1!==undefined);(0,_invariant.default)(val2!==undefined);let val3=this.widenValues(realm,val1,val2);(0,_invariant.default)(val3===undefined||val3 instanceof _index2.Value);result[i]={$Key:key3,$Value:val3}}}}return result}_widenArraysOfValues(realm,a1,a2){let n=Math.max(a1&&
a1.length||0,a2&&a2.length||0);let result=[];for(let i=0;i<n;i++){let wv=this.widenValues(realm,a1[i],a2[i]);(0,_invariant.default)(wv===undefined||wv instanceof _index2.Value);result[i]=wv}return result}widenEffects(realm,e1,e2){let result=this.widenResults(realm,e1.result,e2.result);let bindings=this.widenBindings(realm,e1.modifiedBindings,e2.modifiedBindings);let properties=this.widenPropertyBindings(realm,e1.modifiedProperties,e2.modifiedProperties,e1.createdObjects,e2.createdObjects);let createdObjects=
new Set;let generator=new _generator.Generator(realm,"widen",realm.pathConditions);return new _realm.Effects(result,generator,bindings,properties,createdObjects)}widenResults(realm,result1,result2){(0,_invariant.default)(!(result1 instanceof _environment.Reference||result2 instanceof _environment.Reference),"loop bodies should not result in refs");(0,_invariant.default)(!(result1 instanceof _completions.AbruptCompletion||result2 instanceof _completions.AbruptCompletion),"if a loop iteration ends abruptly, there is no need for fixed point computation");
if(result1 instanceof _completions.SimpleNormalCompletion&&result2 instanceof _completions.SimpleNormalCompletion){let val=this.widenValues(realm,result1.value,result2.value);(0,_invariant.default)(val instanceof _index2.Value);return new _completions.SimpleNormalCompletion(val)}if(result1 instanceof _completions.JoinedNormalAndAbruptCompletions||result2 instanceof _completions.JoinedNormalAndAbruptCompletions)throw new _errors.FatalError;(0,_invariant.default)(false)}widenMaps(m1,m2,widen){let m3=
new Map;m1.forEach((val1,key,map1)=>{let val2=m2.get(key);let val3=widen(key,val1,val2);m3.set(key,val3)});m2.forEach((val2,key,map2)=>{if(!m1.has(key))m3.set(key,widen(key,undefined,val2))});return m3}widenBindings(realm,m1,m2){let widen=(b,b1,b2)=>{let l1=b1===undefined?b.hasLeaked:b1.hasLeaked;let l2=b2===undefined?b.hasLeaked:b2.hasLeaked;let hasLeaked=l1||l2;let v1=b1===undefined||b1.value===undefined?b.value:b1.value;(0,_invariant.default)(b2!==undefined);let v2=b2.value;(0,_invariant.default)(v2!==
undefined);let result=this.widenValues(realm,v1||realm.intrinsics.undefined,v2);if(result instanceof _index2.AbstractValue&&result.kind==="widened"){let phiNode=b.phiNode;if(phiNode===undefined){let generator=realm.generator;(0,_invariant.default)(generator!==undefined);phiNode=generator.deriveAbstract(result.types,result.values,[b.value||realm.intrinsics.undefined],(0,_generator.createOperationDescriptor)("SINGLE_ARG"),{skipInvariant:true});b.phiNode=phiNode}(0,_invariant.default)(phiNode.intrinsicName!==
undefined);let phiName=phiNode.intrinsicName;result.intrinsicName=phiName;result.operationDescriptor=(0,_generator.createOperationDescriptor)("WIDENED_IDENTIFIER",{id:phiName})}(0,_invariant.default)(result instanceof _index2.Value);return{hasLeaked,value:result}};return this.widenMaps(m1,m2,widen)}widenValues(realm,v1,v2){if(Array.isArray(v1)||Array.isArray(v2)){(0,_invariant.default)(Array.isArray(v1));(0,_invariant.default)(Array.isArray(v2));return this._widenArrays(realm,v1,v2)}(0,_invariant.default)(v1 instanceof
_index2.Value);(0,_invariant.default)(v2 instanceof _index2.Value);if(!(v1 instanceof _index2.AbstractValue)&&!(v2 instanceof _index2.AbstractValue)&&(0,_index.StrictEqualityComparison)(realm,v1.throwIfNotConcrete(),v2.throwIfNotConcrete()))return v1;else{(0,_invariant.default)(v1&&v2);return _index2.AbstractValue.createFromWidening(realm,v1,v2)}}widenPropertyBindings(realm,m1,m2,c1,c2){let widen=(b,d1,d2)=>{if(d1===undefined&&d2===undefined)return undefined;if(d1===undefined){(0,_invariant.default)(d2!==
undefined);if(c2.has(b.object))return d2;if(b.descriptor!==undefined&&m1.has(b)){d1=(0,_descriptors.cloneDescriptor)(b.descriptor.throwIfNotConcrete(realm));(0,_invariant.default)(d1!==undefined);d1.value=realm.intrinsics.empty}else{d1=b.descriptor;if(d1===undefined){d1=(0,_descriptors.cloneDescriptor)(d2.throwIfNotConcrete(realm));(0,_invariant.default)(d1!==undefined);d1.value=realm.intrinsics.empty}}}if(d2===undefined){if(c1.has(b.object))return d1;if(m2.has(b)){d2=(0,_descriptors.cloneDescriptor)(d1.throwIfNotConcrete(realm));
(0,_invariant.default)(d2!==undefined);d2.value=realm.intrinsics.empty}else d2=d1;(0,_invariant.default)(d2!==undefined)}let result=this.widenDescriptors(realm,d1,d2);if(result&&result.value instanceof _index2.AbstractValue&&result.value.kind==="widened"){let rval=result.value;let pathNode=b.pathNode;if(pathNode===undefined){let key=b.key;if(typeof key==="string"||key instanceof _index2.AbstractValue&&!(key.mightNotBeString()&&key.mightNotBeNumber())){if(typeof key==="string")pathNode=_index2.AbstractValue.createFromWidenedProperty(realm,
rval,[b.object,new _index2.StringValue(realm,key)],(0,_generator.createOperationDescriptor)("WIDEN_PROPERTY"));else{(0,_invariant.default)(key instanceof _index2.AbstractValue);pathNode=_index2.AbstractValue.createFromWidenedProperty(realm,rval,[b.object,key],(0,_generator.createOperationDescriptor)("WIDEN_PROPERTY"))}let generator=realm.generator;(0,_invariant.default)(generator!==undefined);let initVal=b.descriptor&&b.descriptor.throwIfNotConcrete(realm).value||realm.intrinsics.empty;if(!(initVal instanceof
_index2.EmptyValue))if(key==="length"&&b.object instanceof _index2.ArrayValue);else if(typeof key==="string")generator.emitVoidExpression(rval.types,rval.values,[b.object,new _index2.StringValue(realm,key),initVal],(0,_generator.createOperationDescriptor)("WIDEN_PROPERTY_ASSIGNMENT"));else{(0,_invariant.default)(key instanceof _index2.AbstractValue);generator.emitVoidExpression(rval.types,rval.values,[b.object,key,initVal],(0,_generator.createOperationDescriptor)("WIDEN_PROPERTY_ASSIGNMENT"))}}else throw new _errors.FatalError("todo: handle the case where key is an abstract value");
b.pathNode=pathNode}result.value=pathNode}return result};return this.widenMaps(m1,m2,widen)}widenDescriptors(realm,d1,d2){d2=d2.throwIfNotConcrete(realm);if(d1===undefined){if(!(0,_index.IsDataDescriptor)(realm,d2))return d2;let dc=(0,_descriptors.cloneDescriptor)(d2);(0,_invariant.default)(dc!==undefined);let d2value=dc.value;(0,_invariant.default)(d2value!==undefined);let dcValue=this.widenValues(realm,d2value,d2value);(0,_invariant.default)(dcValue instanceof _index2.Value);dc.value=dcValue;return dc}else{d1=
d1.throwIfNotConcrete(realm);if((0,_descriptors.equalDescriptors)(d1,d2)){if(!(0,_index.IsDataDescriptor)(realm,d1))return d1;let dc=(0,_descriptors.cloneDescriptor)(d1);(0,_invariant.default)(dc!==undefined);let d1value=d1.value;(0,_invariant.default)(d1value!==undefined);let d2value=d2.value;(0,_invariant.default)(d2value!==undefined);let dcValue=this.widenValues(realm,d1value,d2value);(0,_invariant.default)(dcValue instanceof _index2.Value);dc.value=dcValue;return dc}throw new _errors.FatalError;
}}containsEffects(e1,e2){if(!this.containsResults(e1.result,e2.result))return false;if(!this.containsBindings(e1.modifiedBindings,e2.modifiedBindings))return false;if(!this.containsPropertyBindings(e1.modifiedProperties,e2.modifiedProperties,e1.createdObjects,e2.createdObjects))return false;return true}containsResults(result1,result2){if(result1 instanceof _completions.SimpleNormalCompletion&&result2 instanceof _completions.SimpleNormalCompletion)return this._containsValues(result1.value,result2.value);
return false}containsMap(m1,m2,f){for(const [key1,val1]of m1.entries()){if(val1===undefined)continue;let val2=m2.get(key1);if(val2===undefined)continue;if(!f(val1,val2))return false}for(const key2 of m2.keys())if(!m1.has(key2))return false;return true}containsBindings(m1,m2){let containsBinding=(b1,b2)=>{if(b1===undefined||b2===undefined||b1.value===undefined||b2.value===undefined||!this._containsValues(b1.value,b2.value)||b1.hasLeaked!==b2.hasLeaked)return false;return true};return this.containsMap(m1,
m2,containsBinding)}containsPropertyBindings(m1,m2,c1,c2){let containsPropertyBinding=(d1,d2)=>{let v1,v2;if(d1 instanceof _descriptors.InternalSlotDescriptor||d2 instanceof _descriptors.InternalSlotDescriptor){if(d1!==undefined){(0,_invariant.default)(d1 instanceof _descriptors.InternalSlotDescriptor);v1=d1.value}if(d2!==undefined){(0,_invariant.default)(d2 instanceof _descriptors.InternalSlotDescriptor);v2=d2.value}}if(d1 instanceof _descriptors.PropertyDescriptor)v1=d1.value;if(d2 instanceof _descriptors.PropertyDescriptor)v2=
d2.value;if(v1===undefined)return v2===undefined;if(v1 instanceof _index2.Value&&v2 instanceof _index2.Value)return this._containsValues(v1,v2);if(Array.isArray(v1)&&Array.isArray(v2))return this._containsArray(v1,v2);return v2===undefined};for(const [key1,val1]of m1.entries()){if(val1===undefined)continue;let val2=m2.get(key1);if(val2===undefined)continue;if(c1.has(key1.object))continue;if(!containsPropertyBinding(val1,val2))return false}for(const key2 of m2.keys()){if(c2.has(key2.object))continue;
if(!m1.has(key2))return false}return true}_containsArray(v1,v2){let e=v1&&v1[0]||v2&&v2[0];if(e instanceof _index2.Value)return this.containsArraysOfValue(v1,v2);else return this._containsArrayOfsMapEntries(v1,v2)}_containsArrayOfsMapEntries(realm,a1,a2){let empty=realm.intrinsics.empty;let n=Math.max(a1&&a1.length||0,a2&&a2.length||0);for(let i=0;i<n;i++){let {$Key:key1,$Value:val1}=a1&&a1[i]||{$Key:empty,$Value:empty};let {$Key:key2,$Value:val2}=a2&&a2[i]||{$Key:empty,$Value:empty};if(key1===undefined){if(key2!==
undefined)return false}else{if(key1 instanceof _index2.Value&&key2 instanceof _index2.Value&&key1.equals(key2))if(val1 instanceof _index2.Value&&val2 instanceof _index2.Value&&this._containsValues(val1,val2))continue;return false}}return true}containsArraysOfValue(realm,a1,a2){let n=Math.max(a1&&a1.length||0,a2&&a2.length||0);for(let i=0;i<n;i++){let [val1,val2]=[a1&&a1[i],a2&&a2[i]];if(val1 instanceof _index2.Value&&val2 instanceof _index2.Value&&!this._containsValues(val1,val2))return false}return true}_containsValues(val1,
val2){if(val1 instanceof _index2.AbstractValue){if(!_index2.Value.isTypeCompatibleWith(val2.getType(),val1.getType())&&!_index2.Value.isTypeCompatibleWith(val1.getType(),val2.getType()))return false;return val1.values.containsValue(val2)}return val1.equals(val2)}}exports.WidenImplementation=WidenImplementation},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.concretize=concretize;var _index=__webpack_require__(10);var t=_interopRequireWildcard(__webpack_require__(21));
var _invariant=_interopRequireDefault(__webpack_require__(9));var _errors=__webpack_require__(3);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function reportCompileError(realm,message,loc){let error=new _errors.CompilerDiagnostic(message,loc,"PP9000","RecoverableError");realm.handleError(error)}function createEmptyFunction(realm){const concreteFunction=new _index.ECMAScriptSourceFunctionValue(realm);concreteFunction.initialize([],t.blockStatement([]));return concreteFunction}function concretize(realm,val){if(val instanceof
_index.ConcreteValue)return val;(0,_invariant.default)(val instanceof _index.AbstractValue);if(val.kind==="abstractConcreteUnion"){(0,_invariant.default)(val.args.length>=2);return concretize(realm,val.args[0])}const type=val.types.getType();if(val.types.isTop())return new _index.UndefinedValue(realm);else if(type.prototype instanceof _index.PrimitiveValue)if(val.values.isTop())switch(type){case _index.StringValue:return new _index.StringValue(realm,"__concreteModel");case _index.NumberValue:return new _index.NumberValue(realm,
42);case _index.SymbolValue:return new _index.SymbolValue(realm,new _index.StringValue(realm,"__concreteModel"));case _index.BooleanValue:return new _index.BooleanValue(realm,true);case _index.NullValue:return new _index.NullValue(realm);case _index.UndefinedValue:return new _index.UndefinedValue(realm);default:(0,_invariant.default)(false,"Not yet implemented")}else{const values=val.values.getElements();(0,_invariant.default)(values.size===1,"Concrete model should only have one value");for(let value in values){(0,
_invariant.default)(value instanceof _index.ConcreteValue,"Concrete model should only contain one concrete value");return value}(0,_invariant.default)(false)}else if(type===_index.FunctionValue)return createEmptyFunction(realm);else if(type===_index.ArrayValue)reportCompileError(realm,"Emitting a concrete model for abstract array value is not supported yet.",val.expressionLocation);else if(val instanceof _index.AbstractObjectValue)if(val.values.isTop())return new _index.ObjectValue(realm);else{let template=
val.getTemplate();let concreteObj=_singletons.Create.ObjectCreate(realm,template.$GetPrototypeOf());let keys=(0,_index2.EnumerableOwnProperties)(realm,template,"key",true);for(let P of keys){(0,_invariant.default)(P instanceof _index.StringValue);let newElement=(0,_index2.Get)(realm,template,P);_singletons.Create.CreateDataProperty(realm,concreteObj,P,concretize(realm,newElement))}return concreteObj}reportCompileError(realm,"Emitting a concrete model for this abstract value is not supported yet.",
val.expressionLocation);return new _index.UndefinedValue(realm)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.DebugReproManagerImplementation=void 0;var _SourceMapManager=__webpack_require__(463);class DebugReproManagerImplementation{construct(configArgs){this._sourceMapManager=new _SourceMapManager.SourceMapManager(configArgs.buckRoot,configArgs.sourcemaps);if(configArgs.sourcemaps){this._sourceMapNames=[];configArgs.sourcemaps.forEach((m)=>
{if(m.sourceMapFilename!==undefined)this._sourceMapNames.push(m.sourceMapFilename)})}this._usedSourceFiles=new Set;return this}addSourceFile(fileName){if(!fileName.includes("node_modules"))this._usedSourceFiles.add(this._sourceMapManager.relativeToAbsolute(fileName))}getSourceFilePaths(){return Array.from(this._usedSourceFiles).map((absolutePath)=>{return{absolute:absolutePath,relative:this._sourceMapManager.absoluteToRelative(absolutePath)}})}getSourceMapPaths(){return this._sourceMapNames}}exports.DebugReproManagerImplementation=
DebugReproManagerImplementation},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.SourceMapManager=void 0;var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class SourceMapManager{constructor(buckRoot,sourceMaps){if(buckRoot!==undefined){if(sourceMaps===undefined)throw new Error("Invalid input: Can't provide a sourcemap directory root without having sourcemaps present");
this._buckRoot=buckRoot;if(this._buckRoot[this._buckRoot.length-1]==="/")this._buckRoot=this._buckRoot.slice(0,-1)}else{if(sourceMaps&&sourceMaps.length>0)for(let map of sourceMaps){if(map.sourceMapContents===undefined||map.sourceMapContents===""){this._sourcemapCommonPrefix=undefined;this._sourcemapMapDifference=undefined;return}}else{this._sourcemapCommonPrefix=undefined;this._sourcemapMapDifference=undefined;return}let originalSourcePaths=[];let mapPaths=[];for(let map of sourceMaps){(0,_invariant.default)(map.sourceMapContents!==
undefined);let parsed=JSON.parse(map.sourceMapContents);if("sections"in parsed)for(let section of parsed.sections)for(let source of section.map.sources)originalSourcePaths.push(this._getAbsoluteSourcePath(map.filePath,source));else for(let source of parsed.sources)originalSourcePaths.push(this._getAbsoluteSourcePath(map.filePath,source));mapPaths.push(this._stripEmptyStringBookends(map.filePath.split("/")))}let originalSourceCommonPrefix=this._findCommonPrefix(originalSourcePaths);let originalSourceCPElements=
this._stripEmptyStringBookends(originalSourceCommonPrefix.split("/"));let mapCommonPrefix=this._findCommonPrefix(mapPaths);let mapCPElements=this._stripEmptyStringBookends(mapCommonPrefix.split("/"));this._sourcemapCommonPrefix=this._findCommonPrefix([originalSourceCPElements,mapCPElements]);this._sourcemapMapDifference=this._findMapDifference(this._sourcemapCommonPrefix,mapCommonPrefix)}}_getAbsoluteSourcePath(pathToInput,pathToSource){let fullPath=this._stripEmptyStringBookends(pathToInput.split("/"));
fullPath.pop();let steps=pathToSource.split("/");for(let step of steps)switch(step){case ".":break;case "..":fullPath.pop();break;default:fullPath.push(step);break}return fullPath}_findCommonPrefix(paths){let divergenceIndex=0;let allPathsMatch=true;let maxDivergenceIndex=Math.max(...paths.map((path)=>path.length));while(allPathsMatch&&divergenceIndex<maxDivergenceIndex){let entry=paths[0][divergenceIndex];for(let path of paths)if(path[divergenceIndex]!==entry){allPathsMatch=false;break}if(allPathsMatch)divergenceIndex+=
1}if(paths.length===1)divergenceIndex-=1;return`/${paths[0].slice(0,divergenceIndex).join("/")}/`}_findMapDifference(commonPrefix,mapPrefix){let mapPrefixUniqueElements=this._stripEmptyStringBookends(mapPrefix.replace(commonPrefix,"").split("/"));let mapDifference="";for(let i=0;i<mapPrefixUniqueElements.length;i++)mapDifference=mapDifference.concat("../");return mapDifference}_stripEmptyStringBookends(path){if(path[0]==="")path.shift();if(path[path.length-1]==="")path.pop();return path}relativeToAbsolute(path){let absolute;
if(this._buckRoot!==undefined){let dirRoot=this._buckRoot;if(this._stripEmptyStringBookends(path.split("/"))[0]===this._stripEmptyStringBookends(this._buckRoot.split("/"))[0])absolute=path;else{let separator=path[0]==="/"?"":"/";absolute=dirRoot+separator+path}}else if(this._sourcemapCommonPrefix!==undefined&&this._sourcemapMapDifference!==undefined){absolute=path.replace(this._sourcemapMapDifference,"");(0,_invariant.default)(this._sourcemapCommonPrefix!==undefined);absolute=this._sourcemapCommonPrefix+
absolute}else absolute=path;return absolute}absoluteToRelative(path){let relative;if(this._buckRoot!==undefined)relative=path.replace(this._buckRoot,"");else if(this._sourcemapCommonPrefix!==undefined&&this._sourcemapMapDifference!==undefined){relative=path.replace(this._sourcemapCommonPrefix,"");(0,_invariant.default)(this._sourcemapMapDifference!==undefined);relative=this._sourcemapMapDifference+relative}else relative=path;return relative}}exports.SourceMapManager=SourceMapManager},function(module,
exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.initialize=initialize;var _index=__webpack_require__(15);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _Object=_interopRequireDefault(__webpack_require__(465));var _ObjectPrototype=_interopRequireDefault(__webpack_require__(466));var _Error=_interopRequireDefault(__webpack_require__(424));var _ErrorPrototype=_interopRequireDefault(__webpack_require__(467));var _TypeError=
_interopRequireDefault(__webpack_require__(468));var _TypeErrorPrototype=_interopRequireDefault(__webpack_require__(469));var _RangeError=_interopRequireDefault(__webpack_require__(470));var _RangeErrorPrototype=_interopRequireDefault(__webpack_require__(471));var _ReferenceError=_interopRequireDefault(__webpack_require__(472));var _ReferenceErrorPrototype=_interopRequireDefault(__webpack_require__(473));var _SyntaxError=_interopRequireDefault(__webpack_require__(474));var _SyntaxErrorPrototype=_interopRequireDefault(__webpack_require__(475));
var _URIError=_interopRequireDefault(__webpack_require__(476));var _URIErrorPrototype=_interopRequireDefault(__webpack_require__(477));var _EvalError=_interopRequireDefault(__webpack_require__(478));var _EvalErrorPrototype=_interopRequireDefault(__webpack_require__(479));var _Function=_interopRequireDefault(__webpack_require__(480));var _FunctionPrototype=_interopRequireDefault(__webpack_require__(481));var _Generator=_interopRequireDefault(__webpack_require__(482));var _GeneratorFunction=_interopRequireDefault(__webpack_require__(483));
var _GeneratorPrototype=_interopRequireDefault(__webpack_require__(484));var _Array=_interopRequireDefault(__webpack_require__(485));var _ArrayPrototype=_interopRequireDefault(__webpack_require__(486));var _Date=_interopRequireDefault(__webpack_require__(487));var _DatePrototype=_interopRequireDefault(__webpack_require__(488));var _RegExp=_interopRequireDefault(__webpack_require__(489));var _RegExpPrototype=_interopRequireDefault(__webpack_require__(490));var _Symbol=_interopRequireDefault(__webpack_require__(491));
var _SymbolPrototype=_interopRequireDefault(__webpack_require__(492));var _String=_interopRequireDefault(__webpack_require__(493));var _StringPrototype=_interopRequireDefault(__webpack_require__(494));var _Number=_interopRequireDefault(__webpack_require__(495));var _NumberPrototype=_interopRequireDefault(__webpack_require__(496));var _Boolean=_interopRequireDefault(__webpack_require__(497));var _BooleanPrototype=_interopRequireDefault(__webpack_require__(498));var _DataView=_interopRequireDefault(__webpack_require__(499));
var _DataViewPrototype=_interopRequireDefault(__webpack_require__(500));var _TypedArray=_interopRequireDefault(__webpack_require__(501));var _TypedArrayPrototype=_interopRequireDefault(__webpack_require__(502));var _Float32Array=_interopRequireDefault(__webpack_require__(503));var _Float32ArrayPrototype=_interopRequireDefault(__webpack_require__(504));var _Float64Array=_interopRequireDefault(__webpack_require__(505));var _Float64ArrayPrototype=_interopRequireDefault(__webpack_require__(506));var _Int8Array=
_interopRequireDefault(__webpack_require__(507));var _Int8ArrayPrototype=_interopRequireDefault(__webpack_require__(508));var _Int16Array=_interopRequireDefault(__webpack_require__(509));var _Int16ArrayPrototype=_interopRequireDefault(__webpack_require__(510));var _Int32Array=_interopRequireDefault(__webpack_require__(511));var _Int32ArrayPrototype=_interopRequireDefault(__webpack_require__(512));var _Map=_interopRequireDefault(__webpack_require__(513));var _MapPrototype=_interopRequireDefault(__webpack_require__(514));
var _WeakMap=_interopRequireDefault(__webpack_require__(515));var _WeakMapPrototype=_interopRequireDefault(__webpack_require__(516));var _Set=_interopRequireDefault(__webpack_require__(517));var _SetPrototype=_interopRequireDefault(__webpack_require__(518));var _Promise=_interopRequireDefault(__webpack_require__(519));var _PromisePrototype=_interopRequireDefault(__webpack_require__(520));var _Uint8Array=_interopRequireDefault(__webpack_require__(521));var _Uint8ArrayPrototype=_interopRequireDefault(__webpack_require__(522));
var _Uint8ClampedArray=_interopRequireDefault(__webpack_require__(523));var _Uint8ClampedArrayPrototype=_interopRequireDefault(__webpack_require__(524));var _Uint16Array=_interopRequireDefault(__webpack_require__(525));var _Uint16ArrayPrototype=_interopRequireDefault(__webpack_require__(526));var _Uint32Array=_interopRequireDefault(__webpack_require__(527));var _Uint32ArrayPrototype=_interopRequireDefault(__webpack_require__(528));var _WeakSet=_interopRequireDefault(__webpack_require__(529));var _WeakSetPrototype=
_interopRequireDefault(__webpack_require__(530));var _ArrayBuffer=_interopRequireDefault(__webpack_require__(531));var _ArrayBufferPrototype=_interopRequireDefault(__webpack_require__(532));var _JSON=_interopRequireDefault(__webpack_require__(533));var _Reflect=_interopRequireDefault(__webpack_require__(536));var _Math=_interopRequireDefault(__webpack_require__(537));var _Proxy=_interopRequireDefault(__webpack_require__(538));var _parseInt=_interopRequireDefault(__webpack_require__(540));var _parseFloat=
_interopRequireDefault(__webpack_require__(541));var _isFinite=_interopRequireDefault(__webpack_require__(542));var _decodeURI=_interopRequireDefault(__webpack_require__(543));var _decodeURIComponent=_interopRequireDefault(__webpack_require__(544));var _encodeURI=_interopRequireDefault(__webpack_require__(545));var _encodeURIComponent=_interopRequireDefault(__webpack_require__(546));var _eval=_interopRequireDefault(__webpack_require__(547));var _isNaN=_interopRequireDefault(__webpack_require__(548));
var _ArrayIteratorPrototype=_interopRequireDefault(__webpack_require__(549));var _StringIteratorPrototype=_interopRequireDefault(__webpack_require__(550));var _MapIteratorPrototype=_interopRequireDefault(__webpack_require__(551));var _SetIteratorPrototype=_interopRequireDefault(__webpack_require__(552));var _IteratorPrototype=_interopRequireDefault(__webpack_require__(553));var _ArrayProto_values=_interopRequireDefault(__webpack_require__(554));var _ArrayProto_toString=_interopRequireDefault(__webpack_require__(555));
var _ObjectProto_toString=_interopRequireDefault(__webpack_require__(556));var _TypedArrayProto_values=_interopRequireDefault(__webpack_require__(557));var _ThrowTypeError=_interopRequireDefault(__webpack_require__(558));var _IntrospectionError=_interopRequireDefault(__webpack_require__(559));var _IntrospectionErrorPrototype=_interopRequireDefault(__webpack_require__(560));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function initialize(i,
realm){i.undefined=new _index2.UndefinedValue(realm);i.empty=new _index2.EmptyValue(realm);i.null=new _index2.NullValue(realm);i.false=new _index2.BooleanValue(realm,false);i.true=new _index2.BooleanValue(realm,true);i.NaN=new _index2.NumberValue(realm,NaN);i.negativeInfinity=new _index2.NumberValue(realm,-Infinity);i.Infinity=new _index2.NumberValue(realm,+Infinity);i.negativeZero=new _index2.NumberValue(realm,-0);i.zero=new _index2.NumberValue(realm,+0);i.emptyString=new _index2.StringValue(realm,
"");i.ObjectPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Object.prototype");i.FunctionPrototype=i.ObjectPrototype;i.FunctionPrototype=new _index2.NativeFunctionValue(realm,"Function.prototype","",0,(context)=>i.undefined,false);i.parseFloat=(0,_parseFloat.default)(realm);i.parseInt=(0,_parseInt.default)(realm);i.SymbolPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Symbol.prototype");i.SymbolIsConcatSpreadable=new _index2.SymbolValue(realm,new _index2.StringValue(realm,"Symbol.isConcatSpreadable"),
"Symbol.isConcatSpreadable");i.SymbolSpecies=new _index2.SymbolValue(realm,new _index2.StringValue(realm,"Symbol.species"),"Symbol.species");i.SymbolReplace=new _index2.SymbolValue(realm,new _index2.StringValue(realm,"Symbol.replace"),"Symbol.replace");i.SymbolIterator=new _index2.SymbolValue(realm,new _index2.StringValue(realm,"Symbol.iterator"),"Symbol.iterator");i.SymbolHasInstance=new _index2.SymbolValue(realm,new _index2.StringValue(realm,"Symbol.hasInstance"),"Symbol.hasInstance");i.SymbolToPrimitive=
new _index2.SymbolValue(realm,new _index2.StringValue(realm,"Symbol.toPrimitive"),"Symbol.toPrimitive");i.SymbolToStringTag=new _index2.SymbolValue(realm,new _index2.StringValue(realm,"Symbol.toStringTag"),"Symbol.toStringTag");i.SymbolMatch=new _index2.SymbolValue(realm,new _index2.StringValue(realm,"Symbol.match"),"Symbol.match");i.SymbolSplit=new _index2.SymbolValue(realm,new _index2.StringValue(realm,"Symbol.split"),"Symbol.split");i.SymbolSearch=new _index2.SymbolValue(realm,new _index2.StringValue(realm,
"Symbol.search"),"Symbol.search");i.SymbolUnscopables=new _index2.SymbolValue(realm,new _index2.StringValue(realm,"Symbol.unscopables"),"Symbol.unscopables");i.ArrayProto_values=(0,_ArrayProto_values.default)(realm);i.ArrayProto_toString=(0,_ArrayProto_toString.default)(realm);i.ObjectProto_toString=(0,_ObjectProto_toString.default)(realm);if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))i.TypedArrayProto_values=(0,_TypedArrayProto_values.default)(realm);i.ArrayPrototype=
new _index2.ObjectValue(realm,i.ObjectPrototype,"Array.prototype");i.RegExpPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"RegExp.prototype");i.DatePrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Date.prototype");i.StringPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"String.prototype");i.BooleanPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Boolean.prototype");i.NumberPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Number.prototype");i.DataViewPrototype=
new _index2.ObjectValue(realm,i.ObjectPrototype,"DataView.prototype");i.PromisePrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Promise.prototype");i.ArrayBufferPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"ArrayBuffer.prototype");i.ErrorPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Error.prototype");i.RangeErrorPrototype=new _index2.ObjectValue(realm,i.ErrorPrototype,"RangeError.prototype");i.TypeErrorPrototype=new _index2.ObjectValue(realm,i.ErrorPrototype,"TypeError.prototype");
i.ReferenceErrorPrototype=new _index2.ObjectValue(realm,i.ErrorPrototype,"ReferenceError.prototype");i.URIErrorPrototype=new _index2.ObjectValue(realm,i.ErrorPrototype,"URIError.prototype");i.EvalErrorPrototype=new _index2.ObjectValue(realm,i.ErrorPrototype,"EvalError.prototype");i.SyntaxErrorPrototype=new _index2.ObjectValue(realm,i.ErrorPrototype,"SyntaxError.prototype");i.__IntrospectionErrorPrototype=new _index2.ObjectValue(realm,i.ErrorPrototype,"__IntrospectionError.prototype");i.MapPrototype=
new _index2.ObjectValue(realm,i.ObjectPrototype,"Map.prototype");i.SetPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Set.prototype");i.WeakMapPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"WeakMap.prototype");if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))i.WeakSetPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"WeakSet.prototype");if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))i.TypedArrayPrototype=
new _index2.ObjectValue(realm,i.ObjectPrototype,"TypedArray.prototype",true);i.Float32ArrayPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Float32Array.prototype");i.Float64ArrayPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Float64Array.prototype");i.Int8ArrayPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Int8Array.prototype");i.Int16ArrayPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Int16Array.prototype");i.Int32ArrayPrototype=new _index2.ObjectValue(realm,
i.ObjectPrototype,"Int32Array.prototype");i.Uint8ArrayPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Uint8Array.prototype");i.Uint8ClampedArrayPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Uint8ClampedArray.prototype");i.Uint16ArrayPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Uint16Array.prototype");i.Uint32ArrayPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,"Uint32Array.prototype");i.IteratorPrototype=new _index2.ObjectValue(realm,i.ObjectPrototype,
"([][Symbol.iterator]().__proto__.__proto__)");i.MapIteratorPrototype=new _index2.ObjectValue(realm,i.IteratorPrototype,"(new Map()[Symbol.iterator]().__proto__)");i.SetIteratorPrototype=new _index2.ObjectValue(realm,i.IteratorPrototype,"(new Set()[Symbol.iterator]().__proto__)");i.ArrayIteratorPrototype=new _index2.ObjectValue(realm,i.IteratorPrototype,"([][Symbol.iterator]().__proto__)");i.StringIteratorPrototype=new _index2.ObjectValue(realm,i.IteratorPrototype,'(""[Symbol.iterator]().__proto__)');
(0,_ObjectPrototype.default)(realm,i.ObjectPrototype);(0,_FunctionPrototype.default)(realm,i.FunctionPrototype);(0,_ArrayPrototype.default)(realm,i.ArrayPrototype);(0,_DatePrototype.default)(realm,i.DatePrototype);(0,_RegExpPrototype.default)(realm,i.RegExpPrototype);(0,_StringPrototype.default)(realm,i.StringPrototype);(0,_BooleanPrototype.default)(realm,i.BooleanPrototype);(0,_NumberPrototype.default)(realm,i.NumberPrototype);(0,_SymbolPrototype.default)(realm,i.SymbolPrototype);(0,_ErrorPrototype.default)(realm,
i.ErrorPrototype);(0,_TypeErrorPrototype.default)(realm,i.TypeErrorPrototype);(0,_RangeErrorPrototype.default)(realm,i.RangeErrorPrototype);(0,_ReferenceErrorPrototype.default)(realm,i.ReferenceErrorPrototype);(0,_URIErrorPrototype.default)(realm,i.URIErrorPrototype);(0,_EvalErrorPrototype.default)(realm,i.EvalErrorPrototype);(0,_SyntaxErrorPrototype.default)(realm,i.SyntaxErrorPrototype);(0,_IntrospectionErrorPrototype.default)(realm,i.__IntrospectionErrorPrototype);(0,_DataViewPrototype.default)(realm,
i.DataViewPrototype);(0,_WeakMapPrototype.default)(realm,i.WeakMapPrototype);if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile")){(0,_TypedArrayPrototype.default)(realm,i.TypedArrayPrototype);(0,_WeakSetPrototype.default)(realm,i.WeakSetPrototype)}(0,_Float32ArrayPrototype.default)(realm,i.Float32ArrayPrototype);(0,_Float64ArrayPrototype.default)(realm,i.Float64ArrayPrototype);(0,_Int8ArrayPrototype.default)(realm,i.Int8ArrayPrototype);(0,_Int16ArrayPrototype.default)(realm,
i.Int16ArrayPrototype);(0,_Int32ArrayPrototype.default)(realm,i.Int32ArrayPrototype);(0,_MapPrototype.default)(realm,i.MapPrototype);(0,_SetPrototype.default)(realm,i.SetPrototype);(0,_PromisePrototype.default)(realm,i.PromisePrototype);(0,_Uint8ArrayPrototype.default)(realm,i.Uint8ArrayPrototype);(0,_Uint8ClampedArrayPrototype.default)(realm,i.Uint8ClampedArrayPrototype);(0,_Uint16ArrayPrototype.default)(realm,i.Uint16ArrayPrototype);(0,_Uint32ArrayPrototype.default)(realm,i.Uint32ArrayPrototype);
(0,_ArrayBufferPrototype.default)(realm,i.ArrayBufferPrototype);(0,_IteratorPrototype.default)(realm,i.IteratorPrototype);(0,_ArrayIteratorPrototype.default)(realm,i.ArrayIteratorPrototype);(0,_StringIteratorPrototype.default)(realm,i.StringIteratorPrototype);(0,_MapIteratorPrototype.default)(realm,i.MapIteratorPrototype);(0,_SetIteratorPrototype.default)(realm,i.SetIteratorPrototype);i.Object=(0,_Object.default)(realm);i.Function=(0,_Function.default)(realm);i.Array=(0,_Array.default)(realm);i.RegExp=
(0,_RegExp.default)(realm);i.Date=(0,_Date.default)(realm);i.String=(0,_String.default)(realm);i.Math=(0,_Math.default)(realm);i.Boolean=(0,_Boolean.default)(realm);i.Number=(0,_Number.default)(realm);i.Symbol=(0,_Symbol.default)(realm);i.JSON=(0,_JSON.default)(realm);i.Proxy=(0,_Proxy.default)(realm);if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))i.Reflect=(0,_Reflect.default)(realm);i.Promise=(0,_Promise.default)(realm);i.DataView=(0,_DataView.default)(realm);
i.Set=(0,_Set.default)(realm);i.Map=(0,_Map.default)(realm);i.WeakMap=(0,_WeakMap.default)(realm);if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))i.WeakSet=(0,_WeakSet.default)(realm);i.ArrayBuffer=(0,_ArrayBuffer.default)(realm);if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))i.TypedArray=(0,_TypedArray.default)(realm);i.Float32Array=(0,_Float32Array.default)(realm);i.Float64Array=(0,_Float64Array.default)(realm);i.Int8Array=
(0,_Int8Array.default)(realm);i.Int16Array=(0,_Int16Array.default)(realm);i.Int32Array=(0,_Int32Array.default)(realm);i.Uint8Array=(0,_Uint8Array.default)(realm);i.Uint8ClampedArray=(0,_Uint8ClampedArray.default)(realm);i.Uint16Array=(0,_Uint16Array.default)(realm);i.Uint32Array=(0,_Uint32Array.default)(realm);i.Error=(0,_Error.default)(realm);i.TypeError=(0,_TypeError.default)(realm);i.RangeError=(0,_RangeError.default)(realm);i.ReferenceError=(0,_ReferenceError.default)(realm);i.URIError=(0,_URIError.default)(realm);
i.EvalError=(0,_EvalError.default)(realm);i.SyntaxError=(0,_SyntaxError.default)(realm);i.__IntrospectionError=(0,_IntrospectionError.default)(realm);let builtins=["Object","Function","Symbol","String","Array","Boolean","RegExp","Date","Error","Number","TypeError","RangeError","ReferenceError","SyntaxError","URIError","EvalError","DataView","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","Map","Set","WeakMap","Promise","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array",
"ArrayBuffer"];if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))builtins=builtins.concat(["WeakSet","TypedArray"]);for(let name of builtins){let fn=i[name];let proto=i[`${name}Prototype`];proto.$DefineOwnProperty("constructor",new _descriptors.PropertyDescriptor({value:fn,writable:true,enumerable:false,configurable:true}));fn.$DefineOwnProperty("prototype",new _descriptors.PropertyDescriptor({value:proto,writable:false,enumerable:false,configurable:false}));
fn.$DefineOwnProperty("constructor",new _descriptors.PropertyDescriptor({value:i.Function,writable:true,enumerable:false,configurable:true}))}i.GeneratorPrototype=new _index2.ObjectValue(realm,i.FunctionPrototype,"Generator.prototype");(0,_GeneratorPrototype.default)(realm,i.GeneratorPrototype);i.Generator=new _index2.ObjectValue(realm,i.FunctionPrototype,"Generator");(0,_Generator.default)(realm,i.Generator);i.GeneratorFunction=(0,_GeneratorFunction.default)(realm);i.Generator.$DefineOwnProperty("prototype",
new _descriptors.PropertyDescriptor({value:i.GeneratorPrototype,writable:false,enumerable:false,configurable:true}));i.GeneratorPrototype.$DefineOwnProperty("constructor",new _descriptors.PropertyDescriptor({value:i.Generator,writable:false,enumerable:false,configurable:true}));i.GeneratorFunction.$DefineOwnProperty("prototype",new _descriptors.PropertyDescriptor({value:i.Generator,writable:false,enumerable:false,configurable:false}));i.Generator.$DefineOwnProperty("constructor",new _descriptors.PropertyDescriptor({value:i.GeneratorFunction,
writable:false,enumerable:false,configurable:true}));i.isNaN=(0,_isNaN.default)(realm);i.isFinite=(0,_isFinite.default)(realm);i.decodeURI=(0,_decodeURI.default)(realm);i.decodeURIComponent=(0,_decodeURIComponent.default)(realm);i.encodeURI=(0,_encodeURI.default)(realm);i.encodeURIComponent=(0,_encodeURIComponent.default)(realm);i.ThrowTypeError=(0,_ThrowTypeError.default)(realm);i.eval=(0,_eval.default)(realm);_singletons.Functions.AddRestrictedFunctionProperties(i.FunctionPrototype,realm);if(realm.useAbstractInterpretation){_index.TypesDomain.topVal=
new _index.TypesDomain(undefined);_index.ValuesDomain.topVal=new _index.ValuesDomain(undefined);i.__topValue=new _index2.AbstractValue(realm,_index.TypesDomain.topVal,_index.ValuesDomain.topVal,Number.MAX_SAFE_INTEGER,[]);_index.TypesDomain.bottomVal=new _index.TypesDomain(_index2.EmptyValue);_index.ValuesDomain.bottomVal=new _index.ValuesDomain(new Set);i.__bottomValue=new _index2.AbstractValue(realm,_index.TypesDomain.bottomVal,_index.ValuesDomain.bottomVal,Number.MIN_SAFE_INTEGER,[])}return i}
},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(15);var _errors=__webpack_require__(3);var _realm=__webpack_require__(7);var _index2=__webpack_require__(10);var _index3=__webpack_require__(232);var _singletons=__webpack_require__(236);var _generator=__webpack_require__(237);var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function snapshotToObjectAndRemoveProperties(to,delayedSources){if(to.hasStringOrSymbolProperties())delayedSources.push(to.getSnapshot({removeProperties:true}))}function handleObjectAssignSnapshot(to,frm,frm_was_partial,delayedSources){if(to instanceof _index2.AbstractObjectValue&&to.values.isTop()){_index2.AbstractValue.reportIntrospectionError(to);throw new _errors.FatalError;}else if(frm instanceof _index2.ObjectValue&&frm.mightBeLeakedObject()){snapshotToObjectAndRemoveProperties(to,
delayedSources);delayedSources.push(frm)}else if(frm_was_partial){snapshotToObjectAndRemoveProperties(to,delayedSources);if(frm instanceof _index2.AbstractObjectValue&&frm.kind==="explicit conversion to object")delayedSources.push(frm.args[0]);else{let frmSnapshot=frm.getSnapshot();frm.temporalAlias=frmSnapshot;frm.makePartial();delayedSources.push(frmSnapshot)}}else return false;return true}function copyKeys(realm,keys,from,to){for(let nextKey of keys){let desc=from.$GetOwnProperty(nextKey);if(desc&&
desc.throwIfNotConcrete(realm).enumerable){_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);let propValue=(0,_index3.Get)(realm,from,nextKey);_singletons.Properties.Set(realm,to,nextKey,propValue,true)}}}function applyObjectAssignSource(realm,nextSource,to,delayedSources,to_must_be_partial){let keys,frm;if((0,_index3.HasSomeCompatibleType)(nextSource,_index2.NullValue,_index2.UndefinedValue))return to_must_be_partial;frm=_singletons.To.ToObject(realm,nextSource);let frm_was_partial=frm.isPartialObject();
if(frm_was_partial){if(!to.isSimpleObject()||!frm.isSimpleObject()){_index2.AbstractValue.reportIntrospectionError(nextSource);throw new _errors.FatalError;}to_must_be_partial=true}keys=frm.$OwnPropertyKeys(true);if(to_must_be_partial)handleObjectAssignSnapshot(to,frm,frm_was_partial,delayedSources);(0,_invariant.default)(frm,"from required");(0,_invariant.default)(keys,"keys required");copyKeys(realm,keys,frm,to);return to_must_be_partial}function tryAndApplySourceOrRecover(realm,nextSource,to,delayedSources,
to_must_be_partial){(0,_invariant.default)(!realm.instantRender.enabled);let effects;let savedSuppressDiagnostics=realm.suppressDiagnostics;try{realm.suppressDiagnostics=true;effects=realm.evaluateForEffects(()=>{to_must_be_partial=applyObjectAssignSource(realm,nextSource,to,delayedSources,to_must_be_partial);return realm.intrinsics.undefined},undefined,"tryAndApplySourceOrRecover")}catch(e){(0,_invariant.default)(nextSource!==realm.intrinsics.null&&nextSource!==realm.intrinsics.undefined);let frm=
_singletons.To.ToObject(realm,nextSource);if(e instanceof _errors.FatalError&&to.isSimpleObject()){to_must_be_partial=true;let frm_was_partial=frm.isPartialObject();let didSnapshot=handleObjectAssignSnapshot(to,frm,frm_was_partial,delayedSources);if(!didSnapshot)delayedSources.push(frm);_singletons.Leak.value(realm,frm);return to_must_be_partial}throw e;}finally{realm.suppressDiagnostics=savedSuppressDiagnostics}realm.applyEffects(effects);realm.returnOrThrowCompletion(effects.result);return to_must_be_partial}
function _default(realm){let func=new _index2.NativeFunctionValue(realm,"Object","Object",1,(context,[value],argCount,NewTarget)=>{if(NewTarget&&NewTarget!==func)return _singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"ObjectPrototype");if((0,_index3.HasSomeCompatibleType)(value,_index2.NullValue,_index2.UndefinedValue))return _singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);return _singletons.To.ToObject(realm,value)});function performConditionalObjectAssign(condValue,
consequentVal,alternateVal,to,prefixSources,suffixSources){let conditionallySnapshotted=false;const evaluateForEffects=(val,materializeIfSnapshottingIsConditional)=>realm.evaluateForEffects(()=>{let wasSnapshotedBeforehand=to instanceof _index2.ObjectValue&&to.temporalAlias!==undefined;performObjectAssign(to,[...prefixSources,val,...suffixSources]);if(to instanceof _index2.ObjectValue)if(materializeIfSnapshottingIsConditional&&to.temporalAlias===undefined&&conditionallySnapshotted)_singletons.Materialize.materializeObject(realm,
to);else if(!wasSnapshotedBeforehand&&to.temporalAlias!==undefined&&!conditionallySnapshotted)conditionallySnapshotted=true;return realm.intrinsics.undefined},null,"performConditionalObjectAssign consequent");evaluateForEffects(consequentVal,false);evaluateForEffects(alternateVal,false);realm.evaluateWithAbstractConditional(condValue,()=>evaluateForEffects(consequentVal,true),()=>evaluateForEffects(alternateVal,true))}function performObjectAssign(target,sources){let to=_singletons.To.ToObject(realm,
target);let to_must_be_partial=false;if(!sources.length)return to;for(let i=0;i<sources.length;i++){let nextSource=sources[i];if(nextSource instanceof _index2.AbstractValue)if(nextSource.kind==="conditional"){let [condValue,consequentVal,alternateVal]=nextSource.args;(0,_invariant.default)(condValue instanceof _index2.AbstractValue);let prefixSources=sources.slice(0,i);let suffixSources=sources.slice(i+1);performConditionalObjectAssign(condValue,consequentVal,alternateVal,to,prefixSources,suffixSources);
return to}else if(nextSource.kind==="||"){let [leftValue,rightValue]=nextSource.args;(0,_invariant.default)(leftValue instanceof _index2.AbstractValue);let prefixSources=sources.slice(0,i);let suffixSources=sources.slice(i+1);performConditionalObjectAssign(leftValue,leftValue,rightValue,to,prefixSources,suffixSources);return to}else if(nextSource.kind==="&&"){let [leftValue,rightValue]=nextSource.args;(0,_invariant.default)(leftValue instanceof _index2.AbstractValue);let prefixSources=sources.slice(0,
i);let suffixSources=sources.slice(i+1);performConditionalObjectAssign(leftValue,rightValue,leftValue,to,prefixSources,suffixSources);return to}}sources;let delayedSources=[];for(let nextSource of sources)if(realm.isInPureScope()&&!realm.instantRender.enabled)realm.evaluateWithPossibleThrowCompletion(()=>{to_must_be_partial=tryAndApplySourceOrRecover(realm,nextSource,to,delayedSources,to_must_be_partial);return realm.intrinsics.undefined},_index.TypesDomain.topVal,_index.ValuesDomain.topVal);else to_must_be_partial=
applyObjectAssignSource(realm,nextSource,to,delayedSources,to_must_be_partial);if(to_must_be_partial){if(to.hasStringOrSymbolProperties()){let toSnapshot=to.getSnapshot();delayedSources.push(toSnapshot)}to.makePartial();to.makeSimple();_index2.AbstractValue.createTemporalObjectAssign(realm,to,delayedSources)}return to}if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION))func.defineNativeMethod("assign",2,(context,[target,...sources])=>performObjectAssign(target,sources));func.defineNativeMethod("create",
2,(context,[O,Properties])=>{if(!(0,_index3.HasSomeCompatibleType)(O,_index2.ObjectValue,_index2.NullValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let obj=_singletons.Create.ObjectCreate(realm,O.throwIfNotConcrete());if(!Properties.mightBeUndefined())return _singletons.Properties.ObjectDefineProperties(realm,obj,Properties);Properties.throwIfNotConcrete();return obj});func.defineNativeMethod("defineProperties",2,(context,[O,Properties])=>{return _singletons.Properties.ObjectDefineProperties(realm,
O,Properties)});func.defineNativeMethod("defineProperty",3,(context,[O,P,Attributes])=>{if(!O.mightBeObject())throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);O=O.throwIfNotObject();let key=_singletons.To.ToPropertyKey(realm,P.throwIfNotConcrete());let desc=_singletons.To.ToPropertyDescriptor(realm,Attributes);_singletons.Properties.DefinePropertyOrThrow(realm,O,key,desc);return O});func.defineNativeMethod("freeze",1,(context,[O])=>{if(!O.mightBeObject())return O;O=O.throwIfNotConcreteObject();
let status=(0,_index3.SetIntegrityLevel)(realm,O,"frozen");if(status===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return O});let getOwnPropertyDescriptor=func.defineNativeMethod("getOwnPropertyDescriptor",2,(context,[O,P])=>{let obj=_singletons.To.ToObject(realm,O);let key=_singletons.To.ToPropertyKey(realm,P.throwIfNotConcrete());let desc=obj.$GetOwnProperty(key);if(desc instanceof _descriptors.PropertyDescriptor){let getterFunc=desc.get;if(getterFunc instanceof _index2.NativeFunctionValue&&
getterFunc.intrinsicName===undefined&&realm.useAbstractInterpretation){(0,_invariant.default)(P instanceof _index2.Value);let result=_index2.AbstractValue.createTemporalFromBuildFunction(realm,_index2.ObjectValue,[getOwnPropertyDescriptor,obj,P],(0,_generator.createOperationDescriptor)("OBJECT_PROTO_GET_OWN_PROPERTY_DESCRIPTOR"));(0,_invariant.default)(result instanceof _index2.AbstractObjectValue);result.makeSimple();let get=(0,_index3.Get)(realm,result,"get");let set=(0,_index3.Get)(realm,result,
"set");(0,_invariant.default)(get instanceof _index2.AbstractValue);(0,_invariant.default)(set instanceof _index2.AbstractValue);desc=new _descriptors.PropertyDescriptor({get,set,enumerable:false,configurable:true})}}let propDesc=_singletons.Properties.FromPropertyDescriptor(realm,desc);return propDesc});func.defineNativeMethod("getOwnPropertyNames",1,(context,[O])=>{return(0,_index3.GetOwnPropertyKeys)(realm,O,_index2.StringValue)});func.defineNativeMethod("getOwnPropertyDescriptors",1,(context,
[O])=>{let obj=_singletons.To.ToObject(realm,O);let ownKeys=obj.$OwnPropertyKeys();let descriptors=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);for(let key of ownKeys){let desc=obj.$GetOwnProperty(key);if(desc!==undefined)_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);let descriptor=_singletons.Properties.FromPropertyDescriptor(realm,desc);if(!(descriptor instanceof _index2.UndefinedValue))_singletons.Create.CreateDataProperty(realm,descriptors,key,descriptor)}return descriptors});
if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile")){let getOwnPropertySymbols=func.defineNativeMethod("getOwnPropertySymbols",1,(context,[O])=>{if(O instanceof _index2.AbstractValue&&realm.isInPureScope()){let obj=O instanceof _index2.AbstractObjectValue?O:_singletons.To.ToObject(realm,O);realm.callReportObjectGetOwnProperties(obj);return _index2.ArrayValue.createTemporalWithWidenedNumericProperty(realm,[getOwnPropertySymbols,obj],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"))}else if(_index2.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)){realm.callReportObjectGetOwnProperties(O);
return _index2.ArrayValue.createTemporalWithWidenedNumericProperty(realm,[getOwnPropertySymbols,O],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"))}return(0,_index3.GetOwnPropertyKeys)(realm,O,_index2.SymbolValue)})}func.defineNativeMethod("getPrototypeOf",1,(context,[O])=>{let obj=_singletons.To.ToObject(realm,O);return obj.$GetPrototypeOf()});func.defineNativeMethod("is",2,(context,[value1,value2])=>{return new _index2.BooleanValue(realm,(0,_index3.SameValuePartial)(realm,
value1,value2))});func.defineNativeMethod("isExtensible",1,(context,[O])=>{if(!O.mightBeObject())return realm.intrinsics.false;O=O.throwIfNotObject();return new _index2.BooleanValue(realm,(0,_index3.IsExtensible)(realm,O))});func.defineNativeMethod("isFrozen",1,(context,[O])=>{if(!O.mightBeObject())return realm.intrinsics.true;O=O.throwIfNotConcreteObject();return new _index2.BooleanValue(realm,(0,_index3.TestIntegrityLevel)(realm,O,"frozen"))});func.defineNativeMethod("isSealed",1,(context,[O])=>
{if(!O.mightBeObject())return realm.intrinsics.true;O=O.throwIfNotConcreteObject();return new _index2.BooleanValue(realm,(0,_index3.TestIntegrityLevel)(realm,O,"sealed"))});let objectKeys=func.defineNativeMethod("keys",1,(context,[O])=>{let obj=_singletons.To.ToObject(realm,O);if(realm.isInPureScope()&&obj instanceof _index2.AbstractObjectValue){let array=_index2.ArrayValue.createTemporalWithWidenedNumericProperty(realm,[objectKeys,obj],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));
return array}else if(_index2.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(obj))return _index2.ArrayValue.createTemporalWithWidenedNumericProperty(realm,[objectKeys,obj],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));let nameList=(0,_index3.EnumerableOwnProperties)(realm,obj.throwIfNotConcreteObject(),"key");return _singletons.Create.CreateArrayFromList(realm,nameList)});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile")){let objectValues=
func.defineNativeMethod("values",1,(context,[O])=>{let obj=_singletons.To.ToObject(realm,O);if(realm.isInPureScope())if(obj instanceof _index2.AbstractObjectValue){let array=_index2.ArrayValue.createTemporalWithWidenedNumericProperty(realm,[objectValues,obj],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));return array}else if(_index2.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(obj))return _index2.ArrayValue.createTemporalWithWidenedNumericProperty(realm,[objectValues,
obj],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));let nameList=(0,_index3.EnumerableOwnProperties)(realm,obj.throwIfNotConcreteObject(),"value");return _singletons.Create.CreateArrayFromList(realm,nameList)})}if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile")){let objectEntries=func.defineNativeMethod("entries",1,(context,[O])=>{let obj=_singletons.To.ToObject(realm,O);if(realm.isInPureScope()&&obj instanceof _index2.AbstractObjectValue){let array=
_index2.ArrayValue.createTemporalWithWidenedNumericProperty(realm,[objectEntries,obj],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));return array}else if(_index2.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(obj))return _index2.ArrayValue.createTemporalWithWidenedNumericProperty(realm,[objectEntries,obj],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));let nameList=(0,_index3.EnumerableOwnProperties)(realm,obj.throwIfNotConcreteObject(),"key+value");
return _singletons.Create.CreateArrayFromList(realm,nameList)})}func.defineNativeMethod("preventExtensions",1,(context,[O])=>{if(!O.mightBeObject())return O;O=O.throwIfNotConcreteObject();let status=O.$PreventExtensions();if(status===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return O});func.defineNativeMethod("seal",1,(context,[O])=>{if(!O.mightBeObject())return O;O=O.throwIfNotConcreteObject();let status=(0,_index3.SetIntegrityLevel)(realm,O,"sealed");if(status===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
return O});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))func.defineNativeMethod("setPrototypeOf",2,(context,[O,proto])=>{O=(0,_index3.RequireObjectCoercible)(realm,O);if(!(0,_index3.HasSomeCompatibleType)(proto,_index2.ObjectValue,_index2.NullValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);O=O.throwIfNotConcrete();if(!(O instanceof _index2.ObjectValue))return O;let status=O.$SetPrototypeOf(proto);if(status===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
return O});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _abstract=__webpack_require__(233);var _has=__webpack_require__(269);var _call=__webpack_require__(234);var _singletons=__webpack_require__(236);var _errors=__webpack_require__(3);var _invariant=_interopRequireDefault(__webpack_require__(9));var _index2=__webpack_require__(15);var _generator=__webpack_require__(237);
var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){const ObjectPrototypeHasOwnPrototype=obj.defineNativeMethod("hasOwnProperty",1,(context,[V])=>{let P=_singletons.To.ToPropertyKey(realm,V.throwIfNotConcrete());try{let O=_singletons.To.ToObject(realm,context);return new _index.BooleanValue(realm,(0,_has.HasOwnProperty)(realm,O,P))}catch(x){if(realm.isInPureScope()&&x instanceof _errors.FatalError){const key=
typeof P==="string"?new _index.StringValue(realm,P):P;return realm.evaluateWithPossibleThrowCompletion(()=>_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.BooleanValue,[ObjectPrototypeHasOwnPrototype,context,key],(0,_generator.createOperationDescriptor)("OBJECT_PROTO_HAS_OWN_PROPERTY")),_index2.TypesDomain.topVal,_index2.ValuesDomain.topVal)}throw x;}});obj.defineNativeMethod("isPrototypeOf",1,(context,[V])=>{if(!V.mightBeObject())return realm.intrinsics.false;V=V.throwIfNotConcreteObject();
let O=_singletons.To.ToObject(realm,context);while(true){V=V.$GetPrototypeOf();if(V instanceof _index.NullValue)return realm.intrinsics.false;if((0,_abstract.SameValuePartial)(realm,O,V)===true)return realm.intrinsics.true}(0,_invariant.default)(false)});obj.defineNativeMethod("propertyIsEnumerable",1,(context,[V])=>{let P=_singletons.To.ToPropertyKey(realm,V.throwIfNotConcrete());let O=_singletons.To.ToObject(realm,context);let desc=O.$GetOwnProperty(P);if(!desc)return realm.intrinsics.false;_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);
desc=desc.throwIfNotConcrete(realm);return desc.enumerable===undefined?realm.intrinsics.undefined:new _index.BooleanValue(realm,desc.enumerable)});obj.defineNativeMethod("toLocaleString",0,(context)=>{let O=context;return(0,_call.Invoke)(realm,O,"toString")});obj.defineNativeProperty("toString",realm.intrinsics.ObjectProto_toString);obj.defineNativeMethod("valueOf",0,(context)=>{return _singletons.To.ToObject(realm,context)});obj.$DefineOwnProperty("__proto__",new _descriptors.PropertyDescriptor({get:new _index.NativeFunctionValue(realm,
undefined,"get __proto__",0,(context)=>{let O=_singletons.To.ToObject(realm,context);return O.$GetPrototypeOf()}),set:new _index.NativeFunctionValue(realm,undefined,"set __proto__",1,(context,[proto])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);if(!(0,_has.HasSomeCompatibleType)(proto,_index.ObjectValue,_index.NullValue))return realm.intrinsics.undefined;if(!O.mightBeObject())return realm.intrinsics.undefined;O=O.throwIfNotConcreteObject();let status=O.$SetPrototypeOf(proto.throwIfNotConcrete());
if(!status)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"couldn't set proto");return realm.intrinsics.undefined})}))}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;exports.build=build;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);function _default(realm,obj){return build("Error",realm,obj)}function build(name,realm,obj){obj.defineNativeProperty("message",
realm.intrinsics.emptyString);obj.defineNativeProperty("name",new _index.StringValue(realm,name));obj.defineNativeMethod("toString",0,(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let nameValue=(0,_index2.Get)(realm,O,"name");let nameString=nameValue instanceof _index.UndefinedValue?"Error":_singletons.To.ToStringPartial(realm,nameValue);let msg=(0,_index2.Get)(realm,O,"message");msg=msg instanceof
_index.UndefinedValue?"":_singletons.To.ToStringPartial(realm,msg);if(nameString==="")return new _index.StringValue(realm,msg);if(msg==="")return new _index.StringValue(realm,nameString);return new _index.StringValue(realm,`${nameString}: ${msg}`)})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _Error=__webpack_require__(424);function _default(realm){return(0,_Error.build)("TypeError",realm)}},function(module,exports,
__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(realm,obj){obj.defineNativeProperty("name",new _index.StringValue(realm,"TypeError"));obj.defineNativeProperty("message",realm.intrinsics.emptyString)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _Error=__webpack_require__(424);function _default(realm){return(0,
_Error.build)("RangeError",realm)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(realm,obj){obj.defineNativeProperty("name",new _index.StringValue(realm,"RangeError"));obj.defineNativeProperty("message",realm.intrinsics.emptyString)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _Error=
__webpack_require__(424);function _default(realm){return(0,_Error.build)("ReferenceError",realm)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(realm,obj){obj.defineNativeProperty("name",new _index.StringValue(realm,"ReferenceError"));obj.defineNativeProperty("message",realm.intrinsics.emptyString)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _Error=__webpack_require__(424);function _default(realm){return(0,_Error.build)("SyntaxError",realm)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(realm,obj){obj.defineNativeProperty("name",new _index.StringValue(realm,"SyntaxError"));obj.defineNativeProperty("message",realm.intrinsics.emptyString)}},function(module,
exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _Error=__webpack_require__(424);function _default(realm){return(0,_Error.build)("URIError",realm)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(realm,obj){obj.defineNativeProperty("name",new _index.StringValue(realm,"URIError"));obj.defineNativeProperty("message",
realm.intrinsics.emptyString)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _Error=__webpack_require__(424);function _default(realm){return(0,_Error.build)("EvalError",realm)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(realm,obj){obj.defineNativeProperty("name",new _index.StringValue(realm,
"EvalError"));obj.defineNativeProperty("message",realm.intrinsics.emptyString)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){let func=new _index.NativeFunctionValue(realm,"Function","Function",1,(context,_args,argCount,NewTarget)=>{let args=_args;let C=func;args=argCount>0?args:[];return _singletons.Create.CreateDynamicFunction(realm,
C,NewTarget,"normal",args)});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _singletons=__webpack_require__(236);var _index=__webpack_require__(10);var _call=__webpack_require__(234);var _get=__webpack_require__(230);var _is=__webpack_require__(229);var _has=__webpack_require__(269);var _abstract=__webpack_require__(233);var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.$Call=(thisArgument,argsList)=>{return realm.intrinsics.undefined};obj.defineNativeProperty("length",realm.intrinsics.zero,{writable:false});obj.defineNativeProperty("name",realm.intrinsics.emptyString,{writable:false});obj.defineNativeMethod("call",1,(func,[thisArg,...argList])=>{if((0,_is.IsCallable)(realm,func)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"not callable");argList;return(0,_call.Call)(realm,func,thisArg,argList)});function conditionalFunctionApply(func,thisArg,condValue,consequentVal,alternateVal){return realm.evaluateWithAbstractConditional(condValue,()=>{return realm.evaluateForEffects(()=>functionApply(func,thisArg,consequentVal),null,"conditionalFunctionApply consequent")},()=>{return realm.evaluateForEffects(()=>functionApply(func,thisArg,alternateVal),null,"conditionalFunctionApply alternate")})}function functionApply(func,thisArg,
argArray){if((0,_is.IsCallable)(realm,func)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not callable");if((0,_has.HasSomeCompatibleType)(argArray,_index.NullValue,_index.UndefinedValue))return(0,_call.Call)(realm,func,thisArg);if(argArray instanceof _index.AbstractValue)if(argArray.kind==="conditional"){let [condValue,consequentVal,alternateVal]=argArray.args;(0,_invariant.default)(condValue instanceof _index.AbstractValue);return conditionalFunctionApply(func,thisArg,
condValue,consequentVal,alternateVal)}else if(argArray.kind==="||"){let [leftValue,rightValue]=argArray.args;(0,_invariant.default)(leftValue instanceof _index.AbstractValue);return conditionalFunctionApply(func,thisArg,leftValue,leftValue,rightValue)}else if(argArray.kind==="&&"){let [leftValue,rightValue]=argArray.args;(0,_invariant.default)(leftValue instanceof _index.AbstractValue);return conditionalFunctionApply(func,thisArg,leftValue,rightValue,leftValue)}let argList=_singletons.Create.CreateListFromArrayLike(realm,
argArray);return(0,_call.Call)(realm,func,thisArg,argList)}obj.defineNativeMethod("apply",2,(func,[thisArg,argArray])=>functionApply(func,thisArg,argArray));obj.defineNativeMethod("bind",1,(context,[thisArg,...args])=>{let Target=context;if((0,_is.IsCallable)(realm,Target)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(Target instanceof _index.ObjectValue);args;let F=_singletons.Functions.BoundFunctionCreate(realm,Target,thisArg,args);let targetHasLength=
(0,_has.HasOwnProperty)(realm,Target,new _index.StringValue(realm,"length"));let L;if(targetHasLength===true){let targetLen=(0,_get.Get)(realm,Target,new _index.StringValue(realm,"length"));if(!targetLen.mightBeNumber())L=0;else{targetLen=targetLen.throwIfNotConcreteNumber();targetLen=_singletons.To.ToInteger(realm,targetLen);L=Math.max(0,targetLen-args.length)}}else L=0;_singletons.Properties.DefinePropertyOrThrow(realm,F,"length",new _descriptors.PropertyDescriptor({value:new _index.NumberValue(realm,
L),writable:false,enumerable:false,configurable:true}));let targetName=(0,_get.Get)(realm,Target,new _index.StringValue(realm,"name"));if(!(targetName instanceof _index.StringValue))targetName=realm.intrinsics.emptyString;_singletons.Functions.SetFunctionName(realm,F,targetName,"bound");return F});obj.defineNativeMethod(realm.intrinsics.SymbolHasInstance,1,(context,[V])=>{let F=context;return new _index.BooleanValue(realm,(0,_abstract.OrdinaryHasInstance)(realm,F,V))},{writable:false,configurable:false});
obj.defineNativeMethod("toString",0,(_context)=>{let context=_context.throwIfNotConcrete();if(context instanceof _index.NativeFunctionValue){let name=context.name;if(name instanceof _index.AbstractValue)return new _index.StringValue(realm,`function () {[native code]}`);else{(0,_invariant.default)(typeof name==="string");return new _index.StringValue(realm,`function ${name}() { [native code] }`)}}else if(context instanceof _index.FunctionValue)return new _index.StringValue(realm,"function () { }");
else throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,new _index.StringValue(realm,"Function.prototype.toString is not generic"));})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(realm,obj){obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"GeneratorFunction"),{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){let func=new _index.NativeFunctionValue(realm,"GeneratorFunction","GeneratorFunction",1,(context,_args,argCount,NewTarget)=>{let args=_args;let C=func;args=argCount>0?args:[];return _singletons.Create.CreateDynamicFunction(realm,C,NewTarget,"generator",args)});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _completions=__webpack_require__(18);var _index=__webpack_require__(10);var _generator=__webpack_require__(235);function _default(realm,obj){obj.defineNativeMethod("next",1,(context,[value])=>{let g=context;return(0,_generator.GeneratorResume)(realm,g,value)});obj.defineNativeMethod("return",1,(context,[value])=>{let g=context;let C=new _completions.ReturnCompletion(value,realm.currentLocation);return(0,_generator.GeneratorResumeAbrupt)(realm,
g,C)});obj.defineNativeMethod("throw",1,(context,[exception])=>{let g=context;let C=new _completions.ReturnCompletion(exception,realm.currentLocation);return(0,_generator.GeneratorResumeAbrupt)(realm,g,C)});obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"Generator"),{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _completions=__webpack_require__(18);var _index=
__webpack_require__(10);var _index2=__webpack_require__(232);var _iterator=__webpack_require__(272);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let func=new _index.NativeFunctionValue(realm,"Array","Array",1,(context,[...items],argCount,NewTarget)=>{if(argCount===0){let numberOfArgs=argCount;(0,
_invariant.default)(numberOfArgs===0,"numberOfArgs = 0");let newTarget=NewTarget===undefined?func:NewTarget;let proto=(0,_index2.GetPrototypeFromConstructor)(realm,newTarget,"ArrayPrototype");return _singletons.Create.ArrayCreate(realm,0,proto)}else if(argCount===1){let numberOfArgs=argCount;(0,_invariant.default)(numberOfArgs===1,"numberOfArgs = 1");let newTarget=NewTarget===undefined?func:NewTarget;let proto=(0,_index2.GetPrototypeFromConstructor)(realm,newTarget,"ArrayPrototype");let array=_singletons.Create.ArrayCreate(realm,
0,proto);let len=items[0];(0,_invariant.default)(len!==undefined);let intLen;if(!len.mightBeNumber()){let defineStatus=_singletons.Create.CreateDataProperty(realm,array,"0",len);(0,_invariant.default)(defineStatus,"defineStatus is true");intLen=1}else{intLen=_singletons.To.ToUint32(realm,len.throwIfNotConcreteNumber());(0,_invariant.default)(len instanceof _index.NumberValue);if(intLen!==len.value)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"intLen \u2260 len");}_singletons.Properties.Set(realm,
array,"length",new _index.NumberValue(realm,intLen),true);return array}else{let numberOfArgs=argCount;(0,_invariant.default)(numberOfArgs>=2,"numberOfArgs >= 2");let newTarget=NewTarget===undefined?func:NewTarget;let proto=(0,_index2.GetPrototypeFromConstructor)(realm,newTarget,"ArrayPrototype");let array=_singletons.Create.ArrayCreate(realm,numberOfArgs,proto);let k=0;items;while(k<numberOfArgs){let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,k));let itemK=items[k];(0,_invariant.default)(itemK!==
undefined);let defineStatus=_singletons.Create.CreateDataProperty(realm,array,Pk,itemK);(0,_invariant.default)(defineStatus,"defineStatus is true");k+=1}let length=(0,_index2.Get)(realm,array,"length").throwIfNotConcrete();(0,_invariant.default)(length instanceof _index.NumberValue);(0,_invariant.default)(length.value===numberOfArgs,"the value of array's length property is numberOfArgs");return array}});func.defineNativeMethod("isArray",1,(context,[arg])=>{return new _index.BooleanValue(realm,(0,
_index2.IsArray)(realm,arg))});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))func.defineNativeMethod("of",0,(context,[...items],argCount)=>{let len=argCount;items;let C=context;let A;if((0,_index2.IsConstructor)(realm,C)){(0,_invariant.default)(C instanceof _index.ObjectValue);A=(0,_index2.Construct)(realm,C,[new _index.NumberValue(realm,len)])}else A=_singletons.Create.ArrayCreate(realm,len);let k=0;while(k<len){let kValue=items[k];let Pk=_singletons.To.ToString(realm,
new _index.NumberValue(realm,k));_singletons.Create.CreateDataPropertyOrThrow(realm,A,Pk,kValue);k+=1}_singletons.Properties.Set(realm,A,"length",new _index.NumberValue(realm,len),true);return A});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile")){let arrayFrom=func.defineNativeMethod("from",1,(context,[items,mapfn,thisArg],argCount)=>{let C=context;let mapping,T;if(!mapfn||mapfn instanceof _index.UndefinedValue)mapping=false;else if(mapfn.mightBeUndefined()){(0,
_invariant.default)(mapfn instanceof _index.AbstractValue);mapfn.throwIfNotConcrete()}else{if((0,_index2.IsCallable)(realm,mapfn)===false){mapfn.throwIfNotConcrete();throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsCallable(mapfn) is false");}T=thisArg!==undefined?thisArg:realm.intrinsics.undefined;mapping=true}if(realm.isInPureScope()&&items instanceof _index.AbstractValue&&items.values.isTop()){let args=[arrayFrom,items];let possibleNestedOptimizedFunctions;if(mapfn){args.push(mapfn);
if(thisArg)args.push(thisArg);possibleNestedOptimizedFunctions=[{func:mapfn,thisValue:thisArg||realm.intrinsics.undefined,kind:"map"}]}_singletons.Leak.value(realm,items);return _index.ArrayValue.createTemporalWithWidenedNumericProperty(realm,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"),possibleNestedOptimizedFunctions)}let usingIterator=(0,_index2.GetMethod)(realm,items,realm.intrinsics.SymbolIterator);if(!usingIterator.mightBeUndefined()){let A;if((0,_index2.IsConstructor)(realm,
C)){(0,_invariant.default)(C instanceof _index.ObjectValue);A=(0,_index2.Construct)(realm,C)}else A=_singletons.Create.ArrayCreate(realm,0);let iterator=(0,_iterator.GetIterator)(realm,items,usingIterator);let k=0;while(true){if(k>=Math.pow(2,53)-1){let error=realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"k >= 2^53 - 1");throw(0,_iterator.IteratorClose)(realm,iterator,error);}let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,k));let next=(0,_iterator.IteratorStep)(realm,
iterator);if(next===false){_singletons.Properties.Set(realm,A,"length",new _index.NumberValue(realm,k),true);return A}let nextValue=(0,_iterator.IteratorValue)(realm,next);let mappedValue;if(mapping===true)try{(0,_invariant.default)(T!==undefined);mappedValue=(0,_index2.Call)(realm,mapfn,T,[nextValue,new _index.NumberValue(realm,k)])}catch(mappedValueCompletion){if(mappedValueCompletion instanceof _completions.AbruptCompletion)throw(0,_iterator.IteratorClose)(realm,iterator,mappedValueCompletion);
else throw mappedValueCompletion;}else mappedValue=nextValue;try{_singletons.Create.CreateDataPropertyOrThrow(realm,A,Pk,mappedValue)}catch(completion){if(completion instanceof _completions.AbruptCompletion)throw(0,_iterator.IteratorClose)(realm,iterator,completion);else throw completion;}k=k+1}}else usingIterator.throwIfNotConcrete();items=items.throwIfNotConcrete();(0,_invariant.default)(items instanceof _index.ObjectValue);let arrayLike=_singletons.To.ToObject(realm,items);let len=_singletons.To.ToLength(realm,
(0,_index2.Get)(realm,arrayLike,"length"));let A;if((0,_index2.IsConstructor)(realm,C)){(0,_invariant.default)(C instanceof _index.ObjectValue);A=(0,_index2.Construct)(realm,C,[new _index.NumberValue(realm,len)])}else A=_singletons.Create.ArrayCreate(realm,len);let k=0;while(k<len){let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,k));let kValue=(0,_index2.Get)(realm,arrayLike,Pk);let mappedValue;if(mapping===true){(0,_invariant.default)(T!==undefined);mappedValue=(0,_index2.Call)(realm,
mapfn,T,[kValue,new _index.NumberValue(realm,k)])}else mappedValue=kValue;_singletons.Create.CreateDataPropertyOrThrow(realm,A,new _index.StringValue(realm,Pk),mappedValue);k=k+1}_singletons.Properties.Set(realm,A,"length",new _index.NumberValue(realm,len),true);return A})}func.defineNativeGetter(realm.intrinsics.SymbolSpecies,(context)=>{return context});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=
__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var _abstract=__webpack_require__(233);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeProperty(realm.intrinsics.SymbolIterator,realm.intrinsics.ArrayProto_values);obj.defineNativeProperty("length",realm.intrinsics.zero);
obj.defineNativeMethod("concat",1,(context,args,argCount)=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("concat")===undefined){let newArgs=[O,new _index.StringValue(realm,"concat"),...args];return _index.ArrayValue.createTemporalWithWidenedNumericProperty(realm,newArgs,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let A=_singletons.Create.ArraySpeciesCreate(realm,
O.throwIfNotConcreteObject(),0);let n=0;let items=argCount===0?[O]:[O,...args];while(items.length){let E=items.shift();let spreadable=(0,_index2.IsConcatSpreadable)(realm,E);if(spreadable){E=E.throwIfNotConcreteObject();let k=0;let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,E,"length"));if(n+len>Math.pow(2,53)-1)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"too damn high");while(k<len){let P=new _index.StringValue(realm,k+"");let exists=(0,_index2.HasProperty)(realm,
E,P);if(exists){let subElement=(0,_index2.Get)(realm,E,P);_singletons.Create.CreateDataPropertyOrThrow(realm,A,new _index.StringValue(realm,n+""),subElement)}n++;k++}}else{if(n>Math.pow(2,53)-1)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"too damn high");_singletons.Create.CreateDataPropertyOrThrow(realm,A,new _index.StringValue(realm,n+""),E);n++}}_singletons.Properties.Set(realm,A,"length",new _index.NumberValue(realm,n),true);return A});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&
!realm.isCompatibleWith("mobile"))obj.defineNativeMethod("copyWithin",2,(context,[target,start,end])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("copyWithin")===undefined){let args=[O,new _index.StringValue(realm,"copyWithin"),target];if(start)args.push(start);if(end)args.push(end);_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.BooleanValue,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
return O}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));let relativeTarget=_singletons.To.ToInteger(realm,target);let to=relativeTarget<0?Math.max(len+relativeTarget,0):Math.min(relativeTarget,len);let relativeStart=_singletons.To.ToInteger(realm,start);let from=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len);let relativeEnd=!end||end instanceof _index.UndefinedValue?len:_singletons.To.ToInteger(realm,end.throwIfNotConcrete());let final=relativeEnd<
0?Math.max(len+relativeEnd,0):Math.min(relativeEnd,len);let count=Math.min(final-from,len-to);let direction;if(from<to&&to<from+count){direction=-1;from=from+count-1;to=to+count-1}else direction=1;while(count>0){let fromKey=_singletons.To.ToString(realm,new _index.NumberValue(realm,from));let toKey=_singletons.To.ToString(realm,new _index.NumberValue(realm,to));let fromPresent=(0,_index2.HasProperty)(realm,O,fromKey);if(fromPresent===true){let fromVal=(0,_index2.Get)(realm,O,fromKey);_singletons.Properties.Set(realm,
O,toKey,fromVal,true)}else _singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),toKey);from=from+direction;to=to+direction;count=count-1}return O});obj.defineNativeMethod("entries",0,(context)=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("entries")===undefined)return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,[O,new _index.StringValue(realm,
"entries")],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));return _singletons.Create.CreateArrayIterator(realm,O.throwIfNotConcreteObject(),"key+value")});obj.defineNativeMethod("every",1,(context,[callbackfn,thisArg])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("every")===undefined){let args=[O,new _index.StringValue(realm,"every"),callbackfn];if(thisArg)args.push(thisArg);
return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.BooleanValue,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(!(0,_index2.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");let T=thisArg||realm.intrinsics.undefined;let k=0;while(k<len){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_index2.HasProperty)(realm,
O,Pk);if(kPresent){let kValue=(0,_index2.Get)(realm,O,Pk);let testResult=_singletons.To.ToBooleanPartial(realm,(0,_index2.Call)(realm,callbackfn,T,[kValue,new _index.NumberValue(realm,k),O]));if(!testResult)return realm.intrinsics.false}k++}return realm.intrinsics.true});obj.defineNativeMethod("fill",1,(context,[value,start,end])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("fill")===undefined){let args=
[O,new _index.StringValue(realm,"fill"),value];if(start)args.push(start);if(end)args.push(end);_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));return O}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));let relativeStart=_singletons.To.ToInteger(realm,start||realm.intrinsics.undefined);let k=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len);let relativeEnd=
!end||end instanceof _index.UndefinedValue?len:_singletons.To.ToInteger(realm,end.throwIfNotConcrete());let final=relativeEnd<0?Math.max(len+relativeEnd,0):Math.min(relativeEnd,len);while(k<final){let Pk=new _index.StringValue(realm,k+"");_singletons.Properties.Set(realm,O,Pk,value,true);k++}return O});obj.defineNativeMethod("filter",1,(context,[callbackfn,thisArg])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&
O.$GetOwnProperty("filter")===undefined){let args=[O,new _index.StringValue(realm,"filter"),callbackfn];if(thisArg)args.push(thisArg);return _index.ArrayValue.createTemporalWithWidenedNumericProperty(realm,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(!(0,_index2.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");let T=thisArg||
realm.intrinsics.undefined;let A=_singletons.Create.ArraySpeciesCreate(realm,O.throwIfNotConcreteObject(),0);let k=0;let to=0;while(k<len){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_index2.HasProperty)(realm,O,Pk);if(kPresent){let kValue=(0,_index2.Get)(realm,O,Pk);let selected=_singletons.To.ToBooleanPartial(realm,(0,_index2.Call)(realm,callbackfn,T,[kValue,new _index.NumberValue(realm,k),O]));if(selected){_singletons.Create.CreateDataPropertyOrThrow(realm,A,_singletons.To.ToString(realm,
new _index.NumberValue(realm,to)),kValue);to++}}k++}return A});obj.defineNativeMethod("find",1,(context,[predicate,thisArg])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("find")===undefined){let args=[O,new _index.StringValue(realm,"find"),predicate];if(thisArg)args.push(thisArg);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=
_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(!(0,_index2.IsCallable)(realm,predicate))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");let T=thisArg||realm.intrinsics.undefined;let k=0;while(k<len){let Pk=new _index.StringValue(realm,k+"");let kValue=(0,_index2.Get)(realm,O,Pk);let testResult=_singletons.To.ToBooleanPartial(realm,(0,_index2.Call)(realm,predicate,T,[kValue,new _index.NumberValue(realm,k),O]));if(testResult)return kValue;k++}return realm.intrinsics.undefined});
obj.defineNativeMethod("findIndex",1,(context,[predicate,thisArg])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("findIndex")===undefined){let args=[O,new _index.StringValue(realm,"findIndex"),predicate];if(thisArg)args.push(thisArg);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.NumberValue,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=
_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if((0,_index2.IsCallable)(realm,predicate)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");let T=thisArg?thisArg:realm.intrinsics.undefined;let k=0;while(k<len){let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,k));let kValue=(0,_index2.Get)(realm,O,new _index.StringValue(realm,Pk));let testResult=_singletons.To.ToBooleanPartial(realm,(0,_index2.Call)(realm,predicate,T,[kValue,
new _index.NumberValue(realm,k),O]));if(testResult===true)return new _index.NumberValue(realm,k);k=k+1}return new _index.NumberValue(realm,-1)});obj.defineNativeMethod("forEach",1,(context,[callbackfn,thisArg])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("forEach")===undefined){let args=[O,new _index.StringValue(realm,"forEach"),callbackfn];if(thisArg)args.push(thisArg);_index.AbstractValue.createTemporalFromBuildFunction(realm,
_index.BooleanValue,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));return realm.intrinsics.undefined}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(!(0,_index2.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");let T=thisArg||realm.intrinsics.undefined;let k=0;while(k<len){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_index2.HasProperty)(realm,O,Pk);if(kPresent){let kValue=
(0,_index2.Get)(realm,O,Pk);(0,_index2.Call)(realm,callbackfn,T,[kValue,new _index.NumberValue(realm,k),O])}k++}return realm.intrinsics.undefined});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))obj.defineNativeMethod("includes",1,(context,[searchElement,fromIndex])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("includes")===undefined){let args=[O,new _index.StringValue(realm,
"includes"),searchElement];if(fromIndex)args.push(fromIndex);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.BooleanValue,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(len===0)return realm.intrinsics.false;let n=_singletons.To.ToInteger(realm,fromIndex||realm.intrinsics.undefined);let k;if(n>=0)k=n;else{k=len+n;if(k<0)k=0}while(k<len){let elementK=(0,_index2.Get)(realm,
O,_singletons.To.ToString(realm,new _index.NumberValue(realm,k)));if((0,_abstract.SameValueZeroPartial)(realm,searchElement,elementK)===true)return realm.intrinsics.true;k=k+1}return realm.intrinsics.false});obj.defineNativeMethod("indexOf",1,(context,[searchElement,fromIndex])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("indexOf")===undefined){let args=[O,new _index.StringValue(realm,"indexOf"),
searchElement];if(fromIndex)args.push(fromIndex);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.NumberValue,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(len===0)return new _index.NumberValue(realm,-1);let n=fromIndex?_singletons.To.ToInteger(realm,fromIndex):0;if(n>=len)return new _index.NumberValue(realm,-1);let k;if(n>=0)k=Object.is(n,-0)?+0:n;else{k=len+
n;if(k<0)k=0}while(k<len){let kPresent=(0,_index2.HasProperty)(realm,O,k+"");if(kPresent===true){let elementK=(0,_index2.Get)(realm,O,k+"");let same=(0,_index2.StrictEqualityComparisonPartial)(realm,searchElement,elementK);if(same)return new _index.NumberValue(realm,k)}k++}return new _index.NumberValue(realm,-1)});obj.defineNativeMethod("join",1,(context,[separator])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&
O.$GetOwnProperty("join")===undefined){let args=[O,new _index.StringValue(realm,"join")];if(separator)args.push(separator);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.StringValue,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(!separator||separator instanceof _index.UndefinedValue)separator=new _index.StringValue(realm,",");let sep=_singletons.To.ToStringPartial(realm,
separator);if(len===0)return realm.intrinsics.emptyString;let element0=(0,_index2.Get)(realm,O,"0");let R;if((0,_index2.HasSomeCompatibleType)(element0,_index.UndefinedValue,_index.NullValue))R="";else R=_singletons.To.ToStringPartial(realm,element0);let k=1;while(k<len){let S=R+sep;let element=(0,_index2.Get)(realm,O,new _index.StringValue(realm,k+""));let next;if((0,_index2.HasSomeCompatibleType)(element,_index.UndefinedValue,_index.NullValue))next="";else next=_singletons.To.ToStringPartial(realm,
element);R=S+next;k++}return new _index.StringValue(realm,R+"")});obj.defineNativeMethod("keys",0,(context)=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("keys")===undefined)return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,[O,new _index.StringValue(realm,"keys")],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));return _singletons.Create.CreateArrayIterator(realm,
O.throwIfNotConcreteObject(),"key")});obj.defineNativeMethod("lastIndexOf",1,(context,[searchElement,fromIndex])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("lastIndexOf")===undefined){let args=[O,new _index.StringValue(realm,"lastIndexOf"),searchElement];if(fromIndex)args.push(fromIndex);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.NumberValue,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=
_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(len===0)return new _index.NumberValue(realm,-1);let n=fromIndex?_singletons.To.ToInteger(realm,fromIndex):len-1;let k;if(n>=0)k=Object.is(n,-0)?+0:Math.min(n,len-1);else k=len+n;while(k>=0){let kPresent=(0,_index2.HasProperty)(realm,O,new _index.StringValue(realm,k+""));if(kPresent){let elementK=(0,_index2.Get)(realm,O,new _index.StringValue(realm,k+""));let same=(0,_index2.StrictEqualityComparisonPartial)(realm,searchElement,elementK);
if(same)return new _index.NumberValue(realm,k)}k--}return new _index.NumberValue(realm,-1)});obj.defineNativeMethod("map",1,(context,[callbackfn,thisArg])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("map")===undefined){let args=[O,new _index.StringValue(realm,"map"),callbackfn];if(thisArg)args.push(thisArg);(0,_invariant.default)(callbackfn instanceof _index.ECMAScriptSourceFunctionValue||
callbackfn instanceof _index.BoundFunctionValue);let possibleNestedOptimizedFunctions=[{func:callbackfn,thisValue:thisArg||realm.intrinsics.undefined,kind:"map"}];return _index.ArrayValue.createTemporalWithWidenedNumericProperty(realm,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"),possibleNestedOptimizedFunctions)}let lenVal=(0,_index2.Get)(realm,O,"length");if(lenVal instanceof _index.AbstractValue&&!lenVal.mightNotBeNumber()&&!lenVal.values.isTop()){let values=
lenVal.values.getElements();let n=values.size;if(n>1&&n<10){let a=_singletons.Create.ArraySpeciesCreate(realm,O.throwIfNotConcreteObject(),0);return _singletons.Join.mapAndJoin(realm,values,(v)=>_index.AbstractValue.createFromBinaryOp(realm,"===",v,lenVal,lenVal.expressionLocation),(v)=>doMap(v,a))}}return doMap(lenVal.throwIfNotConcrete());function doMap(val,resultArray){let len=_singletons.To.ToLength(realm,val);if(!(0,_index2.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"not a function");let T=thisArg||realm.intrinsics.undefined;let A;if(resultArray===undefined)A=_singletons.Create.ArraySpeciesCreate(realm,O.throwIfNotConcreteObject(),len);else{A=resultArray;_singletons.Properties.Set(realm,A,"length",val,true)}let k=0;while(k<len){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_index2.HasProperty)(realm,O,Pk);if(kPresent){let kValue=(0,_index2.Get)(realm,O,Pk);let mappedValue=(0,_index2.Call)(realm,callbackfn,T,[kValue,new _index.NumberValue(realm,k),
O]);_singletons.Create.CreateDataPropertyOrThrow(realm,A,Pk,mappedValue)}k++}return A}});obj.defineNativeMethod("pop",0,(context)=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("pop")===undefined)return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,[O,new _index.StringValue(realm,"pop")],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(len===0){_singletons.Properties.Set(realm,O,"length",realm.intrinsics.zero,true);return realm.intrinsics.undefined}else{let newLen=len-1;let indx=new _index.StringValue(realm,newLen+"");let element=(0,_index2.Get)(realm,O,indx);_singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),indx);_singletons.Properties.Set(realm,O,"length",new _index.NumberValue(realm,newLen),true);return element}});obj.defineNativeMethod("push",
1,(context,args,argCount)=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("push")===undefined)return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.NumberValue,[O,new _index.StringValue(realm,"push"),...args],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,new _index.StringValue(realm,
"length")));let items=argCount>0?args:[];argCount;if(len+argCount>Math.pow(2,53)-1)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Array.prototype");while(items.length){let E=items.shift();_singletons.Properties.Set(realm,O,new _index.StringValue(realm,len+""),E,true);len++}_singletons.Properties.Set(realm,O,new _index.StringValue(realm,"length"),new _index.NumberValue(realm,len),true);return new _index.NumberValue(realm,len)});obj.defineNativeMethod("reduce",1,(context,[callbackfn,
initialValue])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("reduce")===undefined){let args=[O,new _index.StringValue(realm,"reduce"),callbackfn];if(initialValue)args.push(initialValue);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,
O,"length"));if(!(0,_index2.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");if(len===0&&!initialValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Array.prototype");let k=0;let accumulator;if(initialValue)accumulator=initialValue;else{let kPresent=false;while(kPresent===false&&k<len){let Pk=new _index.StringValue(realm,k+"");kPresent=(0,_index2.HasProperty)(realm,O,Pk);if(kPresent)accumulator=(0,_index2.Get)(realm,
O,Pk);k++}if(!kPresent)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"kPresent is false");(0,_invariant.default)(accumulator)}while(k<len){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_index2.HasProperty)(realm,O,Pk);if(kPresent){let kValue=(0,_index2.Get)(realm,O,Pk);accumulator=(0,_index2.Call)(realm,callbackfn,realm.intrinsics.undefined,[accumulator,kValue,new _index.NumberValue(realm,k),O])}k++}return accumulator});obj.defineNativeMethod("reduceRight",1,(context,
[callbackfn,initialValue])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("reduceRight")===undefined){let args=[O,new _index.StringValue(realm,"reduceRight"),callbackfn];if(initialValue)args.push(initialValue);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=_singletons.To.ToLength(realm,
(0,_index2.Get)(realm,O,"length"));if(!(0,_index2.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");if(len===0&&!initialValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Array.prototype");let k=len-1;let accumulator;if(initialValue)accumulator=initialValue;else{let kPresent=false;while(!kPresent&&k>=0){let Pk=new _index.StringValue(realm,k+"");kPresent=(0,_index2.HasProperty)(realm,O,Pk);if(kPresent)accumulator=
(0,_index2.Get)(realm,O,Pk);k--}if(!kPresent||!accumulator)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Array.prototype");}while(k>=0){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_index2.HasProperty)(realm,O,Pk);if(kPresent){let kValue=(0,_index2.Get)(realm,O,Pk);accumulator=(0,_index2.Call)(realm,callbackfn,realm.intrinsics.undefined,[accumulator,kValue,new _index.NumberValue(realm,k),O])}k--}return accumulator});obj.defineNativeMethod("reverse",0,(context)=>{let O=
_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("reverse")===undefined){_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.ArrayValue,[O,new _index.StringValue(realm,"reverse")],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));return O}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));let middle=Math.floor(len/2);let lower=0;while(lower!==
middle){let upper=len-lower-1;let upperP=new _index.StringValue(realm,upper+"");let lowerP=new _index.StringValue(realm,lower+"");let lowerExists=(0,_index2.HasProperty)(realm,O,lowerP);let lowerValue;if(lowerExists)lowerValue=(0,_index2.Get)(realm,O,lowerP);let upperExists=(0,_index2.HasProperty)(realm,O,upperP);let upperValue;if(upperExists)upperValue=(0,_index2.Get)(realm,O,upperP);if(lowerExists&&upperExists){(0,_invariant.default)(lowerValue,"expected lower value to exist");(0,_invariant.default)(upperValue,
"expected upper value to exist");_singletons.Properties.Set(realm,O,lowerP,upperValue,true);_singletons.Properties.Set(realm,O,upperP,lowerValue,true)}else if(!lowerExists&&upperExists){(0,_invariant.default)(upperValue,"expected upper value to exist");_singletons.Properties.Set(realm,O,lowerP,upperValue,true);_singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),upperP)}else if(lowerExists&&!upperExists){(0,_invariant.default)(lowerValue,"expected lower value to exist");
_singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),lowerP);_singletons.Properties.Set(realm,O,upperP,lowerValue,true)}else;lower++}return O});obj.defineNativeMethod("shift",0,(context)=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("shift")===undefined)return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,[O,new _index.StringValue(realm,"shift")],
(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(len===0){_singletons.Properties.Set(realm,O,"length",realm.intrinsics.zero,true);return realm.intrinsics.undefined}let first=(0,_index2.Get)(realm,O,"0");let k=0;while(k<len){let frm=new _index.StringValue(realm,k+"");let to=new _index.StringValue(realm,k-1+"");let fromPresent=(0,_index2.HasProperty)(realm,O,frm);if(fromPresent){let fromVal=(0,
_index2.Get)(realm,O,frm);_singletons.Properties.Set(realm,O,to,fromVal,true)}else _singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),to);k++}_singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),new _index.StringValue(realm,len-1+""));_singletons.Properties.Set(realm,O,"length",new _index.NumberValue(realm,len-1),true);return first});obj.defineNativeMethod("slice",2,(context,[start,end])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&
realm.isInPureScope()&&O.$GetOwnProperty("slice")===undefined){let newArgs=[O,new _index.StringValue(realm,"slice"),start,end];return _index.ArrayValue.createTemporalWithWidenedNumericProperty(realm,newArgs,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));let relativeStart=_singletons.To.ToInteger(realm,start);let k=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len);let relativeEnd=
!end||end instanceof _index.UndefinedValue?len:_singletons.To.ToInteger(realm,end.throwIfNotConcrete());let final=relativeEnd<0?Math.max(len+relativeEnd,0):Math.min(relativeEnd,len);let count=Math.max(final-k,0);let A=_singletons.Create.ArraySpeciesCreate(realm,O.throwIfNotConcreteObject(),count);let n=0;while(k<final){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_index2.HasProperty)(realm,O,Pk);if(kPresent){let kValue=(0,_index2.Get)(realm,O,Pk);_singletons.Create.CreateDataPropertyOrThrow(realm,
A,new _index.StringValue(realm,n+""),kValue)}k++;n++}_singletons.Properties.Set(realm,A,"length",new _index.NumberValue(realm,n),true);return A});obj.defineNativeMethod("some",1,(context,[callbackfn,thisArg])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("some")===undefined){let args=[O,new _index.StringValue(realm,"some"),callbackfn];if(thisArg)args.push(thisArg);return _index.AbstractValue.createTemporalFromBuildFunction(realm,
_index.BooleanValue,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));if(!(0,_index2.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"callback passed to Array.prototype.some isn't callable");let T=thisArg||realm.intrinsics.undefined;let k=0;while(k<len){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_index2.HasProperty)(realm,O,Pk);
if(kPresent){let kValue=(0,_index2.Get)(realm,O,Pk);let testResult=_singletons.To.ToBooleanPartial(realm,(0,_index2.Call)(realm,callbackfn,T,[kValue,new _index.NumberValue(realm,k),O]));if(testResult)return realm.intrinsics.true}k++}return realm.intrinsics.false});obj.defineNativeMethod("sort",1,(context,[comparefn])=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("sort")===undefined){let args=
[O,new _index.StringValue(realm,"sort"),comparefn];_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));return context}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));let isSparse=()=>{for(let i=0;i<len;i++){let elem=O.$GetOwnProperty(i.toString());if(elem===undefined)return true;_singletons.Properties.ThrowIfMightHaveBeenDeleted(elem)}return false};let sparse=isSparse();
let proto=O.$GetPrototypeOf();if(!(proto instanceof _index.NullValue))for(let j=0;j<len;j++)if((0,_index2.HasProperty)(realm,proto,j.toString())&&sparse)throw Error("Implentation defined behavior detected");if(sparse){if(!(0,_index2.IsExtensible)(realm,O))throw Error("Implementation defined behavior, Array is both sparse and extensible");for(let j=0;j<len;j++){let prop=O.$GetOwnProperty(j.toString());if(prop!==undefined&&!prop.throwIfNotConcrete(realm).configurable){_singletons.Properties.ThrowIfMightHaveBeenDeleted(prop);
throw Error("Implementation defined behavior :  Array is sparse and it's prototype has some numbered properties");}}}for(let j=0;j<len;j++){let prop=O.$GetOwnProperty(j.toString());if(prop!==undefined&&!prop.throwIfNotConcrete(realm).writable){_singletons.Properties.ThrowIfMightHaveBeenDeleted(prop);throw Error("Implementation defined behavior : property "+j.toString()+"is non writable : ");}}let SortCompare=(x,y)=>{x=x.throwIfNotConcrete();y=y.throwIfNotConcrete();if(x instanceof _index.UndefinedValue&&
y instanceof _index.UndefinedValue)return realm.intrinsics.zero;if(x instanceof _index.UndefinedValue)return new _index.NumberValue(realm,1);if(y instanceof _index.UndefinedValue)return new _index.NumberValue(realm,-1);if(!comparefn.mightBeUndefined()){let v=_singletons.To.ToNumber(realm,(0,_index2.Call)(realm,comparefn,new _index.UndefinedValue(realm),[x,y]));if(isNaN(v))return new _index.NumberValue(realm,+0);return new _index.NumberValue(realm,v)}else comparefn.throwIfNotConcrete();let xString=
new _index.StringValue(realm,_singletons.To.ToString(realm,x));let yString=new _index.StringValue(realm,_singletons.To.ToString(realm,y));let xSmaller=(0,_abstract.AbstractRelationalComparison)(realm,xString,yString,true,"<");if(xSmaller.value)return new _index.NumberValue(realm,-1);let ySmaller=(0,_abstract.AbstractRelationalComparison)(realm,yString,xString,true,"<");if(ySmaller.value)return new _index.NumberValue(realm,1);return realm.intrinsics.zero};let arr=[];let comparefn_=(x,y)=>{(0,_invariant.default)(x instanceof
_index.Value,"Unexpected type");(0,_invariant.default)(y instanceof _index.Value,"Unexpected type");let result_=SortCompare(x,y);let numb=_singletons.To.ToNumber(realm,result_);return numb};for(let j=0;j<len;j++){if(!(0,_index2.HasOwnProperty)(realm,O,j.toString()))continue;let val=O.$Get(j.toString(),O);arr[j]=val}arr.sort(comparefn_);for(let j=0;j<len;j++)if(arr.hasOwnProperty(j.toString())){let ok=O.$Set(j.toString(),arr[j],O);if(!ok)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"[[Set]] returned false");}else{(0,_invariant.default)(sparse);_singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),j.toString())}return context});obj.defineNativeMethod("splice",2,(context,[start,deleteCount,...items],argLength)=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("splice")===undefined){let args=[O,new _index.StringValue(realm,"splice"),start];if(deleteCount)args.push(deleteCount);
if(items&&items.length>0)args.push(...items);return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.ArrayValue,args,(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"))}let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));let relativeStart=_singletons.To.ToInteger(realm,start);let actualStart=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len);let insertCount;let actualDeleteCount;if(argLength===0){insertCount=
0;actualDeleteCount=0}else if(argLength===1){insertCount=0;actualDeleteCount=len-actualStart}else{insertCount=argLength-2;let dc=_singletons.To.ToInteger(realm,deleteCount);actualDeleteCount=Math.min(Math.max(dc,0),len-actualStart)}if(len+insertCount-actualDeleteCount>Math.pow(2,53)-1)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"the item count is too damn high");let A=_singletons.Create.ArraySpeciesCreate(realm,O.throwIfNotConcreteObject(),actualDeleteCount);let k=0;while(k<
actualDeleteCount){let frm=new _index.StringValue(realm,actualStart+k+"");let fromPresent=(0,_index2.HasProperty)(realm,O,frm);if(fromPresent){let fromValue=(0,_index2.Get)(realm,O,frm);_singletons.Create.CreateDataPropertyOrThrow(realm,A,new _index.StringValue(realm,k+""),fromValue)}k++}_singletons.Properties.Set(realm,A,"length",new _index.NumberValue(realm,actualDeleteCount),true);items;let itemCount=items.length;if(itemCount<actualDeleteCount){k=actualStart;while(k<len-actualDeleteCount){let frm=
new _index.StringValue(realm,k+actualDeleteCount+"");let to=new _index.StringValue(realm,k+itemCount+"");let fromPresent=(0,_index2.HasProperty)(realm,O,frm);if(fromPresent){let fromValue=(0,_index2.Get)(realm,O,frm);_singletons.Properties.Set(realm,O,to,fromValue,true)}else _singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),to);k++}k=len;while(k>len-actualDeleteCount+itemCount){_singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),new _index.StringValue(realm,
k-1+""));k--}}else if(itemCount>actualDeleteCount){k=len-actualDeleteCount;while(k>actualStart){let frm=new _index.StringValue(realm,k+actualDeleteCount-1+"");let to=new _index.StringValue(realm,k+itemCount-1+"");let fromPresent=(0,_index2.HasProperty)(realm,O,frm);if(fromPresent){let fromValue=(0,_index2.Get)(realm,O,frm);_singletons.Properties.Set(realm,O,to,fromValue,true)}else _singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),to);k--}}k=actualStart;while(items.length){let E=
items.shift();_singletons.Properties.Set(realm,O,new _index.StringValue(realm,k+""),E,true);k++}_singletons.Properties.Set(realm,O,"length",new _index.NumberValue(realm,len-actualDeleteCount+itemCount),true);return A});obj.defineNativeMethod("toLocaleString",0,(context)=>{let array=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(array)&&realm.isInPureScope()&&array.$GetOwnProperty("toLocaleString")===undefined)return _index.AbstractValue.createTemporalFromBuildFunction(realm,
_index.StringValue,[array,new _index.StringValue(realm,"toLocaleString")],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,array,"length"));let separator=",";if(len===0)return realm.intrinsics.emptyString;let firstElement=(0,_index2.Get)(realm,array,"0");let R;if((0,_index2.HasSomeCompatibleType)(firstElement,_index.UndefinedValue,_index.NullValue))R="";else R=_singletons.To.ToStringPartial(realm,(0,_index2.Invoke)(realm,
firstElement,"toLocaleString"));let k=1;while(k<len){let S=R+separator;let nextElement=(0,_index2.Get)(realm,array,new _index.StringValue(realm,k+"")).throwIfNotConcrete();if((0,_index2.HasSomeCompatibleType)(nextElement,_index.UndefinedValue,_index.NullValue))R="";else R=_singletons.To.ToStringPartial(realm,(0,_index2.Invoke)(realm,nextElement,"toLocaleString"));R=S+R;k++}return new _index.StringValue(realm,R)});obj.defineNativeProperty("toString",realm.intrinsics.ArrayProto_toString);obj.defineNativeMethod("unshift",
1,(context,items,argCount)=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("unshift")===undefined)return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.NumberValue,[O,new _index.StringValue(realm,"unshift")],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,O,"length"));argCount;if(argCount>
0){if(len+argCount>Math.pow(2,53)-1)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"too damn high");let k=len;while(k>0){let frm=new _index.StringValue(realm,k-1+"");let to=new _index.StringValue(realm,k+argCount-1+"");let fromPresent=(0,_index2.HasProperty)(realm,O,frm);if(fromPresent){let fromValue=(0,_index2.Get)(realm,O,frm);_singletons.Properties.Set(realm,O,to,fromValue,true)}else _singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),to);k--}let j=
0;items;while(items.length){let E=items.shift();_singletons.Properties.Set(realm,O,new _index.StringValue(realm,j+""),E,true);j++}}_singletons.Properties.Set(realm,O,"length",new _index.NumberValue(realm,len+argCount),true);return new _index.NumberValue(realm,len+argCount)});obj.defineNativeProperty("values",realm.intrinsics.ArrayProto_values);{let unscopableList=_singletons.Create.ObjectCreate(realm,realm.intrinsics.null);_singletons.Create.CreateDataProperty(realm,unscopableList,"copyWithin",realm.intrinsics.true);
_singletons.Create.CreateDataProperty(realm,unscopableList,"entries",realm.intrinsics.true);_singletons.Create.CreateDataProperty(realm,unscopableList,"fill",realm.intrinsics.true);_singletons.Create.CreateDataProperty(realm,unscopableList,"find",realm.intrinsics.true);_singletons.Create.CreateDataProperty(realm,unscopableList,"findIndex",realm.intrinsics.true);_singletons.Create.CreateDataProperty(realm,unscopableList,"includes",realm.intrinsics.true);_singletons.Create.CreateDataProperty(realm,
unscopableList,"keys",realm.intrinsics.true);_singletons.Create.CreateDataProperty(realm,unscopableList,"values",realm.intrinsics.true);obj.defineNativeProperty(realm.intrinsics.SymbolUnscopables,unscopableList,{writable:false})}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _date=__webpack_require__(270);var _errors=__webpack_require__(3);
var _invariant=_interopRequireDefault(__webpack_require__(9));var _seedrandom=_interopRequireDefault(__webpack_require__(396));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const buildDateNowSrc="global.Date.now()";function _default(realm){let lastNow;let offsetGenerator;function getCurrentTime(){if(realm.useAbstractInterpretation)return _index.AbstractValue.createTemporalFromTemplate(realm,buildDateNowSrc,_index.NumberValue,[],{isPure:true,skipInvariant:true});
else{let newNow=Date.now();if(realm.strictlyMonotonicDateNow&&lastNow>=newNow){if(!offsetGenerator)offsetGenerator=(0,_seedrandom.default)(0);newNow=lastNow+1+Math.floor(offsetGenerator()*500)}lastNow=newNow;return new _index.NumberValue(realm,newNow)}}let func=new _index.NativeFunctionValue(realm,"Date","Date",7,(context,args,argCount,NewTarget)=>{if(argCount>=2){let [year,month,date,hours,minutes,seconds,ms]=args;let numberOfArgs=argCount;(0,_invariant.default)(numberOfArgs>=2,"expected two or more arguments");
if(NewTarget){let y=_singletons.To.ToNumber(realm,year);let m=_singletons.To.ToNumber(realm,month);let dt=argCount>=3?_singletons.To.ToNumber(realm,date):1;let h=argCount>=4?_singletons.To.ToNumber(realm,hours):0;let min=argCount>=5?_singletons.To.ToNumber(realm,minutes):0;let s=argCount>=6?_singletons.To.ToNumber(realm,seconds):0;let milli=argCount>=7?_singletons.To.ToNumber(realm,ms):0;let yr;if(!isNaN(y)&&_singletons.To.ToInteger(realm,y)>=0&&_singletons.To.ToInteger(realm,y)<=99)yr=1900+_singletons.To.ToInteger(realm,
new _index.NumberValue(realm,y));else yr=y;let finalDate=(0,_date.MakeDate)(realm,(0,_date.MakeDay)(realm,yr,m,dt),(0,_date.MakeTime)(realm,h,min,s,milli));let O=_singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"DatePrototype",{$DateValue:undefined});O.$DateValue=(0,_date.TimeClip)(realm,(0,_date.UTC)(realm,finalDate));return O}else{let now=getCurrentTime().throwIfNotConcreteNumber().value;return new _index.StringValue(realm,(0,_date.ToDateString)(realm,now))}}else if(argCount===1){let [value_]=
args;let value=value_.throwIfNotConcrete();let numberOfArgs=argCount;(0,_invariant.default)(numberOfArgs===1,"expected number of arguments to equal 1");if(NewTarget){let tv;if(value instanceof _index.ObjectValue&&value.$DateValue!==undefined)tv=(0,_date.thisTimeValue)(realm,value);else{let v=_singletons.To.ToPrimitive(realm,value);if(v instanceof _index.StringValue)tv=new _index.NumberValue(realm,(new Date(v.value)).getTime());else tv=new _index.NumberValue(realm,_singletons.To.ToNumber(realm,v))}let O=
_singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"DatePrototype",{$DateValue:undefined});O.$DateValue=(0,_date.TimeClip)(realm,tv);return O}else{let now=getCurrentTime().throwIfNotConcreteNumber().value;return new _index.StringValue(realm,(0,_date.ToDateString)(realm,now))}}else{let numberOfArgs=argCount;(0,_invariant.default)(numberOfArgs===0,"expected zero arguments");if(NewTarget){let O=_singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"DatePrototype",{$DateValue:undefined});
O.$DateValue=getCurrentTime();return O}else{let now=getCurrentTime().throwIfNotConcreteNumber().value;return new _index.StringValue(realm,(0,_date.ToDateString)(realm,now))}}});func.defineNativeMethod("now",0,(context)=>{return getCurrentTime()});func.defineNativeMethod("parse",1,(context,[string])=>{if(realm.useAbstractInterpretation){_index.AbstractValue.reportIntrospectionError(string);throw new _errors.FatalError;}else{const parsedDate=Date.parse(string.value);return new _index.NumberValue(realm,
parsedDate)}});func.defineNativeMethod("UTC",7,(context,[year,month,date,hours,minutes,seconds,ms],argCount)=>{let y=_singletons.To.ToNumber(realm,year);let m=argCount>=2?_singletons.To.ToNumber(realm,month):0;let dt=argCount>=3?_singletons.To.ToNumber(realm,date):1;let h=argCount>=4?_singletons.To.ToNumber(realm,hours):0;let min=argCount>=5?_singletons.To.ToNumber(realm,minutes):0;let s=argCount>=6?_singletons.To.ToNumber(realm,seconds):0;let milli=argCount>=7?_singletons.To.ToNumber(realm,ms):0;
let yr=!isNaN(y)&&_singletons.To.ToInteger(realm,y)>=0&&_singletons.To.ToInteger(realm,y)<=99?1900+_singletons.To.ToInteger(realm,y):y;return(0,_date.TimeClip)(realm,(0,_date.MakeDate)(realm,(0,_date.MakeDay)(realm,yr,m,dt),(0,_date.MakeTime)(realm,h,min,s,milli)))});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _errors=__webpack_require__(3);var _index=__webpack_require__(10);var _index2=__webpack_require__(232);
var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeMethod("getDate",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.DateFromTime)(realm,(0,_index2.LocalTime)(realm,t)))});obj.defineNativeMethod("getDay",
0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.WeekDay)(realm,(0,_index2.LocalTime)(realm,t)))});obj.defineNativeMethod("getFullYear",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.YearFromTime)(realm,(0,_index2.LocalTime)(realm,t)))});
obj.defineNativeMethod("getHours",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.HourFromTime)(realm,(0,_index2.LocalTime)(realm,t)))});obj.defineNativeMethod("getMilliseconds",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.msFromTime)(realm,
(0,_index2.LocalTime)(realm,t)))});obj.defineNativeMethod("getMinutes",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.MinFromTime)(realm,(0,_index2.LocalTime)(realm,t)))});obj.defineNativeMethod("getMonth",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,
(0,_index2.MonthFromTime)(realm,(0,_index2.LocalTime)(realm,t)))});obj.defineNativeMethod("getSeconds",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.SecFromTime)(realm,(0,_index2.LocalTime)(realm,t)))});obj.defineNativeMethod("getTime",0,(context)=>{return(0,_index2.thisTimeValue)(realm,context)});obj.defineNativeMethod("getTimezoneOffset",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,
context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(t-(0,_index2.LocalTime)(realm,t))/_index2.msPerMinute)});obj.defineNativeMethod("getUTCDate",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.DateFromTime)(realm,t))});obj.defineNativeMethod("getUTCDay",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,
context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.WeekDay)(realm,t))});obj.defineNativeMethod("getUTCFullYear",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.YearFromTime)(realm,t))});obj.defineNativeMethod("getUTCHours",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;
if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.HourFromTime)(realm,t))});obj.defineNativeMethod("getUTCMilliseconds",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.msFromTime)(realm,t))});obj.defineNativeMethod("getUTCMinutes",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;
return new _index.NumberValue(realm,(0,_index2.MinFromTime)(realm,t))});obj.defineNativeMethod("getUTCMonth",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.MonthFromTime)(realm,t))});obj.defineNativeMethod("getUTCSeconds",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;(0,_invariant.default)(context instanceof _index.ObjectValue);
if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.SecFromTime)(realm,t))});obj.defineNativeMethod("setDate",1,(context,[date])=>{let t=(0,_index2.LocalTime)(realm,(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value);(0,_invariant.default)(context instanceof _index.ObjectValue);let dt=_singletons.To.ToNumber(realm,date);let newDate=(0,_index2.MakeDate)(realm,(0,_index2.MakeDay)(realm,(0,_index2.YearFromTime)(realm,t),(0,_index2.MonthFromTime)(realm,
t),dt),(0,_index2.TimeWithinDay)(realm,t));let u=(0,_index2.TimeClip)(realm,(0,_index2.UTC)(realm,newDate));context.$DateValue=u;return u});obj.defineNativeMethod("setFullYear",3,(context,[year,month,date],argCount)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;(0,_invariant.default)(context instanceof _index.ObjectValue);t=isNaN(t)?+0:(0,_index2.LocalTime)(realm,t);let y=_singletons.To.ToNumber(realm,year);let m=argCount>=2?_singletons.To.ToNumber(realm,month):
(0,_index2.MonthFromTime)(realm,t);let dt=argCount>=3?_singletons.To.ToNumber(realm,date):(0,_index2.DateFromTime)(realm,t);let newDate=(0,_index2.MakeDate)(realm,(0,_index2.MakeDay)(realm,y,m,dt),(0,_index2.TimeWithinDay)(realm,t));let u=(0,_index2.TimeClip)(realm,(0,_index2.UTC)(realm,newDate));context.$DateValue=u;return u});obj.defineNativeMethod("setHours",4,(context,[hour,min,sec,ms],argCount)=>{let t=(0,_index2.LocalTime)(realm,(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value);
(0,_invariant.default)(context instanceof _index.ObjectValue);let h=_singletons.To.ToNumber(realm,hour);let m=argCount>=2?_singletons.To.ToNumber(realm,min):(0,_index2.MinFromTime)(realm,t);let s=argCount>=3?_singletons.To.ToNumber(realm,sec):(0,_index2.SecFromTime)(realm,t);let milli=argCount>=4?_singletons.To.ToNumber(realm,ms):(0,_index2.msFromTime)(realm,t);let date=(0,_index2.MakeDate)(realm,(0,_index2.Day)(realm,t),(0,_index2.MakeTime)(realm,h,m,s,milli));let u=(0,_index2.TimeClip)(realm,(0,
_index2.UTC)(realm,date));context.$DateValue=u;return u});obj.defineNativeMethod("setMilliseconds",1,(context,[_ms])=>{let ms=_ms;let t=(0,_index2.LocalTime)(realm,(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value);(0,_invariant.default)(context instanceof _index.ObjectValue);ms=_singletons.To.ToNumber(realm,ms);let time=(0,_index2.MakeTime)(realm,(0,_index2.HourFromTime)(realm,t),(0,_index2.MinFromTime)(realm,t),(0,_index2.SecFromTime)(realm,t),ms);let u=(0,_index2.TimeClip)(realm,
(0,_index2.UTC)(realm,(0,_index2.MakeDate)(realm,(0,_index2.Day)(realm,t),time)));context.$DateValue=u;return u});obj.defineNativeMethod("setMinutes",3,(context,[min,sec,ms],argCount)=>{let t=(0,_index2.LocalTime)(realm,(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value);(0,_invariant.default)(context instanceof _index.ObjectValue);let m=_singletons.To.ToNumber(realm,min);let s=argCount>=2?_singletons.To.ToNumber(realm,sec):(0,_index2.SecFromTime)(realm,t);let milli=argCount>=
3?_singletons.To.ToNumber(realm,ms):(0,_index2.msFromTime)(realm,t);let date=(0,_index2.MakeDate)(realm,(0,_index2.Day)(realm,t),(0,_index2.MakeTime)(realm,(0,_index2.HourFromTime)(realm,t),m,s,milli));let u=(0,_index2.TimeClip)(realm,(0,_index2.UTC)(realm,date));context.$DateValue=u;return u});obj.defineNativeMethod("setMonth",2,(context,[month,date],argCount)=>{let t=(0,_index2.LocalTime)(realm,(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value);(0,_invariant.default)(context instanceof
_index.ObjectValue);let m=_singletons.To.ToNumber(realm,month);let dt=argCount>=2?_singletons.To.ToNumber(realm,date):(0,_index2.DateFromTime)(realm,t);let newDate=(0,_index2.MakeDate)(realm,(0,_index2.MakeDay)(realm,(0,_index2.YearFromTime)(realm,t),m,dt),(0,_index2.TimeWithinDay)(realm,t));let u=(0,_index2.TimeClip)(realm,(0,_index2.UTC)(realm,newDate));context.$DateValue=u;return u});obj.defineNativeMethod("setSeconds",2,(context,[sec,ms],argCount)=>{let t=(0,_index2.LocalTime)(realm,(0,_index2.thisTimeValue)(realm,
context).throwIfNotConcreteNumber().value);(0,_invariant.default)(context instanceof _index.ObjectValue);let s=_singletons.To.ToNumber(realm,sec);let milli=argCount>=2?_singletons.To.ToNumber(realm,ms):(0,_index2.msFromTime)(realm,t);let date=(0,_index2.MakeDate)(realm,(0,_index2.Day)(realm,t),(0,_index2.MakeTime)(realm,(0,_index2.HourFromTime)(realm,t),(0,_index2.MinFromTime)(realm,t),s,milli));let u=(0,_index2.TimeClip)(realm,(0,_index2.UTC)(realm,date));context.$DateValue=u;return u});obj.defineNativeMethod("setTime",
1,(context,[time])=>{(0,_index2.thisTimeValue)(realm,context);(0,_invariant.default)(context instanceof _index.ObjectValue);let t=_singletons.To.ToNumber(realm,time);let v=(0,_index2.TimeClip)(realm,t);context.$DateValue=v;return v});obj.defineNativeMethod("setUTCDate",1,(context,[date])=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;(0,_invariant.default)(context instanceof _index.ObjectValue);let dt=_singletons.To.ToNumber(realm,date);let newDate=(0,_index2.MakeDate)(realm,
(0,_index2.MakeDay)(realm,(0,_index2.YearFromTime)(realm,t),(0,_index2.MonthFromTime)(realm,t),dt),(0,_index2.TimeWithinDay)(realm,t));let v=(0,_index2.TimeClip)(realm,newDate);context.$DateValue=v;return v});obj.defineNativeMethod("setUTCFullYear",3,(context,[year,month,date],argCount)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;(0,_invariant.default)(context instanceof _index.ObjectValue);if(isNaN(t))t=+0;let y=_singletons.To.ToNumber(realm,year);let m=argCount>=
2?_singletons.To.ToNumber(realm,month):(0,_index2.MonthFromTime)(realm,t);let dt=argCount>=3?_singletons.To.ToNumber(realm,date):(0,_index2.DateFromTime)(realm,t);let newDate=(0,_index2.MakeDate)(realm,(0,_index2.MakeDay)(realm,y,m,dt),(0,_index2.TimeWithinDay)(realm,t));let v=(0,_index2.TimeClip)(realm,newDate);context.$DateValue=v;return v});obj.defineNativeMethod("setUTCHours",4,(context,[hour,min,sec,ms],argCount)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;
(0,_invariant.default)(context instanceof _index.ObjectValue);let h=_singletons.To.ToNumber(realm,hour);let m=argCount>=2?_singletons.To.ToNumber(realm,min):(0,_index2.MinFromTime)(realm,t);let s=argCount>=3?_singletons.To.ToNumber(realm,sec):(0,_index2.SecFromTime)(realm,t);let milli=argCount>=4?_singletons.To.ToNumber(realm,ms):(0,_index2.msFromTime)(realm,t);let newDate=(0,_index2.MakeDate)(realm,(0,_index2.Day)(realm,t),(0,_index2.MakeTime)(realm,h,m,s,milli));let v=(0,_index2.TimeClip)(realm,
newDate);context.$DateValue=v;return v});obj.defineNativeMethod("setUTCMilliseconds",1,(context,[ms])=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;(0,_invariant.default)(context instanceof _index.ObjectValue);let milli=_singletons.To.ToNumber(realm,ms);let time=(0,_index2.MakeTime)(realm,(0,_index2.HourFromTime)(realm,t),(0,_index2.MinFromTime)(realm,t),(0,_index2.SecFromTime)(realm,t),milli);let v=(0,_index2.TimeClip)(realm,(0,_index2.MakeDate)(realm,(0,_index2.Day)(realm,
t),time));context.$DateValue=v;return v});obj.defineNativeMethod("setUTCMinutes",3,(context,[min,sec,ms],argCount)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;(0,_invariant.default)(context instanceof _index.ObjectValue);let m=_singletons.To.ToNumber(realm,min);let s;if(argCount<2)s=(0,_index2.SecFromTime)(realm,t);else s=_singletons.To.ToNumber(realm,sec);let milli;if(argCount<3)milli=(0,_index2.msFromTime)(realm,t);else milli=_singletons.To.ToNumber(realm,ms);
let date=(0,_index2.MakeDate)(realm,(0,_index2.Day)(realm,t),(0,_index2.MakeTime)(realm,(0,_index2.HourFromTime)(realm,t),m,s,milli));let v=(0,_index2.TimeClip)(realm,date);context.$DateValue=v;return v});obj.defineNativeMethod("setUTCMonth",2,(context,[month,date],argCount)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;(0,_invariant.default)(context instanceof _index.ObjectValue);let m=_singletons.To.ToNumber(realm,month);let dt;if(argCount<2)dt=(0,_index2.DateFromTime)(realm,
t);else dt=_singletons.To.ToNumber(realm,date);let newDate=(0,_index2.MakeDate)(realm,(0,_index2.MakeDay)(realm,(0,_index2.YearFromTime)(realm,t),m,dt),(0,_index2.TimeWithinDay)(realm,t));let v=(0,_index2.TimeClip)(realm,newDate);context.$DateValue=v;return v});obj.defineNativeMethod("setUTCSeconds",2,(context,[sec,ms],argCount)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;(0,_invariant.default)(context instanceof _index.ObjectValue);let s=_singletons.To.ToNumber(realm,
sec);let milli;if(argCount<2)milli=(0,_index2.msFromTime)(realm,t);else milli=_singletons.To.ToNumber(realm,ms);let date=(0,_index2.MakeDate)(realm,(0,_index2.Day)(realm,t),(0,_index2.MakeTime)(realm,(0,_index2.HourFromTime)(realm,t),(0,_index2.MinFromTime)(realm,t),s,milli));let v=(0,_index2.TimeClip)(realm,date);context.$DateValue=v;return v});obj.defineNativeMethod("toDateString",0,(context)=>{throw new _errors.FatalError("TODO #1005: implement Date.prototype.toDateString");});obj.defineNativeMethod("toISOString",
0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(!isFinite(t))throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError);return new _index.StringValue(realm,(new Date(t)).toISOString())});obj.defineNativeMethod("toJSON",1,(context,[key])=>{let O=_singletons.To.ToObject(realm,context);let tv=_singletons.To.ToPrimitive(realm,O.throwIfNotConcreteObject(),"number");if(tv instanceof _index.NumberValue&&!isFinite(tv.value))return realm.intrinsics.null;
return(0,_index2.Invoke)(realm,O,"toISOString")});obj.defineNativeMethod("toLocaleDateString",0,(context)=>{throw new _errors.FatalError("TODO #1005: implement Date.prototype.toLocaleDateString");});obj.defineNativeMethod("toLocaleString",0,(context)=>{throw new _errors.FatalError("TODO #1005: implement Date.prototype.toLocaleString");});obj.defineNativeMethod("toLocaleTimeString",0,(context)=>{throw new _errors.FatalError("TODO #1005: implement Date.prototype.toLocaleTimeString");});obj.defineNativeMethod("toString",
0,(context)=>{let O=context;let tv;if(O.$DateValue===undefined)tv=NaN;else tv=(0,_index2.thisTimeValue)(realm,O).throwIfNotConcreteNumber().value;return new _index.StringValue(realm,(0,_index2.ToDateString)(realm,tv))});obj.defineNativeMethod("toTimeString",0,(context)=>{throw new _errors.FatalError("TODO #1005: implement Date.prototype.toTimeString");});obj.defineNativeMethod("toUTCString",0,(context)=>{throw new _errors.FatalError("TODO #1005: implement Date.prototype.toUTCString");});obj.defineNativeMethod("valueOf",
0,(context)=>{return(0,_index2.thisTimeValue)(realm,context)});obj.defineNativeMethod(realm.intrinsics.SymbolToPrimitive,1,(context,[_hint])=>{let hint=_hint;let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");let tryFirst;hint=hint.throwIfNotConcrete();if(hint instanceof _index.StringValue&&(hint.value==="string"||hint.value==="default"))tryFirst="string";else if(hint instanceof _index.StringValue&&
hint.value==="number")tryFirst="number";else throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");return _singletons.To.OrdinaryToPrimitive(realm,O,tryFirst)},{writable:false});obj.defineNativeMethod("getYear",0,(context)=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;if(isNaN(t))return realm.intrinsics.NaN;return new _index.NumberValue(realm,(0,_index2.YearFromTime)(realm,(0,_index2.LocalTime)(realm,t))-1900)});obj.defineNativeMethod("setYear",
1,(context,[year])=>{let t=(0,_index2.thisTimeValue)(realm,context).throwIfNotConcreteNumber().value;(0,_invariant.default)(context instanceof _index.ObjectValue);t=isNaN(t)?+0:(0,_index2.LocalTime)(realm,t);let y=_singletons.To.ToNumber(realm,year);if(isNaN(y)){context.$DateValue=realm.intrinsics.NaN;return realm.intrinsics.NaN}let yyyy;if(_singletons.To.ToInteger(realm,y)<99)yyyy=_singletons.To.ToInteger(realm,y)+1900;else yyyy=y;let d=(0,_index2.MakeDay)(realm,yyyy,(0,_index2.MonthFromTime)(realm,
t),(0,_index2.DateFromTime)(realm,t));let date=(0,_index2.UTC)(realm,(0,_index2.MakeDate)(realm,d,(0,_index2.TimeWithinDay)(realm,t)));let dateValue=(0,_index2.TimeClip)(realm,date);context.$DateValue=dateValue;return dateValue});obj.defineNativeProperty("toGMTString",obj.$Get("toUTCString",obj))}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _is=__webpack_require__(229);var _get=
__webpack_require__(230);var _abstract=__webpack_require__(233);var _regexp=__webpack_require__(276);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let func=new _index.NativeFunctionValue(realm,"RegExp","RegExp",2,(context,[pattern,flags],argCount,NewTarget)=>{let patternIsRegExp=(0,_is.IsRegExp)(realm,pattern);let newTarget;if(NewTarget)newTarget=NewTarget;else{newTarget=func;
if(patternIsRegExp&&flags instanceof _index.UndefinedValue){(0,_invariant.default)(pattern instanceof _index.ObjectValue);let patternConstructor=(0,_get.Get)(realm,pattern,"constructor");if((0,_abstract.SameValuePartial)(realm,newTarget,patternConstructor))return pattern}}let P,F;if(pattern instanceof _index.ObjectValue&&pattern.$RegExpMatcher){(0,_invariant.default)(typeof pattern.$OriginalSource==="string");P=new _index.StringValue(realm,pattern.$OriginalSource);if(flags instanceof _index.UndefinedValue){(0,
_invariant.default)(typeof pattern.$OriginalFlags==="string");F=new _index.StringValue(realm,pattern.$OriginalFlags)}else F=flags.throwIfNotConcrete()}else if(patternIsRegExp){(0,_invariant.default)(pattern instanceof _index.ObjectValue);P=(0,_get.Get)(realm,pattern,"source");if(flags instanceof _index.UndefinedValue)F=(0,_get.Get)(realm,pattern,"flags");else F=flags.throwIfNotConcrete()}else{P=pattern.throwIfNotConcrete();F=flags.throwIfNotConcrete()}let O=(0,_regexp.RegExpAlloc)(realm,newTarget);
return(0,_regexp.RegExpInitialize)(realm,O,P,F)});func.defineNativeGetter(realm.intrinsics.SymbolSpecies,(context)=>{return context});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _invariant=_interopRequireDefault(__webpack_require__(9));var _index=__webpack_require__(10);var _abstract=__webpack_require__(233);var _call=__webpack_require__(234);var _construct=__webpack_require__(228);var _get=__webpack_require__(230);
var _singletons=__webpack_require__(236);var _is=__webpack_require__(229);var _regexp=__webpack_require__(276);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function InternalHasFlag(realm,context,flag){let R=context.throwIfNotConcrete();if(!(R instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(R) is not an object");if(typeof R.$OriginalFlags!=="string")if((0,_abstract.SameValue)(realm,R,realm.intrinsics.RegExpPrototype))return realm.intrinsics.undefined;
else throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"R does not have an [[OriginalFlags]] internal slot");let flags=R.$OriginalFlags;if(flags.indexOf(flag)>=0)return realm.intrinsics.true;return realm.intrinsics.false}function _default(realm,obj){obj.defineNativeMethod("exec",1,(context,[string])=>{let R=context.throwIfNotConcrete();if(!(R instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(R) is not an object");if(R.$RegExpMatcher===
undefined)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"R does not have a [[RegExpMatcher]] internal slot");let S=_singletons.To.ToStringPartial(realm,string);return(0,_regexp.RegExpBuiltinExec)(realm,R,S)});obj.defineNativeGetter("flags",(context)=>{let R=context.throwIfNotConcrete();if(!(R instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(R) is not an object");let result="";let global=_singletons.To.ToBooleanPartial(realm,
(0,_get.Get)(realm,R,"global"));if(global)result+="g";let ignoreCase=_singletons.To.ToBooleanPartial(realm,(0,_get.Get)(realm,R,"ignoreCase"));if(ignoreCase)result+="i";let multiline=_singletons.To.ToBooleanPartial(realm,(0,_get.Get)(realm,R,"multiline"));if(multiline)result+="m";let unicode=_singletons.To.ToBooleanPartial(realm,(0,_get.Get)(realm,R,"unicode"));if(unicode)result+="u";let sticky=_singletons.To.ToBooleanPartial(realm,(0,_get.Get)(realm,R,"sticky"));if(sticky)result+="y";return new _index.StringValue(realm,
result)});obj.defineNativeGetter("global",(context)=>{return InternalHasFlag(realm,context,"g")});obj.defineNativeGetter("ignoreCase",(context)=>{return InternalHasFlag(realm,context,"i")});obj.defineNativeMethod(realm.intrinsics.SymbolMatch,1,(context,[string])=>{let rx=context.throwIfNotConcrete();if(!(rx instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(R) is not an object");let S=_singletons.To.ToStringPartial(realm,string);let global=_singletons.To.ToBooleanPartial(realm,
(0,_get.Get)(realm,rx,"global"));if(global===false)return(0,_regexp.RegExpExec)(realm,rx,S);else{let fullUnicode=_singletons.To.ToBooleanPartial(realm,(0,_get.Get)(realm,rx,"unicode"));_singletons.Properties.Set(realm,rx,"lastIndex",realm.intrinsics.zero,true);let A=_singletons.Create.ArrayCreate(realm,0);let n=0;while(true){let result=(0,_regexp.RegExpExec)(realm,rx,S);if(result instanceof _index.NullValue)if(n===0)return realm.intrinsics.null;else return A;else{let matchStr=_singletons.To.ToStringPartial(realm,
(0,_get.Get)(realm,result,"0"));let status=_singletons.Create.CreateDataProperty(realm,A,_singletons.To.ToString(realm,new _index.NumberValue(realm,n)),new _index.StringValue(realm,matchStr));(0,_invariant.default)(status===true,"status is true");if(matchStr===""){let thisIndex=_singletons.To.ToLength(realm,(0,_get.Get)(realm,rx,"lastIndex"));let nextIndex=(0,_regexp.AdvanceStringIndex)(realm,S,thisIndex,fullUnicode);_singletons.Properties.Set(realm,rx,"lastIndex",new _index.NumberValue(realm,nextIndex),
true)}n+=1}}(0,_invariant.default)(false)}});obj.defineNativeGetter("multiline",(context)=>{return InternalHasFlag(realm,context,"m")});obj.defineNativeMethod(realm.intrinsics.SymbolReplace,2,(context,[string,_replaceValue])=>{let replaceValue=_replaceValue;let rx=context.throwIfNotConcrete();if(!(rx instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(R) is not an object");let S=_singletons.To.ToStringPartial(realm,string);let lengthS=S.length;let functionalReplace=
(0,_is.IsCallable)(realm,replaceValue);if(functionalReplace===false)replaceValue=new _index.StringValue(realm,_singletons.To.ToStringPartial(realm,replaceValue));let global=_singletons.To.ToBooleanPartial(realm,(0,_get.Get)(realm,rx,"global"));let fullUnicode;if(global===true){fullUnicode=_singletons.To.ToBooleanPartial(realm,(0,_get.Get)(realm,rx,"unicode"));_singletons.Properties.Set(realm,rx,"lastIndex",realm.intrinsics.zero,true)}let results=[];let done=false;while(done===false){let result=(0,
_regexp.RegExpExec)(realm,rx,S);if(result instanceof _index.NullValue)done=true;else{results.push(result);if(global===false)done=true;else{(0,_invariant.default)(fullUnicode!==undefined);let matchStr=_singletons.To.ToStringPartial(realm,(0,_get.Get)(realm,result,"0"));if(matchStr===""){let thisIndex=_singletons.To.ToLength(realm,(0,_get.Get)(realm,rx,"lastIndex"));let nextIndex=(0,_regexp.AdvanceStringIndex)(realm,S,thisIndex,fullUnicode);_singletons.Properties.Set(realm,rx,"lastIndex",new _index.NumberValue(realm,
nextIndex),true)}}}}let accumulatedResult="";let nextSourcePosition=0;for(let result of results){let nCaptures=_singletons.To.ToLength(realm,(0,_get.Get)(realm,result,"length"));nCaptures=Math.max(nCaptures-1,0);let matched=_singletons.To.ToStringPartial(realm,(0,_get.Get)(realm,result,"0"));let matchLength=matched.length;let position=_singletons.To.ToInteger(realm,(0,_get.Get)(realm,result,"index"));position=Math.max(Math.min(position,lengthS),0);let n=1;let captures=[];while(n<=nCaptures){let capN=
(0,_get.Get)(realm,result,_singletons.To.ToString(realm,new _index.NumberValue(realm,n)));if(!capN.mightBeUndefined())capN=_singletons.To.ToStringPartial(realm,capN);else{capN.throwIfNotConcrete();capN=undefined}captures.push(capN);n=n+1}let replacement;if(functionalReplace){let replacerArgs=[new _index.StringValue(realm,matched)];for(let capture of captures)replacerArgs.push(capture===undefined?realm.intrinsics.undefined:new _index.StringValue(realm,capture));replacerArgs=replacerArgs.concat([new _index.NumberValue(realm,
position),new _index.StringValue(realm,S)]);let replValue=(0,_call.Call)(realm,replaceValue,realm.intrinsics.undefined,replacerArgs);replacement=_singletons.To.ToStringPartial(realm,replValue)}else{(0,_invariant.default)(replaceValue instanceof _index.StringValue);replacement=(0,_get.GetSubstitution)(realm,matched,S,position,captures,replaceValue.value)}if(position>=nextSourcePosition){accumulatedResult=accumulatedResult+S.substr(nextSourcePosition,position-nextSourcePosition)+replacement;nextSourcePosition=
position+matchLength}}if(nextSourcePosition>=lengthS)return new _index.StringValue(realm,accumulatedResult);return new _index.StringValue(realm,accumulatedResult+S.substr(nextSourcePosition))});obj.defineNativeMethod(realm.intrinsics.SymbolSearch,1,(context,[string])=>{let rx=context.throwIfNotConcrete();if(!(rx instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(R) is not an object");let S=_singletons.To.ToStringPartial(realm,string);let previousLastIndex=
(0,_get.Get)(realm,rx,"lastIndex");_singletons.Properties.Set(realm,rx,"lastIndex",realm.intrinsics.zero,true);let result=(0,_regexp.RegExpExec)(realm,rx,S);_singletons.Properties.Set(realm,rx,"lastIndex",previousLastIndex,true);if(result instanceof _index.NullValue)return new _index.NumberValue(realm,-1);return(0,_get.Get)(realm,result,"index")});obj.defineNativeGetter("source",(context)=>{let R=context.throwIfNotConcrete();if(!(R instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"Type(R) is not an object");if(typeof R.$OriginalSource!=="string")if((0,_abstract.SameValue)(realm,R,realm.intrinsics.RegExpPrototype))return new _index.StringValue(realm,"(?:)");else throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"R does not have an [[OriginalSource]] internal slot");(0,_invariant.default)(R.$OriginalFlags!==undefined,"R has an [[OriginalFlags]] internal slot");let src=R.$OriginalSource;(0,_invariant.default)(typeof src==="string");let flags=R.$OriginalFlags;
(0,_invariant.default)(typeof flags==="string");return new _index.StringValue(realm,(0,_regexp.EscapeRegExpPattern)(realm,src,flags))});obj.defineNativeMethod(realm.intrinsics.SymbolSplit,2,(context,[string,limit])=>{let rx=context.throwIfNotConcrete();if(!(rx instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(rx) is not an object");let S=_singletons.To.ToStringPartial(realm,string);let C=(0,_construct.SpeciesConstructor)(realm,rx,realm.intrinsics.RegExp);
let flags=_singletons.To.ToStringPartial(realm,(0,_get.Get)(realm,rx,"flags"));let unicodeMatching;if(flags.indexOf("u")>=0)unicodeMatching=true;else unicodeMatching=false;let newFlags;if(flags.indexOf("y")>=0)newFlags=flags;else newFlags=flags+"y";let splitter=(0,_construct.Construct)(realm,C,[rx,new _index.StringValue(realm,newFlags)]).throwIfNotConcreteObject();let A=_singletons.Create.ArrayCreate(realm,0);let lengthA=0;let lim=limit instanceof _index.UndefinedValue?Math.pow(2,32)-1:_singletons.To.ToUint32(realm,
limit.throwIfNotConcrete());let size=S.length;let p=0;if(lim===0)return A;if(size===0){let z=(0,_regexp.RegExpExec)(realm,splitter,S);if(!(z instanceof _index.NullValue))return A;_singletons.Create.CreateDataProperty(realm,A,"0",new _index.StringValue(realm,S));return A}let q=p;while(q<size){_singletons.Properties.Set(realm,splitter,"lastIndex",new _index.NumberValue(realm,q),true);let z=(0,_regexp.RegExpExec)(realm,splitter,S);if(z instanceof _index.NullValue)q=(0,_regexp.AdvanceStringIndex)(realm,
S,q,unicodeMatching);else{let e=_singletons.To.ToLength(realm,(0,_get.Get)(realm,splitter,"lastIndex"));e=Math.min(e,size);if(e===p)q=(0,_regexp.AdvanceStringIndex)(realm,S,q,unicodeMatching);else{let T=S.substr(p,q-p);_singletons.Create.CreateDataProperty(realm,A,_singletons.To.ToString(realm,new _index.NumberValue(realm,lengthA)),new _index.StringValue(realm,T));lengthA=lengthA+1;if(lengthA===lim)return A;p=e;let numberOfCaptures=_singletons.To.ToLength(realm,(0,_get.Get)(realm,z,"length"));numberOfCaptures=
Math.max(numberOfCaptures-1,0);let i=1;while(i<=numberOfCaptures){let nextCapture=(0,_get.Get)(realm,z,_singletons.To.ToString(realm,new _index.NumberValue(realm,i)));_singletons.Create.CreateDataProperty(realm,A,_singletons.To.ToString(realm,new _index.NumberValue(realm,lengthA)),nextCapture);i=i+1;lengthA=lengthA+1;if(lengthA===lim)return A}q=p}}}let T=S.substr(p,size-p);_singletons.Create.CreateDataProperty(realm,A,_singletons.To.ToString(realm,new _index.NumberValue(realm,lengthA)),new _index.StringValue(realm,
T));return A});obj.defineNativeGetter("sticky",(context)=>{return InternalHasFlag(realm,context,"y")});obj.defineNativeMethod("test",1,(context,[S])=>{let R=context.throwIfNotConcrete();if(!(R instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(R) is not an object");let string=_singletons.To.ToStringPartial(realm,S);let match=(0,_regexp.RegExpExec)(realm,R,string);return new _index.BooleanValue(realm,!(match instanceof _index.NullValue)?true:false)});
obj.defineNativeMethod("toString",0,(context)=>{let R=context.throwIfNotConcrete();if(!(R instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(R) is not an object");let pattern=_singletons.To.ToStringPartial(realm,(0,_get.Get)(realm,R,"source"));let flags=_singletons.To.ToStringPartial(realm,(0,_get.Get)(realm,R,"flags"));let result="/"+pattern+"/"+flags;return new _index.StringValue(realm,result)});obj.defineNativeGetter("unicode",(context)=>{return InternalHasFlag(realm,
context,"u")})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _abstract=__webpack_require__(233);function _default(realm){let func=new _index.NativeFunctionValue(realm,"Symbol","Symbol",0,(context,[description],argCount,NewTarget)=>{if(NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let descString;if(!description||
description instanceof _index.UndefinedValue)descString=undefined;else if(description instanceof _index.AbstractValue)descString=description;else{descString=_singletons.To.ToStringPartial(realm,description);descString=new _index.StringValue(realm,descString)}return new _index.SymbolValue(realm,descString)});func.defineNativeMethod("for",1,(context,[key])=>{let stringKey=_singletons.To.ToStringPartial(realm,key);stringKey=new _index.StringValue(realm,stringKey);for(let e of realm.globalSymbolRegistry)if(e.$Key===
stringKey.value)return e.$Symbol;let newSymbol=new _index.SymbolValue(realm,stringKey);realm.globalSymbolRegistry.push({$Key:stringKey.value,$Symbol:newSymbol});return newSymbol});func.defineNativeMethod("keyFor",1,(context,[sym])=>{if(!(sym instanceof _index.SymbolValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(sym) is not Symbol");for(let e of realm.globalSymbolRegistry)if((0,_abstract.SameValue)(realm,e.$Symbol,sym)===true)return new _index.StringValue(realm,e.$Key);
return realm.intrinsics.undefined});func.defineNativeConstant("isConcatSpreadable",realm.intrinsics.SymbolIsConcatSpreadable);func.defineNativeConstant("species",realm.intrinsics.SymbolSpecies);func.defineNativeConstant("replace",realm.intrinsics.SymbolReplace);func.defineNativeConstant("iterator",realm.intrinsics.SymbolIterator);func.defineNativeConstant("hasInstance",realm.intrinsics.SymbolHasInstance);func.defineNativeConstant("toPrimitive",realm.intrinsics.SymbolToPrimitive);func.defineNativeConstant("toStringTag",
realm.intrinsics.SymbolToStringTag);func.defineNativeConstant("unscopables",realm.intrinsics.SymbolUnscopables);func.defineNativeConstant("match",realm.intrinsics.SymbolMatch);func.defineNativeConstant("split",realm.intrinsics.SymbolSplit);func.defineNativeConstant("search",realm.intrinsics.SymbolSearch);return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);
var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){const tsTemplateSrc="('' + A)";obj.defineNativeMethod("toString",0,(context)=>{const target=context instanceof _index.ObjectValue?context.$SymbolData:context;if(target instanceof _index.AbstractValue&&target.getType()===_index.SymbolValue)return _index.AbstractValue.createFromTemplate(realm,tsTemplateSrc,_index.StringValue,[target]);
let s=context.throwIfNotConcrete();let sym;if(s instanceof _index.SymbolValue)sym=s;else{if(!(s instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!s.$SymbolData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);sym=s.$SymbolData}sym.throwIfNotConcreteSymbol();(0,_invariant.default)(sym instanceof _index.SymbolValue,"expected symbol data internal slot to be a symbol value");return new _index.StringValue(realm,(0,_index2.SymbolDescriptiveString)(realm,
sym))});obj.defineNativeMethod("valueOf",0,(context)=>{let s=context.throwIfNotConcrete();if(s instanceof _index.SymbolValue)return s;if(!(s instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!s.$SymbolData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return s.$SymbolData});obj.defineNativeMethod(realm.intrinsics.SymbolToPrimitive,1,(context,[hint])=>{let s=context.throwIfNotConcrete();if(s instanceof _index.SymbolValue)return s;
if(!(s instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!s.$SymbolData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return s.$SymbolData},{writable:false});obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"Symbol"),{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);
var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let func=new _index.NativeFunctionValue(realm,"String","String",1,(context,[value],argCount,NewTarget)=>{let s;if(argCount===0)s=realm.intrinsics.emptyString;else{if(!NewTarget&&value instanceof _index.SymbolValue)return new _index.StringValue(realm,(0,_index2.SymbolDescriptiveString)(realm,
value));s=_singletons.To.ToStringValue(realm,value)}if(!NewTarget)return s;s=s.throwIfNotConcreteString();return _singletons.Create.StringCreate(realm,s,(0,_index2.GetPrototypeFromConstructor)(realm,NewTarget,"StringPrototype"))});func.defineNativeMethod("fromCharCode",1,(context,codeUnits,argCount)=>{codeUnits;let length=argCount;let elements=[];let nextIndex=0;while(nextIndex<length){let next=codeUnits[nextIndex];let nextCU=_singletons.To.ToUint16(realm,next);elements.push(nextCU);nextIndex++}return new _index.StringValue(realm,
String.fromCharCode.apply(null,elements))});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))func.defineNativeMethod("fromCodePoint",1,(context,codePoints,argCount)=>{codePoints;let length=argCount;let elements=[];let nextIndex=0;while(nextIndex<length){let next=codePoints[nextIndex];let nextCP=_singletons.To.ToNumber(realm,next);if(nextCP!==_singletons.To.ToInteger(realm,nextCP))throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"SameValue(nextCP, To.ToInteger(nextCP)) is false");
if(nextCP<0||nextCP>1114111)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"SameValue(nextCP, To.ToInteger(nextCP)) is false");elements.push(String.fromCodePoint(nextCP));nextIndex++}return new _index.StringValue(realm,elements.join(""))});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))func.defineNativeMethod("raw",1,(context,[template,..._substitutions],argCount)=>{let substitutions=_substitutions;substitutions=argCount<2?[]:substitutions;
let numberOfSubstitutions=substitutions.length;let cooked=_singletons.To.ToObject(realm,template);let raw=_singletons.To.ToObject(realm,(0,_index2.Get)(realm,cooked,"raw"));let literalSegments=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,raw,"length"));if(literalSegments<=0)return realm.intrinsics.emptyString;let stringElements="";let nextIndex=0;while(true){let nextKey=_singletons.To.ToString(realm,new _index.NumberValue(realm,nextIndex));let nextSeg=_singletons.To.ToStringPartial(realm,(0,
_index2.Get)(realm,raw,nextKey));stringElements=stringElements+nextSeg;if(nextIndex+1===literalSegments)return new _index.StringValue(realm,stringElements);let next;if(nextIndex<numberOfSubstitutions)next=substitutions[nextIndex];else next=realm.intrinsics.emptyString;let nextSub=_singletons.To.ToStringPartial(realm,next);stringElements=stringElements+nextSub;nextIndex=nextIndex+1}(0,_invariant.default)(false)});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _realm=__webpack_require__(7);var _errors=__webpack_require__(3);var _index=__webpack_require__(10);var _is=__webpack_require__(229);var _get=__webpack_require__(230);var _call=__webpack_require__(234);var _singletons=__webpack_require__(236);var _regexp=__webpack_require__(276);var _abstract=__webpack_require__(233);var _has=__webpack_require__(269);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}const sliceTemplateSrc="(A).slice(B,C)";const splitTemplateSrc="(A).split(B,C)";function _default(realm,obj){obj.$StringData=realm.intrinsics.emptyString;obj.defineNativeProperty("length",realm.intrinsics.zero);obj.defineNativeMethod("charAt",1,(context,[pos])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let position=_singletons.To.ToInteger(realm,pos);let size=S.length;if(position<0||position>=
size)return realm.intrinsics.emptyString;return new _index.StringValue(realm,S.charAt(position))});obj.defineNativeMethod("charCodeAt",1,(context,[pos])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let position=_singletons.To.ToInteger(realm,pos);let size=S.length;if(position<0||position>=size)return realm.intrinsics.NaN;return new _index.NumberValue(realm,S.charCodeAt(position))});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&
!realm.isCompatibleWith("mobile"))obj.defineNativeMethod("codePointAt",1,(context,[pos])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let position=_singletons.To.ToInteger(realm,pos);let size=S.length;if(position<0||position>=size)return realm.intrinsics.undefined;return new _index.NumberValue(realm,S.codePointAt(position))});obj.defineNativeMethod("concat",1,(context,args,argCount)=>{let O=(0,_abstract.RequireObjectCoercible)(realm,
context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());args=argCount===0?[]:args;let R=S;while(args.length){let next=args.shift();let nextString=_singletons.To.ToStringPartial(realm,next);R=R+nextString}return new _index.StringValue(realm,R)});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))obj.defineNativeMethod("endsWith",1,(context,[searchString,endPosition])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,
O.throwIfNotConcrete());let isRegExp=(0,_is.IsRegExp)(realm,searchString);if(isRegExp)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"String.prototype");let searchStr=_singletons.To.ToStringPartial(realm,searchString);let len=S.length;let pos;if(!endPosition||endPosition instanceof _index.UndefinedValue)pos=len;else pos=_singletons.To.ToInteger(realm,endPosition.throwIfNotConcrete());let end=Math.min(Math.max(pos,0),len);let searchLength=searchStr.length;let start=end-searchLength;
if(start<0)return realm.intrinsics.false;if(S.substr(start,searchLength)===searchStr)return realm.intrinsics.true;return realm.intrinsics.false});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))obj.defineNativeMethod("includes",1,(context,[searchString,position])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let isRegExp=(0,_is.IsRegExp)(realm,searchString);if(isRegExp)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"String.prototype");let searchStr=_singletons.To.ToStringPartial(realm,searchString);let pos=_singletons.To.ToInteger(realm,position||realm.intrinsics.undefined);let len=S.length;let start=Math.min(Math.max(pos,0),len);let searchLen=searchStr.length;if(searchLen===0)return realm.intrinsics.true;else{for(let k=start;k+searchLen<=len;++k){let found=true;for(let j=0;j<searchLen;++j)if(S.charCodeAt(k+j)!==searchStr.charCodeAt(j))found=false;if(found)return realm.intrinsics.true}return realm.intrinsics.false}});
obj.defineNativeMethod("indexOf",1,(context,[searchString,position])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let searchStr=_singletons.To.ToStringPartial(realm,searchString);let pos=position?_singletons.To.ToInteger(realm,position):0;return new _index.NumberValue(realm,S.indexOf(searchStr,pos))});obj.defineNativeMethod("lastIndexOf",1,(context,[searchString,position])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,
context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let searchStr=_singletons.To.ToStringPartial(realm,searchString);let numPos=_singletons.To.ToNumber(realm,position||realm.intrinsics.undefined);let pos;if(isNaN(numPos))pos=Infinity;else pos=_singletons.To.ToInteger(realm,numPos);return new _index.NumberValue(realm,S.lastIndexOf(searchStr,pos))});obj.defineNativeMethod("localeCompare",1,(context,[that])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,
O.throwIfNotConcrete());let That=_singletons.To.ToStringPartial(realm,that);return new _index.NumberValue(realm,S.localeCompare(That))});obj.defineNativeMethod("match",1,(context,[regexp])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);if(!(0,_has.HasSomeCompatibleType)(regexp,_index.UndefinedValue,_index.NullValue)){let matcher=(0,_get.GetMethod)(realm,regexp,realm.intrinsics.SymbolMatch);if(!matcher.mightBeUndefined())return(0,_call.Call)(realm,matcher,regexp,[O]);matcher.throwIfNotConcrete()}let S=
new _index.StringValue(realm,_singletons.To.ToStringPartial(realm,O));let rx=(0,_regexp.RegExpCreate)(realm,regexp,undefined);return(0,_call.Invoke)(realm,rx,realm.intrinsics.SymbolMatch,[S])});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))obj.defineNativeMethod("normalize",0,(context,[form])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());if(!form||form instanceof _index.UndefinedValue)form=
new _index.StringValue(realm,"NFC");let f=_singletons.To.ToStringPartial(realm,form);if(f!=="NFC"&&f!=="NFD"&&f!=="NFKC"&&f!=="NFKD")throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError);return new _index.StringValue(realm,S.normalize(f))});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))obj.defineNativeMethod("padEnd",1,(context,[maxLength,fillString])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,
O.throwIfNotConcrete());let intMaxLength=_singletons.To.ToLength(realm,maxLength);let stringLength=S.length;if(intMaxLength<=stringLength)return new _index.StringValue(realm,S);let filler;if(!fillString||fillString instanceof _index.UndefinedValue)filler=" ";else filler=_singletons.To.ToStringPartial(realm,fillString);if(filler==="")return new _index.StringValue(realm,S);let fillLen=intMaxLength-stringLength;let truncatedStringFiller=filler.repeat(Math.ceil(fillLen/filler.length)).substr(0,fillLen);
return new _index.StringValue(realm,S+truncatedStringFiller)});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))obj.defineNativeMethod("padStart",1,(context,[maxLength,fillString])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let intMaxLength=_singletons.To.ToLength(realm,maxLength);let stringLength=S.length;if(intMaxLength<=stringLength)return new _index.StringValue(realm,S);let filler;
if(!fillString||fillString instanceof _index.UndefinedValue)filler=" ";else filler=_singletons.To.ToStringPartial(realm,fillString);if(filler==="")return new _index.StringValue(realm,S);let fillLen=intMaxLength-stringLength;let truncatedStringFiller=filler.repeat(Math.ceil(fillLen/filler.length)).substr(0,fillLen);return new _index.StringValue(realm,truncatedStringFiller+S)});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))obj.defineNativeMethod("repeat",1,
(context,[count])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let n=_singletons.To.ToInteger(realm,count);if(n<0)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError);if(!isFinite(n))throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError);let T="";if(S)while(n--)T+=S;return new _index.StringValue(realm,T)});obj.defineNativeMethod("replace",2,(context,[searchValue,replaceValue])=>{let replStr;let O=
(0,_abstract.RequireObjectCoercible)(realm,context);if(!(0,_has.HasSomeCompatibleType)(searchValue,_index.NullValue,_index.UndefinedValue)){let replacer=(0,_get.GetMethod)(realm,searchValue,realm.intrinsics.SymbolReplace);if(!(replacer instanceof _index.UndefinedValue))return(0,_call.Call)(realm,replacer,searchValue,[O,replaceValue])}let string=_singletons.To.ToString(realm,O.throwIfNotConcrete());let searchString=_singletons.To.ToStringPartial(realm,searchValue);let functionalReplace=(0,_is.IsCallable)(realm,
replaceValue);let replaceValueString;if(functionalReplace===false)replaceValueString=_singletons.To.ToStringPartial(realm,replaceValue);let pos=string.indexOf(searchString);let matched=searchString;if(pos<0)return new _index.StringValue(realm,string);if(functionalReplace===true){let replValue=(0,_call.Call)(realm,replaceValue,realm.intrinsics.undefined,[new _index.StringValue(realm,matched),new _index.NumberValue(realm,pos),new _index.StringValue(realm,string)]);replStr=_singletons.To.ToStringPartial(realm,
replValue)}else{let captures=[];(0,_invariant.default)(typeof replaceValueString==="string");replStr=_singletons.To.ToString(realm,(0,_get.GetSubstitution)(realm,matched,string,pos,captures,replaceValueString))}let tailPos=pos+matched.length;let newString=string.substr(0,pos)+replStr+string.substr(tailPos);return new _index.StringValue(realm,newString)});obj.defineNativeMethod("search",1,(context,[regexp])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);if(!(0,_has.HasSomeCompatibleType)(regexp,
_index.UndefinedValue,_index.NullValue)){let searcher=(0,_get.GetMethod)(realm,regexp,realm.intrinsics.SymbolSearch);if(!(searcher instanceof _index.UndefinedValue))return(0,_call.Call)(realm,searcher,regexp,[O])}let string=_singletons.To.ToStringPartial(realm,O);let rx=(0,_regexp.RegExpCreate)(realm,regexp,undefined);return(0,_call.Invoke)(realm,rx,realm.intrinsics.SymbolSearch,[new _index.StringValue(realm,string)])});obj.defineNativeMethod("slice",2,(context,[start,end])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,
context);if(O instanceof _index.AbstractValue&&O.getType()===_index.StringValue){let absVal=_index.AbstractValue.createFromTemplate(realm,sliceTemplateSrc,_index.StringValue,[O,start,end]);return _index.AbstractValue.convertToTemporalIfArgsAreTemporal(realm,absVal,[O])}let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let len=S.length;let intStart=_singletons.To.ToInteger(realm,start);let intEnd=!end||end instanceof _index.UndefinedValue?len:_singletons.To.ToInteger(realm,end.throwIfNotConcrete());
let from=intStart<0?Math.max(len+intStart,0):Math.min(intStart,len);let to=intEnd<0?Math.max(len+intEnd,0):Math.min(intEnd,len);let span=Math.max(to-from,0);return new _index.StringValue(realm,S.substr(from,span))});obj.defineNativeMethod("split",2,(context,[separator,limit])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);if(O instanceof _index.AbstractValue&&O.getType()===_index.StringValue){let absVal=_index.AbstractValue.createFromTemplate(realm,splitTemplateSrc,_index.ObjectValue,
[O,separator,limit]);return _index.AbstractValue.convertToTemporalIfArgsAreTemporal(realm,absVal,[O])}if(!(0,_has.HasSomeCompatibleType)(separator,_index.UndefinedValue,_index.NullValue)){let splitter=(0,_get.GetMethod)(realm,separator,realm.intrinsics.SymbolSplit);if(!(splitter instanceof _index.UndefinedValue))return(0,_call.Call)(realm,splitter,separator,[O,limit])}let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let A=_singletons.Create.ArrayCreate(realm,0);let lengthA=0;let lim=!limit||
limit instanceof _index.UndefinedValue?Math.pow(2,32)-1:_singletons.To.ToUint32(realm,limit.throwIfNotConcrete());let s=S.length;let p=0;let R=_singletons.To.ToStringPartial(realm,separator);if(lim===0)return A;if(!separator||separator instanceof _index.UndefinedValue){_singletons.Create.CreateDataProperty(realm,A,"0",new _index.StringValue(realm,S));return A}if(s===0){let z=(0,_abstract.SplitMatch)(realm,S,0,R);if(z!==false)return A;_singletons.Create.CreateDataProperty(realm,A,"0",new _index.StringValue(realm,
S));return A}let q=p;while(q!==s){let e=(0,_abstract.SplitMatch)(realm,S,q,R);if(e===false)q++;else if(e===p)q++;else{let T=S.substring(p,q);_singletons.Create.CreateDataProperty(realm,A,new _index.StringValue(realm,lengthA+""),new _index.StringValue(realm,T));lengthA++;if(lengthA===lim)return A;p=e;q=p}}let T=S.substring(p,s);_singletons.Create.CreateDataProperty(realm,A,new _index.StringValue(realm,lengthA+""),new _index.StringValue(realm,T));return A});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&
!realm.isCompatibleWith("mobile"))obj.defineNativeMethod("startsWith",1,(context,[searchString,position])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let isRegExp=(0,_is.IsRegExp)(realm,searchString);if(isRegExp)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"String.prototype");let searchStr=_singletons.To.ToStringPartial(realm,searchString);let pos=_singletons.To.ToInteger(realm,position||realm.intrinsics.undefined);
let len=S.length;let start=Math.min(Math.max(pos,0),len);let searchLength=searchStr.length;if(searchLength+start>len)return realm.intrinsics.false;if(S.substr(start,searchLength)===searchStr)return realm.intrinsics.true;return realm.intrinsics.false});obj.defineNativeMethod("substring",2,(context,[start,end])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let len=S.length;let intStart=_singletons.To.ToInteger(realm,start);let intEnd=
!end||end instanceof _index.UndefinedValue?len:_singletons.To.ToInteger(realm,end.throwIfNotConcrete());let finalStart=Math.min(Math.max(intStart,0),len);let finalEnd=Math.min(Math.max(intEnd,0),len);let frm=Math.min(finalStart,finalEnd);let to=Math.max(finalStart,finalEnd);return new _index.StringValue(realm,S.slice(frm,to))});function toCase(type,context,locales){let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());if(realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)||
realm.isCompatibleWith("mobile"))locales=undefined;else if(locales)locales=locales.serialize();if(realm.useAbstractInterpretation&&(type==="LocaleUpper"||type==="LocaleLower")){_index.AbstractValue.reportIntrospectionError(O);throw new _errors.FatalError;}return new _index.StringValue(realm,S[`to${type}Case`](locales))}obj.defineNativeMethod("toLocaleLowerCase",0,(context,[locales])=>{return toCase("LocaleLower",context,locales)});obj.defineNativeMethod("toLocaleUpperCase",0,(context,[locales])=>
{return toCase("LocaleUpper",context,locales)});obj.defineNativeMethod("toLowerCase",0,(context)=>{return toCase("Lower",context)});obj.defineNativeMethod("toString",0,(context)=>{const target=context instanceof _index.ObjectValue?context.$StringData:context;if(target instanceof _index.AbstractValue&&target.getType()===_index.StringValue)return target;return _singletons.To.thisStringValue(realm,context)});obj.defineNativeMethod("toUpperCase",0,(context)=>{return toCase("Upper",context)});obj.defineNativeMethod("trim",
0,(context)=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());let T=S.trim();return new _index.StringValue(realm,T)});obj.defineNativeMethod("valueOf",0,(context)=>{return _singletons.To.thisStringValue(realm,context)});obj.defineNativeMethod(realm.intrinsics.SymbolIterator,0,(context)=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToString(realm,O.throwIfNotConcrete());return _singletons.Create.CreateStringIterator(realm,
new _index.StringValue(realm,S))});obj.defineNativeMethod("substr",2,(context,[start,length])=>{let O=(0,_abstract.RequireObjectCoercible)(realm,context);let S=_singletons.To.ToStringPartial(realm,O);let intStart=_singletons.To.ToInteger(realm,start);let end;if(!length||length instanceof _index.UndefinedValue)end=Infinity;else end=_singletons.To.ToInteger(realm,length.throwIfNotConcrete());let size=S.length;if(intStart<0)intStart=Math.max(size+intStart,0);let resultLength=Math.min(Math.max(end,0),
size-intStart);if(resultLength<=0)return realm.intrinsics.emptyString;return new _index.StringValue(realm,S.slice(intStart,intStart+resultLength))});obj.defineNativeMethod("anchor",1,(context,[name])=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"a","name",name)});obj.defineNativeMethod("big",0,(context)=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"big","","")});obj.defineNativeMethod("blink",0,(context)=>{let S=context;return _singletons.Create.CreateHTML(realm,S,
"blink","","")});obj.defineNativeMethod("bold",0,(context)=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"b","","")});obj.defineNativeMethod("fixed",0,(context)=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"tt","","")});obj.defineNativeMethod("fontcolor",1,(context,[color])=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"font","color",color)});obj.defineNativeMethod("fontsize",1,(context,[size])=>{let S=context;return _singletons.Create.CreateHTML(realm,
S,"font","size",size)});obj.defineNativeMethod("italics",0,(context)=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"i","","")});obj.defineNativeMethod("link",1,(context,[url])=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"a","href",url)});obj.defineNativeMethod("small",0,(context)=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"small","","")});obj.defineNativeMethod("strike",0,(context)=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"strike",
"","")});obj.defineNativeMethod("sub",0,(context)=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"sub","","")});obj.defineNativeMethod("sup",0,(context)=>{let S=context;return _singletons.Create.CreateHTML(realm,S,"sup","","")});return obj}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){let func=new _index.NativeFunctionValue(realm,
"Number","Number",1,(context,[value],argCount,NewTarget)=>{let n;if(argCount===0)n=realm.intrinsics.zero;else n=new _index.NumberValue(realm,_singletons.To.ToNumber(realm,value));if(!NewTarget)return n;let O=_singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"NumberPrototype",{$NumberData:undefined});O.$NumberData=n;return O});func.defineNativeConstant("EPSILON",new _index.NumberValue(realm,2.220446049250313e-16));if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))func.defineNativeMethod("isFinite",
1,(context,[_number])=>{let number=_number;if(!number.mightBeNumber())return realm.intrinsics.false;number=number.throwIfNotConcreteNumber();if(isNaN(number.value)||number.value===+Infinity||number.value===-Infinity)return realm.intrinsics.false;return realm.intrinsics.true});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))func.defineNativeMethod("isInteger",1,(context,[_number])=>{let number=_number;if(!number.mightBeNumber())return realm.intrinsics.false;
number=number.throwIfNotConcreteNumber();if(isNaN(number.value)||number.value===+Infinity||number.value===-Infinity)return realm.intrinsics.false;let integer=_singletons.To.ToInteger(realm,number);if(integer!==number.value)return realm.intrinsics.false;return realm.intrinsics.true});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))func.defineNativeMethod("isNaN",1,(context,[_number])=>{let number=_number;if(!number.mightBeNumber())return realm.intrinsics.false;
number=number.throwIfNotConcreteNumber();if(isNaN(number.value))return realm.intrinsics.true;return realm.intrinsics.false});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))func.defineNativeMethod("isSafeInteger",1,(context,[_number])=>{let number=_number;if(!number.mightBeNumber())return realm.intrinsics.false;number=number.throwIfNotConcreteNumber();if(isNaN(number.value)||number.value===+Infinity||number.value===-Infinity)return realm.intrinsics.false;let integer=
_singletons.To.ToInteger(realm,number);if(integer!==number.value)return realm.intrinsics.false;if(Math.abs(integer)<=Math.pow(2,53)-1)return realm.intrinsics.true;return realm.intrinsics.false});if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))func.defineNativeConstant("MAX_SAFE_INTEGER",new _index.NumberValue(realm,9007199254740991));func.defineNativeConstant("MAX_VALUE",new _index.NumberValue(realm,1.7976931348623157e+308));if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&
!realm.isCompatibleWith("mobile"))func.defineNativeConstant("MIN_SAFE_INTEGER",new _index.NumberValue(realm,-9007199254740991));func.defineNativeConstant("MIN_VALUE",new _index.NumberValue(realm,5e-324));func.defineNativeConstant("NaN",realm.intrinsics.NaN);func.defineNativeConstant("NEGATIVE_INFINITY",realm.intrinsics.negativeInfinity);func.defineNativeProperty("parseFloat",realm.intrinsics.parseFloat);func.defineNativeProperty("parseInt",realm.intrinsics.parseInt);func.defineNativeConstant("POSITIVE_INFINITY",
realm.intrinsics.Infinity);return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.$NumberData=realm.intrinsics.zero;obj.defineNativeMethod("toExponential",1,(context,
[_fractionDigits])=>{let fractionDigits=_fractionDigits;let x=_singletons.To.thisNumberValue(realm,context).value;fractionDigits=fractionDigits.throwIfNotConcrete();let f=_singletons.To.ToInteger(realm,fractionDigits);(0,_invariant.default)(f===0||!(fractionDigits instanceof _index.UndefinedValue));if(isNaN(x))return new _index.StringValue(realm,"NaN");let s="";if(x<0){s="-";x=-x}if(x===+Infinity)return new _index.StringValue(realm,s+"Infinity");if(f<0||f>20)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,
"f < 0 || f > 20");let positiveResultString=x.toExponential(fractionDigits instanceof _index.UndefinedValue?undefined:f);return new _index.StringValue(realm,s+positiveResultString)});obj.defineNativeMethod("toFixed",1,(context,[fractionDigits])=>{let f=_singletons.To.ToInteger(realm,fractionDigits);if(f<0||f>20)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"f < 0 || f > 20");let x=_singletons.To.thisNumberValue(realm,context).value;if(isNaN(x))return new _index.StringValue(realm,
"NaN");return new _index.StringValue(realm,x.toFixed(f))});let toLocaleStringSrc="(A).toLocaleString()";obj.defineNativeMethod("toLocaleString",0,(context)=>{let x=_singletons.To.thisNumberValue(realm,context);if(realm.useAbstractInterpretation)return _index.AbstractValue.createTemporalFromTemplate(realm,toLocaleStringSrc,_index.StringValue,[x]);else return new _index.StringValue(realm,x.toLocaleString())});obj.defineNativeMethod("toPrecision",1,(context,[precision])=>{let num=_singletons.To.thisNumberValue(realm,
context);if(precision instanceof _index.UndefinedValue)return new _index.StringValue(realm,_singletons.To.ToString(realm,num));let p=_singletons.To.ToInteger(realm,precision.throwIfNotConcrete());let x=num.value;if(isNaN(x))return new _index.StringValue(realm,"NaN");let s="";if(x<0){s="-";x=-x}if(x===+Infinity)return new _index.StringValue(realm,s+"Infinity");if(p<1||p>21)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"p should be in between 1 and 21 inclusive");return new _index.StringValue(realm,
s+x.toPrecision(p))});const tsTemplateSrc="('' + A)";obj.defineNativeMethod("toString",1,(context,[radix])=>{if(radix instanceof _index.UndefinedValue){const target=context instanceof _index.ObjectValue?context.$NumberData:context;if(target instanceof _index.AbstractValue&&(target.getType()===_index.NumberValue||target.getType()===_index.IntegralValue))return _index.AbstractValue.createFromTemplate(realm,tsTemplateSrc,_index.StringValue,[target])}let x=_singletons.To.thisNumberValue(realm,context);
let radixNumber;if(!radix||radix instanceof _index.UndefinedValue)radixNumber=10;else radixNumber=_singletons.To.ToInteger(realm,radix.throwIfNotConcrete());if(radixNumber<2||radixNumber>36)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(radixNumber===10)return new _index.StringValue(realm,_singletons.To.ToString(realm,x));return new _index.StringValue(realm,x.value.toString(radixNumber))});obj.defineNativeMethod("valueOf",0,(context)=>{return _singletons.To.thisNumberValue(realm,
context)})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){let func=new _index.NativeFunctionValue(realm,"Boolean","Boolean",1,(context,[value],argCount,NewTarget)=>{let b=new _index.BooleanValue(realm,_singletons.To.ToBooleanPartial(realm,value));if(!NewTarget)return b;let O=_singletons.Create.OrdinaryCreateFromConstructor(realm,
NewTarget,"BooleanPrototype",{$BooleanData:undefined});O.$BooleanData=b;return O});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm,obj){obj.$BooleanData=realm.intrinsics.false;const tsTemplateSrc="('' + A)";obj.defineNativeMethod("toString",0,(context)=>{const target=context instanceof _index.ObjectValue?context.$BooleanData:
context;if(target instanceof _index.AbstractValue&&target.getType()===_index.BooleanValue)return _index.AbstractValue.createFromTemplate(realm,tsTemplateSrc,_index.StringValue,[target]);let b=_singletons.To.thisBooleanValue(realm,context);return new _index.StringValue(realm,b.value?"true":"false")});obj.defineNativeMethod("valueOf",0,(context)=>{return _singletons.To.thisBooleanValue(realm,context)})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});
exports.default=_default;var _index=__webpack_require__(232);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let func=new _index2.NativeFunctionValue(realm,"DataView","DataView",3,(context,[_buffer,byteOffset,byteLength],argCount,NewTarget)=>{let buffer=_buffer;if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
buffer=buffer.throwIfNotConcrete();if(!(buffer instanceof _index2.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!("$ArrayBufferData"in buffer))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let offset=_singletons.To.ToIndexPartial(realm,byteOffset);if((0,_index.IsDetachedBuffer)(realm,buffer))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let bufferByteLength=buffer.$ArrayBufferByteLength;(0,_invariant.default)(typeof bufferByteLength===
"number");if(offset>bufferByteLength)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError);let viewByteLength;if(!byteLength||byteLength instanceof _index2.UndefinedValue)viewByteLength=bufferByteLength-offset;else{viewByteLength=_singletons.To.ToIndexPartial(realm,byteLength);if(offset+viewByteLength>bufferByteLength)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError);}let O=_singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"DataViewPrototype",{$DataView:undefined,
$ViewedArrayBuffer:undefined,$ByteLength:undefined,$ByteOffset:undefined});O.$DataView=true;O.$ViewedArrayBuffer=buffer;O.$ByteLength=viewByteLength;O.$ByteOffset=offset;return O});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _is=__webpack_require__(229);var _arraybuffer=__webpack_require__(278);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeGetter("buffer",(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");if(!("$DataView"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have a [[DataView]] internal slot");(0,_invariant.default)(O.$ViewedArrayBuffer);let buffer=O.$ViewedArrayBuffer;return buffer});obj.defineNativeGetter("byteLength",
(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");if(!("$DataView"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have a [[DataView]] internal slot");(0,_invariant.default)(O.$ViewedArrayBuffer);let buffer=O.$ViewedArrayBuffer;if((0,_is.IsDetachedBuffer)(realm,buffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"IsDetachedBuffer(buffer) is true");let size=O.$ByteLength;(0,_invariant.default)(typeof size==="number");return new _index.NumberValue(realm,size)});obj.defineNativeGetter("byteOffset",(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");if(!("$DataView"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have a [[DataView]] internal slot");(0,
_invariant.default)(O.$ViewedArrayBuffer);let buffer=O.$ViewedArrayBuffer;if((0,_is.IsDetachedBuffer)(realm,buffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(buffer) is true");let offset=O.$ByteOffset;(0,_invariant.default)(typeof offset==="number");return new _index.NumberValue(realm,offset)});obj.defineNativeMethod("getFloat32",1,(context,[byteOffset,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;
return(0,_arraybuffer.GetViewValue)(realm,v,byteOffset,littleEndian,"Float32")});obj.defineNativeMethod("getFloat64",1,(context,[byteOffset,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;return(0,_arraybuffer.GetViewValue)(realm,v,byteOffset,littleEndian,"Float64")});obj.defineNativeMethod("getInt8",1,(context,[byteOffset])=>{let v=context;return(0,_arraybuffer.GetViewValue)(realm,v,byteOffset,realm.intrinsics.true,"Int8")});obj.defineNativeMethod("getInt16",
1,(context,[byteOffset,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;return(0,_arraybuffer.GetViewValue)(realm,v,byteOffset,littleEndian,"Int16")});obj.defineNativeMethod("getInt32",1,(context,[byteOffset,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;return(0,_arraybuffer.GetViewValue)(realm,v,byteOffset,littleEndian,"Int32")});obj.defineNativeMethod("getUint8",
1,(context,[byteOffset])=>{let v=context;return(0,_arraybuffer.GetViewValue)(realm,v,byteOffset,realm.intrinsics.true,"Uint8")});obj.defineNativeMethod("getUint16",1,(context,[byteOffset,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;return(0,_arraybuffer.GetViewValue)(realm,v,byteOffset,littleEndian,"Uint16")});obj.defineNativeMethod("getUint32",1,(context,[byteOffset,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;
if(!littleEndian)littleEndian=realm.intrinsics.false;return(0,_arraybuffer.GetViewValue)(realm,v,byteOffset,littleEndian,"Uint32")});obj.defineNativeMethod("setFloat32",2,(context,[byteOffset,value,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;return(0,_arraybuffer.SetViewValue)(realm,v,byteOffset,littleEndian,"Float32",value)});obj.defineNativeMethod("setFloat64",2,(context,[byteOffset,value,_littleEndian])=>{let littleEndian=
_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;return(0,_arraybuffer.SetViewValue)(realm,v,byteOffset,littleEndian,"Float64",value)});obj.defineNativeMethod("setInt8",2,(context,[byteOffset,value])=>{let v=context;return(0,_arraybuffer.SetViewValue)(realm,v,byteOffset,realm.intrinsics.true,"Int8",value)});obj.defineNativeMethod("setInt16",2,(context,[byteOffset,value,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;
return(0,_arraybuffer.SetViewValue)(realm,v,byteOffset,littleEndian,"Int16",value)});obj.defineNativeMethod("setInt32",2,(context,[byteOffset,value,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;return(0,_arraybuffer.SetViewValue)(realm,v,byteOffset,littleEndian,"Int32",value)});obj.defineNativeMethod("setUint8",2,(context,[byteOffset,value])=>{let v=context;return(0,_arraybuffer.SetViewValue)(realm,v,byteOffset,realm.intrinsics.true,
"Uint8",value)});obj.defineNativeMethod("setUint16",2,(context,[byteOffset,value,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;return(0,_arraybuffer.SetViewValue)(realm,v,byteOffset,littleEndian,"Uint16",value)});obj.defineNativeMethod("setUint32",2,(context,[byteOffset,value,_littleEndian])=>{let littleEndian=_littleEndian;let v=context;if(!littleEndian)littleEndian=realm.intrinsics.false;return(0,_arraybuffer.SetViewValue)(realm,
v,byteOffset,littleEndian,"Uint32",value)});obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"DataView"),{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;exports.build=build;var _types=__webpack_require__(19);var _index=__webpack_require__(10);var _typedarray=__webpack_require__(390);var _construct=__webpack_require__(228);var _get=__webpack_require__(230);var _singletons=
__webpack_require__(236);var _iterator=__webpack_require__(272);var _is=__webpack_require__(229);var _call=__webpack_require__(234);var _arraybuffer=__webpack_require__(278);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let func=new _index.NativeFunctionValue(realm,"TypedArray","TypedArray",0,(context)=>{throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"TypedArray");
});func.defineNativeMethod("from",1,(context,[source,mapfn,thisArg])=>{let C=context;if((0,_is.IsConstructor)(realm,C)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsConstructor(C) is false");(0,_invariant.default)(C instanceof _index.ObjectValue);let mapping;if(mapfn!==undefined&&!mapfn.mightBeUndefined()){if((0,_is.IsCallable)(realm,mapfn)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsConstructor(C) is false");mapping=true}else{mapfn===
undefined||mapfn.throwIfNotConcrete();mapping=false}let T=thisArg!==undefined?thisArg:realm.intrinsics.undefined;let usingIterator=(0,_get.GetMethod)(realm,source,realm.intrinsics.SymbolIterator);if(!(usingIterator instanceof _index.UndefinedValue)){let values=(0,_iterator.IterableToList)(realm,source,usingIterator);let len=values.length;let targetObj=(0,_typedarray.TypedArrayCreate)(realm,C,[new _index.NumberValue(realm,len)]);let k=0;while(k<len){let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,
k));let kValue=values.shift();let mappedValue;if(mapping===true)mappedValue=(0,_call.Call)(realm,mapfn,T,[kValue,new _index.NumberValue(realm,k)]);else mappedValue=kValue;_singletons.Properties.Set(realm,targetObj,Pk,mappedValue,true);k=k+1}(0,_invariant.default)(values.length===0,"values is not an empty List");return targetObj}let arrayLike=_singletons.To.ToObject(realm,source);let len=_singletons.To.ToLength(realm,(0,_get.Get)(realm,arrayLike,"length"));let targetObj=(0,_typedarray.TypedArrayCreate)(realm,
C,[new _index.NumberValue(realm,len)]);let k=0;while(k<len){let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,k));let kValue=(0,_get.Get)(realm,arrayLike,Pk);let mappedValue;if(mapping===true)mappedValue=(0,_call.Call)(realm,mapfn,T,[kValue,new _index.NumberValue(realm,k)]);else mappedValue=kValue;_singletons.Properties.Set(realm,targetObj,Pk,mappedValue,true);k=k+1}return targetObj});func.defineNativeMethod("of",0,(context,items,argCount)=>{let len=argCount;items;let C=context;if((0,
_is.IsConstructor)(realm,C)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsConstructor(C) is false");(0,_invariant.default)(C instanceof _index.ObjectValue);let newObj=(0,_typedarray.TypedArrayCreate)(realm,C,[new _index.NumberValue(realm,len)]);let k=0;while(k<len){let kValue=items[k];let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,k));_singletons.Properties.Set(realm,newObj,Pk,kValue,true);k=k+1}return newObj});func.defineNativeGetter(realm.intrinsics.SymbolSpecies,
(context)=>{return context});return func}function getConstructorName(type){switch(type){case "Float32":return"Float32Array";case "Float64":return"Float64Array";case "Int8":return"Int8Array";case "Int16":return"Int16Array";case "Int32":return"Int32Array";case "Uint8":return"Uint8Array";case "Uint16":return"Uint16Array";case "Uint32":return"Uint32Array";case "Uint8Clamped":return"Uint8ClampedArray";default:(0,_invariant.default)(false)}}function build(realm,type){let func=new _index.NativeFunctionValue(realm,
`${type}Array`,`${type}Array`,3,(context,args,argCount,NewTarget)=>{if(argCount===0){if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"NewTarget is undefined");let constructorName=getConstructorName(type);return(0,_typedarray.AllocateTypedArray)(realm,constructorName,NewTarget,`${type}ArrayPrototype`,0)}else if(!(args[0]instanceof _index.ObjectValue)){let length=args[0].throwIfNotConcrete();(0,_invariant.default)(!(length instanceof _index.ObjectValue),"Type(length) is not Object");
if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"NewTarget is undefined");let elementLength=_singletons.To.ToIndexPartial(realm,length);let constructorName=getConstructorName(type);return(0,_typedarray.AllocateTypedArray)(realm,constructorName,NewTarget,`${type}ArrayPrototype`,elementLength)}else if("$TypedArrayName"in args[0]){let typedArray=args[0].throwIfNotConcrete();(0,_invariant.default)(typedArray instanceof _index.ObjectValue&&typeof typedArray.$TypedArrayName===
"string");if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"NewTarget is undefined");let constructorName=getConstructorName(type);let O=(0,_typedarray.AllocateTypedArray)(realm,constructorName,NewTarget,`${type}ArrayPrototype`);let srcArray=typedArray;let srcData=srcArray.$ViewedArrayBuffer;(0,_invariant.default)(srcData);if((0,_is.IsDetachedBuffer)(realm,srcData)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(srcData) is true");
constructorName=O.$TypedArrayName;(0,_invariant.default)(typeof constructorName==="string");let elementType=_typedarray.ArrayElementType[constructorName];let elementLength=srcArray.$ArrayLength;(0,_invariant.default)(typeof elementLength==="number");let srcName=srcArray.$TypedArrayName;(0,_invariant.default)(typeof srcName==="string");let srcType=_typedarray.ArrayElementType[srcName];let srcElementSize=_typedarray.ArrayElementSize[srcName];let srcByteOffset=srcArray.$ByteOffset;(0,_invariant.default)(typeof srcByteOffset===
"number");let elementSize=_typedarray.ArrayElementSize[constructorName];let byteLength=elementSize*elementLength;let data;if(elementType===srcType)data=(0,_arraybuffer.CloneArrayBuffer)(realm,srcData,srcByteOffset);else{let bufferConstructor=(0,_construct.SpeciesConstructor)(realm,srcData,realm.intrinsics.ArrayBuffer);data=(0,_arraybuffer.AllocateArrayBuffer)(realm,bufferConstructor,byteLength);if((0,_is.IsDetachedBuffer)(realm,srcData)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"IsDetachedBuffer(srcData) is true");let srcByteIndex=srcByteOffset;let targetByteIndex=0;let count=elementLength;while(count>0){let value=(0,_arraybuffer.GetValueFromBuffer)(realm,srcData,srcByteIndex,srcType);(0,_arraybuffer.SetValueInBuffer)(realm,data,targetByteIndex,elementType,value.value);srcByteIndex=srcByteIndex+srcElementSize;targetByteIndex=targetByteIndex+elementSize;count-=1}}O.$ViewedArrayBuffer=data;O.$ByteLength=byteLength;O.$ByteOffset=0;O.$ArrayLength=elementLength;return O}else if(!("$ArrayBufferData"in
args[0])&&!("$TypedArrayName"in args[0])){let object=args[0].throwIfNotConcrete();(0,_invariant.default)(object instanceof _index.ObjectValue&&typeof object.$TypedArrayName&&!object.$ArrayBufferData);if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"NewTarget is undefined");let constructorName=getConstructorName(type);let O=(0,_typedarray.AllocateTypedArray)(realm,constructorName,NewTarget,`${type}ArrayPrototype`);let usingIterator=(0,_get.GetMethod)(realm,object,realm.intrinsics.SymbolIterator);
if(!(usingIterator instanceof _index.UndefinedValue)){let values=(0,_iterator.IterableToList)(realm,object,usingIterator);let len=values.length;(0,_typedarray.AllocateTypedArrayBuffer)(realm,O,len);let k=0;while(k<len){let Pk=new _index.StringValue(realm,_singletons.To.ToString(realm,new _index.NumberValue(realm,k)));let kValue=values.shift();_singletons.Properties.Set(realm,O,Pk,kValue,true);k=k+1}(0,_invariant.default)(values.length===0);return O}let arrayLike=object;let len=_singletons.To.ToLength(realm,
(0,_get.Get)(realm,arrayLike,"length"));(0,_typedarray.AllocateTypedArrayBuffer)(realm,O,len);let k=0;while(k<len){let Pk=new _index.StringValue(realm,_singletons.To.ToString(realm,new _index.NumberValue(realm,k)));let kValue=(0,_get.Get)(realm,arrayLike,Pk);_singletons.Properties.Set(realm,O,Pk,kValue,true);k+=1}return O}else{let buffer=args[0].throwIfNotConcrete(),byteOffset=args[1],length=args[2];(0,_invariant.default)(buffer instanceof _index.ObjectValue&&"$ArrayBufferData"in buffer);if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"NewTarget is undefined");let constructorName=getConstructorName(type);let O=(0,_typedarray.AllocateTypedArray)(realm,constructorName,NewTarget,`${type}ArrayPrototype`);constructorName=O.$TypedArrayName;(0,_invariant.default)(constructorName);let elementSize=_typedarray.ArrayElementSize[constructorName];let offset=_singletons.To.ToIndexPartial(realm,byteOffset);if(offset%elementSize!==0)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"offset modulo elementSize \u2260 0");if((0,
_is.IsDetachedBuffer)(realm,buffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(buffer) is true");let bufferByteLength=buffer.$ArrayBufferByteLength;(0,_invariant.default)(typeof bufferByteLength==="number");let newByteLength;if(!length||length instanceof _index.UndefinedValue){if(bufferByteLength%elementSize!==0)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"bufferByteLength modulo elementSize \u2260 0");newByteLength=bufferByteLength-
offset;if(newByteLength<0)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"newByteLength < 0");}else{let newLength=_singletons.To.ToIndexPartial(realm,length);newByteLength=newLength*elementSize;if(offset+newByteLength>bufferByteLength)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"offset+newByteLength > bufferByteLength");}O.$ViewedArrayBuffer=buffer;O.$ByteLength=newByteLength;O.$ByteOffset=offset;O.$ArrayLength=newByteLength/elementSize;return O}});func.$Prototype=
realm.intrinsics.TypedArray;func.defineNativeConstant("BYTES_PER_ELEMENT",new _index.NumberValue(realm,_types.ElementSize[type]));return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;exports.build=build;var _types=__webpack_require__(19);var _index=__webpack_require__(10);var _call=__webpack_require__(234);var _get=__webpack_require__(230);var _has=__webpack_require__(269);var _is=__webpack_require__(229);var _typedarray=
__webpack_require__(390);var _arraybuffer=__webpack_require__(278);var _abstract=__webpack_require__(233);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeGetter("buffer",(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"Type(O) is not Object");if(!("$TypedArrayName"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have a [[TypedArrayName]] internal slot");(0,_invariant.default)(O.$ViewedArrayBuffer,"O has a [[ViewedArrayBuffer]]");let buffer=O.$ViewedArrayBuffer;return buffer});obj.defineNativeGetter("byteLength",(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");
if(!("$TypedArrayName"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have a [[TypedArrayName]] internal slot");(0,_invariant.default)(O.$ViewedArrayBuffer,"O has a [[ViewedArrayBuffer]] internal slot");let buffer=O.$ViewedArrayBuffer;(0,_invariant.default)(buffer);if((0,_is.IsDetachedBuffer)(realm,buffer)===true)return realm.intrinsics.zero;let size=O.$ByteLength;(0,_invariant.default)(typeof size==="number");return new _index.NumberValue(realm,size)});obj.defineNativeGetter("byteOffset",
(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");if(!("$TypedArrayName"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have a [[TypedArrayName]] internal slot");(0,_invariant.default)(O.$ViewedArrayBuffer,"O has a [[ViewedArrayBuffer]] internal slot");let buffer=O.$ViewedArrayBuffer;(0,_invariant.default)(buffer);if((0,_is.IsDetachedBuffer)(realm,
buffer)===true)return realm.intrinsics.zero;let offset=O.$ByteOffset;(0,_invariant.default)(typeof offset==="number");return new _index.NumberValue(realm,offset)});obj.defineNativeMethod("copyWithin",2,(context,[target,start,end])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");let relativeTarget=_singletons.To.ToInteger(realm,target);let to=relativeTarget<0?Math.max(len+
relativeTarget,0):Math.min(relativeTarget,len);let relativeStart=_singletons.To.ToInteger(realm,start);let from=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len);let relativeEnd=!end||end instanceof _index.UndefinedValue?len:_singletons.To.ToInteger(realm,end.throwIfNotConcrete());let final=relativeEnd<0?Math.max(len+relativeEnd,0):Math.min(relativeEnd,len);let count=Math.min(final-from,len-to);let direction;if(from<to&&to<from+count){direction=-1;from=from+count-1;to=to+count-
1}else direction=1;while(count>0){let fromKey=_singletons.To.ToString(realm,new _index.NumberValue(realm,from));let toKey=_singletons.To.ToString(realm,new _index.NumberValue(realm,to));let fromPresent=(0,_has.HasProperty)(realm,O,fromKey);if(fromPresent===true){let fromVal=(0,_get.Get)(realm,O,fromKey);_singletons.Properties.Set(realm,O,toKey,fromVal,true)}else _singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),toKey);from=from+direction;to=to+direction;count=count-1}return O});
obj.defineNativeMethod("entries",0,(context)=>{let O=context;(0,_typedarray.ValidateTypedArray)(realm,O);(0,_invariant.default)(O instanceof _index.ObjectValue);return _singletons.Create.CreateArrayIterator(realm,O,"key+value")});obj.defineNativeMethod("every",1,(context,[callbackfn,thisArg])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");if(!(0,_is.IsCallable)(realm,
callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");let T=thisArg||realm.intrinsics.undefined;let k=0;while(k<len){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_has.HasProperty)(realm,O,Pk);if(kPresent){let kValue=(0,_get.Get)(realm,O,Pk);let testResult=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,callbackfn,T,[kValue,new _index.NumberValue(realm,k),O]));if(!testResult)return realm.intrinsics.false}k++}return realm.intrinsics.true});
obj.defineNativeMethod("fill",1,(context,[value,start,end])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");let relativeStart=_singletons.To.ToInteger(realm,start||realm.intrinsics.undefined);let k=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len);let relativeEnd=!end||end instanceof _index.UndefinedValue?len:_singletons.To.ToInteger(realm,
end.throwIfNotConcrete());let final=relativeEnd<0?Math.max(len+relativeEnd,0):Math.min(relativeEnd,len);while(k<final){let Pk=new _index.StringValue(realm,k+"");_singletons.Properties.Set(realm,O,Pk,value,true);k++}return O});obj.defineNativeMethod("filter",1,(context,[callbackfn,thisArg])=>{let O=context;(0,_typedarray.ValidateTypedArray)(realm,O);(0,_invariant.default)(O instanceof _index.ObjectValue);let len=O.$ArrayLength;(0,_invariant.default)(typeof len==="number");if((0,_is.IsCallable)(realm,
callbackfn)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsCallable(callbackfn) is false");let T=thisArg?thisArg:realm.intrinsics.undefined;let kept=[];let k=0;let captured=0;while(k<len){let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,k));let kValue=(0,_get.Get)(realm,O,Pk);let selected=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,callbackfn,T,[kValue,new _index.NumberValue(realm,k),O]));if(selected===true){kept.push(kValue);captured+=
1}k+=1}let A=(0,_typedarray.TypedArraySpeciesCreate)(realm,O,[new _index.NumberValue(realm,captured)]);let n=0;for(let e of kept){_singletons.Properties.Set(realm,A,new _index.StringValue(realm,_singletons.To.ToString(realm,new _index.NumberValue(realm,n))),e,true);n=n+1}return A});obj.defineNativeMethod("find",1,(context,[predicate,thisArg])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len===
"number");if(!(0,_is.IsCallable)(realm,predicate))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");let T=thisArg||realm.intrinsics.undefined;let k=0;while(k<len){let Pk=new _index.StringValue(realm,k+"");let kValue=(0,_get.Get)(realm,O,Pk);let testResult=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,predicate,T,[kValue,new _index.NumberValue(realm,k),O]));if(testResult)return kValue;k++}return realm.intrinsics.undefined});obj.defineNativeMethod("findIndex",
1,(context,[predicate,thisArg])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");if((0,_is.IsCallable)(realm,predicate)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");let T=thisArg?thisArg:realm.intrinsics.undefined;let k=0;while(k<len){let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,k));let kValue=
(0,_get.Get)(realm,O,new _index.StringValue(realm,Pk));let testResult=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,predicate,T,[kValue,new _index.NumberValue(realm,k),O]));if(testResult===true)return new _index.NumberValue(realm,k);k=k+1}return new _index.NumberValue(realm,-1)});obj.defineNativeMethod("forEach",1,(context,[callbackfn,thisArg])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;
(0,_invariant.default)(typeof len==="number");if(!(0,_is.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");let T=thisArg||realm.intrinsics.undefined;let k=0;while(k<len){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_has.HasProperty)(realm,O,Pk);if(kPresent){let kValue=(0,_get.Get)(realm,O,Pk);(0,_call.Call)(realm,callbackfn,T,[kValue,new _index.NumberValue(realm,k),O])}k++}return realm.intrinsics.undefined});obj.defineNativeMethod("includes",
1,(context,[searchElement,fromIndex])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");if(len===0)return realm.intrinsics.false;let n=_singletons.To.ToInteger(realm,fromIndex||realm.intrinsics.undefined);let k;if(n>=0)k=n;else{k=len+n;if(k<0)k=0}while(k<len){let elementK=(0,_get.Get)(realm,O,_singletons.To.ToString(realm,new _index.NumberValue(realm,k)));if((0,
_abstract.SameValueZeroPartial)(realm,searchElement,elementK)===true)return realm.intrinsics.true;k=k+1}return realm.intrinsics.false});obj.defineNativeMethod("indexOf",1,(context,[searchElement,fromIndex])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");if(len===0)return new _index.NumberValue(realm,-1);let n=fromIndex?_singletons.To.ToInteger(realm,fromIndex):
0;if(n>=len)return new _index.NumberValue(realm,-1);let k;if(n>=0)k=Object.is(n,-0)?+0:n;else{k=len+n;if(k<0)k=0}while(k<len){let kPresent=(0,_has.HasProperty)(realm,O,k+"");if(kPresent===true){let elementK=(0,_get.Get)(realm,O,k+"");let same=(0,_abstract.StrictEqualityComparisonPartial)(realm,searchElement,elementK);if(same)return new _index.NumberValue(realm,k)}k++}return new _index.NumberValue(realm,-1)});obj.defineNativeMethod("join",1,(context,[_separator])=>{let separator=_separator;let O=_singletons.To.ToObject(realm,
context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");if(!separator||separator instanceof _index.UndefinedValue)separator=new _index.StringValue(realm,",");let sep=_singletons.To.ToStringPartial(realm,separator);if(len===0)return realm.intrinsics.emptyString;let element0=(0,_get.Get)(realm,O,"0");let R;if((0,_has.HasSomeCompatibleType)(element0,_index.UndefinedValue,_index.NullValue))R="";else R=_singletons.To.ToStringPartial(realm,
element0);let k=1;while(k<len){let S=R+sep;let element=(0,_get.Get)(realm,O,new _index.StringValue(realm,k+""));let next;if((0,_has.HasSomeCompatibleType)(element,_index.UndefinedValue,_index.NullValue))next="";else next=_singletons.To.ToStringPartial(realm,element);R=S+next;k++}return new _index.StringValue(realm,R+"")});obj.defineNativeMethod("keys",0,(context)=>{let O=context;(0,_typedarray.ValidateTypedArray)(realm,O);(0,_invariant.default)(O instanceof _index.ObjectValue);return _singletons.Create.CreateArrayIterator(realm,
O,"key")});obj.defineNativeMethod("lastIndexOf",1,(context,[searchElement,fromIndex])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");if(len===0)return new _index.NumberValue(realm,-1);let n=fromIndex?_singletons.To.ToInteger(realm,fromIndex):len-1;let k;if(n>=0)k=Object.is(n,-0)?+0:Math.min(n,len-1);else k=len+n;while(k>=0){let kPresent=(0,_has.HasProperty)(realm,
O,new _index.StringValue(realm,k+""));if(kPresent){let elementK=(0,_get.Get)(realm,O,new _index.StringValue(realm,k+""));let same=(0,_abstract.StrictEqualityComparisonPartial)(realm,searchElement,elementK);if(same)return new _index.NumberValue(realm,k)}k--}return new _index.NumberValue(realm,-1)});obj.defineNativeGetter("length",(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");
if(!("$TypedArrayName"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have a [[TypedArrayName]] internal slot");(0,_invariant.default)(O.$ViewedArrayBuffer,"O has a [[ViewedArrayBuffer]] internal slot");let buffer=O.$ViewedArrayBuffer;(0,_invariant.default)(buffer);if((0,_is.IsDetachedBuffer)(realm,buffer)===true)return realm.intrinsics.zero;let length=O.$ArrayLength;(0,_invariant.default)(typeof length==="number");return new _index.NumberValue(realm,length)});
obj.defineNativeMethod("map",1,(context,[callbackfn,thisArg])=>{let O=context;(0,_typedarray.ValidateTypedArray)(realm,O);(0,_invariant.default)(O instanceof _index.ObjectValue);let len=O.$ArrayLength;(0,_invariant.default)(typeof len==="number");if((0,_is.IsCallable)(realm,callbackfn)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsCallable(callbackfn) is false");let T=thisArg?thisArg:realm.intrinsics.undefined;let A=(0,_typedarray.TypedArraySpeciesCreate)(realm,O,[new _index.NumberValue(realm,
len)]);let k=0;while(k<len){let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,k));let kValue=(0,_get.Get)(realm,O,Pk);let mappedValue=(0,_call.Call)(realm,callbackfn,T,[kValue,new _index.NumberValue(realm,k),O]);_singletons.Properties.Set(realm,A,Pk,mappedValue,true);k=k+1}return A});obj.defineNativeMethod("reduce",1,(context,[callbackfn,initialValue])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;
(0,_invariant.default)(typeof len==="number");if(!(0,_is.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");if(len===0&&!initialValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Array.prototype");let k=0;let accumulator;if(initialValue)accumulator=initialValue;else{let kPresent=false;while(kPresent===false&&k<len){let Pk=new _index.StringValue(realm,k+"");kPresent=(0,_has.HasProperty)(realm,O,Pk);if(kPresent)accumulator=
(0,_get.Get)(realm,O,Pk);k++}if(!kPresent)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"kPresent is false");(0,_invariant.default)(accumulator)}while(k<len){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_has.HasProperty)(realm,O,Pk);if(kPresent){let kValue=(0,_get.Get)(realm,O,Pk);accumulator=(0,_call.Call)(realm,callbackfn,realm.intrinsics.undefined,[accumulator,kValue,new _index.NumberValue(realm,k),O])}k++}return accumulator});obj.defineNativeMethod("reduceRight",
1,(context,[callbackfn,initialValue])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");if(!(0,_is.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not a function");if(len===0&&!initialValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Array.prototype");let k=len-1;let accumulator;if(initialValue)accumulator=
initialValue;else{let kPresent=false;while(!kPresent&&k>=0){let Pk=new _index.StringValue(realm,k+"");kPresent=(0,_has.HasProperty)(realm,O,Pk);if(kPresent)accumulator=(0,_get.Get)(realm,O,Pk);k--}if(!kPresent||!accumulator)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Array.prototype");}while(k>=0){let Pk=new _index.StringValue(realm,k+"");let kPresent=(0,_has.HasProperty)(realm,O,Pk);if(kPresent){let kValue=(0,_get.Get)(realm,O,Pk);accumulator=(0,_call.Call)(realm,callbackfn,
realm.intrinsics.undefined,[accumulator,kValue,new _index.NumberValue(realm,k),O])}k--}return accumulator});obj.defineNativeMethod("reverse",0,(context)=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");let middle=Math.floor(len/2);let lower=0;while(lower!==middle){let upper=len-lower-1;let upperP=new _index.StringValue(realm,upper+"");let lowerP=new _index.StringValue(realm,
lower+"");let lowerExists=(0,_has.HasProperty)(realm,O,lowerP);let lowerValue;if(lowerExists)lowerValue=(0,_get.Get)(realm,O,lowerP);let upperExists=(0,_has.HasProperty)(realm,O,upperP);let upperValue;if(upperExists)upperValue=(0,_get.Get)(realm,O,upperP);if(lowerExists&&upperExists){(0,_invariant.default)(lowerValue,"expected lower value to exist");(0,_invariant.default)(upperValue,"expected upper value to exist");_singletons.Properties.Set(realm,O,lowerP,upperValue,true);_singletons.Properties.Set(realm,
O,upperP,lowerValue,true)}else if(!lowerExists&&upperExists){(0,_invariant.default)(upperValue,"expected upper value to exist");_singletons.Properties.Set(realm,O,lowerP,upperValue,true);_singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),upperP)}else if(lowerExists&&!upperExists){(0,_invariant.default)(lowerValue,"expected lower value to exist");_singletons.Properties.DeletePropertyOrThrow(realm,O.throwIfNotConcreteObject(),lowerP);_singletons.Properties.Set(realm,O,upperP,
lowerValue,true)}else;lower++}return O});obj.defineNativeMethod("set",1,(context,[overloaded,offset])=>{if(overloaded.$TypedArrayName===undefined){let array=overloaded;(0,_invariant.default)(!(overloaded instanceof _index.ObjectValue&&overloaded.$TypedArrayName));let target=context.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(target) is not Object");if(typeof target.$TypedArrayName!=="string")throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"target does not have a [[TypedArrayName]] internal slot");(0,_invariant.default)(target.$ViewedArrayBuffer,"target has a [[ViewedArrayBuffer]] internal slot");let targetOffset=_singletons.To.ToInteger(realm,offset||realm.intrinsics.undefined);if(targetOffset<0)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"targetOffset < 0");let targetBuffer=target.$ViewedArrayBuffer;(0,_invariant.default)(targetBuffer instanceof _index.ObjectValue);if((0,_is.IsDetachedBuffer)(realm,targetBuffer)===
true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(targetBuffer) is true");let targetLength=target.$ArrayLength;(0,_invariant.default)(typeof targetLength==="number");let targetName=target.$TypedArrayName;(0,_invariant.default)(typeof targetName==="string");let targetElementSize=_typedarray.ArrayElementSize[targetName];let targetType=_typedarray.ArrayElementType[targetName];let targetByteOffset=target.$ByteOffset;(0,_invariant.default)(typeof targetByteOffset===
"number");let src=_singletons.To.ToObject(realm,array);let srcLength=_singletons.To.ToLength(realm,(0,_get.Get)(realm,src,"length"));if(srcLength+targetOffset>targetLength)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"srcLength + targetOffset > targetLength");let targetByteIndex=targetOffset*targetElementSize+targetByteOffset;let k=0;let limit=targetByteIndex+targetElementSize*srcLength;while(targetByteIndex<limit){let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,
k));let kNumber=_singletons.To.ToNumber(realm,(0,_get.Get)(realm,src,Pk));if((0,_is.IsDetachedBuffer)(realm,targetBuffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(targetBuffer) is true");(0,_arraybuffer.SetValueInBuffer)(realm,targetBuffer,targetByteIndex,targetType,kNumber);k=k+1;targetByteIndex=targetByteIndex+targetElementSize}return realm.intrinsics.undefined}else{let typedArray=overloaded;(0,_invariant.default)(typedArray instanceof _index.ObjectValue&&
typedArray.$TypedArrayName);let target=context.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(target) is not Object");if(typeof target.$TypedArrayName!=="string")throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"target does not have a [[TypedArrayName]] internal slot");(0,_invariant.default)(target.$ViewedArrayBuffer);let targetOffset=_singletons.To.ToInteger(realm,offset||realm.intrinsics.undefined);
if(targetOffset<0)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"targetOffset < 0");let targetBuffer=target.$ViewedArrayBuffer;(0,_invariant.default)(targetBuffer instanceof _index.ObjectValue);if((0,_is.IsDetachedBuffer)(realm,targetBuffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(targetBuffer) is true");let targetLength=target.$ArrayLength;(0,_invariant.default)(typeof targetLength==="number");let srcBuffer=typedArray.$ViewedArrayBuffer;
(0,_invariant.default)(srcBuffer);if((0,_is.IsDetachedBuffer)(realm,srcBuffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(srcBuffer) is true");let targetName=target.$TypedArrayName;(0,_invariant.default)(typeof targetName==="string");let targetType=_typedarray.ArrayElementType[targetName];let targetElementSize=_typedarray.ArrayElementSize[targetName];let targetByteOffset=target.$ByteOffset;(0,_invariant.default)(typeof targetByteOffset==="number");let srcName=
typedArray.$TypedArrayName;(0,_invariant.default)(typeof srcName==="string");let srcType=_typedarray.ArrayElementType[srcName];let srcElementSize=_typedarray.ArrayElementSize[srcName];let srcLength=typedArray.$ArrayLength;(0,_invariant.default)(typeof srcLength==="number");let srcByteOffset=typedArray.$ByteOffset;(0,_invariant.default)(typeof srcByteOffset==="number");if(srcLength+targetOffset>targetLength)throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError,"srcLength + targetOffset > targetLength");
let srcByteIndex;if((0,_abstract.SameValue)(realm,srcBuffer,targetBuffer)===true){srcBuffer=(0,_arraybuffer.CloneArrayBuffer)(realm,targetBuffer,srcByteOffset,realm.intrinsics.ArrayBuffer);srcByteIndex=0}else srcByteIndex=srcByteOffset;let targetByteIndex=targetOffset*targetElementSize+targetByteOffset;let limit=targetByteIndex+targetElementSize*srcLength;if(srcType===targetType)while(targetByteIndex<limit){let value=(0,_arraybuffer.GetValueFromBuffer)(realm,srcBuffer,srcByteIndex,"Uint8");(0,_arraybuffer.SetValueInBuffer)(realm,
targetBuffer,targetByteIndex,"Uint8",value.value);srcByteIndex+=1;targetByteIndex+=1}else while(targetByteIndex<limit){let value=(0,_arraybuffer.GetValueFromBuffer)(realm,srcBuffer,srcByteIndex,srcType);(0,_arraybuffer.SetValueInBuffer)(realm,targetBuffer,targetByteIndex,targetType,value.value);srcByteIndex=srcByteIndex+srcElementSize;targetByteIndex=targetByteIndex+targetElementSize}return realm.intrinsics.undefined}});obj.defineNativeMethod("slice",2,(context,[start,end])=>{let O=context;(0,_typedarray.ValidateTypedArray)(realm,
O);(0,_invariant.default)(O instanceof _index.ObjectValue);let len=O.$ArrayLength;(0,_invariant.default)(typeof len==="number");let relativeStart=_singletons.To.ToInteger(realm,start);let k=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len);let relativeEnd=!end||end instanceof _index.UndefinedValue?len:_singletons.To.ToInteger(realm,end.throwIfNotConcrete());let final=relativeEnd<0?Math.max(len+relativeEnd,0):Math.min(relativeEnd,len);let count=Math.max(final-k,0);let A=(0,
_typedarray.TypedArraySpeciesCreate)(realm,O,[new _index.NumberValue(realm,count)]);let srcName=O.$TypedArrayName;(0,_invariant.default)(typeof srcName==="string");let srcType=_typedarray.ArrayElementType[srcName];let targetName=A.$TypedArrayName;(0,_invariant.default)(typeof targetName==="string");let targetType=_typedarray.ArrayElementType[targetName];if(srcType!==targetType){let n=0;while(k<final){let Pk=_singletons.To.ToString(realm,new _index.NumberValue(realm,k));let kValue=(0,_get.Get)(realm,
O,Pk);_singletons.Properties.Set(realm,A,_singletons.To.ToString(realm,new _index.NumberValue(realm,n)),kValue,true);k+=1;n+=1}}else if(count>0){let srcBuffer=O.$ViewedArrayBuffer;(0,_invariant.default)(srcBuffer);if((0,_is.IsDetachedBuffer)(realm,srcBuffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(srcBuffer) is true");let targetBuffer=A.$ViewedArrayBuffer;(0,_invariant.default)(targetBuffer instanceof _index.ObjectValue);let elementSize=_types.ElementSize[srcType];
let srcByteOffset=O.$ByteOffset;(0,_invariant.default)(typeof srcByteOffset==="number");let targetByteIndex=A.$ByteOffset;(0,_invariant.default)(typeof targetByteIndex==="number");let srcByteIndex=k*elementSize+srcByteOffset;let limit=targetByteIndex+count*elementSize;while(targetByteIndex<limit){let value=(0,_arraybuffer.GetValueFromBuffer)(realm,srcBuffer,srcByteIndex,"Uint8");(0,_arraybuffer.SetValueInBuffer)(realm,targetBuffer,targetByteIndex,"Uint8",value.value);srcByteIndex+=1;targetByteIndex+=
1}}return A});obj.defineNativeMethod("some",1,(context,[callbackfn,thisArg])=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");if(!(0,_is.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"callback passed to Array.prototype.some isn't callable");let T=thisArg||realm.intrinsics.undefined;let k=0;while(k<len){let Pk=new _index.StringValue(realm,
k+"");let kPresent=(0,_has.HasProperty)(realm,O,Pk);if(kPresent){let kValue=(0,_get.Get)(realm,O,Pk);let testResult=_singletons.To.ToBooleanPartial(realm,(0,_call.Call)(realm,callbackfn,T,[kValue,new _index.NumberValue(realm,k),O]));if(testResult)return realm.intrinsics.true}k++}return realm.intrinsics.false});obj.defineNativeMethod("sort",1,(context,[comparefn])=>{let O=_singletons.To.ToObject(realm,context);let buffer=(0,_typedarray.ValidateTypedArray)(realm,O);let len=O.throwIfNotConcreteObject().$ArrayLength;
(0,_invariant.default)(typeof len==="number");let SortCompare=(x,y)=>{(0,_invariant.default)(x instanceof _index.NumberValue);(0,_invariant.default)(y instanceof _index.NumberValue);if(!comparefn.mightBeUndefined()){let v=(0,_call.Call)(realm,comparefn,realm.intrinsics.undefined,[x,y]);if((0,_is.IsDetachedBuffer)(realm,buffer)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"array buffer has been detached");if(v instanceof _index.NumberValue&&isNaN(v.value))return realm.intrinsics.zero;
return v}comparefn.throwIfNotConcrete();if(isNaN(x.value)){if(isNaN(y.value))return realm.intrinsics.zero;return new _index.NumberValue(realm,1)}if(isNaN(y.value))return new _index.NumberValue(realm,-1);if(x.value<y.value)return new _index.NumberValue(realm,-1);if(x.value>y.value)return new _index.NumberValue(realm,+1);if(Object.is(x.value,-0)&&Object.is(y.value,+0))return new _index.NumberValue(realm,-1);if(Object.is(x.value,+0)&&Object.is(y.value,-0))return new _index.NumberValue(realm,1);return realm.intrinsics.zero};
let comparefn_=(x,y)=>{(0,_invariant.default)(x instanceof _index.NumberValue,"Unexpected type");(0,_invariant.default)(y instanceof _index.NumberValue,"Unexpected type");let result_=SortCompare(x,y);let numb=_singletons.To.ToNumber(realm,result_);return numb};let arr=[];for(let j=0;j<len;j++){let val=(0,_typedarray.IntegerIndexedElementGet)(realm,O.throwIfNotConcreteObject(),j);arr[j]=val}arr.sort(comparefn_);for(let j=0;j<len;j++)(0,_typedarray.IntegerIndexedElementSet)(realm,O.throwIfNotConcreteObject(),
j,arr[j]);return context});obj.defineNativeMethod("subarray",2,(context,[begin,end])=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");if(!("$TypedArrayName"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have a [[TypedArrayName]] internal slot");(0,_invariant.default)(O.$ViewedArrayBuffer,"O has a [[ViewedArrayBuffer]] internal slot");let buffer=
O.$ViewedArrayBuffer;(0,_invariant.default)(buffer);let srcLength=O.$ArrayLength;(0,_invariant.default)(typeof srcLength==="number");let relativeBegin=_singletons.To.ToInteger(realm,begin);let beginIndex=relativeBegin<0?Math.max(srcLength+relativeBegin,0):Math.min(relativeBegin,srcLength);let relativeEnd=!end||end instanceof _index.UndefinedValue?srcLength:_singletons.To.ToInteger(realm,end.throwIfNotConcrete());let endIndex=relativeEnd<0?Math.max(srcLength+relativeEnd,0):Math.min(relativeEnd,srcLength);
let newLength=Math.max(endIndex-beginIndex,0);let constructorName=O.$TypedArrayName;(0,_invariant.default)(typeof constructorName==="string");let elementSize=_typedarray.ArrayElementSize[constructorName];let srcByteOffset=O.$ByteOffset;(0,_invariant.default)(typeof srcByteOffset==="number");let beginByteOffset=srcByteOffset+beginIndex*elementSize;let argumentsList=[buffer,new _index.NumberValue(realm,beginByteOffset),new _index.NumberValue(realm,newLength)];return(0,_typedarray.TypedArraySpeciesCreate)(realm,
O,argumentsList)});obj.defineNativeMethod("toLocaleString",0,(context)=>{let array=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,array);let len=array.throwIfNotConcreteObject().$ArrayLength;(0,_invariant.default)(typeof len==="number");let separator=",";if(len===0)return realm.intrinsics.emptyString;let firstElement=(0,_get.Get)(realm,array,"0");let R;if((0,_has.HasSomeCompatibleType)(firstElement,_index.UndefinedValue,_index.NullValue))R="";else R=_singletons.To.ToStringPartial(realm,
(0,_call.Invoke)(realm,firstElement,"toLocaleString"));let k=1;while(k<len){let S=R+separator;let nextElement=(0,_get.Get)(realm,array,new _index.StringValue(realm,k+""));if((0,_has.HasSomeCompatibleType)(nextElement,_index.UndefinedValue,_index.NullValue))R="";else R=_singletons.To.ToStringPartial(realm,(0,_call.Invoke)(realm,nextElement,"toLocaleString"));R=S+R;k++}return new _index.StringValue(realm,R)});obj.defineNativeProperty("toString",realm.intrinsics.ArrayProto_toString);obj.defineNativeProperty("values",
realm.intrinsics.TypedArrayProto_values);obj.defineNativeProperty(realm.intrinsics.SymbolIterator,realm.intrinsics.TypedArrayProto_values);obj.defineNativeGetter(realm.intrinsics.SymbolToStringTag,(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))return realm.intrinsics.undefined;if(!("$TypedArrayName"in O))return realm.intrinsics.undefined;let name=O.$TypedArrayName;(0,_invariant.default)(typeof name==="string","name is a String value");return new _index.StringValue(realm,
name)})}function build(realm,obj,type){obj.$Prototype=realm.intrinsics.TypedArrayPrototype;obj.defineNativeConstant("BYTES_PER_ELEMENT",new _index.NumberValue(realm,_types.ElementSize[type]))}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _TypedArray=__webpack_require__(501);function _default(realm){return(0,_TypedArray.build)(realm,"Float32")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _TypedArrayPrototype=__webpack_require__(502);function _default(realm,obj){(0,_TypedArrayPrototype.build)(realm,obj,"Float32")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _TypedArray=__webpack_require__(501);function _default(realm){return(0,_TypedArray.build)(realm,"Float64")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _TypedArrayPrototype=__webpack_require__(502);function _default(realm,obj){(0,_TypedArrayPrototype.build)(realm,obj,"Float64")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _TypedArray=__webpack_require__(501);function _default(realm){return(0,_TypedArray.build)(realm,"Int8")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _TypedArrayPrototype=__webpack_require__(502);function _default(realm,obj){(0,_TypedArrayPrototype.build)(realm,obj,"Int8")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _TypedArray=__webpack_require__(501);function _default(realm){return(0,_TypedArray.build)(realm,"Int16")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _TypedArrayPrototype=__webpack_require__(502);function _default(realm,obj){(0,_TypedArrayPrototype.build)(realm,obj,"Int16")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _TypedArray=__webpack_require__(501);function _default(realm){return(0,_TypedArray.build)(realm,"Int32")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _TypedArrayPrototype=__webpack_require__(502);function _default(realm,obj){(0,_TypedArrayPrototype.build)(realm,obj,"Int32")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let func=new _index.NativeFunctionValue(realm,"Map","Map",0,(context,[_iterable],argCount,NewTarget)=>{let iterable=_iterable;if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let map=_singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"MapPrototype",{$MapData:undefined});map.$MapData=[];if(iterable&&realm.isCompatibleWith(realm.MOBILE_JSC_VERSION))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"the map constructor doesn't take arguments");if(!iterable)iterable=realm.intrinsics.undefined;let iter,adder;if((0,_index2.HasSomeCompatibleType)(iterable,_index.NullValue,_index.UndefinedValue)){adder=realm.intrinsics.undefined;iter=realm.intrinsics.undefined}else{adder=(0,_index2.Get)(realm,map,"set");if(!(0,_index2.IsCallable)(realm,adder))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);iter=(0,_index2.GetIterator)(realm,iterable)}if(iter instanceof _index.UndefinedValue)return map;
while(true){let next=(0,_index2.IteratorStep)(realm,iter);if(!next)return map;let nextItem=(0,_index2.IteratorValue)(realm,next);if(nextItem.mightNotBeObject()){if(nextItem.mightBeObject())nextItem.throwIfNotConcrete();let error=realm.createErrorThrowCompletion(realm.intrinsics.TypeError);throw(0,_index2.IteratorClose)(realm,iter,error);}(0,_invariant.default)(nextItem instanceof _index.ObjectValue||nextItem instanceof _index.AbstractObjectValue);let k;try{k=(0,_index2.Get)(realm,nextItem,"0")}catch(kCompletion){if(kCompletion instanceof
_completions.AbruptCompletion)throw(0,_index2.IteratorClose)(realm,iter,kCompletion);else throw kCompletion;}let v;try{v=(0,_index2.Get)(realm,nextItem,"1")}catch(vCompletion){if(vCompletion instanceof _completions.AbruptCompletion)throw(0,_index2.IteratorClose)(realm,iter,vCompletion);else throw vCompletion;}let status;try{status=(0,_index2.Call)(realm,adder,map,[k,v])}catch(statusCompletion){if(statusCompletion instanceof _completions.AbruptCompletion)throw(0,_index2.IteratorClose)(realm,iter,statusCompletion);
else throw statusCompletion;}status}(0,_invariant.default)(false)});func.defineNativeGetter(realm.intrinsics.SymbolSpecies,(context)=>{return context});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeMethod("clear",0,(context)=>{let M=context.throwIfNotConcrete();if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!M.$MapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);realm.recordModifiedProperty(M.$MapData_binding);let entries=M.$MapData;(0,_invariant.default)(entries!==undefined);for(let p of entries){p.$Key=
undefined;p.$Value=undefined}return realm.intrinsics.undefined});obj.defineNativeMethod("delete",1,(context,[key])=>{let M=context.throwIfNotConcrete();if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!M.$MapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);realm.recordModifiedProperty(M.$MapData_binding);let entries=M.$MapData;(0,_invariant.default)(entries!==undefined);for(let p of entries)if(p.$Key!==undefined&&(0,
_index2.SameValueZeroPartial)(realm,p.$Key,key)){p.$Key=undefined;p.$Value=undefined;return realm.intrinsics.true}return realm.intrinsics.false});obj.defineNativeMethod("entries",0,(context)=>{let M=context;return(0,_index2.CreateMapIterator)(realm,M,"key+value")});obj.defineNativeMethod("forEach",1,(context,[callbackfn,thisArg])=>{let M=context.throwIfNotConcrete();if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!M.$MapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
if(!(0,_index2.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let T=thisArg||realm.intrinsics.undefined;let entries=M.$MapData;(0,_invariant.default)(entries);for(let e of entries)if(e.$Key!==undefined){(0,_invariant.default)(e.$Value!==undefined);(0,_index2.Call)(realm,callbackfn,T,[e.$Value,e.$Key,M])}return realm.intrinsics.undefined});obj.defineNativeMethod("get",1,(context,[key])=>{let M=context.throwIfNotConcrete();if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
if(!M.$MapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let entries=M.$MapData;(0,_invariant.default)(entries!==undefined);for(let p of entries)if(p.$Key!==undefined&&(0,_index2.SameValueZeroPartial)(realm,p.$Key,key)){(0,_invariant.default)(p.$Value!==undefined);return p.$Value}return realm.intrinsics.undefined});obj.defineNativeMethod("has",1,(context,[key])=>{let M=context.throwIfNotConcrete();if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
if(!M.$MapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let entries=M.$MapData;(0,_invariant.default)(entries!==undefined);for(let p of entries)if(p.$Key!==undefined&&(0,_index2.SameValueZeroPartial)(realm,p.$Key,key))return realm.intrinsics.true;return realm.intrinsics.false});obj.defineNativeMethod("keys",0,(context)=>{let M=context;return(0,_index2.CreateMapIterator)(realm,M,"key")});obj.defineNativeMethod("set",2,(context,[key,value])=>{let M=context.throwIfNotConcrete();
if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!M.$MapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);realm.recordModifiedProperty(M.$MapData_binding);let entries=M.$MapData;(0,_invariant.default)(entries!==undefined);for(let p of entries)if(p.$Key!==undefined&&(0,_index2.SameValueZeroPartial)(realm,p.$Key,key)){p.$Value=value;return M}key=key.throwIfNotConcrete();if(key instanceof _index.NumberValue&&Object.is(key.value,
-0))key=realm.intrinsics.zero;let p={$Key:key,$Value:value};entries.push(p);return M});obj.$DefineOwnProperty("size",new _descriptors.PropertyDescriptor({configurable:true,get:new _index.NativeFunctionValue(realm,undefined,"get size",0,(context)=>{let M=context.throwIfNotConcrete();if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!M.$MapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let entries=M.$MapData;(0,_invariant.default)(entries!==
undefined);let count=0;for(let p of entries)if(p.$Key!==undefined)count++;return new _index.NumberValue(realm,count)})}));obj.defineNativeMethod("values",0,(context)=>{let M=context;return(0,_index2.CreateMapIterator)(realm,M,"value")});let entriesPropertyDescriptor=obj.$GetOwnProperty("entries");(0,_invariant.default)(entriesPropertyDescriptor instanceof _descriptors.PropertyDescriptor);_singletons.Properties.ThrowIfMightHaveBeenDeleted(entriesPropertyDescriptor);obj.$DefineOwnProperty(realm.intrinsics.SymbolIterator,
entriesPropertyDescriptor);obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"Map"),{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function _default(realm){let func=new _index.NativeFunctionValue(realm,"WeakMap","WeakMap",0,(args,[iterable],argCount,NewTarget)=>{if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let map=_singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"WeakMapPrototype",{$WeakMapData:undefined});map.$WeakMapData=[];if(iterable&&realm.isCompatibleWith(realm.MOBILE_JSC_VERSION))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"the weak map constructor doesn't take arguments");if(!iterable)iterable=realm.intrinsics.undefined;let iter,adder;if(iterable instanceof _index.UndefinedValue||iterable instanceof _index.NullValue){adder=realm.intrinsics.undefined;iter=realm.intrinsics.undefined}else{adder=(0,_index2.Get)(realm,map,"set");if(!(0,_index2.IsCallable)(realm,adder))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);iter=(0,_index2.GetIterator)(realm,iterable)}if(iter instanceof _index.UndefinedValue)return map;
while(true){let next=(0,_index2.IteratorStep)(realm,iter);if(!next)return map;let nextItem=(0,_index2.IteratorValue)(realm,next).throwIfNotConcrete();if(!(nextItem instanceof _index.ObjectValue)){let error=realm.createErrorThrowCompletion(realm.intrinsics.TypeError);throw(0,_index2.IteratorClose)(realm,iter,error);}let k;try{k=(0,_index2.Get)(realm,nextItem,"0")}catch(kCompletion){if(kCompletion instanceof _completions.AbruptCompletion)throw(0,_index2.IteratorClose)(realm,iter,kCompletion);else throw kCompletion;
}let v;try{v=(0,_index2.Get)(realm,nextItem,"1")}catch(vCompletion){if(vCompletion instanceof _completions.AbruptCompletion)throw(0,_index2.IteratorClose)(realm,iter,vCompletion);else throw vCompletion;}let status;try{status=(0,_index2.Call)(realm,adder,map,[k,v])}catch(statusCompletion){if(statusCompletion instanceof _completions.AbruptCompletion)throw(0,_index2.IteratorClose)(realm,iter,statusCompletion);else throw statusCompletion;}status}(0,_invariant.default)(false)});return func}},function(module,
exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"WeakMap"),{writable:false});obj.defineNativeMethod("delete",
1,(context,[key])=>{let M=context.throwIfNotConcrete();if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!M.$WeakMapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let entries=M.$WeakMapData;realm.recordModifiedProperty(M.$WeakMapData_binding);(0,_invariant.default)(entries!==undefined);key=key.throwIfNotConcrete();if(!(key instanceof _index.ObjectValue))return realm.intrinsics.false;for(let p of entries)if(p.$Key!==
undefined&&(0,_index2.SameValuePartial)(realm,p.$Key,key)){p.$Key=undefined;p.$Value=undefined;return realm.intrinsics.true}return realm.intrinsics.false});obj.defineNativeMethod("get",1,(context,[key])=>{let M=context.throwIfNotConcrete();if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!M.$WeakMapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let entries=M.$WeakMapData;(0,_invariant.default)(entries!==undefined);
key=key.throwIfNotConcrete();if(!(key instanceof _index.ObjectValue))return realm.intrinsics.undefined;for(let p of entries)if(p.$Key!==undefined&&(0,_index2.SameValuePartial)(realm,p.$Key,key)){(0,_invariant.default)(p.$Value!==undefined);return p.$Value}return realm.intrinsics.undefined});obj.defineNativeMethod("has",1,(context,[key])=>{let M=context.throwIfNotConcrete();if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!M.$WeakMapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
let entries=M.$WeakMapData;(0,_invariant.default)(entries!==undefined);key=key.throwIfNotConcrete();if(!(key instanceof _index.ObjectValue))return realm.intrinsics.false;for(let p of entries)if(p.$Key!==undefined&&(0,_index2.SameValuePartial)(realm,p.$Key,key))return realm.intrinsics.true;return realm.intrinsics.false});obj.defineNativeMethod("set",2,(context,[key,value])=>{let M=context.throwIfNotConcrete();if(!(M instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
if(!M.$WeakMapData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);realm.recordModifiedProperty(M.$WeakMapData_binding);let entries=M.$WeakMapData;(0,_invariant.default)(entries!==undefined);key=key.throwIfNotConcrete();if(!(key instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);for(let p of entries)if(p.$Key!==undefined&&(0,_index2.SameValuePartial)(realm,p.$Key,key)){p.$Value=value;return M}let p={$Key:key,$Value:value};entries.push(p);
return M})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _errors=__webpack_require__(3);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let func=
new _index.NativeFunctionValue(realm,"Set","Set",0,(context,[_iterable],argCount,NewTarget)=>{let iterable=_iterable;if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let set=_singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"SetPrototype",{$SetData:undefined});set.$SetData=[];if(iterable&&realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)){let loc=realm.currentLocation;let error=new _errors.CompilerDiagnostic("This version of JSC ignores the argument to Set, require the polyfill before doing this",
loc,"PP0001","RecoverableError");realm.handleError(error)}if(!iterable)iterable=realm.intrinsics.undefined;let iter,adder;if((0,_index2.HasSomeCompatibleType)(iterable,_index.UndefinedValue,_index.NullValue)){adder=realm.intrinsics.undefined;iter=realm.intrinsics.undefined}else{adder=(0,_index2.Get)(realm,set,"add");if(!(0,_index2.IsCallable)(realm,adder))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);iter=(0,_index2.GetIterator)(realm,iterable)}if(iter instanceof _index.UndefinedValue)return set;
while(true){let next=(0,_index2.IteratorStep)(realm,iter);if(!next)return set;let nextValue=(0,_index2.IteratorValue)(realm,next);try{(0,_index2.Call)(realm,adder,set,[nextValue])}catch(status){if(status instanceof _completions.AbruptCompletion)throw(0,_index2.IteratorClose)(realm,iter,status);else throw status;}}(0,_invariant.default)(false)});func.defineNativeGetter(realm.intrinsics.SymbolSpecies,(context)=>{return context});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeMethod("add",1,(context,[value])=>{let S=context.throwIfNotConcrete();if(!(S instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
if(!S.$SetData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);realm.recordModifiedProperty(S.$SetData_binding);let entries=S.$SetData;(0,_invariant.default)(entries!==undefined);for(let e of entries)if(e&&(0,_index2.SameValueZeroPartial)(realm,e,value))return S;value=value.throwIfNotConcrete();if(value instanceof _index.NumberValue&&Object.is(value.value,-0))value=realm.intrinsics.zero;entries.push(value);return S});obj.defineNativeMethod("clear",0,(context)=>{let S=context.throwIfNotConcrete();
if(!(S instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!S.$SetData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);realm.recordModifiedProperty(S.$SetData_binding);S.$SetData=[];return realm.intrinsics.undefined});obj.defineNativeMethod("delete",1,(context,[value])=>{let S=context.throwIfNotConcrete();if(!(S instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!S.$SetData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
realm.recordModifiedProperty(S.$SetData_binding);let entries=S.$SetData;(0,_invariant.default)(entries!==undefined);for(let i=0;i<entries.length;i++){let e=entries[i];if(e!==undefined&&(0,_index2.SameValueZeroPartial)(realm,e,value)){entries[i]=undefined;return realm.intrinsics.true}}return realm.intrinsics.false});obj.defineNativeMethod("entries",0,(context)=>{let S=context;return(0,_index2.CreateSetIterator)(realm,S,"key+value")});obj.defineNativeMethod("forEach",1,(context,[callbackfn,thisArg])=>
{let S=context.throwIfNotConcrete();if(!(S instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!S.$SetData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!(0,_index2.IsCallable)(realm,callbackfn))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let T=thisArg||realm.intrinsics.undefined;let entries=S.$SetData;(0,_invariant.default)(entries);for(let e of entries)if(e)(0,_index2.Call)(realm,callbackfn,T,[e,e,S]);
return realm.intrinsics.undefined});obj.defineNativeMethod("has",1,(context,[value])=>{let S=context.throwIfNotConcrete();if(!(S instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!S.$SetData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let entries=S.$SetData;for(let e of entries)if(e&&(0,_index2.SameValueZeroPartial)(realm,e,value))return realm.intrinsics.true;return realm.intrinsics.false});obj.$DefineOwnProperty("size",new _descriptors.PropertyDescriptor({get:new _index.NativeFunctionValue(realm,
undefined,"get size",0,(context)=>{let S=context.throwIfNotConcrete();if(!(S instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!S.$SetData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let entries=S.$SetData;let count=0;for(let e of entries)if(e)count++;return new _index.NumberValue(realm,count)}),configurable:true}));obj.defineNativeMethod("values",0,(context)=>{let S=context;return(0,_index2.CreateSetIterator)(realm,S,"value")});
let valuesPropertyDescriptor=obj.$GetOwnProperty("values");(0,_invariant.default)(valuesPropertyDescriptor instanceof _descriptors.PropertyDescriptor);_singletons.Properties.ThrowIfMightHaveBeenDeleted(valuesPropertyDescriptor);obj.$DefineOwnProperty("keys",valuesPropertyDescriptor);obj.$DefineOwnProperty(realm.intrinsics.SymbolIterator,valuesPropertyDescriptor);obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"Set"),{writable:false})}},function(module,exports,
__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _promise=__webpack_require__(277);var _index2=__webpack_require__(232);var _iterator=__webpack_require__(272);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let func=
new _index.NativeFunctionValue(realm,"Promise","Promise",1,(context,[executor],argCount,NewTarget)=>{if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!(0,_index2.IsCallable)(realm,executor))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let promise=_singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"PromisePrototype",{$PromiseState:undefined,$PromiseResult:undefined,$PromiseFulfillReactions:undefined,$PromiseRejectReactions:undefined,
$PromiseIsHandled:undefined});promise.$PromiseState="pending";promise.$PromiseFulfillReactions=[];promise.$PromiseRejectReactions=[];promise.$PromiseIsHandled=false;let resolvingFunctions=(0,_promise.CreateResolvingFunctions)(realm,promise);let completion;try{completion=(0,_index2.Call)(realm,executor,realm.intrinsics.undefined,[resolvingFunctions.resolve,resolvingFunctions.reject])}catch(err){if(err instanceof _completions.AbruptCompletion)completion=err;else throw err;}if(completion instanceof _completions.AbruptCompletion)(0,
_index2.Call)(realm,resolvingFunctions.reject,realm.intrinsics.undefined,[completion.value]);return promise});func.defineNativeMethod("all",1,(context,[iterable])=>{let C=context.throwIfNotConcrete();if(!(C instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let promiseCapability=(0,_promise.NewPromiseCapability)(realm,C);let iterator;try{iterator=(0,_index2.GetIterator)(realm,iterable)}catch(e){if(e instanceof _completions.AbruptCompletion){(0,_index2.Call)(realm,
promiseCapability.reject,realm.intrinsics.undefined,[e.value]);return promiseCapability.promise}else throw e;}let iteratorRecord={$Iterator:iterator,$Done:false};let result;try{(0,_invariant.default)(C instanceof _index.FunctionValue);result=(0,_promise.PerformPromiseAll)(realm,iteratorRecord,C,promiseCapability)}catch(e){if(e instanceof _completions.AbruptCompletion){if(iteratorRecord.$Done===false)try{result=(0,_iterator.IteratorClose)(realm,iterator,e).value}catch(resultCompletion){if(resultCompletion instanceof
_completions.AbruptCompletion)result=resultCompletion.value;else throw resultCompletion;}else result=e.value;(0,_index2.Call)(realm,promiseCapability.reject,realm.intrinsics.undefined,[result]);return promiseCapability.promise}else throw e;}return result});func.defineNativeMethod("race",1,(context,[iterable])=>{let C=context.throwIfNotConcrete();if(!(C instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let promiseCapability=(0,_promise.NewPromiseCapability)(realm,
C);let iterator;try{iterator=(0,_index2.GetIterator)(realm,iterable)}catch(e){if(e instanceof _completions.AbruptCompletion){(0,_index2.Call)(realm,promiseCapability.reject,realm.intrinsics.undefined,[e.value]);return promiseCapability.promise}else throw e;}let iteratorRecord={$Iterator:iterator,$Done:false};let result;try{result=(0,_promise.PerformPromiseRace)(realm,iteratorRecord,promiseCapability,C)}catch(e){if(e instanceof _completions.AbruptCompletion){if(iteratorRecord.$Done===false)try{result=
(0,_iterator.IteratorClose)(realm,iterator,e).value}catch(resultCompletion){if(resultCompletion instanceof _completions.AbruptCompletion)result=resultCompletion.value;else throw resultCompletion;}else result=e.value;(0,_index2.Call)(realm,promiseCapability.reject,realm.intrinsics.undefined,[result]);return promiseCapability.promise}else throw e;}return result});func.defineNativeMethod("reject",1,(context,[r])=>{let C=context.throwIfNotConcrete();if(!(C instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
let promiseCapability=(0,_promise.NewPromiseCapability)(realm,C);(0,_index2.Call)(realm,promiseCapability.reject,realm.intrinsics.undefined,[r]);return promiseCapability.promise});func.defineNativeMethod("resolve",1,(context,[x])=>{let C=context.throwIfNotConcrete();if(!(C instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if((0,_index2.IsPromise)(realm,x)){(0,_invariant.default)(x instanceof _index.ObjectValue);let xConstructor=(0,_index2.Get)(realm,
x,"constructor");if((0,_index2.SameValuePartial)(realm,xConstructor,C))return x}let promiseCapability=(0,_promise.NewPromiseCapability)(realm,C);(0,_index2.Call)(realm,promiseCapability.resolve,realm.intrinsics.undefined,[x]);return promiseCapability.promise});func.defineNativeGetter(realm.intrinsics.SymbolSpecies,(context)=>{return context});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);
var _index2=__webpack_require__(232);var _promise=__webpack_require__(277);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeMethod("catch",1,(context,[onRejected])=>{let promise=context;return(0,_index2.Invoke)(realm,promise,"then",[realm.intrinsics.undefined,onRejected])});obj.defineNativeMethod("then",2,(context,[onFulfilled,onRejected])=>{let promise=context;
if(!(0,_index2.IsPromise)(realm,promise))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(promise instanceof _index.ObjectValue);let C=(0,_index2.SpeciesConstructor)(realm,promise,realm.intrinsics.Promise);let resultCapability=(0,_promise.NewPromiseCapability)(realm,C);return(0,_promise.PerformPromiseThen)(realm,promise,onFulfilled,onRejected,resultCapability)});obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"Promise"),
{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _TypedArray=__webpack_require__(501);function _default(realm){return(0,_TypedArray.build)(realm,"Uint8")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _TypedArrayPrototype=__webpack_require__(502);function _default(realm,obj){(0,
_TypedArrayPrototype.build)(realm,obj,"Uint8")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _TypedArray=__webpack_require__(501);function _default(realm){return(0,_TypedArray.build)(realm,"Uint8Clamped")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _TypedArrayPrototype=__webpack_require__(502);
function _default(realm,obj){(0,_TypedArrayPrototype.build)(realm,obj,"Uint8Clamped")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _TypedArray=__webpack_require__(501);function _default(realm){return(0,_TypedArray.build)(realm,"Uint16")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _TypedArrayPrototype=
__webpack_require__(502);function _default(realm,obj){(0,_TypedArrayPrototype.build)(realm,obj,"Uint16")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _TypedArray=__webpack_require__(501);function _default(realm){return(0,_TypedArray.build)(realm,"Uint32")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;
var _TypedArrayPrototype=__webpack_require__(502);function _default(realm,obj){(0,_TypedArrayPrototype.build)(realm,obj,"Uint32")}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function _default(realm){let func=new _index.NativeFunctionValue(realm,"WeakSet","WeakSet",0,(args,[iterable],argCount,NewTarget)=>{if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let set=_singletons.Create.OrdinaryCreateFromConstructor(realm,NewTarget,"WeakSetPrototype",{$WeakSetData:undefined});set.$WeakSetData=[];if(iterable===undefined)iterable=realm.intrinsics.undefined;let iter,adder;if(iterable instanceof _index.UndefinedValue||
iterable instanceof _index.NullValue){iter=realm.intrinsics.undefined;adder=realm.intrinsics.undefined}else{adder=(0,_index2.Get)(realm,set,"add");if(!(0,_index2.IsCallable)(realm,adder))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsCallable(adder) is false");iter=(0,_index2.GetIterator)(realm,iterable)}if(iter instanceof _index.UndefinedValue)return set;while(true){let next=(0,_index2.IteratorStep)(realm,iter);if(next===false)return set;let nextValue=(0,_index2.IteratorValue)(realm,
next);try{(0,_index2.Call)(realm,adder,set,[nextValue])}catch(statusCompletion){if(!(statusCompletion instanceof _completions.AbruptCompletion))throw statusCompletion;throw(0,_index2.IteratorClose)(realm,iter,statusCompletion);}}(0,_invariant.default)(false)});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeMethod("add",1,(context,[value])=>{let S=context.throwIfNotConcrete();if(!(S instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(S) is not Object");if(!S.$WeakSetData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"S does not have a [[WeakSetData]] internal slot");value=value.throwIfNotConcrete();if(!(value instanceof
_index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(value) is not Object");realm.recordModifiedProperty(S.$WeakSetData_binding);let entries=S.$WeakSetData;(0,_invariant.default)(entries!=null);for(let e of entries)if(e!==undefined&&(0,_index2.SameValuePartial)(realm,e,value)===true)return S;entries.push(value);return S});obj.defineNativeMethod("delete",1,(context,[value])=>{let S=context.throwIfNotConcrete();if(!(S instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"Type(S) is not Object");if(!S.$WeakSetData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"S does not have a [[WeakSetData]] internal slot");value=value.throwIfNotConcrete();if(!(value instanceof _index.ObjectValue))return realm.intrinsics.false;realm.recordModifiedProperty(S.$WeakSetData_binding);let entries=S.$WeakSetData;(0,_invariant.default)(entries!=null);for(let i=0;i<entries.length;++i){let e=entries[i];if(e!==undefined&&(0,_index2.SameValuePartial)(realm,e,value)===true){entries[i]=
undefined;return realm.intrinsics.true}}return realm.intrinsics.false});obj.defineNativeMethod("has",1,(context,[value])=>{let S=context.throwIfNotConcrete();if(!(S instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(S) is not Object");if(!S.$WeakSetData)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"S does not have a [[WeakSetData]] internal slot");let entries=S.$WeakSetData;value=value.throwIfNotConcrete();if(!(value instanceof
_index.ObjectValue))return realm.intrinsics.false;for(let e of entries)if(e!==undefined&&(0,_index2.SameValuePartial)(realm,e,value)===true)return realm.intrinsics.true;return realm.intrinsics.false});obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"WeakSet"),{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);
var _arraybuffer=__webpack_require__(278);function _default(realm){let func=new _index.NativeFunctionValue(realm,"ArrayBuffer","ArrayBuffer",1,(context,[length],argCount,NewTarget)=>{if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let byteLength=_singletons.To.ToIndexPartial(realm,length);return(0,_arraybuffer.AllocateArrayBuffer)(realm,NewTarget,byteLength)});func.defineNativeMethod("isView",1,(context,[_arg])=>{let arg=_arg;if(!arg.mightBeObject())return realm.intrinsics.false;
arg=arg.throwIfNotConcreteObject();if("$ViewedArrayBuffer"in arg)return realm.intrinsics.true;return realm.intrinsics.false});func.defineNativeGetter(realm.intrinsics.SymbolSpecies,(context)=>{return context});return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeGetter("byteLength",(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");if(!("$ArrayBufferData"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"O does not have an [[ArrayBufferData]] internal slot");if((0,_index2.IsDetachedBuffer)(realm,
O)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(O) is true");let length=O.$ArrayBufferByteLength;(0,_invariant.default)(typeof length==="number");return new _index.NumberValue(realm,length)});obj.defineNativeMethod("slice",2,(context,[start,end])=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");if(!("$ArrayBufferData"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"O does not have an [[ArrayBufferData]] internal slot");if((0,_index2.IsDetachedBuffer)(realm,O)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(O) is true");let len=O.$ArrayBufferByteLength;(0,_invariant.default)(typeof len==="number");let relativeStart=_singletons.To.ToInteger(realm,start);let first=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len);let relativeEnd=!end||end instanceof _index.UndefinedValue?len:_singletons.To.ToInteger(realm,
end.throwIfNotConcrete());let final=relativeEnd<0?Math.max(len+relativeEnd,0):Math.min(relativeEnd,len);let newLen=Math.max(final-first,0);let ctor=(0,_index2.SpeciesConstructor)(realm,O,realm.intrinsics.ArrayBuffer);let New=(0,_index2.Construct)(realm,ctor,[new _index.NumberValue(realm,newLen)]).throwIfNotConcreteObject();if(!("$ArrayBufferData"in New))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"new does not have an [[ArrayBufferData]] internal slot");if((0,_index2.IsDetachedBuffer)(realm,
New)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"IsDetachedBuffer(new) is true");if((0,_index2.SameValue)(realm,New,O)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"SameValue(new, O) is true");if(typeof New.$ArrayBufferByteLength!=="number"||New.$ArrayBufferByteLength<newLen)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"new.[[ArrayBufferByteLength]] < newLen");if((0,_index2.IsDetachedBuffer)(realm,O)===true)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"IsDetachedBuffer(O) is true");let fromBuf=O.$ArrayBufferData;(0,_invariant.default)(fromBuf);let toBuf=New.$ArrayBufferData;(0,_invariant.default)(toBuf);(0,_index2.CopyDataBlockBytes)(realm,toBuf,0,fromBuf,first,newLen);return New});obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"ArrayBuffer"),{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);
var _index2=__webpack_require__(232);var _json=__webpack_require__(534);var _index3=__webpack_require__(15);var _errors=__webpack_require__(3);var _singletons=__webpack_require__(236);var _nativeToInterp=_interopRequireDefault(__webpack_require__(535));var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function SerializeJSONArray(realm,value,context){if(context.stack.indexOf(value)>=0)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"cyclical error");context.stack.push(value);let stepback=context.indent;context.indent+=context.gap;let partial=[];let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,value,"length"));let index=0;while(index<len){let strP=SerializeJSONProperty(realm,new _index.StringValue(realm,index+""),value,context);if(strP===undefined)partial.push("null");else partial.push(strP);index++}let final="";if(!partial.length)final="[]";else if(!context.gap){let properties=partial.join(",");final=`[${properties}]`}else;
context.stack.pop();context.indent=stepback;return final}function QuoteJSONString(realm,value){return JSON.stringify(value.value)}function SerializeJSONObject(realm,value,context){if(context.stack.indexOf(value)>=0)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"cyclical error");context.stack.push(value);let stepback=context.indent;context.indent+=context.gap;let K;if(context.PropertyList!==undefined)K=context.PropertyList;else K=(0,_index2.EnumerableOwnProperties)(realm,value,
"key");let partial=[];for(let P of K){(0,_invariant.default)(P instanceof _index.StringValue);let strP=SerializeJSONProperty(realm,P,value,context);if(strP!==undefined){let member=QuoteJSONString(realm,P);member+=":";if(context.gap)member+=" ";member+=strP;partial.push(member)}}let final="";if(!partial.length)final="{}";else if(!context.gap){let properties=partial.join(",");final=`{${properties}}`}else;context.stack.pop();context.indent=stepback;return final}function SerializeJSONProperty(realm,key,
holder,context){let value=(0,_index2.Get)(realm,holder,key).throwIfNotConcrete();if(value instanceof _index.ObjectValue){let toJSON=(0,_index2.Get)(realm,value,"toJSON");if((0,_index2.IsCallable)(realm,toJSON))value=(0,_index2.Call)(realm,toJSON,value,[key])}if(context.ReplacerFunction)value=(0,_index2.Call)(realm,context.ReplacerFunction,holder,[key,value]);if(value instanceof _index.ObjectValue)if(value.$NumberData)value=new _index.NumberValue(realm,_singletons.To.ToNumber(realm,value));else if(value.$StringData)value=
new _index.StringValue(realm,_singletons.To.ToString(realm,value));else if(value.$BooleanData)value=value.$BooleanData;if(value instanceof _index.NullValue)return"null";if(value instanceof _index.BooleanValue&&value.value)return"true";if(value instanceof _index.BooleanValue&&!value.value)return"false";if(value instanceof _index.StringValue)return QuoteJSONString(realm,value);if(value instanceof _index.NumberValue)if(isFinite(value.value))return _singletons.To.ToString(realm,value);else return"null";
if(value instanceof _index.ObjectValue&&!(0,_index2.IsCallable)(realm,value)){let isArray=(0,_index2.IsArray)(realm,value);if(isArray)return SerializeJSONArray(realm,value,context);else return SerializeJSONObject(realm,value,context)}return undefined}function InternalCloneObject(realm,val){let clone=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);for(let [key,binding]of val.properties){if(binding===undefined||binding.descriptor===undefined)continue;let desc=binding.descriptor;
(0,_invariant.default)(desc!==undefined);_singletons.Properties.ThrowIfMightHaveBeenDeleted(desc);let value=desc.throwIfNotConcrete(realm).value;if(value===undefined){_index.AbstractValue.reportIntrospectionError(val,key);throw new _errors.FatalError;}(0,_invariant.default)(value instanceof _index.Value);_singletons.Create.CreateDataProperty(realm,clone,key,InternalJSONClone(realm,value))}if(val.isPartialObject())clone.makePartial();if(val.isSimpleObject())clone.makeSimple();clone.isScopedTemplate=
true;return clone}const JSONStringifyStr="global.JSON.stringify(A)";const JSONParseStr="global.JSON.parse(A)";function InternalJSONClone(realm,val){if(val instanceof _index.AbstractValue){if(val instanceof _index.AbstractObjectValue){let strVal=_index.AbstractValue.createFromTemplate(realm,JSONStringifyStr,_index.StringValue,[val]);let obVal=_index.AbstractValue.createFromTemplate(realm,JSONParseStr,_index.ObjectValue,[strVal]);obVal.values=new _index3.ValuesDomain(new Set([InternalCloneObject(realm,
val.getTemplate())]));return obVal}return val}if(val instanceof _index.NumberValue&&!isFinite(val.value))return realm.intrinsics.null;if(val instanceof _index.PrimitiveValue)return val;if(val instanceof _index.ObjectValue){let clonedObj;let isArray=(0,_index2.IsArray)(realm,val);if(isArray===true){clonedObj=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ArrayPrototype);let I=0;let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,val,"length"));while(I<len){let P=_singletons.To.ToString(realm,
new _index.NumberValue(realm,I));let newElement=(0,_index2.Get)(realm,val,P);if(!(newElement instanceof _index.UndefinedValue))_singletons.Create.CreateDataProperty(realm,clonedObj,P,InternalJSONClone(realm,newElement));I+=1}}else{clonedObj=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);let keys=(0,_index2.EnumerableOwnProperties)(realm,val,"key",true);for(let P of keys){(0,_invariant.default)(P instanceof _index.StringValue);let newElement=(0,_index2.Get)(realm,val,P);if(!(newElement instanceof
_index.UndefinedValue))_singletons.Create.CreateDataProperty(realm,clonedObj,P,InternalJSONClone(realm,newElement))}}if(val.isPartialObject())clonedObj.makePartial();clonedObj.makeSimple();return clonedObj}(0,_invariant.default)(false)}function _default(realm){let obj=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,"JSON");obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"JSON"),{writable:false});obj.defineNativeMethod("stringify",3,(context,[value,
_replacer,_space])=>{let replacer=_replacer.throwIfNotConcrete();let space=_space.throwIfNotConcrete();let stack=[];let indent="";let PropertyList,ReplacerFunction;if(replacer instanceof _index.ObjectValue)if((0,_index2.IsCallable)(realm,replacer))ReplacerFunction=replacer;else{let isArray=(0,_index2.IsArray)(realm,replacer);if(isArray===true){PropertyList=[];let len=_singletons.To.ToLength(realm,(0,_index2.Get)(realm,replacer,"length"));let k=0;while(k<len){let v=(0,_index2.Get)(realm,replacer,new _index.StringValue(realm,
k+""));v=v.throwIfNotConcrete();let item;if(v instanceof _index.StringValue)item=v;else if(v instanceof _index.NumberValue)item=new _index.StringValue(realm,_singletons.To.ToString(realm,v));else if(v instanceof _index.ObjectValue)if(v.$StringData||v.$NumberData)item=new _index.StringValue(realm,_singletons.To.ToString(realm,v));if(item!==undefined&&PropertyList.find((x)=>x.value===item.value)===undefined)PropertyList.push(item);k++}}}if(space instanceof _index.ObjectValue)if(space.$NumberData)space=
new _index.NumberValue(realm,_singletons.To.ToNumber(realm,space));else if(space.$StringData)space=new _index.StringValue(realm,_singletons.To.ToString(realm,space));let gap;if(space instanceof _index.NumberValue){space=new _index.NumberValue(realm,Math.min(10,_singletons.To.ToInteger(realm,space)));gap=Array(Math.max(0,space.value)).join(" ")}else if(space instanceof _index.StringValue)gap=space.value.length<=10?space.value:space.value.substring(0,10);else gap="";let wrapper=_singletons.Create.ObjectCreate(realm,
realm.intrinsics.ObjectPrototype);let isAbstract=value instanceof _index.AbstractValue;if(isAbstract&&value.values.isTop()){_index.AbstractValue.reportIntrospectionError(value);throw new _errors.FatalError;}if(isAbstract||value instanceof _index.ObjectValue&&value.isPartialObject()){let clonedValue=InternalJSONClone(realm,value);let result=_index.AbstractValue.createTemporalFromTemplate(realm,JSONStringifyStr,_index.StringValue,[clonedValue],{kind:"JSON.stringify(...)"});return result}let status=
_singletons.Create.CreateDataProperty(realm,wrapper,"",value);(0,_invariant.default)(status,"expected to create data property");let str=SerializeJSONProperty(realm,realm.intrinsics.emptyString,wrapper,{PropertyList,ReplacerFunction,stack,indent,gap});if(str===undefined)return realm.intrinsics.undefined;else return new _index.StringValue(realm,str)});obj.defineNativeMethod("parse",2,(context,[text,reviver])=>{let unfiltered;if(text instanceof _index.AbstractValue&&text.kind==="JSON.stringify(...)"){let temporalOperationEntryArgs=
realm.derivedIds.get(text.intrinsicName);(0,_invariant.default)(temporalOperationEntryArgs!==undefined);let args=temporalOperationEntryArgs.args;(0,_invariant.default)(args[0]instanceof _index.Value);let inputClone=args[0];let parseResult;if(inputClone instanceof _index.ObjectValue)parseResult=InternalCloneObject(realm,inputClone);else{(0,_invariant.default)(inputClone instanceof _index.AbstractObjectValue);parseResult=InternalCloneObject(realm,inputClone.getTemplate())}(0,_invariant.default)(parseResult.isPartialObject());
parseResult.makeSimple();unfiltered=_index.AbstractValue.createTemporalFromTemplate(realm,JSONParseStr,_index.ObjectValue,[text],{kind:"JSON.parse(...)"});unfiltered.values=new _index3.ValuesDomain(new Set([parseResult]));(0,_invariant.default)(unfiltered.intrinsicName!==undefined);(0,_invariant.default)(realm.generator);realm.rebuildNestedProperties(unfiltered,unfiltered.intrinsicName)}else{let JText=_singletons.To.ToStringPartial(realm,text);try{unfiltered=(0,_nativeToInterp.default)(realm,JSON.parse(JText))}catch(err){if(err instanceof
SyntaxError)throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,err.message);else throw err;}(0,_invariant.default)((0,_index2.HasSomeCompatibleType)(unfiltered,_index.PrimitiveValue,_index.ObjectValue,_index.ArrayValue),"expected primitive, object or array")}if((0,_index2.IsCallable)(realm,reviver)){let root=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);let rootName="";let status=_singletons.Create.CreateDataProperty(realm,root,rootName,unfiltered);(0,_invariant.default)(status,
"expected to create data property");return(0,_json.InternalizeJSONProperty)(realm,reviver,root,rootName)}else return unfiltered});return obj}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.InternalizeJSONProperty=InternalizeJSONProperty;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _get=__webpack_require__(230);var _call=__webpack_require__(234);var _is=__webpack_require__(229);var _own=__webpack_require__(273);
var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function InternalizeJSONProperty(realm,reviver,holder,name){let val=(0,_get.Get)(realm,holder,name);if(val instanceof _index.ObjectValue){let isArray=(0,_is.IsArray)(realm,val);if(isArray===true){let I=0;let len=_singletons.To.ToLength(realm,(0,_get.Get)(realm,val,"length"));while(I<len){let newElement=InternalizeJSONProperty(realm,reviver,val,_singletons.To.ToString(realm,
new _index.NumberValue(realm,I)));if(newElement instanceof _index.UndefinedValue)val.$Delete(_singletons.To.ToString(realm,new _index.NumberValue(realm,I)));else _singletons.Create.CreateDataProperty(realm,val,_singletons.To.ToString(realm,new _index.NumberValue(realm,I)),newElement.throwIfNotConcrete());I+=1}}else{let keys=(0,_own.EnumerableOwnProperties)(realm,val,"key");for(let P of keys){(0,_invariant.default)(P instanceof _index.StringValue);let newElement=InternalizeJSONProperty(realm,reviver,
val,P);if(newElement instanceof _index.UndefinedValue)val.$Delete(P);else _singletons.Create.CreateDataProperty(realm,val,P,newElement)}}}return(0,_call.Call)(realm,reviver,holder,[typeof name==="string"?new _index.StringValue(realm,name):name,val])}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=convert;var _errors=__webpack_require__(3);var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _descriptors=
__webpack_require__(268);function convert(realm,val){if(typeof val==="number")return new _index.NumberValue(realm,val);else if(typeof val==="string")return new _index.StringValue(realm,val);else if(val===null)return realm.intrinsics.null;else if(val===undefined)return realm.intrinsics.undefined;else if(val===true)return realm.intrinsics.true;else if(val===false)return realm.intrinsics.false;else if(Array.isArray(val))return _singletons.Create.CreateArrayFromList(realm,val.map((item)=>convert(realm,
item)));else if(typeof val==="object"){let obj=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype);for(let key in val)obj.$DefineOwnProperty(key,new _descriptors.PropertyDescriptor({enumerable:true,writable:true,configurable:true,value:convert(realm,val[key])}));return obj}else throw new _errors.FatalError("need to convert value of type "+typeof val);}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=
__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);function _default(realm){let obj=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,"Reflect");obj.defineNativeMethod("apply",3,(context,[target,thisArgument,argumentsList])=>{if(!(0,_index2.IsCallable)(realm,target))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let args=_singletons.Create.CreateListFromArrayLike(realm,argumentsList);return(0,_index2.Call)(realm,target,
thisArgument,args)});obj.defineNativeMethod("construct",2,(context,[target,argumentsList,_newTarget])=>{let newTarget=_newTarget;if(!(0,_index2.IsConstructor)(realm,target))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(!newTarget)newTarget=target;else if(!(0,_index2.IsConstructor)(realm,newTarget))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let args=_singletons.Create.CreateListFromArrayLike(realm,argumentsList);return(0,_index2.Construct)(realm,target,
args,newTarget)});obj.defineNativeMethod("defineProperty",3,(context,[_target,propertyKey,attributes])=>{let target=_target.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let key=_singletons.To.ToPropertyKey(realm,propertyKey);let desc=_singletons.To.ToPropertyDescriptor(realm,attributes);return new _index.BooleanValue(realm,target.$DefineOwnProperty(key,desc))});obj.defineNativeMethod("deleteProperty",2,(context,
[_target,propertyKey])=>{let target=_target.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let key=_singletons.To.ToPropertyKey(realm,propertyKey);return new _index.BooleanValue(realm,target.$Delete(key))});obj.defineNativeMethod("get",2,(context,[_target,propertyKey,_receiver])=>{let receiver=_receiver;let target=_target.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
let key=_singletons.To.ToPropertyKey(realm,propertyKey);if(!receiver)receiver=target;return target.$Get(key,receiver)});obj.defineNativeMethod("getOwnPropertyDescriptor",2,(context,[_target,propertyKey])=>{let target=_target.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let key=_singletons.To.ToPropertyKey(realm,propertyKey);let desc=target.$GetOwnProperty(key);return _singletons.Properties.FromPropertyDescriptor(realm,
desc)});obj.defineNativeMethod("getPrototypeOf",1,(context,[_target])=>{let target=_target.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return target.$GetPrototypeOf()});obj.defineNativeMethod("has",2,(context,[target,propertyKey])=>{if(target.mightNotBeObject()){if(target.mightBeObject())target.throwIfNotConcrete();throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);}let key=_singletons.To.ToPropertyKey(realm,
propertyKey);return new _index.BooleanValue(realm,target.$HasProperty(key))});obj.defineNativeMethod("isExtensible",1,(context,[_target])=>{let target=_target.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return new _index.BooleanValue(realm,target.$IsExtensible())});obj.defineNativeMethod("ownKeys",1,(context,[_target])=>{let target=_target.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
let keys=target.$OwnPropertyKeys();return _singletons.Create.CreateArrayFromList(realm,keys)});obj.defineNativeMethod("preventExtensions",1,(context,[_target])=>{let target=_target.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return new _index.BooleanValue(realm,target.$PreventExtensions())});obj.defineNativeMethod("set",3,(context,[_target,propertyKey,V,_receiver])=>{let receiver=_receiver;let target=_target.throwIfNotConcrete();
if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let key=_singletons.To.ToPropertyKey(realm,propertyKey);if(!receiver)receiver=target;return new _index.BooleanValue(realm,target.$Set(key,V,receiver))});obj.defineNativeMethod("setPrototypeOf",2,(context,[_target,_proto])=>{let target=_target.throwIfNotConcrete();let proto=_proto.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
if(!(proto instanceof _index.ObjectValue)&&!(proto instanceof _index.NullValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return new _index.BooleanValue(realm,target.$SetPrototypeOf(proto))});return obj}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _errors=
__webpack_require__(3);var _PreludeGenerator=__webpack_require__(238);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}let buildMathTemplates=new Map;function _default(realm){let obj=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,"Math");obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"Math"),{writable:false});obj.defineNativeConstant("E",new _index.NumberValue(realm,2.718281828459045));obj.defineNativeConstant("LN10",
new _index.NumberValue(realm,2.302585092994046));obj.defineNativeConstant("LN2",new _index.NumberValue(realm,.6931471805599453));obj.defineNativeConstant("LOG10E",new _index.NumberValue(realm,.4342944819032518));obj.defineNativeConstant("LOG2E",new _index.NumberValue(realm,1.4426950408889634));obj.defineNativeConstant("PI",new _index.NumberValue(realm,3.141592653589793));obj.defineNativeConstant("SQRT1_2",new _index.NumberValue(realm,.7071067811865476));obj.defineNativeConstant("SQRT2",new _index.NumberValue(realm,
1.4142135623730951));let functions=[["abs",1],["acos",1],["acosh",1],["asin",1],["asinh",1],["atan",1],["atanh",1],["atan2",2],["cbrt",1],["ceil",1],["cos",1],["cosh",1],["exp",1],["expm1",1],["floor",1],["fround",1],["hypot",2],["log",1],["log1p",1],["log10",1],["log2",1],["max",2],["min",2],["pow",2],["round",1],["sin",1],["sinh",1],["sqrt",1],["tan",1],["tanh",1],["trunc",1]];if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))functions.push(["clz32",1]);if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&
!realm.isCompatibleWith("mobile"))functions.push(["sign",1]);for(let [name,length]of functions)obj.defineNativeMethod(name,length,(context,args,originalLength)=>{(0,_invariant.default)(originalLength>=0);args.length=originalLength;if(originalLength<=26&&args.some((arg)=>arg instanceof _index.AbstractValue)&&args.every((arg)=>_singletons.To.IsToNumberPure(realm,arg))){let templateSource=buildMathTemplates.get(name);if(templateSource===undefined){let params=_PreludeGenerator.Placeholders.slice(0,originalLength).join(",");
templateSource=`global.Math.${name}(${params})`;buildMathTemplates.set(name,templateSource)}return _index.AbstractValue.createFromTemplate(realm,templateSource,_index.NumberValue,args)}return new _index.NumberValue(realm,Math[name].apply(null,args.map((arg,i)=>_singletons.To.ToNumber(realm,arg.throwIfNotConcrete()))))});const imulTemplateSrc="global.Math.imul(A, B)";obj.defineNativeMethod("imul",2,(context,[x,y])=>{if((x instanceof _index.AbstractValue||y instanceof _index.AbstractValue)&&_singletons.To.IsToNumberPure(realm,
x)&&_singletons.To.IsToNumberPure(realm,y))return _index.AbstractValue.createFromTemplate(realm,imulTemplateSrc,_index.NumberValue,[x,y]);return new _index.NumberValue(realm,Math.imul(_singletons.To.ToUint32(realm,x.throwIfNotConcrete()),_singletons.To.ToUint32(realm,y.throwIfNotConcrete())))});const mathRandomTemplateSrc="global.Math.random()";obj.defineNativeMethod("random",0,(context)=>{let mathRandomGenerator=realm.mathRandomGenerator;if(mathRandomGenerator!==undefined){let loc=realm.currentLocation;
let error=new _errors.CompilerDiagnostic("Result of Math.random() is made deterministic via a fixed mathRandomSeed",loc,"PP8000","Information");realm.handleError(error);return new _index.NumberValue(realm,mathRandomGenerator())}else if(realm.useAbstractInterpretation)return _index.AbstractValue.createTemporalFromTemplate(realm,mathRandomTemplateSrc,_index.NumberValue,[],{isPure:true,skipInvariant:true});else return new _index.NumberValue(realm,Math.random())});return obj}},function(module,exports,
__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _proxy=__webpack_require__(539);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let func=new _index.NativeFunctionValue(realm,"Proxy","Proxy",2,(context,[target,handler],argCount,NewTarget)=>{if(!NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
return(0,_proxy.ProxyCreate)(realm,target,handler)});func.defineNativeMethod("revocable",2,(context,[target,handler])=>{let p=(0,_proxy.ProxyCreate)(realm,target,handler);let revoker=createRevoker();revoker.$RevocableProxy=p;let result=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);_singletons.Create.CreateDataProperty(realm,result,"proxy",p);_singletons.Create.CreateDataProperty(realm,result,"revoke",revoker);return result});function createRevoker(){let F=new _index.NativeFunctionValue(realm,
undefined,undefined,0,(context,[target,handler],argCount,NewTarget)=>{let p=F.$RevocableProxy;if(p instanceof _index.NullValue)return realm.intrinsics.undefined;F.$RevocableProxy=realm.intrinsics.null;(0,_invariant.default)(p instanceof _index.ProxyValue,"expected proxy");p.$ProxyTarget=realm.intrinsics.null;p.$ProxyHandler=realm.intrinsics.null;return realm.intrinsics.undefined},false);return F}return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.ProxyCall=ProxyCall;exports.ProxyConstruct=ProxyConstruct;exports.ProxyCreate=ProxyCreate;var _index=__webpack_require__(10);var _is=__webpack_require__(229);var _get=__webpack_require__(230);var _construct=__webpack_require__(228);var _call=__webpack_require__(234);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ProxyCall(realm,O,
thisArgument,argumentsList){let handler=O.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected an object");let target=O.$ProxyTarget;let trap=(0,_get.GetMethod)(realm,handler,"apply");if(trap instanceof _index.UndefinedValue)return(0,_call.Call)(realm,target,thisArgument,argumentsList);let argArray=_singletons.Create.CreateArrayFromList(realm,argumentsList);return(0,
_call.Call)(realm,trap.throwIfNotConcrete(),handler,[target,thisArgument,argArray])}function ProxyConstruct(realm,O,argumentsList,newTarget){let handler=O.$ProxyHandler;if(handler instanceof _index.NullValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(handler instanceof _index.ObjectValue,"expected an object");let target=O.$ProxyTarget;(0,_invariant.default)(target instanceof _index.ObjectValue);let trap=(0,_get.GetMethod)(realm,handler,"construct");if(trap instanceof
_index.UndefinedValue){(0,_invariant.default)(target.$Construct,"expected construct method");return(0,_construct.Construct)(realm,target,argumentsList,newTarget).throwIfNotConcreteObject()}let argArray=_singletons.Create.CreateArrayFromList(realm,argumentsList);let newObj=(0,_call.Call)(realm,trap.throwIfNotConcrete(),handler,[target,argArray,newTarget]).throwIfNotConcrete();if(!(newObj instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);return newObj}
function ProxyCreate(realm,_target,_handler){let handler=_handler;let target=_target.throwIfNotConcrete();if(!(target instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);if(target instanceof _index.ProxyValue&&(!target.$ProxyHandler||target.$ProxyHandler instanceof _index.NullValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);handler=handler.throwIfNotConcrete();if(!(handler instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
if(handler instanceof _index.ProxyValue&&(!handler.$ProxyHandler||handler.$ProxyHandler instanceof _index.NullValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let P=new _index.ProxyValue(realm);if((0,_is.IsCallable)(realm,target)){P.$Call=(thisArgument,argsList)=>{return ProxyCall(realm,P,thisArgument,argsList)};if(target.$Construct)P.$Construct=(argumentsList,newTarget)=>{return ProxyConstruct(realm,P,argumentsList,newTarget)}}P.$ProxyTarget=target;P.$ProxyHandler=handler;
return P}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function ToDigit(ch){if(ch>="0"&&ch<="9")return ch.charCodeAt(0)-"0".charCodeAt(0);else if(ch>="A"&&ch<="Z")return 10+ch.charCodeAt(0)-"A".charCodeAt(0);else if(ch>="a"&&ch<="z")return 10+ch.charCodeAt(0)-"a".charCodeAt(0);return undefined}function _default(realm){return new _index.NativeFunctionValue(realm,
"parseInt","parseInt",2,(context,[string,radix])=>{let inputString=_singletons.To.ToStringPartial(realm,string);let S=inputString.trim();let sign=1;if(S!==""&&S.charAt(0)==="-")sign=-1;if(S!==""&&(S.charAt(0)==="-"||S.charAt(0)==="+"))S=S.substr(1);let R=_singletons.To.ToInt32(realm,radix);let stripPrefix=true;if(R!==0){if(R<2||R>36)return realm.intrinsics.NaN;if(R!==16)stripPrefix=false}else R=10;if(stripPrefix===true)if(S.length>=2&&S.charAt(0)==="0"&&(S.charAt(1)==="x"||S.charAt(1)==="X")){S=S.substr(2);
R=16}let Z="";for(let i=0;i<S.length;++i){let digit=ToDigit(S.charAt(i));if(digit===undefined||digit>=R)break;Z=Z+S.charAt(i)}if(Z==="")return realm.intrinsics.NaN;let mathInt=0;for(let i=0;i<Z.length;++i)mathInt=mathInt*R+(ToDigit(Z.charAt(i))||0);if(mathInt===0){if(sign===-1)return realm.intrinsics.negativeZero;return realm.intrinsics.zero}let number=Number(mathInt);return new _index.NumberValue(realm,sign*number)},false)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){return new _index.NativeFunctionValue(realm,"parseFloat","parseFloat",1,(context,[string])=>{if(!string)return realm.intrinsics.NaN;let inputString=_singletons.To.ToStringPartial(realm,string);return new _index.NumberValue(realm,parseFloat(inputString))},false)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){return new _index.NativeFunctionValue(realm,"isFinite","isFinite",1,(context,[number])=>{let num=_singletons.To.ToNumber(realm,number);if(isNaN(num)||num===+Infinity||num===-Infinity)return realm.intrinsics.false;return realm.intrinsics.true},false)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=
_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){let name="decodeURI";return new _index.NativeFunctionValue(realm,name,name,1,(context,[_encodedURI],argCount,NewTarget)=>{let encodedURI=_encodedURI;if(NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,`${name} is not a constructor`);encodedURI=encodedURI.throwIfNotConcrete();let uriString=_singletons.To.ToString(realm,encodedURI);try{return new _index.StringValue(realm,
decodeURI(uriString))}catch(e){throw realm.createErrorThrowCompletion(realm.intrinsics.URIError,e.message);}})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){let name="decodeURIComponent";return new _index.NativeFunctionValue(realm,name,name,1,(context,[_encodedURIComponent],argCount,NewTarget)=>{let encodedURIComponent=
_encodedURIComponent;if(NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,`${name} is not a constructor`);encodedURIComponent=encodedURIComponent.throwIfNotConcrete();let componentString=_singletons.To.ToString(realm,encodedURIComponent);try{return new _index.StringValue(realm,decodeURIComponent(componentString))}catch(e){throw realm.createErrorThrowCompletion(realm.intrinsics.URIError,e.message);}})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){let name="encodeURI";return new _index.NativeFunctionValue(realm,name,name,1,(context,[_uri],argCount,NewTarget)=>{let uri=_uri;if(NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,`${name} is not a constructor`);uri=uri.throwIfNotConcrete();let uriString=_singletons.To.ToString(realm,uri);try{return new _index.StringValue(realm,
encodeURI(uriString))}catch(e){throw realm.createErrorThrowCompletion(realm.intrinsics.URIError,e.message);}})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){let name="encodeURIComponent";return new _index.NativeFunctionValue(realm,name,name,1,(context,[_uriComponent],argCount,NewTarget)=>{let uriComponent=_uriComponent;
if(NewTarget)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,`${name} is not a constructor`);uriComponent=uriComponent.throwIfNotConcrete();let componentString=_singletons.To.ToString(realm,uriComponent);try{return new _index.StringValue(realm,encodeURIComponent(componentString))}catch(e){throw realm.createErrorThrowCompletion(realm.intrinsics.URIError,e.message);}})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=
_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){return new _index.NativeFunctionValue(realm,"eval","eval",1,(context,[x])=>{let rcontext=realm.getRunningContext();let evalRealm=rcontext.function==null?realm:rcontext.function.$Realm;let strictCaller=false;let directEval=false;return _singletons.Functions.PerformEval(realm,x,evalRealm,strictCaller,directEval)},false)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(realm){return new _index.NativeFunctionValue(realm,"isNaN","isNaN",1,(context,[number])=>{let num=_singletons.To.ToNumber(realm,number);if(isNaN(num))return realm.intrinsics.true;return realm.intrinsics.false},false)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _singletons=
__webpack_require__(236);var _index=__webpack_require__(10);var _get=__webpack_require__(230);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeMethod("next",0,(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not an object");if(O.$IteratedObject===undefined||
O.$ArrayIteratorNextIndex===undefined||O.$ArrayIterationKind===undefined)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"ArrayIteratorPrototype.next isn't generic");let a=O.$IteratedObject;(0,_invariant.default)(a instanceof _index.ObjectValue||a instanceof _index.UndefinedValue);if(a instanceof _index.UndefinedValue)return _singletons.Create.CreateIterResultObject(realm,realm.intrinsics.undefined,true);let index=O.$ArrayIteratorNextIndex.value;let itemKind=O.$ArrayIterationKind;
let len;if(a.$TypedArrayName){len=a.$ArrayLength;(0,_invariant.default)(typeof len==="number")}else len=_singletons.To.ToLength(realm,(0,_get.Get)(realm,a,"length"));if(index>=len){O.$IteratedObject=realm.intrinsics.undefined;return _singletons.Create.CreateIterResultObject(realm,realm.intrinsics.undefined,true)}O.$ArrayIteratorNextIndex=new _index.NumberValue(realm,index+1);if(itemKind==="key")return _singletons.Create.CreateIterResultObject(realm,new _index.NumberValue(realm,index),false);let elementKey=
new _index.StringValue(realm,index+"");let elementValue=(0,_get.Get)(realm,a,elementKey);let result;if(itemKind==="value")result=elementValue;else{(0,_invariant.default)(itemKind==="key+value","expected item kind to be key+value");result=_singletons.Create.CreateArrayFromList(realm,[new _index.NumberValue(realm,index),elementValue])}return _singletons.Create.CreateIterResultObject(realm,result,false)});obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"Array Iterator"),
{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _singletons=__webpack_require__(236);var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeMethod("next",0,(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"Type(O) is not Object");if(!("$IteratedString"in O&&"$StringIteratorNextIndex"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"Type(O) is not Object");let s=O.$IteratedString;if(!s)return _singletons.Create.CreateIterResultObject(realm,realm.intrinsics.undefined,true);let position=O.$StringIteratorNextIndex;(0,_invariant.default)(typeof position==="number");let len=s.value.length;if(position>=len){O.$IteratedString=undefined;return _singletons.Create.CreateIterResultObject(realm,
realm.intrinsics.undefined,true)}let first=s.value.charCodeAt(position);let resultString;if(first<55296||first>56319||position+1===len)resultString=String.fromCharCode(first);else{let second=s.value.charCodeAt(position+1);if(second<56320||second>57343)resultString=String.fromCharCode(first);else resultString=String.fromCharCode(first,second)}let resultSize=resultString.length;O.$StringIteratorNextIndex=position+resultSize;return _singletons.Create.CreateIterResultObject(realm,new _index.StringValue(realm,
resultString),false)});obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"String Iterator"),{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,
obj){obj.defineNativeMethod("next",0,(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not an object");if(O.$Map===undefined||O.$MapNextIndex===undefined||O.$MapIterationKind===undefined)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"MapIteratorPrototype.next isn't generic");let m=O.$Map;let index=O.$MapNextIndex.value;let itemKind=O.$MapIterationKind;if(!m||m instanceof _index.UndefinedValue)return _singletons.Create.CreateIterResultObject(realm,
realm.intrinsics.undefined,true);(0,_invariant.default)(m instanceof _index.ObjectValue);(0,_invariant.default)(m.$MapData,"m has a [[MapData]] internal slot");let entries=m.$MapData;(0,_invariant.default)(entries);while(index<entries.length){let e=entries[index];index=index+1;O.$MapNextIndex=new _index.NumberValue(realm,index);if(e.$Key!==undefined){(0,_invariant.default)(e.$Value!==undefined);let result;if(itemKind==="key")result=e.$Key;else if(itemKind==="value")result=e.$Value;else{(0,_invariant.default)(itemKind===
"key+value");result=_singletons.Create.CreateArrayFromList(realm,[e.$Key,e.$Value])}return _singletons.Create.CreateIterResultObject(realm,result,false)}}O.$Map=realm.intrinsics.undefined;return _singletons.Create.CreateIterResultObject(realm,realm.intrinsics.undefined,true)});obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,new _index.StringValue(realm,"Map Iterator"),{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});
exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm,obj){obj.defineNativeMethod("next",0,(context)=>{let O=context.throwIfNotConcrete();if(!(O instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not an object");if(!("$IteratedSet"in O)||!("$SetNextIndex"in
O)||!("$SetIterationKind"in O))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"SetIteratorPrototype.next isn't generic");let s=O.$IteratedSet;let index=O.$SetNextIndex;(0,_invariant.default)(typeof index==="number");let itemKind=O.$SetIterationKind;if(!s||s instanceof _index.UndefinedValue)return _singletons.Create.CreateIterResultObject(realm,realm.intrinsics.undefined,true);(0,_invariant.default)(s instanceof _index.ObjectValue);(0,_invariant.default)(s.$SetData,"s has a [[SetData]] internal slot");
let entries=s.$SetData;(0,_invariant.default)(entries);while(index<entries.length){let e=entries[index];index=index+1;O.$SetNextIndex=index;if(e){if(itemKind==="key+value")return _singletons.Create.CreateIterResultObject(realm,_singletons.Create.CreateArrayFromList(realm,[e,e]),false);return _singletons.Create.CreateIterResultObject(realm,e,false)}}O.$IteratedSet=realm.intrinsics.undefined;return _singletons.Create.CreateIterResultObject(realm,realm.intrinsics.undefined,true)});obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag,
new _index.StringValue(realm,"Set Iterator"),{writable:false})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(realm,obj){obj.defineNativeMethod(realm.intrinsics.SymbolIterator,0,(context)=>{return context})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);
var _singletons=__webpack_require__(236);var _generator=__webpack_require__(237);function _default(realm){return new _index.NativeFunctionValue(realm,"Array.prototype.values","values",0,(context)=>{let O=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(O)&&realm.isInPureScope()&&O.$GetOwnProperty("values")===undefined)return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,[O,new _index.StringValue(realm,"values")],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
return _singletons.Create.CreateArrayIterator(realm,O.throwIfNotConcreteObject(),"value")})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _get=__webpack_require__(230);var _call=__webpack_require__(234);var _is=__webpack_require__(229);var _generator=__webpack_require__(237);function _default(realm){return new _index.NativeFunctionValue(realm,
"Array.prototype.toString","toString",0,(context)=>{let array=_singletons.To.ToObject(realm,context);if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(array)&&realm.isInPureScope()&&array.$GetOwnProperty("toString")===undefined)return _index.AbstractValue.createTemporalFromBuildFunction(realm,_index.StringValue,[array,new _index.StringValue(realm,"toString")],(0,_generator.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));let func=(0,_get.Get)(realm,array,"join");if(!(0,
_is.IsCallable)(realm,func))func=realm.intrinsics.ObjectProto_toString;return(0,_call.Call)(realm,func,array)},false)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _is=__webpack_require__(229);var _get=__webpack_require__(230);var _singletons=__webpack_require__(236);function _default(realm){return new _index.NativeFunctionValue(realm,"Object.prototype.toString","toString",0,(context)=>
{if(context instanceof _index.UndefinedValue)return new _index.StringValue(realm,"[object Undefined]");if(context instanceof _index.NullValue)return new _index.StringValue(realm,"[object Null]");let O=_singletons.To.ToObject(realm,context);let builtinTag;let isArray=(0,_is.IsArray)(realm,O);if(isArray)builtinTag="Array";else if(O.$StringData!==undefined)builtinTag="String";else if(O.$ParameterMap!==undefined)builtinTag="Arguments";else if(O.$Call!==undefined)builtinTag="Function";else if(O.$ErrorData!==
undefined)builtinTag="Error";else if(O.$BooleanData!==undefined)builtinTag="Boolean";else if(O.$NumberData!==undefined)builtinTag="Number";else if(O.$DateValue!==undefined)builtinTag="Date";else if(O.$RegExpMatcher!==undefined)builtinTag="RegExp";else builtinTag="Object";let tag=(0,_get.Get)(realm,O,realm.intrinsics.SymbolToStringTag);tag=tag instanceof _index.StringValue?tag.value:builtinTag;return new _index.StringValue(realm,`[object ${tag}]`)},false)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _typedarray=__webpack_require__(390);function _default(realm){return new _index.NativeFunctionValue(realm,"Array.prototype.values","values",0,(context)=>{let O=_singletons.To.ToObject(realm,context);(0,_typedarray.ValidateTypedArray)(realm,O);return _singletons.Create.CreateArrayIterator(realm,O.throwIfNotConcreteObject(),"value")})}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _descriptors=__webpack_require__(268);function _default(realm){let func=new _index.NativeFunctionValue(realm,"(function() { throw new TypeError(); })","",0,(context)=>{throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);});func.setExtensible(false);func.$DefineOwnProperty("length",new _descriptors.PropertyDescriptor({value:realm.intrinsics.zero,writable:false,configurable:false,enumerable:false}));
return func}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _Error=__webpack_require__(424);function _default(realm){return(0,_Error.build)("__IntrospectionError",realm,false)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(realm,obj){obj.defineNativeProperty("name",new _index.StringValue(realm,
"__IntrospectionError"));obj.defineNativeProperty("message",realm.intrinsics.emptyString)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let global=realm.$GlobalObject;global.$DefineOwnProperty("global",new _descriptors.PropertyDescriptor({value:global,
writable:true,enumerable:false,configurable:true}));for(let name of["undefined","NaN","Infinity"])global.$DefineOwnProperty(name,new _descriptors.PropertyDescriptor({value:realm.intrinsics[name],writable:false,enumerable:false,configurable:false}));let typeNames=["String","Object","Function","Array","Number","RegExp","Date","Math","Error","Function","TypeError","RangeError","ReferenceError","SyntaxError","URIError","EvalError","Boolean","DataView","Float32Array","Float64Array","Int8Array","Int16Array",
"Int32Array","Map","Set","WeakMap","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","ArrayBuffer","JSON"];if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))typeNames=typeNames.concat("Symbol","Promise","WeakSet","Proxy","Reflect");for(let name of typeNames)if(realm.intrinsics[name])global.$DefineOwnProperty(name,new _descriptors.PropertyDescriptor({value:realm.intrinsics[name],writable:true,enumerable:false,configurable:true}));else{(0,_invariant.default)(name===
"Symbol"||name==="Promise"||name==="WeakSet"||name==="Proxy"||name==="Reflect");(0,_invariant.default)(realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)||realm.isCompatibleWith("mobile"))}for(let name of["parseFloat","parseInt","console","isNaN","eval","isFinite","encodeURI","decodeURI","encodeURIComponent","decodeURIComponent"])global.$DefineOwnProperty(name,new _descriptors.PropertyDescriptor({value:realm.intrinsics[name],writable:true,enumerable:false,configurable:true}))}},function(module,exports,
__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"ArrayExpression",{enumerable:true,get:function(){return _ArrayExpression.default}});Object.defineProperty(exports,"ArrowFunctionExpression",{enumerable:true,get:function(){return _ArrowFunctionExpression.default}});Object.defineProperty(exports,"AssignmentExpression",{enumerable:true,get:function(){return _AssignmentExpression.default}});Object.defineProperty(exports,"AwaitExpression",{enumerable:true,
get:function(){return _AwaitExpression.default}});Object.defineProperty(exports,"BinaryExpression",{enumerable:true,get:function(){return _BinaryExpression.default}});Object.defineProperty(exports,"BlockStatement",{enumerable:true,get:function(){return _BlockStatement.default}});Object.defineProperty(exports,"BooleanLiteral",{enumerable:true,get:function(){return _BooleanLiteral.default}});Object.defineProperty(exports,"BreakStatement",{enumerable:true,get:function(){return _BreakStatement.default}});
Object.defineProperty(exports,"CallExpression",{enumerable:true,get:function(){return _CallExpression.default}});Object.defineProperty(exports,"CatchClause",{enumerable:true,get:function(){return _CatchClause.default}});Object.defineProperty(exports,"ClassExpression",{enumerable:true,get:function(){return _ClassExpression.default}});Object.defineProperty(exports,"ClassDeclaration",{enumerable:true,get:function(){return _ClassDeclaration.default}});Object.defineProperty(exports,"ConditionalExpression",
{enumerable:true,get:function(){return _ConditionalExpression.default}});Object.defineProperty(exports,"ContinueStatement",{enumerable:true,get:function(){return _ContinueStatement.default}});Object.defineProperty(exports,"Directive",{enumerable:true,get:function(){return _Directive.default}});Object.defineProperty(exports,"DirectiveLiteral",{enumerable:true,get:function(){return _DirectiveLiteral.default}});Object.defineProperty(exports,"DoExpression",{enumerable:true,get:function(){return _DoExpression.default}});
Object.defineProperty(exports,"DoWhileStatement",{enumerable:true,get:function(){return _DoWhileStatement.default}});Object.defineProperty(exports,"EmptyStatement",{enumerable:true,get:function(){return _EmptyStatement.default}});Object.defineProperty(exports,"ExpressionStatement",{enumerable:true,get:function(){return _ExpressionStatement.default}});Object.defineProperty(exports,"File",{enumerable:true,get:function(){return _File.default}});Object.defineProperty(exports,"ForInStatement",{enumerable:true,
get:function(){return _ForInStatement.default}});Object.defineProperty(exports,"ForOfStatement",{enumerable:true,get:function(){return _ForOfStatement.default}});Object.defineProperty(exports,"ForStatement",{enumerable:true,get:function(){return _ForStatement.default}});Object.defineProperty(exports,"FunctionDeclaration",{enumerable:true,get:function(){return _FunctionDeclaration.default}});Object.defineProperty(exports,"FunctionExpression",{enumerable:true,get:function(){return _FunctionExpression.default}});
Object.defineProperty(exports,"Identifier",{enumerable:true,get:function(){return _Identifier.default}});Object.defineProperty(exports,"IfStatement",{enumerable:true,get:function(){return _IfStatement.evaluate}});Object.defineProperty(exports,"LabeledStatement",{enumerable:true,get:function(){return _LabeledStatement.default}});Object.defineProperty(exports,"LogicalExpression",{enumerable:true,get:function(){return _LogicalExpression.default}});Object.defineProperty(exports,"MemberExpression",{enumerable:true,
get:function(){return _MemberExpression.default}});Object.defineProperty(exports,"MetaProperty",{enumerable:true,get:function(){return _MetaProperty.default}});Object.defineProperty(exports,"NewExpression",{enumerable:true,get:function(){return _NewExpression.default}});Object.defineProperty(exports,"NullLiteral",{enumerable:true,get:function(){return _NullLiteral.default}});Object.defineProperty(exports,"NumericLiteral",{enumerable:true,get:function(){return _NumericLiteral.default}});Object.defineProperty(exports,
"ObjectExpression",{enumerable:true,get:function(){return _ObjectExpression.default}});Object.defineProperty(exports,"Program",{enumerable:true,get:function(){return _Program.default}});Object.defineProperty(exports,"RegExpLiteral",{enumerable:true,get:function(){return _RegExpLiteral.default}});Object.defineProperty(exports,"ReturnStatement",{enumerable:true,get:function(){return _ReturnStatement.default}});Object.defineProperty(exports,"SequenceExpression",{enumerable:true,get:function(){return _SequenceExpression.default}});
Object.defineProperty(exports,"StringLiteral",{enumerable:true,get:function(){return _StringLiteral.default}});Object.defineProperty(exports,"SwitchStatement",{enumerable:true,get:function(){return _SwitchStatement.default}});Object.defineProperty(exports,"TaggedTemplateExpression",{enumerable:true,get:function(){return _TaggedTemplateExpression.default}});Object.defineProperty(exports,"TemplateLiteral",{enumerable:true,get:function(){return _TemplateLiteral.default}});Object.defineProperty(exports,
"ThisExpression",{enumerable:true,get:function(){return _ThisExpression.default}});Object.defineProperty(exports,"ThrowStatement",{enumerable:true,get:function(){return _ThrowStatement.default}});Object.defineProperty(exports,"TryStatement",{enumerable:true,get:function(){return _TryStatement.default}});Object.defineProperty(exports,"UnaryExpression",{enumerable:true,get:function(){return _UnaryExpression.default}});Object.defineProperty(exports,"UpdateExpression",{enumerable:true,get:function(){return _UpdateExpression.default}});
Object.defineProperty(exports,"VariableDeclaration",{enumerable:true,get:function(){return _VariableDeclaration.default}});Object.defineProperty(exports,"WhileStatement",{enumerable:true,get:function(){return _WhileStatement.default}});Object.defineProperty(exports,"WithStatement",{enumerable:true,get:function(){return _WithStatement.default}});Object.defineProperty(exports,"YieldExpression",{enumerable:true,get:function(){return _YieldExpression.default}});Object.defineProperty(exports,"JSXElement",
{enumerable:true,get:function(){return _JSXElement.default}});var _ArrayExpression=_interopRequireDefault(__webpack_require__(563));var _ArrowFunctionExpression=_interopRequireDefault(__webpack_require__(564));var _AssignmentExpression=_interopRequireDefault(__webpack_require__(565));var _AwaitExpression=_interopRequireDefault(__webpack_require__(566));var _BinaryExpression=_interopRequireDefault(__webpack_require__(292));var _BlockStatement=_interopRequireDefault(__webpack_require__(567));var _BooleanLiteral=
_interopRequireDefault(__webpack_require__(568));var _BreakStatement=_interopRequireDefault(__webpack_require__(569));var _CallExpression=_interopRequireDefault(__webpack_require__(570));var _CatchClause=_interopRequireDefault(__webpack_require__(572));var _ClassExpression=_interopRequireDefault(__webpack_require__(573));var _ClassDeclaration=_interopRequireDefault(__webpack_require__(574));var _ConditionalExpression=_interopRequireDefault(__webpack_require__(575));var _ContinueStatement=_interopRequireDefault(__webpack_require__(576));
var _Directive=_interopRequireDefault(__webpack_require__(577));var _DirectiveLiteral=_interopRequireDefault(__webpack_require__(578));var _DoExpression=_interopRequireDefault(__webpack_require__(580));var _DoWhileStatement=_interopRequireDefault(__webpack_require__(581));var _EmptyStatement=_interopRequireDefault(__webpack_require__(583));var _ExpressionStatement=_interopRequireDefault(__webpack_require__(584));var _File=_interopRequireDefault(__webpack_require__(585));var _ForInStatement=_interopRequireDefault(__webpack_require__(586));
var _ForOfStatement=_interopRequireDefault(__webpack_require__(582));var _ForStatement=_interopRequireDefault(__webpack_require__(587));var _FunctionDeclaration=_interopRequireDefault(__webpack_require__(588));var _FunctionExpression=_interopRequireDefault(__webpack_require__(589));var _Identifier=_interopRequireDefault(__webpack_require__(590));var _IfStatement=__webpack_require__(591);var _LabeledStatement=_interopRequireDefault(__webpack_require__(592));var _LogicalExpression=_interopRequireDefault(__webpack_require__(593));
var _MemberExpression=_interopRequireDefault(__webpack_require__(594));var _MetaProperty=_interopRequireDefault(__webpack_require__(596));var _NewExpression=_interopRequireDefault(__webpack_require__(597));var _NullLiteral=_interopRequireDefault(__webpack_require__(598));var _NumericLiteral=_interopRequireDefault(__webpack_require__(599));var _ObjectExpression=_interopRequireDefault(__webpack_require__(275));var _Program=_interopRequireDefault(__webpack_require__(600));var _RegExpLiteral=_interopRequireDefault(__webpack_require__(601));
var _ReturnStatement=_interopRequireDefault(__webpack_require__(602));var _SequenceExpression=_interopRequireDefault(__webpack_require__(603));var _StringLiteral=_interopRequireDefault(__webpack_require__(579));var _SwitchStatement=_interopRequireDefault(__webpack_require__(604));var _TaggedTemplateExpression=_interopRequireDefault(__webpack_require__(605));var _TemplateLiteral=_interopRequireDefault(__webpack_require__(606));var _ThisExpression=_interopRequireDefault(__webpack_require__(607));var _ThrowStatement=
_interopRequireDefault(__webpack_require__(608));var _TryStatement=_interopRequireDefault(__webpack_require__(609));var _UnaryExpression=_interopRequireDefault(__webpack_require__(610));var _UpdateExpression=_interopRequireDefault(__webpack_require__(611));var _VariableDeclaration=_interopRequireDefault(__webpack_require__(612));var _WhileStatement=_interopRequireDefault(__webpack_require__(613));var _WithStatement=_interopRequireDefault(__webpack_require__(614));var _YieldExpression=_interopRequireDefault(__webpack_require__(615));
var _JSXElement=_interopRequireDefault(__webpack_require__(616));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));var _iterator=__webpack_require__(272);var _singletons=__webpack_require__(236);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){let array=_singletons.Create.ArrayCreate(realm,0);let elements=ast.elements||[];let len=elements.length;let nextIndex=0;for(let i=0;i<len;i++){let elem=elements[i];if(!elem){nextIndex++;continue}if(elem.type==="SpreadElement"){let spreadRef=env.evaluate(elem.argument,strictCode);let spreadObj=_singletons.Environment.GetValue(realm,spreadRef);let iterator=(0,_index2.GetIterator)(realm,spreadObj);while(true){let next=(0,_iterator.IteratorStep)(realm,
iterator);if(next===false)break;let nextValue=(0,_iterator.IteratorValue)(realm,next);let status=_singletons.Create.CreateDataProperty(realm,array,new _index.StringValue(realm,nextIndex++ +""),nextValue);(0,_invariant.default)(status===true)}}else{let initResult=env.evaluate(elem,strictCode);let initValue=_singletons.Environment.GetValue(realm,initResult);let created=_singletons.Create.CreateDataProperty(realm,array,new _index.StringValue(realm,nextIndex++ +""),initValue);(0,_invariant.default)(created===
true,"expected data property creation")}}_singletons.Properties.Set(realm,array,"length",new _index.NumberValue(realm,nextIndex),false);return array}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _singletons=__webpack_require__(236);var _strict=_interopRequireDefault(__webpack_require__(452));var t=_interopRequireWildcard(__webpack_require__(21));function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;
else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){let ConciseBody=ast.body;if(ConciseBody.type!==
"BlockStatement"){ConciseBody=t.blockStatement([t.returnStatement(ConciseBody)]);ConciseBody.loc=ast.body.loc}let strict=strictCode||(0,_strict.default)(ast.body);let scope=env;let parameters=ast.params;let closure=_singletons.Functions.FunctionCreate(realm,"arrow",parameters,ConciseBody,scope,strict);closure.loc=ast.loc;return closure}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);
var _environment=__webpack_require__(20);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _BinaryExpression=__webpack_require__(292);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){if(!ast.hasOwnProperty("operator")||ast.operator===null)throw Error("Unexpected AST form");let LeftHandSideExpression=ast.left;let AssignmentExpression=
ast.right;let AssignmentOperator=ast.operator;if(AssignmentOperator==="="){if(LeftHandSideExpression.type!=="ObjectPattern"&&LeftHandSideExpression.type!=="ArrayPattern"){let lref=env.evaluate(LeftHandSideExpression,strictCode);let rref=env.evaluate(AssignmentExpression,strictCode);let rval=_singletons.Environment.GetValue(realm,rref);if((0,_index2.IsAnonymousFunctionDefinition)(realm,AssignmentExpression)&&(0,_index2.IsIdentifierRef)(realm,LeftHandSideExpression)){(0,_invariant.default)(rval instanceof
_index.ObjectValue);let hasNameProperty=(0,_index2.HasOwnProperty)(realm,rval,"name");if(!hasNameProperty){(0,_invariant.default)(lref instanceof _environment.Reference);_singletons.Functions.SetFunctionName(realm,rval,_singletons.Environment.GetReferencedName(realm,lref))}}_singletons.Properties.PutValue(realm,lref,rval);return rval}let assignmentPattern=LeftHandSideExpression;let rref=env.evaluate(AssignmentExpression,strictCode);let rval=_singletons.Environment.GetValue(realm,rref);(0,_index2.DestructuringAssignmentEvaluation)(realm,
assignmentPattern,rval,strictCode,env);return rval}let lref=env.evaluate(LeftHandSideExpression,strictCode);let lval=_singletons.Environment.GetValue(realm,lref);let rref=env.evaluate(AssignmentExpression,strictCode);let rval=_singletons.Environment.GetValue(realm,rref);let op=AssignmentOperator.slice(0,-1);let r=_singletons.Environment.GetValue(realm,(0,_BinaryExpression.computeBinary)(realm,op,lval,rval,ast.left.loc,ast.right.loc));_singletons.Properties.PutValue(realm,lref,r);return r}},function(module,
exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _errors=__webpack_require__(3);function _default(ast,strictCode,env,realm){throw new _errors.FatalError("TODO #712: AwaitExpression");}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);function _default(ast,strictCode,env,realm){let oldEnv=
realm.getRunningContext().lexicalEnvironment;let blockEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,oldEnv);_singletons.Environment.BlockDeclarationInstantiation(realm,strictCode,ast.body,blockEnv);realm.getRunningContext().lexicalEnvironment=blockEnv;try{let blockValue;if(ast.directives)for(let directive of ast.directives)blockValue=new _index.StringValue(realm,directive.value.value);return _singletons.Functions.EvaluateStatements(ast.body,blockValue,strictCode,blockEnv,realm)}finally{realm.getRunningContext().lexicalEnvironment=
oldEnv;realm.onDestroyScope(blockEnv)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(ast,strictCode,env,realm){return new _index.BooleanValue(realm,ast.value)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _completions=__webpack_require__(18);function _default(ast,strictCode,env,
realm){throw new _completions.BreakCompletion(realm.intrinsics.empty,ast.loc,ast.label&&ast.label.name);}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _errors=__webpack_require__(3);var _environment=__webpack_require__(20);var _index=__webpack_require__(15);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _index3=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));
var _SuperCall=_interopRequireDefault(__webpack_require__(571));var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){if(ast.callee.type==="Super")return(0,_SuperCall.default)(ast.arguments,strictCode,env,realm);let ref=env.evaluate(ast.callee,strictCode);let previousLoc=realm.setNextExecutionContextLocation(ast.loc);try{return evaluateReference(ref,ast,strictCode,env,realm)}finally{realm.setNextExecutionContextLocation(previousLoc)}}
function getPrimitivePrototypeFromType(realm,value){switch(value.getType()){case _index2.IntegralValue:case _index2.NumberValue:return realm.intrinsics.NumberPrototype;case _index2.StringValue:return realm.intrinsics.StringPrototype;case _index2.BooleanValue:return realm.intrinsics.BooleanPrototype;case _index2.SymbolValue:return realm.intrinsics.SymbolPrototype;default:return undefined}}function evaluateReference(ref,ast,strictCode,env,realm){if(ref instanceof _environment.Reference&&ref.base instanceof
_index2.AbstractValue&&ref.base.mightNotBeObject()&&realm.isInPureScope()){let base=ref.base;if(base.kind==="conditional"){let [condValue,consequentVal,alternateVal]=base.args;(0,_invariant.default)(condValue instanceof _index2.AbstractValue);return evaluateConditionalReferenceBase(ref,condValue,consequentVal,alternateVal,ast,strictCode,env,realm)}else if(base.kind==="||"){let [leftValue,rightValue]=base.args;(0,_invariant.default)(leftValue instanceof _index2.AbstractValue);return evaluateConditionalReferenceBase(ref,
leftValue,leftValue,rightValue,ast,strictCode,env,realm)}else if(base.kind==="&&"){let [leftValue,rightValue]=base.args;(0,_invariant.default)(leftValue instanceof _index2.AbstractValue);return evaluateConditionalReferenceBase(ref,leftValue,rightValue,leftValue,ast,strictCode,env,realm)}let referencedName=ref.referencedName;let prototypeIfPrimitive=getPrimitivePrototypeFromType(realm,base);if(prototypeIfPrimitive!==undefined&&typeof referencedName==="string"){let possibleMethodValue=prototypeIfPrimitive._SafeGetDataPropertyValue(referencedName);
if(possibleMethodValue instanceof _index2.FunctionValue)return EvaluateCall(ref,possibleMethodValue,ast,strictCode,env,realm)}return realm.evaluateWithPossibleThrowCompletion(()=>generateRuntimeCall(ref,base,ast,strictCode,env,realm),_index.TypesDomain.topVal,_index.ValuesDomain.topVal)}let func=_singletons.Environment.GetValue(realm,ref);return EvaluateCall(ref,func,ast,strictCode,env,realm)}function evaluateConditionalReferenceBase(ref,condValue,consequentVal,alternateVal,ast,strictCode,env,realm){return realm.evaluateWithAbstractConditional(condValue,
()=>{return realm.evaluateForEffects(()=>{if((0,_environment.isValidBaseValue)(consequentVal)){let consequentRef=new _environment.Reference(consequentVal,ref.referencedName,ref.strict,ref.thisValue);return evaluateReference(consequentRef,ast,strictCode,env,realm)}return consequentVal},null,"evaluateConditionalReferenceBase consequent")},()=>{return realm.evaluateForEffects(()=>{if((0,_environment.isValidBaseValue)(alternateVal)){let alternateRef=new _environment.Reference(alternateVal,ref.referencedName,
ref.strict,ref.thisValue);return evaluateReference(alternateRef,ast,strictCode,env,realm)}return alternateVal},null,"evaluateConditionalReferenceBase alternate")})}function callBothFunctionsAndJoinTheirEffects(condValue,consequentVal,alternateVal,ast,strictCode,env,realm){return realm.evaluateWithAbstractConditional(condValue,()=>{return realm.evaluateForEffects(()=>EvaluateCall(consequentVal,consequentVal,ast,strictCode,env,realm),null,"callBothFunctionsAndJoinTheirEffects consequent")},()=>{return realm.evaluateForEffects(()=>
EvaluateCall(alternateVal,alternateVal,ast,strictCode,env,realm),null,"callBothFunctionsAndJoinTheirEffects alternate")})}function generateRuntimeCall(ref,func,ast,strictCode,env,realm){let args=[func];let [thisArg,propName]=ref instanceof _environment.Reference?[ref.base,ref.referencedName]:[];if(thisArg instanceof _index2.Value)args=[thisArg];if(propName!==undefined&&typeof propName!=="string")args.push(propName);args=args.concat((0,_index3.ArgumentListEvaluation)(realm,strictCode,env,ast.arguments));
for(let arg of args)if(arg!==func)_singletons.Leak.value(realm,arg,ast.loc);let resultType=(func instanceof _index2.AbstractObjectValue?func.functionResultType:undefined)||_index2.Value;return _index2.AbstractValue.createTemporalFromBuildFunction(realm,resultType,args,(0,_generator.createOperationDescriptor)("CALL_BAILOUT",{propRef:propName,thisArg}))}function tryToEvaluateCallOrLeaveAsAbstract(ref,func,ast,strictCode,env,realm,thisValue,tailCall){(0,_invariant.default)(!realm.instantRender.enabled);
let effects;let savedSuppressDiagnostics=realm.suppressDiagnostics;try{realm.suppressDiagnostics=!(func instanceof _index2.NativeFunctionValue)||func.name!=="__optimize";effects=realm.evaluateForEffects(()=>(0,_index3.EvaluateDirectCall)(realm,strictCode,env,ref,func,thisValue,ast.arguments,tailCall),undefined,"tryToEvaluateCallOrLeaveAsAbstract")}catch(error){if(error instanceof _errors.FatalError){if(func instanceof _index2.NativeFunctionValue&&func.name==="__fatal")throw error;realm.suppressDiagnostics=
savedSuppressDiagnostics;_singletons.Leak.value(realm,func,ast.loc);return realm.evaluateWithPossibleThrowCompletion(()=>generateRuntimeCall(ref,func,ast,strictCode,env,realm),_index.TypesDomain.topVal,_index.ValuesDomain.topVal)}else throw error;}finally{realm.suppressDiagnostics=savedSuppressDiagnostics}realm.applyEffects(effects);return realm.returnOrThrowCompletion(effects.result)}function EvaluateCall(ref,func,ast,strictCode,env,realm){if(func instanceof _index2.AbstractValue){let loc=ast.callee.type===
"MemberExpression"?ast.callee.property.loc:ast.callee.loc;if(func.kind==="conditional"){let [condValue,consequentVal,alternateVal]=func.args;(0,_invariant.default)(condValue instanceof _index2.AbstractValue);if(_index2.Value.isTypeCompatibleWith(consequentVal.getType(),_index2.FunctionValue)||_index2.Value.isTypeCompatibleWith(alternateVal.getType(),_index2.FunctionValue))return callBothFunctionsAndJoinTheirEffects(condValue,consequentVal,alternateVal,ast,strictCode,env,realm)}else if(func.kind===
"||"){let [leftValue,rightValue]=func.args;(0,_invariant.default)(leftValue instanceof _index2.AbstractValue);if(_index2.Value.isTypeCompatibleWith(leftValue.getType(),_index2.FunctionValue)||_index2.Value.isTypeCompatibleWith(rightValue.getType(),_index2.FunctionValue))return callBothFunctionsAndJoinTheirEffects(leftValue,leftValue,rightValue,ast,strictCode,env,realm)}else if(func.kind==="&&"){let [leftValue,rightValue]=func.args;(0,_invariant.default)(leftValue instanceof _index2.AbstractValue);
if(_index2.Value.isTypeCompatibleWith(leftValue.getType(),_index2.FunctionValue)||_index2.Value.isTypeCompatibleWith(rightValue.getType(),_index2.FunctionValue))return callBothFunctionsAndJoinTheirEffects(leftValue,rightValue,leftValue,ast,strictCode,env,realm)}if(!_index2.Value.isTypeCompatibleWith(func.getType(),_index2.FunctionValue)){if(!realm.isInPureScope()){let error=new _errors.CompilerDiagnostic("might not be a function",loc,"PP0005","RecoverableError");if(realm.handleError(error)==="Fail")throw new _errors.FatalError;
}}else;if(realm.isInPureScope())return realm.evaluateWithPossibleThrowCompletion(()=>generateRuntimeCall(ref,func,ast,strictCode,env,realm),_index.TypesDomain.topVal,_index.ValuesDomain.topVal);return generateRuntimeCall(ref,func,ast,strictCode,env,realm)}(0,_invariant.default)(func instanceof _index2.ConcreteValue);if(ref instanceof _environment.Reference&&!_singletons.Environment.IsPropertyReference(realm,ref)&&_singletons.Environment.GetReferencedName(realm,ref)==="eval")if((0,_index3.SameValue)(realm,
func,realm.intrinsics.eval)){let argList=(0,_index3.ArgumentListEvaluation)(realm,strictCode,env,ast.arguments);if(argList.length===0)return realm.intrinsics.undefined;let evalText=argList[0];let strictCaller=strictCode;let evalRealm=realm;if(evalText instanceof _index2.AbstractValue){let loc=ast.arguments[0].loc;let error=new _errors.CompilerDiagnostic("eval argument must be a known value",loc,"PP0006","RecoverableError");if(realm.handleError(error)==="Fail")throw new _errors.FatalError;return generateRuntimeCall(ref,
func,ast,strictCode,env,realm)}return _singletons.Functions.PerformEval(realm,evalText,evalRealm,strictCaller,true)}let thisValue;if(ref instanceof _environment.Reference)if(_singletons.Environment.IsPropertyReference(realm,ref))thisValue=(0,_index3.GetThisValue)(realm,ref);else{let refEnv=_singletons.Environment.GetBase(realm,ref);(0,_invariant.default)(refEnv instanceof _environment.EnvironmentRecord);thisValue=refEnv.WithBaseObject()}else thisValue=realm.intrinsics.undefined;let thisCall=ast;let tailCall=
(0,_index3.IsInTailPosition)(realm,thisCall);if(realm.isInPureScope()&&!realm.instantRender.enabled)return tryToEvaluateCallOrLeaveAsAbstract(ref,func,ast,strictCode,env,realm,thisValue,tailCall);else return(0,_index3.EvaluateDirectCall)(realm,strictCode,env,ref,func,thisValue,ast.arguments,tailCall)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=SuperCall;var _environment=__webpack_require__(20);var _index=__webpack_require__(10);
var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function GetSuperConstructor(realm){let envRec=_singletons.Environment.GetThisEnvironment(realm);(0,_invariant.default)(envRec instanceof _environment.FunctionEnvironmentRecord);let activeFunction=envRec.$FunctionObject;let superConstructor=activeFunction.$GetPrototypeOf();if(!(0,
_index2.IsConstructor)(realm,superConstructor))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"super called outside of constructor");(0,_invariant.default)(superConstructor instanceof _index.ObjectValue);return superConstructor}function SuperCall(Arguments,strictCode,env,realm){let newTarget=(0,_index2.GetNewTarget)(realm);if(newTarget instanceof _index.UndefinedValue)throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError,"newTarget is undefined");let func=GetSuperConstructor(realm);
let argList=(0,_index2.ArgumentListEvaluation)(realm,strictCode,env,Arguments);let result=(0,_index2.Construct)(realm,func,argList,newTarget).throwIfNotConcreteObject();let thisER=_singletons.Environment.GetThisEnvironment(realm);return thisER.BindThisValue(result)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _invariant=_interopRequireDefault(__webpack_require__(9));
var _singletons=__webpack_require__(236);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm,thrownValue){(0,_invariant.default)(thrownValue instanceof _completions.ThrowCompletion,"Metadata isn't a throw completion");let oldEnv=realm.getRunningContext().lexicalEnvironment;let catchEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,oldEnv);let catchEnvRec=catchEnv.environmentRecord;for(let argName of _singletons.Environment.BoundNames(realm,
ast.param))catchEnvRec.CreateMutableBinding(argName,false);realm.getRunningContext().lexicalEnvironment=catchEnv;try{_singletons.Environment.BindingInitialization(realm,ast.param,thrownValue.value,strictCode,catchEnv);let B=catchEnv.evaluate(ast.body,strictCode);(0,_invariant.default)(B instanceof _index.Value);return B}finally{realm.getRunningContext().lexicalEnvironment=oldEnv;realm.onDestroyScope(catchEnv)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",
{value:true});exports.default=_default;var _index=__webpack_require__(232);var _ClassDeclaration=__webpack_require__(574);var _singletons=__webpack_require__(236);function _default(ast,strictCode,env,realm){let className;if(ast.id!=null)className=ast.id.name;let value=(0,_ClassDeclaration.ClassDefinitionEvaluation)(realm,ast,className,strictCode,env);if(className!==undefined){let hasNameProperty=(0,_index.HasOwnProperty)(realm,value,"name");if(!hasNameProperty)_singletons.Functions.SetFunctionName(realm,
value,className)}return value}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ClassDefinitionEvaluation=ClassDefinitionEvaluation;exports.default=_default;var _index=__webpack_require__(10);var _errors=__webpack_require__(3);var _parse=_interopRequireDefault(__webpack_require__(227));var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function EvaluateClassHeritage(realm,ClassHeritage,strictCode){let ref=realm.getRunningContext().lexicalEnvironment.evaluate(ClassHeritage,strictCode);let val=_singletons.Environment.GetValue(realm,ref);if(val instanceof _index.AbstractValue){let error=new _errors.CompilerDiagnostic("unknown super class",ClassHeritage.loc,"PP0009","RecoverableError");if(realm.handleError(error)==="Fail")throw new _errors.FatalError;}if(!(val instanceof _index.ObjectValue))return null;
return val}function ClassDefinitionEvaluation(realm,ast,className,strictCode,env){let lex=env;let classScope=_singletons.Environment.NewDeclarativeEnvironment(realm,lex);let F;try{let classScopeEnvRec=classScope.environmentRecord;if(className!==undefined)classScopeEnvRec.CreateImmutableBinding(className,true);let protoParent;let constructorParent;let ClassHeritage=ast.superClass;if(!ClassHeritage){protoParent=realm.intrinsics.ObjectPrototype;constructorParent=realm.intrinsics.FunctionPrototype}else{realm.getRunningContext().lexicalEnvironment=
classScope;let superclass=null;try{superclass=EvaluateClassHeritage(realm,ClassHeritage,strictCode)}finally{realm.getRunningContext().lexicalEnvironment=lex}if(superclass===null){protoParent=realm.intrinsics.null;constructorParent=realm.intrinsics.FunctionPrototype}else if(!(0,_index2.IsConstructor)(realm,superclass))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"superclass must be a constructor");else{if(superclass instanceof _index.ECMAScriptFunctionValue&&superclass.$FunctionKind===
"generator")throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"superclass cannot be a generator");protoParent=(0,_index2.Get)(realm,superclass,"prototype");if(!(protoParent instanceof _index.ObjectValue||protoParent instanceof _index.NullValue))if(protoParent instanceof _index.AbstractValue){let error=new _errors.CompilerDiagnostic("unknown super class prototype",ClassHeritage.loc,"PP0010","RecoverableError");if(realm.handleError(error)==="Fail")throw new _errors.FatalError;protoParent=
realm.intrinsics.ObjectPrototype}else throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"protoParent must be an instance of Object or Null");constructorParent=superclass}}let proto=_singletons.Create.ObjectCreate(realm,protoParent);proto.$IsClassPrototype=true;let constructor;let emptyConstructor=false;let ClassBody=[];for(let elem of ast.body.body)if(elem.type==="ClassMethod")ClassBody.push(elem);if(ClassBody.length===0){emptyConstructor=true;constructor=realm.intrinsics.empty}else constructor=
(0,_index2.ConstructorMethod)(realm,ClassBody);if(constructor instanceof _index.EmptyValue){emptyConstructor=true;let constructorFile;if(ast.superClass)constructorFile=(0,_parse.default)(realm,"class NeedClassForParsing { constructor(... args){ super (...args);} }","");else constructorFile=(0,_parse.default)(realm,"class NeedClassForParsing { constructor( ){ } }","");let {program:{body:[classDeclaration]}}=constructorFile;(0,_invariant.default)(classDeclaration.type==="ClassDeclaration");let {body}=
classDeclaration;(0,_invariant.default)(body.body[0].type==="ClassMethod");constructor=body.body[0]}realm.getRunningContext().lexicalEnvironment=classScope;try{let constructorInfo=_singletons.Functions.DefineMethod(realm,constructor,proto,env,strictCode,constructorParent);F=constructorInfo.$Closure;F.$HasEmptyConstructor=emptyConstructor;if(ast.superClass)F.$ConstructorKind="derived";(0,_index2.MakeConstructor)(realm,F,false,proto);(0,_index2.MakeClassConstructor)(realm,F);_singletons.Create.CreateMethodProperty(realm,
proto,"constructor",F);let methods;if(ClassBody.length===0)methods=[];else methods=(0,_index2.NonConstructorMethodDefinitions)(realm,ClassBody);for(let m of methods)if(!(0,_index2.IsStatic)(m))_singletons.Properties.PropertyDefinitionEvaluation(realm,m,proto,env,strictCode,false);else _singletons.Properties.PropertyDefinitionEvaluation(realm,m,F,env,strictCode,false)}finally{realm.getRunningContext().lexicalEnvironment=lex}if(className!==undefined)classScopeEnvRec.InitializeBinding(className,F)}finally{realm.onDestroyScope(classScope)}return F}
function BindingClassDeclarationEvaluation(realm,ast,strictCode,env){if(ast.id){let className=ast.id.name;let value=ClassDefinitionEvaluation(realm,ast,className,strictCode,env);let hasNameProperty=(0,_index2.HasOwnProperty)(realm,value,"name");if(hasNameProperty===false)_singletons.Functions.SetFunctionName(realm,value,className);_singletons.Environment.InitializeBoundName(realm,className,value,env);return value}else return ClassDefinitionEvaluation(realm,ast,undefined,strictCode,env)}function _default(ast,
strictCode,env,realm){BindingClassDeclarationEvaluation(realm,ast,strictCode,env);return realm.intrinsics.empty}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _realm=__webpack_require__(7);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,
strictCode,env,realm){let exprRef=env.evaluate(ast.test,strictCode);let exprValue=_singletons.Environment.GetConditionValue(realm,exprRef);if(exprValue instanceof _index.ConcreteValue)if(_singletons.To.ToBoolean(realm,exprValue))return env.evaluate(ast.consequent,strictCode);else return env.evaluate(ast.alternate,strictCode);(0,_invariant.default)(exprValue instanceof _index.AbstractValue);const consequent=ast.consequent;const alternate=ast.alternate;if(!exprValue.mightNotBeTrue())return env.evaluate(consequent,
strictCode);if(!exprValue.mightNotBeFalse())return env.evaluate(alternate,strictCode);return realm.evaluateWithAbstractConditional(exprValue,()=>realm.evaluateNodeForEffects(consequent,strictCode,env),()=>alternate?realm.evaluateNodeForEffects(alternate,strictCode,env):(0,_realm.construct_empty_effects)(realm))}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _completions=__webpack_require__(18);function _default(ast,
strictCode,env,realm){throw new _completions.ContinueCompletion(realm.intrinsics.empty,ast.loc,ast.label&&ast.label.name);}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){let r=env.evaluate(ast.value,
strictCode);(0,_invariant.default)(r instanceof _index.Value);return r}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _StringLiteral.default}});var _StringLiteral=_interopRequireDefault(__webpack_require__(579));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(ast,strictCode,env,realm){return new _index.StringValue(realm,ast.value)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _BlockStatement.default}});var _BlockStatement=_interopRequireDefault(__webpack_require__(567));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _errors=__webpack_require__(3);var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _ForOfStatement=__webpack_require__(582);var _completions=__webpack_require__(18);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm,labelSet){let {body,test}=ast;let V=realm.intrinsics.undefined;let resultOrDiagnostic=realm.evaluateWithUndoForDiagnostic(()=>{while(true){let stmt=env.evaluateCompletion(body,strictCode);(0,_invariant.default)(stmt instanceof _index.Value||stmt instanceof _completions.AbruptCompletion);if((0,_ForOfStatement.LoopContinues)(realm,stmt,labelSet)===false){(0,_invariant.default)(stmt instanceof _completions.AbruptCompletion);
if(stmt instanceof _completions.BreakCompletion)if(!stmt.target)return(0,_index2.UpdateEmpty)(realm,stmt,V).value;throw(0,_index2.UpdateEmpty)(realm,stmt,V);}let resultValue=(0,_ForOfStatement.InternalGetResultValue)(realm,stmt);if(!(resultValue instanceof _index.EmptyValue))V=resultValue;let exprRef=env.evaluate(test,strictCode);let exprValue=_singletons.Environment.GetConditionValue(realm,exprRef);if(_singletons.To.ToBooleanPartial(realm,exprValue)===false)return V}(0,_invariant.default)(false)});
if(resultOrDiagnostic instanceof _index.Value)return resultOrDiagnostic;let iteration=()=>{let bodyResult=env.evaluateCompletion(body,strictCode);if(bodyResult instanceof _index.Value)bodyResult=new _completions.SimpleNormalCompletion(bodyResult);let exprRef=env.evaluate(test,strictCode);let testResult=_singletons.Environment.GetConditionValue(realm,exprRef);return[testResult,bodyResult]};let result=realm.evaluateForFixpointEffects(iteration);if(result!==undefined){let [outsideEffects,insideEffects,
cond]=result;let rval=outsideEffects.result;let bodyGenerator=insideEffects.generator;realm.applyEffects(outsideEffects);let generator=realm.generator;(0,_invariant.default)(generator!==undefined);generator.emitDoWhileStatement(cond,bodyGenerator);(0,_invariant.default)(rval instanceof _completions.SimpleNormalCompletion,"todo: handle loops that throw exceptions or return");return rval.value}realm.handleError(resultOrDiagnostic);throw new _errors.FatalError;}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.InternalGetResultValue=InternalGetResultValue;exports.LoopContinues=LoopContinues;exports.ForInOfHeadEvaluation=ForInOfHeadEvaluation;exports.ForInOfBodyEvaluation=ForInOfBodyEvaluation;exports.default=_default;var _errors=__webpack_require__(3);var _environment=__webpack_require__(20);var _completions=__webpack_require__(18);var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var _index2=__webpack_require__(232);var _singletons=
__webpack_require__(236);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function InternalGetResultValue(realm,result){if(result instanceof _completions.Completion)return result.value;else return result}function LoopContinues(realm,completion,labelSet){if(completion instanceof _index.Value||completion instanceof _completions.NormalCompletion)return true;if(completion instanceof _completions.JoinedAbruptCompletions)return LoopContinues(realm,completion.consequent,
labelSet)||LoopContinues(realm,completion.alternate,labelSet);if(!(completion instanceof _completions.ContinueCompletion))return false;if(!completion.target)return true;if(labelSet!=null&&labelSet.indexOf(completion.target)>=0)return true;return false}function BindingInstantiation(realm,ast,env){let envRec=env.environmentRecord;(0,_invariant.default)(envRec instanceof _environment.DeclarativeEnvironmentRecord);for(let name of _singletons.Environment.BoundNames(realm,ast))if(ast.kind==="const")envRec.CreateImmutableBinding(name,
true);else envRec.CreateMutableBinding(name,false)}function ForInOfHeadEvaluation(realm,env,TDZnames,expr,iterationKind,strictCode){let oldEnv=realm.getRunningContext().lexicalEnvironment;if(TDZnames.length){let TDZ=_singletons.Environment.NewDeclarativeEnvironment(realm,oldEnv);let TDZEnvRec=TDZ.environmentRecord;for(let name of TDZnames)TDZEnvRec.CreateMutableBinding(name,false);realm.getRunningContext().lexicalEnvironment=TDZ;env=TDZ}let exprRef;try{exprRef=env.evaluate(expr,strictCode)}finally{let lexEnv=
realm.getRunningContext().lexicalEnvironment;if(lexEnv!==oldEnv)realm.onDestroyScope(lexEnv);realm.getRunningContext().lexicalEnvironment=oldEnv}env=oldEnv;let exprValue=_singletons.Environment.GetValue(realm,exprRef);if(iterationKind==="enumerate"){if(exprValue instanceof _index.NullValue||exprValue instanceof _index.UndefinedValue)throw new _completions.BreakCompletion(realm.intrinsics.empty,expr.loc,null);let obj=_singletons.To.ToObject(realm,exprValue);if(obj.isPartialObject()||obj instanceof
_index.AbstractObjectValue)return obj;else return _singletons.Properties.EnumerateObjectProperties(realm,obj)}else{(0,_invariant.default)(iterationKind==="iterate","expected iterationKind to be iterate");if(exprValue instanceof _index.AbstractValue){let error=new _errors.CompilerDiagnostic("for of loops over unknown collections are not yet supported",expr.loc,"PP0014","FatalError");realm.handleError(error);throw new _errors.FatalError;}return(0,_index2.GetIterator)(realm,exprValue)}}function ForInOfBodyEvaluation(realm,
env,lhs,stmt,iterator,lhsKind,labelSet,strictCode){let oldEnv=realm.getRunningContext().lexicalEnvironment;let V=realm.intrinsics.undefined;let destructuring=_singletons.Environment.IsDestructuring(lhs);if(destructuring&&lhsKind==="assignment")(0,_invariant.default)(lhs.type!=="VariableDeclaration");while(true){let nextResult=(0,_index2.IteratorStep)(realm,iterator);if(!nextResult)return V;let nextValue=(0,_index2.IteratorValue)(realm,nextResult);let iterationEnv;let lhsRef;if(lhsKind==="assignment"||
lhsKind==="varBinding"){if(!destructuring)lhsRef=env.evaluateCompletion(lhs,strictCode)}else{(0,_invariant.default)(lhsKind==="lexicalBinding","expected lhsKind to be lexicalBinding");(0,_invariant.default)(lhs.type==="VariableDeclaration");iterationEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,oldEnv);BindingInstantiation(realm,lhs,iterationEnv);realm.getRunningContext().lexicalEnvironment=iterationEnv;env=iterationEnv;if(!destructuring){let names=_singletons.Environment.BoundNames(realm,
lhs);(0,_invariant.default)(names.length===1,"expected single name");let lhsName=names[0];lhsRef=_singletons.Environment.ResolveBinding(realm,lhsName,strictCode)}}let status;try{if(!destructuring)if(lhsRef instanceof _completions.AbruptCompletion)status=lhsRef;else if(lhsKind==="lexicalBinding"){(0,_invariant.default)(lhsRef instanceof _environment.Reference);status=_singletons.Environment.InitializeReferencedBinding(realm,lhsRef,nextValue)}else{(0,_invariant.default)(lhsRef!==undefined);status=_singletons.Properties.PutValue(realm,
lhsRef,nextValue)}else if(lhsKind==="assignment"){(0,_invariant.default)(lhs.type==="ArrayPattern"||lhs.type==="ObjectPattern");status=(0,_index2.DestructuringAssignmentEvaluation)(realm,lhs,nextValue,strictCode,iterationEnv||env)}else if(lhsKind==="varBinding")status=_singletons.Environment.BindingInitialization(realm,lhs,nextValue,strictCode,undefined);else{(0,_invariant.default)(lhsKind==="lexicalBinding");(0,_invariant.default)(iterationEnv!==undefined);status=_singletons.Environment.BindingInitialization(realm,
lhs,nextValue,strictCode,iterationEnv)}}catch(e){if(e instanceof _completions.AbruptCompletion)status=e;else throw e;}if(status instanceof _completions.AbruptCompletion){realm.getRunningContext().lexicalEnvironment=oldEnv;throw(0,_index2.IteratorClose)(realm,iterator,status);}let result=env.evaluateCompletion(stmt,strictCode);(0,_invariant.default)(result instanceof _index.Value||result instanceof _completions.AbruptCompletion);let lexEnv=realm.getRunningContext().lexicalEnvironment;if(lexEnv!==oldEnv)realm.onDestroyScope(lexEnv);
realm.getRunningContext().lexicalEnvironment=oldEnv;env=oldEnv;if(!LoopContinues(realm,result,labelSet)){(0,_invariant.default)(result instanceof _completions.AbruptCompletion);result=(0,_index2.UpdateEmpty)(realm,result,V);(0,_invariant.default)(result instanceof _completions.AbruptCompletion);throw(0,_index2.IteratorClose)(realm,iterator,result);}let resultValue=InternalGetResultValue(realm,result);if(!(resultValue instanceof _index.EmptyValue))V=resultValue}(0,_invariant.default)(false)}function _default(ast,
strictCode,env,realm,labelSet){let {left,right,body}=ast;try{if(left.type==="VariableDeclaration")if(left.kind==="var"){let keyResult=ForInOfHeadEvaluation(realm,env,[],right,"iterate",strictCode);(0,_invariant.default)(keyResult instanceof _index.ObjectValue);return ForInOfBodyEvaluation(realm,env,left.declarations[0].id,body,keyResult,"varBinding",labelSet,strictCode)}else{let keyResult=ForInOfHeadEvaluation(realm,env,_singletons.Environment.BoundNames(realm,left),right,"iterate",strictCode);(0,
_invariant.default)(keyResult instanceof _index.ObjectValue);return ForInOfBodyEvaluation(realm,env,left,body,keyResult,"lexicalBinding",labelSet,strictCode)}else{let keyResult=ForInOfHeadEvaluation(realm,env,[],right,"iterate",strictCode);(0,_invariant.default)(keyResult instanceof _index.ObjectValue);return ForInOfBodyEvaluation(realm,env,left,body,keyResult,"assignment",labelSet,strictCode)}}catch(e){if(e instanceof _completions.BreakCompletion)if(!e.target)return(0,_index2.UpdateEmpty)(realm,
e,realm.intrinsics.undefined).value;throw e;}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;function _default(ast,strictCode,env,realm){return realm.intrinsics.empty}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _singletons=__webpack_require__(236);function _default(ast,strictCode,env,realm){let exprRef=env.evaluate(ast.expression,
strictCode);return _singletons.Environment.GetValue(realm,exprRef)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){let r=env.evaluate(ast.program,strictCode);(0,_invariant.default)(r instanceof _index.Value);
return r}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _completions=__webpack_require__(18);var _environment=__webpack_require__(20);var _errors=__webpack_require__(3);var _ForOfStatement=__webpack_require__(582);var _index=__webpack_require__(232);var _singletons=__webpack_require__(236);var _index2=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));var t=_interopRequireWildcard(__webpack_require__(21));
function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function reportError(realm,
loc){let error=new _errors.CompilerDiagnostic("for in loops over unknown objects are not yet supported",loc,"PP0013","FatalError");realm.handleError(error);throw new _errors.FatalError;}function _default(ast,strictCode,env,realm,labelSet){let {left,right,body}=ast;function reportErrorAndThrowIfNotConcrete(val,loc){if(val instanceof _index2.AbstractValue)reportError(realm,loc)}try{if(left.type==="VariableDeclaration")if(left.kind==="var"){let keyResult=(0,_ForOfStatement.ForInOfHeadEvaluation)(realm,
env,[],right,"enumerate",strictCode);if(keyResult.isPartialObject()&&keyResult.isSimpleObject())return emitResidualLoopIfSafe(ast,strictCode,env,realm,left,right,keyResult,body);reportErrorAndThrowIfNotConcrete(keyResult,right.loc);(0,_invariant.default)(keyResult instanceof _index2.ObjectValue);return(0,_ForOfStatement.ForInOfBodyEvaluation)(realm,env,left.declarations[0].id,body,keyResult,"varBinding",labelSet,strictCode)}else{let keyResult=(0,_ForOfStatement.ForInOfHeadEvaluation)(realm,env,_singletons.Environment.BoundNames(realm,
left),right,"enumerate",strictCode);reportErrorAndThrowIfNotConcrete(keyResult,right.loc);(0,_invariant.default)(keyResult instanceof _index2.ObjectValue);return(0,_ForOfStatement.ForInOfBodyEvaluation)(realm,env,left,body,keyResult,"lexicalBinding",labelSet,strictCode)}else{let keyResult=(0,_ForOfStatement.ForInOfHeadEvaluation)(realm,env,[],right,"enumerate",strictCode);reportErrorAndThrowIfNotConcrete(keyResult,right.loc);(0,_invariant.default)(keyResult instanceof _index2.ObjectValue);return(0,
_ForOfStatement.ForInOfBodyEvaluation)(realm,env,left,body,keyResult,"assignment",labelSet,strictCode)}}catch(e){if(e instanceof _completions.BreakCompletion)if(!e.target)return(0,_index.UpdateEmpty)(realm,e,realm.intrinsics.undefined).value;throw e;}}function emitResidualLoopIfSafe(ast,strictCode,env,realm,lh,obexpr,ob,body){(0,_invariant.default)(ob.isSimpleObject());let oldEnv=realm.getRunningContext().lexicalEnvironment;let blockEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,oldEnv);
realm.getRunningContext().lexicalEnvironment=blockEnv;try{let envRec=blockEnv.environmentRecord;(0,_invariant.default)(envRec instanceof _environment.DeclarativeEnvironmentRecord,"expected declarative environment record");let absStr=_index2.AbstractValue.createFromType(realm,_index2.StringValue);let boundName;for(let n of _singletons.Environment.BoundNames(realm,lh)){(0,_invariant.default)(boundName===undefined);boundName=t.identifier(n);envRec.CreateMutableBinding(n,false);envRec.InitializeBinding(n,
absStr)}let {result,generator:gen,modifiedBindings,modifiedProperties,createdObjects}=realm.evaluateNodeForEffects(body,strictCode,blockEnv);if(result instanceof _completions.SimpleNormalCompletion&&gen.empty()&&modifiedBindings.size===0&&modifiedProperties.size===1){(0,_invariant.default)(createdObjects.size===0);let targetObject;let sourceObject;modifiedProperties.forEach((desc,key,map)=>{if(key.object.unknownProperty===key){targetObject=key.object;(0,_invariant.default)(desc!==undefined);let sourceValue=
desc.throwIfNotConcrete(realm).value;if(sourceValue instanceof _index2.AbstractValue){let cond=sourceValue.args[0];(0,_invariant.default)(cond instanceof _index2.AbstractValue&&cond.kind==="template for property name condition");let falseVal=sourceValue.args[2];if(falseVal instanceof _index2.AbstractValue&&falseVal.kind==="template for prototype member expression"){let mem=sourceValue.args[1];while(mem instanceof _index2.AbstractValue){if(mem.kind==="sentinel member expression"&&mem.args[0]instanceof
_index2.ObjectValue&&mem.args[1]===absStr){sourceObject=mem.args[0];break}let condition=mem.args[0];if(condition instanceof _index2.AbstractValue&&condition.kind==="check for known property")if(condition.args[0]===absStr){mem=mem.args[2];continue}break}}}}});if(targetObject instanceof _index2.ObjectValue&&sourceObject!==undefined){let o=ob;if(ob instanceof _index2.AbstractObjectValue&&!ob.values.isTop()&&ob.values.getElements().size===1)for(let oe of ob.values.getElements()){(0,_invariant.default)(oe instanceof
_index2.ObjectValue);o=oe}let generator=realm.generator;(0,_invariant.default)(generator!==undefined);targetObject.makeSimple();targetObject.makePartial();if(sourceObject===o){(0,_invariant.default)(sourceObject.isPartialObject());let keyValPairs=(0,_index.EnumerableOwnProperties)(realm,sourceObject,"key+value",true);for(let keyVal of keyValPairs){(0,_invariant.default)(keyVal instanceof _index2.ArrayValue);let key=keyVal.$Get("0",keyVal);let val=keyVal.$Get("1",keyVal);(0,_invariant.default)(key instanceof
_index2.StringValue);targetObject.$Set(key,val,targetObject)}}(0,_invariant.default)(boundName!=null);generator.emitForInStatement(o,lh,sourceObject,targetObject,boundName);return realm.intrinsics.undefined}}}finally{realm.getRunningContext().lexicalEnvironment=oldEnv;realm.onDestroyScope(blockEnv)}reportError(realm,obexpr.loc);(0,_invariant.default)(false)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.CreatePerIterationEnvironment=
CreatePerIterationEnvironment;exports.default=_default;var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _traverse=_interopRequireDefault(__webpack_require__(293));var _index2=__webpack_require__(15);var _errors=__webpack_require__(3);var _index3=__webpack_require__(232);var _ForOfStatement=__webpack_require__(582);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var t=_interopRequireWildcard(__webpack_require__(21));
var _generator=__webpack_require__(237);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&obj.__esModule?
obj:{default:obj}}function CreatePerIterationEnvironment(realm,perIterationBindings){if(perIterationBindings.length>0){let lastIterationEnv=realm.getRunningContext().lexicalEnvironment;let lastIterationEnvRec=lastIterationEnv.environmentRecord;let outer=lastIterationEnv.parent;(0,_invariant.default)(outer!==null);let thisIterationEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,outer);realm.onDestroyScope(lastIterationEnv);let thisIterationEnvRec=thisIterationEnv.environmentRecord;for(let bn of perIterationBindings){thisIterationEnvRec.CreateMutableBinding(bn,
false);let lastValue=lastIterationEnvRec.GetBindingValue(bn,true);thisIterationEnvRec.InitializeBinding(bn,lastValue)}realm.getRunningContext().lexicalEnvironment=thisIterationEnv}return realm.intrinsics.undefined}function ForBodyEvaluation(realm,test,increment,stmt,perIterationBindings,labelSet,strictCode){let V=realm.intrinsics.undefined;CreatePerIterationEnvironment(realm,perIterationBindings);let env=realm.getRunningContext().lexicalEnvironment;let possibleInfiniteLoopIterations=0;while(true){let result;
if(test){let testRef=env.evaluate(test,strictCode);let testValue=_singletons.Environment.GetValue(realm,testRef);if(!_singletons.To.ToBooleanPartial(realm,testValue)){result=_singletons.Functions.incorporateSavedCompletion(realm,V);if(result instanceof _completions.JoinedNormalAndAbruptCompletions){let selector=(c)=>c instanceof _completions.BreakCompletion&&!c.target;result=_completions.Completion.normalizeSelectedCompletions(selector,result);result=realm.composeWithSavedCompletion(result)}return V}}result=
env.evaluateCompletion(stmt,strictCode);(0,_invariant.default)(result instanceof _index.Value||result instanceof _completions.AbruptCompletion);result=_singletons.Functions.incorporateSavedCompletion(realm,result);(0,_invariant.default)(result!==undefined);if(result instanceof _index.Value)result=new _completions.SimpleNormalCompletion(result);if(!(0,_ForOfStatement.LoopContinues)(realm,result,labelSet)){(0,_invariant.default)(result instanceof _completions.AbruptCompletion);if(result instanceof _completions.BreakCompletion){if(!result.target)return(0,
_index3.UpdateEmpty)(realm,result,V).value}else if(result instanceof _completions.JoinedAbruptCompletions){let selector=(c)=>c instanceof _completions.BreakCompletion&&!c.target;if(result.containsSelectedCompletion(selector))result=_completions.Completion.normalizeSelectedCompletions(selector,result)}return realm.returnOrThrowCompletion(result)}if(result instanceof _completions.JoinedNormalAndAbruptCompletions)result=_completions.Completion.normalizeSelectedCompletions((c)=>c instanceof _completions.ContinueCompletion,
result);(0,_invariant.default)(result instanceof _completions.Completion);result=realm.composeWithSavedCompletion(result);let resultValue=(0,_ForOfStatement.InternalGetResultValue)(realm,result);if(!(resultValue instanceof _index.EmptyValue))V=resultValue;CreatePerIterationEnvironment(realm,perIterationBindings);env=realm.getRunningContext().lexicalEnvironment;if(increment){let incRef=env.evaluate(increment,strictCode);_singletons.Environment.GetValue(realm,incRef)}else if(realm.useAbstractInterpretation){possibleInfiniteLoopIterations++;
if(possibleInfiniteLoopIterations>6)failIfContainsBreakOrReturnOrThrowCompletion(realm.savedCompletion)}}(0,_invariant.default)(false);function failIfContainsBreakOrReturnOrThrowCompletion(c){if(c===undefined)return;if(c instanceof _completions.ThrowCompletion||c instanceof _completions.BreakCompletion||c instanceof _completions.ReturnCompletion){let diagnostic=new _errors.CompilerDiagnostic("break, throw or return cannot be guarded by abstract condition",c.location,"PP0035","FatalError");realm.handleError(diagnostic);
throw new _errors.FatalError;}if(c instanceof _completions.JoinedAbruptCompletions||c instanceof _completions.JoinedNormalAndAbruptCompletions){failIfContainsBreakOrReturnOrThrowCompletion(c.consequent);failIfContainsBreakOrReturnOrThrowCompletion(c.alternate)}}}let BailOutWrapperClosureRefVisitor={ReferencedIdentifier(path,state){if(path.node.name==="arguments")state.usesArguments=true},ThisExpression(path,state){state.usesThis=true},["BreakStatement|ContinueStatement"](path,state){if(path.node.label!==
null)state.usesGotoToLabel=true},ReturnStatement(path,state){state.usesReturn=true},ThrowStatement(path,state){state.usesThrow=true},VariableDeclaration(path,state){let node=path.node;if(node.kind!=="var")return;if(t.isForOfStatement(path.parentPath.node)||t.isForInStatement(path.parentPath.node)){(0,_invariant.default)(node.declarations.length===1);(0,_invariant.default)(node.declarations[0].init==null);const {id}=node.declarations[0];if(!t.isIdentifier(id)){state.varPatternUnsupported=true;return}path.replaceWith(id)}else{let needsExpressionWrapper=
!t.isForStatement(path.parentPath.node);const getConvertedDeclarator=(index)=>{let {id,init}=node.declarations[index];if(t.isIdentifier(id)){if(init===null)init=t.identifier("undefined");return t.assignmentExpression("=",id,init)}else state.varPatternUnsupported=true};if(node.declarations.length===1){let convertedNodeOrUndefined=getConvertedDeclarator(0);if(convertedNodeOrUndefined===undefined)return;path.replaceWith(needsExpressionWrapper?t.expressionStatement(convertedNodeOrUndefined):convertedNodeOrUndefined)}else{let expressions=
[];for(let i=0;i<node.declarations.length;i++){let convertedNodeOrUndefined=getConvertedDeclarator(i);if(convertedNodeOrUndefined===undefined)return;expressions.push(convertedNodeOrUndefined)}let sequenceExpression=t.sequenceExpression(expressions);path.replaceWith(needsExpressionWrapper?t.expressionStatement(sequenceExpression):sequenceExpression)}}}};function generateRuntimeForStatement(ast,strictCode,env,realm,labelSet){let wrapperFunction=new _index.ECMAScriptSourceFunctionValue(realm);let body=
t.cloneDeep(t.blockStatement([ast]));wrapperFunction.initialize([],body);wrapperFunction.$Environment=env;let functionInfo={usesArguments:false,usesThis:false,usesReturn:false,usesGotoToLabel:false,usesThrow:false,varPatternUnsupported:false};(0,_traverse.default)(t.file(t.program([t.expressionStatement(t.functionExpression(null,[],body))])),BailOutWrapperClosureRefVisitor,null,functionInfo);_traverse.default.cache.clear();let {usesReturn,usesThrow,usesArguments,usesGotoToLabel,varPatternUnsupported,
usesThis}=functionInfo;if(usesReturn||usesThrow||usesArguments||usesGotoToLabel||varPatternUnsupported){let diagnostic=new _errors.CompilerDiagnostic(`failed to recover from a for/while loop bail-out due to unsupported logic in loop body`,realm.currentLocation,"PP0037","FatalError");realm.handleError(diagnostic);throw new _errors.FatalError;}let args=[wrapperFunction];if(usesThis){let thisRef=env.evaluate(t.thisExpression(),strictCode);let thisVal=_singletons.Environment.GetValue(realm,thisRef);_singletons.Leak.value(realm,
thisVal);args.push(thisVal)}_singletons.Leak.value(realm,wrapperFunction);let wrapperValue=_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.Value,args,(0,_generator.createOperationDescriptor)("FOR_STATEMENT_FUNC",{usesThis}));(0,_invariant.default)(wrapperValue instanceof _index.AbstractValue);return wrapperValue}function tryToEvaluateForStatementOrLeaveAsAbstract(ast,strictCode,env,realm,labelSet){(0,_invariant.default)(!realm.instantRender.enabled);let effects;let savedSuppressDiagnostics=
realm.suppressDiagnostics;try{realm.suppressDiagnostics=true;effects=realm.evaluateForEffects(()=>evaluateForStatement(ast,strictCode,env,realm,labelSet),undefined,"tryToEvaluateForStatementOrLeaveAsAbstract")}catch(error){if(error instanceof _errors.FatalError){realm.suppressDiagnostics=savedSuppressDiagnostics;return realm.evaluateWithPossibleThrowCompletion(()=>generateRuntimeForStatement(ast,strictCode,env,realm,labelSet),_index2.TypesDomain.topVal,_index2.ValuesDomain.topVal)}else throw error;
}finally{realm.suppressDiagnostics=savedSuppressDiagnostics}realm.applyEffects(effects);return realm.returnOrThrowCompletion(effects.result)}function _default(ast,strictCode,env,realm,labelSet){if(realm.isInPureScope()&&!realm.instantRender.enabled)return tryToEvaluateForStatementOrLeaveAsAbstract(ast,strictCode,env,realm,labelSet);else return evaluateForStatement(ast,strictCode,env,realm,labelSet)}function evaluateForStatement(ast,strictCode,env,realm,labelSet){let {init,test,update,body}=ast;if(init&&
init.type==="VariableDeclaration")if(init.kind==="var"){let varDcl=env.evaluate(init,strictCode);varDcl;return ForBodyEvaluation(realm,test,update,body,[],labelSet,strictCode)}else{let oldEnv=env;let loopEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,oldEnv);let loopEnvRec=loopEnv.environmentRecord;let isConst=init.kind==="const";let boundNames=_singletons.Environment.BoundNames(realm,init);for(let dn of boundNames)if(isConst)loopEnvRec.CreateImmutableBinding(dn,true);else loopEnvRec.CreateMutableBinding(dn,
false);realm.getRunningContext().lexicalEnvironment=loopEnv;let forDcl=loopEnv.evaluateCompletion(init,strictCode);if(forDcl instanceof _completions.AbruptCompletion){let currentEnv=realm.getRunningContext().lexicalEnvironment;realm.onDestroyScope(currentEnv);if(currentEnv!==loopEnv)(0,_invariant.default)(loopEnv.destroyed);realm.getRunningContext().lexicalEnvironment=oldEnv;throw forDcl;}let perIterationLets=!isConst?boundNames:[];let bodyResult;try{bodyResult=ForBodyEvaluation(realm,test,update,
body,perIterationLets,labelSet,strictCode)}finally{let currentEnv=realm.getRunningContext().lexicalEnvironment;realm.onDestroyScope(currentEnv);if(currentEnv!==loopEnv)(0,_invariant.default)(loopEnv.destroyed);realm.getRunningContext().lexicalEnvironment=oldEnv}return bodyResult}else{if(init){let exprRef=env.evaluate(init,strictCode);_singletons.Environment.GetValue(realm,exprRef)}return ForBodyEvaluation(realm,test,update,body,[],labelSet,strictCode)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _construct=__webpack_require__(228);var _singletons=__webpack_require__(236);var _index=__webpack_require__(10);var _strict=_interopRequireDefault(__webpack_require__(452));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){if(ast.generator){let strict=strictCode||(0,_strict.default)(ast.body);let name;if(ast.id)name=new _index.StringValue(realm,
ast.id.name);else name=new _index.StringValue(realm,"default");let F=_singletons.Functions.GeneratorFunctionCreate(realm,"normal",ast.params,ast.body,env,strict);let prototype=_singletons.Create.ObjectCreate(realm,realm.intrinsics.GeneratorPrototype);_singletons.Properties.DefinePropertyOrThrow(realm,F,"prototype",new _descriptors.PropertyDescriptor({value:prototype,writable:true,configurable:false}));_singletons.Functions.SetFunctionName(realm,F,name);return F}else{let strict=strictCode||(0,_strict.default)(ast.body);
let name;if(ast.id)name=new _index.StringValue(realm,ast.id.name);else name=new _index.StringValue(realm,"default");let F=_singletons.Functions.FunctionCreate(realm,"normal",ast.params,ast.body,env,strict);if(ast.id&&ast.id.name)F.__originalName=ast.id.name;(0,_construct.MakeConstructor)(realm,F);_singletons.Functions.SetFunctionName(realm,F,name);return F}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(232);
var _singletons=__webpack_require__(236);var _index2=__webpack_require__(10);var _strict=_interopRequireDefault(__webpack_require__(452));var _invariant=_interopRequireDefault(__webpack_require__(9));var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){if(ast.id)if(ast.generator===true){let strict=strictCode||(0,_strict.default)(ast.body);let scope=env;let funcEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,
scope);let envRec=funcEnv.environmentRecord;(0,_invariant.default)(ast.id);let name=ast.id.name;envRec.CreateImmutableBinding(name,false);let closure=_singletons.Functions.GeneratorFunctionCreate(realm,"normal",ast.params,ast.body,funcEnv,strict);closure.loc=ast.loc;let prototype=_singletons.Create.ObjectCreate(realm,realm.intrinsics.GeneratorPrototype);prototype.originalConstructor=closure;_singletons.Properties.DefinePropertyOrThrow(realm,closure,"prototype",new _descriptors.PropertyDescriptor({value:prototype,
writable:true,enumerable:false,configurable:false}));_singletons.Functions.SetFunctionName(realm,closure,new _index2.StringValue(realm,name));envRec.InitializeBinding(name,closure);return closure}else{let strict=strictCode||(0,_strict.default)(ast.body);let scope=env;let funcEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,scope,false);let envRec=funcEnv.environmentRecord;(0,_invariant.default)(ast.id);let name=ast.id.name;envRec.CreateImmutableBinding(name,false,false,true);let closure=
_singletons.Functions.FunctionCreate(realm,"normal",ast.params,ast.body,funcEnv,strict);closure.loc=ast.loc;(0,_index.MakeConstructor)(realm,closure);_singletons.Functions.SetFunctionName(realm,closure,new _index2.StringValue(realm,name));envRec.InitializeBinding(name,closure,true);return closure}else if(ast.generator===true){let strict=strictCode||(0,_strict.default)(ast.body);let scope=env;let closure=_singletons.Functions.GeneratorFunctionCreate(realm,"normal",ast.params,ast.body,scope,strict);
let prototype=_singletons.Create.ObjectCreate(realm,realm.intrinsics.GeneratorPrototype);prototype.originalConstructor=closure;_singletons.Properties.DefinePropertyOrThrow(realm,closure,"prototype",new _descriptors.PropertyDescriptor({value:prototype,writable:true,enumerable:false,configurable:false}));return closure}else{let strict=strictCode||(0,_strict.default)(ast.body);let scope=env;let closure=_singletons.Functions.FunctionCreate(realm,"normal",ast.params,ast.body,scope,strict);closure.loc=
ast.loc;(0,_index.MakeConstructor)(realm,closure);return closure}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _singletons=__webpack_require__(236);function _default(ast,strictCode,env,realm){return _singletons.Environment.ResolveBinding(realm,ast.name,strictCode,env)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.evaluate=evaluate;var _completions=
__webpack_require__(18);var _realm=__webpack_require__(7);var _index=__webpack_require__(10);var _environment=__webpack_require__(20);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));var _singletons=__webpack_require__(236);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function evaluate(ast,strictCode,env,realm){let exprRef=env.evaluate(ast.test,strictCode);let exprValue=_singletons.Environment.GetConditionValue(realm,
exprRef);if(exprValue instanceof _index.ConcreteValue){let stmtCompletion;if(_singletons.To.ToBoolean(realm,exprValue))stmtCompletion=env.evaluateCompletion(ast.consequent,strictCode);else if(ast.alternate)stmtCompletion=env.evaluateCompletion(ast.alternate,strictCode);else stmtCompletion=realm.intrinsics.undefined;(0,_invariant.default)(!(stmtCompletion instanceof _environment.Reference));stmtCompletion=(0,_index2.UpdateEmpty)(realm,stmtCompletion,realm.intrinsics.undefined);if(stmtCompletion instanceof
_completions.AbruptCompletion)throw stmtCompletion;(0,_invariant.default)(stmtCompletion instanceof _index.Value);return stmtCompletion}(0,_invariant.default)(exprValue instanceof _index.AbstractValue);if(!exprValue.mightNotBeTrue()){let stmtCompletion=env.evaluate(ast.consequent,strictCode);(0,_invariant.default)(!(stmtCompletion instanceof _environment.Reference));stmtCompletion=(0,_index2.UpdateEmpty)(realm,stmtCompletion,realm.intrinsics.undefined);if(stmtCompletion instanceof _completions.AbruptCompletion)throw stmtCompletion;
(0,_invariant.default)(stmtCompletion instanceof _index.Value);return stmtCompletion}else if(!exprValue.mightNotBeFalse()){let stmtCompletion;if(ast.alternate)stmtCompletion=env.evaluate(ast.alternate,strictCode);else stmtCompletion=realm.intrinsics.undefined;(0,_invariant.default)(!(stmtCompletion instanceof _environment.Reference));stmtCompletion=(0,_index2.UpdateEmpty)(realm,stmtCompletion,realm.intrinsics.undefined);if(stmtCompletion instanceof _completions.AbruptCompletion)throw stmtCompletion;
(0,_invariant.default)(stmtCompletion instanceof _index.Value);return stmtCompletion}else{(0,_invariant.default)(exprValue instanceof _index.AbstractValue);return realm.evaluateWithAbstractConditional(exprValue,()=>realm.evaluateNodeForEffects(ast.consequent,strictCode,env),()=>ast.alternate?realm.evaluateNodeForEffects(ast.alternate,strictCode,env):(0,_realm.construct_empty_effects)(realm))}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=
_default;var _index=__webpack_require__(10);var _completions=__webpack_require__(18);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function LabelledEvaluation(labelSet,ast,strictCode,env,realm){switch(ast.type){case "LabeledStatement":let labeledAst=ast;let label=labeledAst.label.name;labelSet.push(label);let normalCompletionStmtResult;try{normalCompletionStmtResult=LabelledEvaluation(labelSet,labeledAst.body,
strictCode,env,realm)}catch(stmtResult){if(stmtResult instanceof _completions.BreakCompletion&&stmtResult.target===label)normalCompletionStmtResult=stmtResult.value;else if(stmtResult instanceof _completions.JoinedAbruptCompletions||stmtResult instanceof _completions.JoinedNormalAndAbruptCompletions){let nc=_completions.Completion.normalizeSelectedCompletions((c)=>c instanceof _completions.BreakCompletion&&c.target===label,stmtResult);return realm.returnOrThrowCompletion(nc)}else throw stmtResult;
}return normalCompletionStmtResult;case "VariableDeclaration":if(ast.kind==="var"){let r=env.evaluate(ast,strictCode);(0,_invariant.default)(r instanceof _index.Value);return r}case "FunctionDeclaration":case "ClassDeclaration":throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,ast.type+" may not have a label");default:let r=env.evaluate(ast,strictCode,labelSet);(0,_invariant.default)(r instanceof _index.Value);return r}}function _default(ast,strictCode,env,realm){let newLabelSet=
[];return LabelledEvaluation(newLabelSet,ast,strictCode,env,realm)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _realm=__webpack_require__(7);var _completions=__webpack_require__(18);var _errors=__webpack_require__(3);var _index=__webpack_require__(10);var _environment=__webpack_require__(20);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){let lref=env.evaluate(ast.left,strictCode);let lval=_singletons.Environment.GetValue(realm,lref);if(lval instanceof _index.ConcreteValue){let lbool=_singletons.To.ToBoolean(realm,lval);if(ast.operator==="&&"){if(lbool===false)return lval}else{(0,_invariant.default)(ast.operator==="||");if(lbool===true)return lval}let rref=env.evaluate(ast.right,strictCode);return _singletons.Environment.GetValue(realm,rref)}(0,_invariant.default)(lval instanceof
_index.AbstractValue);let lcond=_singletons.Environment.GetConditionValue(realm,lref);if(!lcond.mightNotBeFalse())return ast.operator==="||"?env.evaluate(ast.right,strictCode):lval;if(!lcond.mightNotBeTrue())return ast.operator==="&&"?env.evaluate(ast.right,strictCode):lval;(0,_invariant.default)(lcond instanceof _index.AbstractValue);let {result:result1,generator:generator1,modifiedBindings:modifiedBindings1,modifiedProperties:modifiedProperties1,createdObjects:createdObjects1}=(0,_realm.construct_empty_effects)(realm);
result1;let result2,generator2,modifiedBindings2,modifiedProperties2,createdObjects2;try{let wrapper=ast.operator==="&&"?_singletons.Path.withCondition:_singletons.Path.withInverseCondition;({result:result2,generator:generator2,modifiedBindings:modifiedBindings2,modifiedProperties:modifiedProperties2,createdObjects:createdObjects2}=wrapper(lcond,()=>realm.evaluateNodeForEffects(ast.right,strictCode,env)))}catch(e){if(e instanceof _errors.InfeasiblePathError)return lval;throw e;}let joinedEffects;
if(ast.operator==="&&")joinedEffects=_singletons.Join.joinEffects(lcond,new _realm.Effects(result2,generator2,modifiedBindings2,modifiedProperties2,createdObjects2),new _realm.Effects(new _completions.SimpleNormalCompletion(lval),generator1,modifiedBindings1,modifiedProperties1,createdObjects1));else joinedEffects=_singletons.Join.joinEffects(lcond,new _realm.Effects(new _completions.SimpleNormalCompletion(lval),generator1,modifiedBindings1,modifiedProperties1,createdObjects1),new _realm.Effects(result2,
generator2,modifiedBindings2,modifiedProperties2,createdObjects2));realm.applyEffects(joinedEffects);let completion=realm.returnOrThrowCompletion(joinedEffects.result);if(lval instanceof _index.Value&&result2.value instanceof _index.Value)completion=_index.AbstractValue.createFromLogicalOp(realm,ast.operator,lval,result2.value,ast.loc);return completion}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _environment=
__webpack_require__(20);var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _SuperProperty=_interopRequireDefault(__webpack_require__(595));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){if(ast.object.type==="Super")return(0,_SuperProperty.default)(ast,strictCode,env,realm);let baseReference=env.evaluate(ast.object,strictCode);let baseValue=_singletons.Environment.GetValue(realm,
baseReference);let propertyNameValue;if(ast.computed===true){let propertyNameReference=env.evaluate(ast.property,strictCode);propertyNameValue=_singletons.Environment.GetValue(realm,propertyNameReference)}else propertyNameValue=new _index.StringValue(realm,ast.property.name);let bv=(0,_index2.RequireObjectCoercible)(realm,baseValue,ast.object.loc);let propertyKey=_singletons.To.ToPropertyKeyPartial(realm,propertyNameValue);let strict=strictCode;return new _environment.Reference(bv,propertyKey,strict)}
},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=SuperProperty;var _environment=__webpack_require__(20);var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function MakeSuperPropertyReference(realm,propertyKey,strict){let env=
_singletons.Environment.GetThisEnvironment(realm);(0,_invariant.default)(env instanceof _environment.FunctionEnvironmentRecord);if(!env.HasSuperBinding())throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError,"env does not have super binding");let actualThis=env.GetThisBinding();let baseValue=env.GetSuperBase();let bv=(0,_index2.RequireObjectCoercible)(realm,baseValue);return new _environment.Reference(bv,propertyKey,strict,actualThis)}function SuperProperty(ast,strictCode,env,realm){if(ast.computed===
true){let propertyNameReference=env.evaluate(ast.property,strictCode);let propertyNameValue=_singletons.Environment.GetValue(realm,propertyNameReference);let propertyKey=_singletons.To.ToPropertyKeyPartial(realm,propertyNameValue);let strict=strictCode;return MakeSuperPropertyReference(realm,propertyKey,strict)}else{let propertyKey=new _index.StringValue(realm,ast.property.name);let strict=strictCode;return MakeSuperPropertyReference(realm,propertyKey,strict)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _get=__webpack_require__(230);function _default(ast,strictCode,env,realm){return(0,_get.GetNewTarget)(realm)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(15);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _index3=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));
var _errors=__webpack_require__(3);var _types=__webpack_require__(21);var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){let constructProduction=ast.callee;let args=ast.arguments;let ref=env.evaluate(constructProduction,strictCode);let constructor=_singletons.Environment.GetValue(realm,ref);let argsList;if(!args.length)argsList=[];else argsList=(0,_index3.ArgumentListEvaluation)(realm,
strictCode,env,args);let previousLoc=realm.setNextExecutionContextLocation(ast.loc);try{if(realm.isInPureScope())return tryToEvaluateConstructOrLeaveAsAbstract(constructor,argsList,strictCode,realm);else return createConstruct(constructor,argsList,realm)}finally{realm.setNextExecutionContextLocation(previousLoc)}}function tryToEvaluateConstructOrLeaveAsAbstract(constructor,argsList,strictCode,realm){let effects;try{effects=realm.evaluateForEffects(()=>createConstruct(constructor,argsList,realm),undefined,
"tryToEvaluateConstructOrLeaveAsAbstract")}catch(error){if(error instanceof _errors.FatalError){_singletons.Leak.value(realm,constructor);for(let arg of argsList)_singletons.Leak.value(realm,arg);let abstractValue=realm.evaluateWithPossibleThrowCompletion(()=>_index2.AbstractValue.createTemporalFromBuildFunction(realm,_index2.ObjectValue,[constructor,...argsList],(0,_generator.createOperationDescriptor)("NEW_EXPRESSION")),_index.TypesDomain.topVal,_index.ValuesDomain.topVal);(0,_invariant.default)(abstractValue instanceof
_index2.AbstractObjectValue);return abstractValue}else throw error;}realm.applyEffects(effects);let completion=realm.returnOrThrowCompletion(effects.result);(0,_invariant.default)(completion instanceof _index2.ObjectValue||completion instanceof _index2.AbstractObjectValue);return completion}function createConstruct(constructor,argsList,realm){if((0,_index3.IsConstructor)(realm,constructor)===false)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);(0,_invariant.default)(constructor instanceof
_index2.ObjectValue);return(0,_index3.Construct)(realm,constructor,argsList)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;function _default(ast,strictCode,env,realm){return realm.intrinsics.null}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);function _default(ast,strictCode,env,realm){return _index.IntegralValue.createFromNumberValue(realm,
ast.value)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.GlobalDeclarationInstantiation=GlobalDeclarationInstantiation;exports.default=_default;var _completions=__webpack_require__(18);var _index=__webpack_require__(10);var _environment=__webpack_require__(20);var _singletons=__webpack_require__(236);var _strict=_interopRequireDefault(__webpack_require__(452));var _invariant=_interopRequireDefault(__webpack_require__(9));var _traverseFast=
_interopRequireDefault(__webpack_require__(279));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function GlobalDeclarationInstantiation(realm,ast,env,strictCode){realm.getRunningContext().isStrict=realm.isStrict=strictCode;let envRec=env.environmentRecord;(0,_invariant.default)(envRec instanceof _environment.GlobalEnvironmentRecord,"expected global environment record");let lexNames=[];let varNames=[];(0,_traverseFast.default)(ast,(node)=>{if(node.type==="VariableDeclaration")if(node.kind===
"var")varNames=varNames.concat(_singletons.Environment.BoundNames(realm,node));else lexNames=lexNames.concat(_singletons.Environment.BoundNames(realm,node));else if(node.type==="FunctionExpression"||node.type==="FunctionDeclaration")return true;return false});for(let name of lexNames){if(envRec.HasVarDeclaration(name))throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,name+" already declared with var");if(envRec.HasLexicalDeclaration(name))throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,
name+" already declared with let or const");let hasRestrictedGlobal=envRec.HasRestrictedGlobalProperty(name);if(hasRestrictedGlobal)throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,name+" global object is restricted");}for(let name of varNames)if(envRec.HasLexicalDeclaration(name))throw realm.createErrorThrowCompletion(realm.intrinsics.SyntaxError,name+" already declared with let or const");let varDeclarations=_singletons.Functions.FindVarScopedDeclarations(ast);let functionsToInitialize=
[];let declaredFunctionNames=[];for(let d of varDeclarations.reverse())if(d.type!=="VariableDeclaration"){(0,_invariant.default)(d.type==="FunctionDeclaration","expected function");let fn=_singletons.Environment.BoundNames(realm,d)[0];if(declaredFunctionNames.indexOf(fn)<0){let fnDefinable=envRec.CanDeclareGlobalFunction(fn);if(!fnDefinable)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,fn+": global function declarations are not allowed");declaredFunctionNames.push(fn);functionsToInitialize.unshift(d)}}let declaredVarNames=
[];for(let d of varDeclarations)if(d.type==="VariableDeclaration")for(let vn of _singletons.Environment.BoundNames(realm,d))if(declaredFunctionNames.indexOf(vn)<0){let vnDefinable=envRec.CanDeclareGlobalVar(vn);if(!vnDefinable)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,vn+": global variable declarations are not allowed");if(declaredVarNames.indexOf(vn)<0)declaredVarNames.push(vn)}let lexDeclarations=[];for(let s of ast.body)if(s.type==="VariableDeclaration"&&s.kind!=="var")lexDeclarations.push(s);
for(let d of lexDeclarations)for(let dn of _singletons.Environment.BoundNames(realm,d))if(d.kind==="const")envRec.CreateImmutableBinding(dn,true);else envRec.CreateMutableBinding(dn,false);for(let f of functionsToInitialize){let fn=_singletons.Environment.BoundNames(realm,f)[0];let fo=env.evaluate(f,strictCode);(0,_invariant.default)(fo instanceof _index.Value);envRec.CreateGlobalFunctionBinding(fn,fo,false)}for(let vn of declaredVarNames)envRec.CreateGlobalVarBinding(vn,false);return realm.intrinsics.empty}
function _default(ast,strictCode,env,realm){strictCode=(0,_strict.default)(ast);GlobalDeclarationInstantiation(realm,ast,env,strictCode);let val,res;for(let node of ast.body)if(node.type!=="FunctionDeclaration"){res=env.evaluateCompletionDeref(node,strictCode);if(res instanceof _completions.AbruptCompletion&&!realm.useAbstractInterpretation)throw res;res=_singletons.Functions.incorporateSavedCompletion(realm,res);if(res instanceof _completions.Completion){emitThrowStatementsIfNeeded(res);if(res instanceof
_completions.ThrowCompletion)return res.value;res=res.value}if(!(res instanceof _index.EmptyValue))val=res}let directives=ast.directives;if(!val&&directives&&directives.length){let directive=directives[directives.length-1];val=env.evaluate(directive,strictCode);(0,_invariant.default)(val instanceof _index.Value)}(0,_invariant.default)(val===undefined||val instanceof _index.Value);if(val instanceof _index.Value){res=_singletons.Functions.incorporateSavedCompletion(realm,val);if(res instanceof _completions.Completion)emitThrowStatementsIfNeeded(res)}return val||
realm.intrinsics.empty;function emitThrowStatementsIfNeeded(completion){let generator=realm.generator;(0,_invariant.default)(generator!==undefined);let selector=(c)=>c instanceof _completions.ThrowCompletion&&c.value!==realm.intrinsics.__bottomValue&&!(c.value instanceof _index.EmptyValue);if(res instanceof _completions.ThrowCompletion&&selector(res))generator.emitThrow(res.value);else if((res instanceof _completions.JoinedAbruptCompletions||res instanceof _completions.JoinedNormalAndAbruptCompletions)&&
res.containsSelectedCompletion(selector)){generator.emitConditionalThrow(_singletons.Join.joinValuesOfSelectedCompletions(selector,res,true));res=realm.intrinsics.undefined}else;}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);function _default(ast,strictCode,env,realm){return(0,_index2.RegExpCreate)(realm,new _index.StringValue(realm,ast.pattern),
ast.flags!==undefined?new _index.StringValue(realm,ast.flags):undefined)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _singletons=__webpack_require__(236);var _completions=__webpack_require__(18);function _default(ast,strictCode,env,realm){let arg;if(ast.argument)arg=_singletons.Environment.GetValue(realm,env.evaluate(ast.argument,strictCode));else arg=realm.intrinsics.undefined;throw new _completions.ReturnCompletion(arg,
ast.loc);}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){(0,_invariant.default)(ast.expressions.length>0);let val;for(let node of ast.expressions)val=_singletons.Environment.GetValue(realm,env.evaluate(node,
strictCode));(0,_invariant.default)(val!==undefined);return val}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _errors=__webpack_require__(3);var _BinaryExpression=__webpack_require__(292);var _completions=__webpack_require__(18);var _ForOfStatement=__webpack_require__(582);var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function CaseSelectorEvaluation(expression,strictCode,env,realm){let exprRef=env.evaluate(expression,strictCode);return _singletons.Environment.GetValue(realm,exprRef)}function AbstractCaseBlockEvaluation(cases,defaultCaseIndex,input,strictCode,env,realm){(0,_invariant.default)(realm.useAbstractInterpretation);let DefiniteCaseEvaluation=(caseIndex)=>{let result=realm.intrinsics.undefined;while(caseIndex<cases.length){let c=
cases[caseIndex];for(let i=0;i<c.consequent.length;i+=1){let node=c.consequent[i];let r=env.evaluateCompletionDeref(node,strictCode);if(r instanceof _completions.JoinedNormalAndAbruptCompletions)r=realm.composeWithSavedCompletion(r);result=(0,_index2.UpdateEmpty)(realm,r,result);if(result instanceof _completions.Completion)break}if(result instanceof _completions.Completion)break;caseIndex++}let sc=_singletons.Functions.incorporateSavedCompletion(realm,result);(0,_invariant.default)(sc!==undefined);
result=sc;if(result instanceof _completions.JoinedAbruptCompletions||result instanceof _completions.JoinedNormalAndAbruptCompletions){let selector=(c)=>c instanceof _completions.BreakCompletion&&!c.target;let jc=_index.AbstractValue.createJoinConditionForSelectedCompletions(selector,result);let jv=_index.AbstractValue.createFromConditionalOp(realm,jc,realm.intrinsics.empty,result.value);result=_completions.Completion.normalizeSelectedCompletions(selector,result);realm.composeWithSavedCompletion(result);
return jv}else if(result instanceof _completions.BreakCompletion)return result.value;else if(result instanceof _completions.AbruptCompletion)throw result;else{(0,_invariant.default)(result instanceof _index.Value);return result}};let AbstractCaseEvaluation=(caseIndex)=>{if(caseIndex===defaultCaseIndex)return AbstractCaseEvaluation(caseIndex+1);else if(caseIndex>=cases.length)if(defaultCaseIndex!==-1)return DefiniteCaseEvaluation(defaultCaseIndex);else return realm.intrinsics.empty;let c=cases[caseIndex];
let test=c.test;(0,_invariant.default)(test);let selector=CaseSelectorEvaluation(test,strictCode,env,realm);let selectionResult=(0,_BinaryExpression.computeBinary)(realm,"===",input,selector);if(_singletons.Path.implies(selectionResult))return DefiniteCaseEvaluation(caseIndex);else if(_singletons.Path.impliesNot(selectionResult))return AbstractCaseEvaluation(caseIndex+1);else{let trueEffects;try{trueEffects=_singletons.Path.withCondition(selectionResult,()=>{return realm.evaluateForEffects(()=>{return DefiniteCaseEvaluation(caseIndex)},
undefined,"AbstractCaseEvaluation/1")})}catch(e){if(e instanceof _errors.InfeasiblePathError)return AbstractCaseEvaluation(caseIndex+1);throw e;}let falseEffects;try{falseEffects=_singletons.Path.withInverseCondition(selectionResult,()=>{return realm.evaluateForEffects(()=>{return AbstractCaseEvaluation(caseIndex+1)},undefined,"AbstractCaseEvaluation/2")})}catch(e){if(e instanceof _errors.InfeasiblePathError)return DefiniteCaseEvaluation(caseIndex);throw e;}(0,_invariant.default)(trueEffects!==undefined);
(0,_invariant.default)(falseEffects!==undefined);let joinedEffects=_singletons.Join.joinEffects(selectionResult,trueEffects,falseEffects);realm.applyEffects(joinedEffects);return realm.returnOrThrowCompletion(joinedEffects.result)}};return AbstractCaseEvaluation(0)}function CaseBlockEvaluation(cases,input,strictCode,env,realm){let EvaluateCase=(c)=>{let r=realm.intrinsics.empty;for(let node of c.consequent){let res=env.evaluateCompletion(node,strictCode);if(res instanceof _completions.AbruptCompletion)return(0,
_index2.UpdateEmpty)(realm,res,r);if(!(res instanceof _index.EmptyValue))r=res}return r};let EvaluateCaseClauses=(A,V)=>{let found=false;for(let C of A){if(!found){let test=C.test;(0,_invariant.default)(test);let clauseSelector=CaseSelectorEvaluation(test,strictCode,env,realm);found=(0,_index2.StrictEqualityComparisonPartial)(realm,input,clauseSelector)}if(found){let R=EvaluateCase(C);let val=(0,_ForOfStatement.InternalGetResultValue)(realm,R);if(!(val instanceof _index.EmptyValue))V=val;if(R instanceof
_completions.AbruptCompletion)throw(0,_index2.UpdateEmpty)(realm,R,V);}}return[found,V]};if(cases.length===0)return realm.intrinsics.undefined;let default_case_num=cases.findIndex((clause)=>{return clause.test===null});if(input instanceof _index.AbstractValue&&cases.length<6)return AbstractCaseBlockEvaluation(cases,default_case_num,input,strictCode,env,realm);if(default_case_num!==-1){let A=cases.slice(0,default_case_num);let V=realm.intrinsics.undefined;[,V]=EvaluateCaseClauses(A,V);let foundInB=
false;let B=cases.slice(default_case_num+1);[foundInB,V]=EvaluateCaseClauses(B,V);if(foundInB)return V;let R=EvaluateCase(cases[default_case_num]);let val=(0,_ForOfStatement.InternalGetResultValue)(realm,R);if(!(val instanceof _index.EmptyValue))V=val;if(R instanceof _completions.AbruptCompletion)throw(0,_index2.UpdateEmpty)(realm,R,V);for(let C of B){R=EvaluateCase(C);let value=(0,_ForOfStatement.InternalGetResultValue)(realm,R);if(!(value instanceof _index.EmptyValue))V=value;if(R instanceof _completions.AbruptCompletion)throw(0,
_index2.UpdateEmpty)(realm,R,V);}return V}else{let V;[,V]=EvaluateCaseClauses(cases,realm.intrinsics.undefined);return V}}function _default(ast,strictCode,env,realm,labelSet){let expression=ast.discriminant;let exprRef=env.evaluate(expression,strictCode);let switchValue=_singletons.Environment.GetValue(realm,exprRef);if(switchValue instanceof _index.AbstractValue&&!switchValue.values.isTop()){let elems=switchValue.values.getElements();let n=elems.size;if(n>1&&n<10)return _singletons.Join.mapAndJoin(realm,
elems,(concreteSwitchValue)=>_index.AbstractValue.createFromBinaryOp(realm,"===",switchValue,concreteSwitchValue),(concreteSwitchValue)=>evaluationHelper(ast,concreteSwitchValue,strictCode,env,realm,labelSet))}return evaluationHelper(ast,switchValue,strictCode,env,realm,labelSet)}function evaluationHelper(ast,switchValue,strictCode,env,realm,labelSet){let cases=ast.cases;let oldEnv=realm.getRunningContext().lexicalEnvironment;let blockEnv=_singletons.Environment.NewDeclarativeEnvironment(realm,oldEnv);
let CaseBlock=[];cases.forEach((c)=>CaseBlock.push(...c.consequent));_singletons.Environment.BlockDeclarationInstantiation(realm,strictCode,CaseBlock,blockEnv);realm.getRunningContext().lexicalEnvironment=blockEnv;let R;try{R=CaseBlockEvaluation(cases,switchValue,strictCode,blockEnv,realm);return R}catch(e){if(e instanceof _completions.BreakCompletion)if(!e.target)return(0,_index2.UpdateEmpty)(realm,e,realm.intrinsics.undefined).value;throw e;}finally{realm.getRunningContext().lexicalEnvironment=
oldEnv;realm.onDestroyScope(blockEnv)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _call=__webpack_require__(234);function _default(ast,strictCode,env,realm){let tagRef=env.evaluate(ast.tag,strictCode);return(0,_call.EvaluateCall)(realm,strictCode,env,tagRef,ast.quasi)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);
var _singletons=__webpack_require__(236);function _default(ast,strictCode,env,realm){let str="";for(let i=0;i<ast.quasis.length;i++){let elem=ast.quasis[i];str+=elem.value.cooked;let expr=ast.expressions[i];if(expr)str+=_singletons.To.ToStringPartial(realm,_singletons.Environment.GetValue(realm,env.evaluate(expr,strictCode)))}return new _index.StringValue(realm,str)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _singletons=
__webpack_require__(236);function _default(ast,strictCode,env,realm){return _singletons.Environment.ResolveThisBinding(realm)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _completions=__webpack_require__(18);var _singletons=__webpack_require__(236);function _default(ast,strictCode,env,realm){let exprRef=env.evaluate(ast.argument,strictCode);let exprValue=_singletons.Environment.GetValue(realm,exprRef);throw new _completions.ThrowCompletion(exprValue,
ast.loc);}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _completions=__webpack_require__(18);var _index=__webpack_require__(232);var _errors=__webpack_require__(3);var _realm=__webpack_require__(7);var _singletons=__webpack_require__(236);var _index2=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
function _default(ast,strictCode,env,realm){if(realm.useAbstractInterpretation)return joinTryBlockWithHandlers(ast,strictCode,env,realm);let blockRes=env.evaluateCompletionDeref(ast.block,strictCode);let result=blockRes;if(blockRes instanceof _completions.ThrowCompletion&&ast.handler)result=env.evaluateCompletionDeref(ast.handler,strictCode,blockRes);if(ast.finalizer)result=composeResults(result,env.evaluateCompletionDeref(ast.finalizer,strictCode));return realm.returnOrThrowCompletion((0,_index.UpdateEmpty)(realm,
result,realm.intrinsics.undefined))}function composeResults(r1,r2){if(r2 instanceof _completions.AbruptCompletion)return r2;return _singletons.Join.composeCompletions(r2,r1)}function joinTryBlockWithHandlers(ast,strictCode,env,realm){let savedIsInPureTryStatement=realm.isInPureTryStatement;if(realm.isInPureScope())realm.isInPureTryStatement=true;let blockRes=env.evaluateCompletionDeref(ast.block,strictCode);blockRes=_singletons.Functions.incorporateSavedCompletion(realm,blockRes);(0,_invariant.default)(blockRes!==
undefined);realm.isInPureTryStatement=savedIsInPureTryStatement;let result=blockRes;let handler=ast.handler;let selector=(c)=>c instanceof _completions.ThrowCompletion;if(handler&&blockRes instanceof _completions.Completion&&blockRes.containsSelectedCompletion(selector))if(blockRes instanceof _completions.ThrowCompletion)result=env.evaluateCompletionDeref(handler,strictCode,blockRes);else{(0,_invariant.default)(blockRes instanceof _completions.JoinedAbruptCompletions||blockRes instanceof _completions.JoinedNormalAndAbruptCompletions);
let joinCondition=_index2.AbstractValue.createJoinConditionForSelectedCompletions(selector,blockRes);if(joinCondition.mightNotBeFalse())try{let handlerEffects=_singletons.Path.withCondition(joinCondition,()=>{(0,_invariant.default)(blockRes instanceof _completions.Completion);let joinedThrow=new _completions.ThrowCompletion(_singletons.Join.joinValuesOfSelectedCompletions(selector,blockRes));let handlerEval=()=>env.evaluateCompletionDeref(handler,strictCode,joinedThrow);return realm.evaluateForEffects(handlerEval,
undefined,"joinTryBlockWithHandlers")});_completions.Completion.makeSelectedCompletionsInfeasible(selector,blockRes);let emptyEffects=(0,_realm.construct_empty_effects)(realm,blockRes);handlerEffects=_singletons.Join.joinEffects(joinCondition,handlerEffects,emptyEffects);realm.applyEffects(handlerEffects);result=handlerEffects.result}catch(e){if(!(e instanceof _errors.InfeasiblePathError))throw e;}}if(ast.finalizer){let res=env.evaluateCompletionDeref(ast.finalizer,strictCode);result=composeResults(result,
res)}return realm.returnOrThrowCompletion((0,_index.UpdateEmpty)(realm,result,realm.intrinsics.undefined))}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _errors=__webpack_require__(3);var _index=__webpack_require__(15);var _index2=__webpack_require__(10);var _environment=__webpack_require__(20);var _invariant=_interopRequireDefault(__webpack_require__(9));var _index3=__webpack_require__(232);var _singletons=__webpack_require__(236);
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function isInstance(proto,Constructor){return proto instanceof Constructor||proto===Constructor.prototype}function evaluateDeleteOperation(expr,realm){let ref=expr;if(!(ref instanceof _environment.Reference))return realm.intrinsics.true;if(_singletons.Environment.IsUnresolvableReference(realm,ref)){(0,_invariant.default)(!_singletons.Environment.IsStrictReference(realm,ref),"did not expect a strict reference");return realm.intrinsics.true}if(_singletons.Environment.IsPropertyReference(realm,
ref)){if(_singletons.Environment.IsSuperReference(realm,ref))throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError);let base=_singletons.Environment.GetBase(realm,ref);(0,_invariant.default)(base instanceof _index2.ConcreteValue||base instanceof _index2.AbstractObjectValue);let baseObj=_singletons.To.ToObject(realm,base);let deleteStatus=baseObj.$Delete(_singletons.Environment.GetReferencedName(realm,ref));if(!deleteStatus&&_singletons.Environment.IsStrictReference(realm,ref))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);
return new _index2.BooleanValue(realm,deleteStatus)}let bindings=_singletons.Environment.GetBase(realm,ref);(0,_invariant.default)(bindings instanceof _environment.EnvironmentRecord);let referencedName=_singletons.Environment.GetReferencedName(realm,ref);(0,_invariant.default)(typeof referencedName==="string");return new _index2.BooleanValue(realm,bindings.DeleteBinding(referencedName))}function tryToEvaluateOperationOrLeaveAsAbstract(ast,expr,func,strictCode,realm){let effects;try{effects=realm.evaluateForEffects(()=>
func(ast,expr,strictCode,realm),undefined,"tryToEvaluateOperationOrLeaveAsAbstract")}catch(error){if(error instanceof _errors.FatalError)return realm.evaluateWithPossibleThrowCompletion(()=>{let value=_singletons.Environment.GetValue(realm,expr);if(value instanceof _index2.AbstractValue)return _index2.AbstractValue.createFromUnaryOp(realm,ast.operator,value);throw error;},_index.TypesDomain.topVal,_index.ValuesDomain.topVal);else throw error;}realm.applyEffects(effects);return realm.returnOrThrowCompletion(effects.result)}
function evaluateOperation(ast,expr,strictCode,realm){function reportError(value){if(value.getType()===_index2.SymbolValue)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);let error=new _errors.CompilerDiagnostic("might be a symbol or an object with an unknown valueOf or toString or Symbol.toPrimitive method",ast.argument.loc,"PP0008","RecoverableError");if(realm.handleError(error)==="Fail")throw new _errors.FatalError;}if(ast.operator==="+"){expr;let value=_singletons.Environment.GetValue(realm,
expr);if(value instanceof _index2.AbstractValue){if(!_singletons.To.IsToNumberPure(realm,value))reportError(value);return _index2.AbstractValue.createFromUnaryOp(realm,"+",value)}(0,_invariant.default)(value instanceof _index2.ConcreteValue);return _index2.IntegralValue.createFromNumberValue(realm,_singletons.To.ToNumber(realm,value))}else if(ast.operator==="-"){expr;let value=_singletons.Environment.GetValue(realm,expr);if(value instanceof _index2.AbstractValue){if(!_singletons.To.IsToNumberPure(realm,
value))reportError(value);return _index2.AbstractValue.createFromUnaryOp(realm,"-",value)}(0,_invariant.default)(value instanceof _index2.ConcreteValue);let oldValue=_singletons.To.ToNumber(realm,value);if(isNaN(oldValue))return realm.intrinsics.NaN;return _index2.IntegralValue.createFromNumberValue(realm,-oldValue)}else if(ast.operator==="~"){expr;let value=_singletons.Environment.GetValue(realm,expr);if(value instanceof _index2.AbstractValue){if(!_singletons.To.IsToNumberPure(realm,value))reportError(value);
return _index2.AbstractValue.createFromUnaryOp(realm,"~",value)}(0,_invariant.default)(value instanceof _index2.ConcreteValue);let oldValue=_singletons.To.ToInt32(realm,value);return _index2.IntegralValue.createFromNumberValue(realm,~oldValue)}else if(ast.operator==="!"){expr;let value=_singletons.Environment.GetConditionValue(realm,expr);if(value instanceof _index2.AbstractValue)return _index2.AbstractValue.createFromUnaryOp(realm,"!",value);(0,_invariant.default)(value instanceof _index2.ConcreteValue);
let oldValue=_singletons.To.ToBoolean(realm,value);if(oldValue===true)return realm.intrinsics.false;return realm.intrinsics.true}else if(ast.operator==="void"){expr;_singletons.Environment.GetValue(realm,expr);return realm.intrinsics.undefined}else{(0,_invariant.default)(ast.operator==="typeof");let val=expr;if(val instanceof _environment.Reference)if(_singletons.Environment.IsUnresolvableReference(realm,val))return new _index2.StringValue(realm,"undefined");val=_singletons.Environment.GetValue(realm,
val);let proto=val.getType().prototype;if(isInstance(proto,_index2.UndefinedValue))return new _index2.StringValue(realm,"undefined");else if(isInstance(proto,_index2.NullValue))return new _index2.StringValue(realm,"object");else if(isInstance(proto,_index2.StringValue))return new _index2.StringValue(realm,"string");else if(isInstance(proto,_index2.BooleanValue))return new _index2.StringValue(realm,"boolean");else if(isInstance(proto,_index2.NumberValue))return new _index2.StringValue(realm,"number");
else if(isInstance(proto,_index2.SymbolValue))return new _index2.StringValue(realm,"symbol");else if(isInstance(proto,_index2.ObjectValue)){if((0,_index3.IsCallable)(realm,val))return new _index2.StringValue(realm,"function");return new _index2.StringValue(realm,"object")}else{(0,_invariant.default)(val instanceof _index2.AbstractValue);return _index2.AbstractValue.createFromUnaryOp(realm,"typeof",val)}}}function _default(ast,strictCode,env,realm){let expr=env.evaluate(ast.argument,strictCode);if(ast.operator===
"delete")return evaluateDeleteOperation(expr,realm);if(realm.isInPureScope())return tryToEvaluateOperationOrLeaveAsAbstract(ast,expr,evaluateOperation,strictCode,realm);else return evaluateOperation(ast,expr,strictCode,realm)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _errors=__webpack_require__(3);var _index=__webpack_require__(232);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);
var _invariant=_interopRequireDefault(__webpack_require__(9));var _index3=__webpack_require__(15);var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){let expr=env.evaluate(ast.argument,strictCode);let oldExpr=_singletons.Environment.GetValue(realm,expr);if(oldExpr instanceof _index2.AbstractValue){(0,_invariant.default)(ast.operator==="++"||ast.operator==="--");let op=ast.operator==="++"?
"+":"-";let newAbstractValue=_index2.AbstractValue.createFromBinaryOp(realm,op,oldExpr,new _index2.NumberValue(realm,1),ast.loc);if(!_singletons.To.IsToNumberPure(realm,oldExpr))if(realm.isInPureScope()){_singletons.Leak.value(realm,oldExpr);newAbstractValue=realm.evaluateWithPossibleThrowCompletion(()=>_index2.AbstractValue.createTemporalFromBuildFunction(realm,_index2.NumberValue,[oldExpr],(0,_generator.createOperationDescriptor)("UPDATE_INCREMENTOR",{incrementor:op})),_index3.TypesDomain.topVal,
_index3.ValuesDomain.topVal)}else{let error=new _errors.CompilerDiagnostic("might be a symbol or an object with an unknown valueOf or toString or Symbol.toPrimitive method",ast.argument.loc,"PP0008","RecoverableError");if(realm.handleError(error)==="Fail")throw new _errors.FatalError;}_singletons.Properties.PutValue(realm,expr,newAbstractValue);if(ast.prefix===true)return newAbstractValue;else return oldExpr}let oldValue=_singletons.To.ToNumber(realm,oldExpr);if(ast.prefix===true){if(ast.operator===
"++"){let newValue=(0,_index.Add)(realm,oldValue,1);_singletons.Properties.PutValue(realm,expr,newValue);return newValue}else if(ast.operator==="--"){let newValue=(0,_index.Add)(realm,oldValue,-1);_singletons.Properties.PutValue(realm,expr,newValue);return newValue}(0,_invariant.default)(false)}else{if(ast.operator==="++"){let newValue=(0,_index.Add)(realm,oldValue,1);_singletons.Properties.PutValue(realm,expr,newValue);return _index2.IntegralValue.createFromNumberValue(realm,oldValue)}else if(ast.operator===
"--"){let newValue=(0,_index.Add)(realm,oldValue,-1);_singletons.Properties.PutValue(realm,expr,newValue);return _index2.IntegralValue.createFromNumberValue(realm,oldValue)}(0,_invariant.default)(false)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function letAndConst(ast,strictCode,env,realm){for(let declar of ast.declarations){let Initializer=declar.init;if(declar.id.type==="Identifier"&&!Initializer){(0,_invariant.default)(ast.kind!=="const","const without an initializer");let bindingId=declar.id.name;let lhs=_singletons.Environment.ResolveBinding(realm,bindingId,strictCode);_singletons.Environment.InitializeReferencedBinding(realm,lhs,realm.intrinsics.undefined);
continue}else if(declar.id.type==="Identifier"&&Initializer){let bindingId=declar.id.name;let lhs=_singletons.Environment.ResolveBinding(realm,bindingId,strictCode);let rhs=env.evaluate(Initializer,strictCode);let value=_singletons.Environment.GetValue(realm,rhs);if((0,_index2.IsAnonymousFunctionDefinition)(realm,Initializer)){(0,_invariant.default)(value instanceof _index.ObjectValue);let hasNameProperty=(0,_index2.HasOwnProperty)(realm,value,"name");if(!hasNameProperty)_singletons.Functions.SetFunctionName(realm,
value,new _index.StringValue(realm,bindingId))}_singletons.Environment.InitializeReferencedBinding(realm,lhs,value)}else if((declar.id.type==="ObjectPattern"||declar.id.type==="ArrayPattern")&&Initializer){let rhs=env.evaluate(Initializer,strictCode);let rval=_singletons.Environment.GetValue(realm,rhs);_singletons.Environment.BindingInitialization(realm,declar.id,rval,strictCode,env)}else(0,_invariant.default)(false,"unrecognized declaration")}return realm.intrinsics.empty}function _default(ast,strictCode,
env,realm){if(ast.kind==="let"||ast.kind==="const")return letAndConst(ast,strictCode,env,realm);for(let declar of ast.declarations){let Initializer=declar.init;if(declar.id.type==="Identifier"&&!Initializer)continue;else if(declar.id.type==="Identifier"&&Initializer){let bindingId=declar.id.name;let lhs=_singletons.Environment.ResolveBinding(realm,bindingId,strictCode);let rhs=env.evaluate(Initializer,strictCode);let value=_singletons.Environment.GetValue(realm,rhs);if(declar.id&&declar.id.name!==
undefined)value.__originalName=bindingId;if((0,_index2.IsAnonymousFunctionDefinition)(realm,Initializer)){(0,_invariant.default)(value instanceof _index.ObjectValue);let hasNameProperty=(0,_index2.HasOwnProperty)(realm,value,"name");if(!hasNameProperty)_singletons.Functions.SetFunctionName(realm,value,new _index.StringValue(realm,bindingId))}_singletons.Properties.PutValue(realm,lhs,value)}else if((declar.id.type==="ObjectPattern"||declar.id.type==="ArrayPattern")&&Initializer){let rhs=env.evaluate(Initializer,
strictCode);let rval=_singletons.Environment.GetValue(realm,rhs);_singletons.Environment.BindingInitialization(realm,declar.id,rval,strictCode,undefined)}else(0,_invariant.default)(false,"unrecognized declaration")}return realm.intrinsics.empty}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm,labelSet){let r=env.evaluate({type:"ForStatement",init:null,test:ast.test,update:null,body:ast.body},strictCode,labelSet);(0,_invariant.default)(r instanceof _index.Value);return r}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _environment=__webpack_require__(20);var _errors=__webpack_require__(3);var _completions=__webpack_require__(18);
var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(ast,strictCode,env,realm){let val=env.evaluate(ast.object,strictCode);val=_singletons.Environment.GetValue(realm,val);if(val instanceof _index.AbstractValue||val instanceof _index.ObjectValue&&val.isPartialObject()){let loc=ast.object.loc;
let error=new _errors.CompilerDiagnostic("with object must be a known value",loc,"PP0007","RecoverableError");if(realm.handleError(error)==="Fail")throw new _errors.FatalError;}let obj=_singletons.To.ToObject(realm,val);let oldEnv=env;let newEnv=_singletons.Environment.NewObjectEnvironment(realm,obj,oldEnv);(0,_invariant.default)(newEnv.environmentRecord instanceof _environment.ObjectEnvironmentRecord);newEnv.environmentRecord.withEnvironment=true;realm.getRunningContext().lexicalEnvironment=newEnv;
try{let C=newEnv.evaluateCompletion(ast.body,strictCode);(0,_invariant.default)(C instanceof _index.Value||C instanceof _completions.AbruptCompletion);let res=(0,_index2.UpdateEmpty)(realm,C,realm.intrinsics.undefined);if(res instanceof _completions.AbruptCompletion)throw res;(0,_invariant.default)(res instanceof _index.Value);return res}finally{realm.getRunningContext().lexicalEnvironment=oldEnv;realm.onDestroyScope(newEnv)}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=_default;var _errors=__webpack_require__(3);function _default(ast,strictCode,env,realm){throw new _errors.FatalError("TODO: #712 YieldExpression");}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _jsx=__webpack_require__(436);var _index2=__webpack_require__(232);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));
var _elements=__webpack_require__(420);var _utils=__webpack_require__(291);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function cleanJSXElementLiteralChild(child){let lines=child.split(/\r\n|\n|\r/);let lastNonEmptyLine=0;for(let i=0;i<lines.length;i++)if(lines[i].match(/[^ \t]/))lastNonEmptyLine=i;let str="";for(let i=0;i<lines.length;i++){let line=lines[i];let isFirstLine=i===0;let isLastLine=i===lines.length-1;let isLastNonEmptyLine=i===lastNonEmptyLine;let trimmedLine=
line.replace(/\t/g," ");if(!isFirstLine)trimmedLine=trimmedLine.replace(/^[ ]+/,"");if(!isLastLine)trimmedLine=trimmedLine.replace(/[ ]+$/,"");if(trimmedLine){if(!isLastNonEmptyLine)trimmedLine+=" ";str+=trimmedLine}}if(str)return str;return null}function evaluateJSXMemberExpression(ast,strictCode,env,realm){switch(ast.type){case "JSXIdentifier":return _singletons.Environment.GetValue(realm,_singletons.Environment.ResolveBinding(realm,ast.name,strictCode,env));case "JSXMemberExpression":return _singletons.Environment.GetValue(realm,
env.evaluate((0,_jsx.convertJSXExpressionToIdentifier)(ast),strictCode));default:(0,_invariant.default)(false,"Unknown JSX Identifier")}}function evaluateJSXIdentifier(ast,strictCode,env,realm){if(isTagName(ast))return new _index.StringValue(realm,ast.name);return evaluateJSXMemberExpression(ast,strictCode,env,realm)}function evaluateJSXValue(value,strictCode,env,realm){if(value!=null)switch(value.type){case "JSXText":return new _index.StringValue(realm,value.value);case "StringLiteral":return new _index.StringValue(realm,
value.value);case "JSXExpressionContainer":return _singletons.Environment.GetValue(realm,env.evaluate(value.expression,strictCode));case "JSXElement":return _singletons.Environment.GetValue(realm,env.evaluate(value,strictCode));default:(0,_invariant.default)(false,`Unknown JSX value type: ${value.type}`)}(0,_invariant.default)(false,`Null or undefined value passed when trying to evaluate JSX node value`)}function isTagName(ast){return ast.type==="JSXIdentifier"&&/^[a-z]|\-/.test(ast.name)}function evaluateJSXChildren(children,
strictCode,env,realm){if(children.length===0)return undefined;if(children.length===1){let singleChild=evaluateJSXValue(children[0],strictCode,env,realm);if(singleChild instanceof _index.StringValue){let text=cleanJSXElementLiteralChild(singleChild.value);if(text!==null)singleChild.value=text}return singleChild}let array=_singletons.Create.ArrayCreate(realm,0);let dynamicChildrenLength=children.length;let dynamicIterator=0;let lastChildValue=realm.intrinsics.undefined;for(let i=0;i<children.length;i++){let value=
evaluateJSXValue(children[i],strictCode,env,realm);if(value instanceof _index.StringValue){let text=cleanJSXElementLiteralChild(value.value);if(text===null){dynamicChildrenLength--;continue}else value.value=text}lastChildValue=value;_singletons.Create.CreateDataPropertyOrThrow(realm,array,""+dynamicIterator,value);dynamicIterator++}if(dynamicChildrenLength===1)return lastChildValue;_singletons.Properties.Set(realm,array,"length",new _index.NumberValue(realm,dynamicChildrenLength),false);array.makeFinal();
return array}function isObjectEmpty(realm,object){let propertyCount=0;for(let [,binding]of object.properties)if(binding&&binding.descriptor&&binding.descriptor.throwIfNotConcrete(realm).enumerable)propertyCount++;return propertyCount===0}function evaluateJSXAttributes(astAttributes,strictCode,env,realm){let config=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);let abstractPropsArgs=[];let abstractSpreadCount=0;let safeAbstractSpreadCount=0;let spreadValue;const setConfigProperty=
(name,value)=>{(0,_invariant.default)(config instanceof _index.ObjectValue);_singletons.Properties.Set(realm,config,name,value,true)};for(let astAttribute of astAttributes)switch(astAttribute.type){case "JSXAttribute":let {name,value}=astAttribute;(0,_invariant.default)(name.type==="JSXIdentifier",`JSX attribute name type not supported: ${astAttribute.type}`);setConfigProperty(name.name,evaluateJSXValue(value,strictCode,env,realm));break;case "JSXSpreadAttribute":spreadValue=_singletons.Environment.GetValue(realm,
env.evaluate(astAttribute.argument,strictCode));if(spreadValue instanceof _index.ObjectValue&&!spreadValue.isPartialObject())for(let [spreadPropKey,binding]of spreadValue.properties){if(binding&&binding.descriptor&&binding.descriptor.throwIfNotConcrete(realm).enumerable)setConfigProperty(spreadPropKey,(0,_index2.Get)(realm,spreadValue,spreadPropKey))}else{abstractSpreadCount++;if(spreadValue instanceof _index.AbstractValue&&!(spreadValue instanceof _index.AbstractObjectValue))spreadValue=_singletons.To.ToObject(realm,
spreadValue);(0,_invariant.default)(spreadValue instanceof _index.AbstractObjectValue||spreadValue instanceof _index.ObjectValue);if((0,_utils.hasNoPartialKeyOrRef)(realm,spreadValue))safeAbstractSpreadCount++;if(!isObjectEmpty(realm,config))abstractPropsArgs.push(config);abstractPropsArgs.push(spreadValue);config=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype)}break;default:(0,_invariant.default)(false,`Unknown JSX attribute type: ${astAttribute.type}`)}if(abstractSpreadCount>
0){if(abstractSpreadCount===1&&astAttributes.length===1&&(spreadValue instanceof _index.ObjectValue||spreadValue instanceof _index.AbstractObjectValue))return spreadValue;abstractPropsArgs.push(config);config=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);(0,_utils.applyObjectAssignConfigsForReactElement)(realm,config,abstractPropsArgs);if(safeAbstractSpreadCount===abstractSpreadCount)(0,_utils.flagPropsWithNoPartialKeyOrRef)(realm,config)}(0,_invariant.default)(config instanceof
_index.ObjectValue||config instanceof _index.AbstractObjectValue);return config}function _default(ast,strictCode,env,realm){(0,_invariant.default)(realm.react.enabled,"JSXElements can only be evaluated with the reactEnabled option");let openingElement=ast.openingElement;let type=evaluateJSXIdentifier(openingElement.name,strictCode,env,realm);let children=evaluateJSXChildren(ast.children,strictCode,env,realm);let config=evaluateJSXAttributes(openingElement.attributes,strictCode,env,realm);(0,_invariant.default)(type instanceof
_index.Value);return(0,_elements.createReactElement)(realm,type,config,children)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.DebugServer=void 0;var _BreakpointManager=__webpack_require__(618);var _types=__webpack_require__(21);var _invariant=_interopRequireDefault(__webpack_require__(621));var _DebugMessage=__webpack_require__(622);var _DebuggerError=__webpack_require__(623);var _realm=__webpack_require__(7);var _VariableManager=
__webpack_require__(624);var _SteppingManager=__webpack_require__(626);var _StopEventManager=__webpack_require__(628);var _environment=__webpack_require__(20);var _errors=__webpack_require__(3);var _SourceMapManager=__webpack_require__(463);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class DebugServer{constructor(channel,realm,configArgs){this._channel=channel;this._realm=realm;this._breakpointManager=new _BreakpointManager.BreakpointManager;this._variableManager=
new _VariableManager.VariableManager(realm);this._stepManager=new _SteppingManager.SteppingManager(this._realm,false);this._stopEventManager=new _StopEventManager.StopEventManager;this._diagnosticSeverity=configArgs.diagnosticSeverity||"FatalError";this._sourceMapManager=new _SourceMapManager.SourceMapManager(configArgs.buckRoot,configArgs.sourcemaps);this.waitForRun(undefined)}waitForRun(loc){let keepRunning=false;let request;while(!keepRunning){request=this._channel.readIn();keepRunning=this.processDebuggerCommand(request,
loc)}}checkForActions(ast){if(this._checkAndUpdateLastExecuted(ast)){let stoppables=this._stepManager.getAndDeleteCompletedSteppers(ast);let breakpoint=this._breakpointManager.getStoppableBreakpoint(ast);if(breakpoint)stoppables.push(breakpoint);let reason=this._stopEventManager.getDebuggeeStopReason(ast,stoppables);if(reason){let location=ast.loc;(0,_invariant.default)(location&&location.source!==null);let absolutePath=this._sourceMapManager.relativeToAbsolute(location.source);this._channel.sendStoppedResponse(reason,
absolutePath,location.start.line,location.start.column);this.waitForRun(location)}}}processDebuggerCommand(request,loc){let requestID=request.id;let command=request.command;let args=request.arguments;if(args.kind==="breakpoint")for(let bp of args.breakpoints)bp.filePath=this._sourceMapManager.absoluteToRelative(bp.filePath);switch(command){case _DebugMessage.DebugMessage.BREAKPOINT_ADD_COMMAND:(0,_invariant.default)(args.kind==="breakpoint");this._breakpointManager.addBreakpointMulti(args.breakpoints);
this._channel.sendBreakpointsAcknowledge(_DebugMessage.DebugMessage.BREAKPOINT_ADD_ACKNOWLEDGE,requestID,args);break;case _DebugMessage.DebugMessage.BREAKPOINT_REMOVE_COMMAND:(0,_invariant.default)(args.kind==="breakpoint");this._breakpointManager.removeBreakpointMulti(args.breakpoints);this._channel.sendBreakpointsAcknowledge(_DebugMessage.DebugMessage.BREAKPOINT_REMOVE_ACKNOWLEDGE,requestID,args);break;case _DebugMessage.DebugMessage.BREAKPOINT_ENABLE_COMMAND:(0,_invariant.default)(args.kind===
"breakpoint");this._breakpointManager.enableBreakpointMulti(args.breakpoints);this._channel.sendBreakpointsAcknowledge(_DebugMessage.DebugMessage.BREAKPOINT_ENABLE_ACKNOWLEDGE,requestID,args);break;case _DebugMessage.DebugMessage.BREAKPOINT_DISABLE_COMMAND:(0,_invariant.default)(args.kind==="breakpoint");this._breakpointManager.disableBreakpointMulti(args.breakpoints);this._channel.sendBreakpointsAcknowledge(_DebugMessage.DebugMessage.BREAKPOINT_DISABLE_ACKNOWLEDGE,requestID,args);break;case _DebugMessage.DebugMessage.PREPACK_RUN_COMMAND:(0,
_invariant.default)(args.kind==="run");this._onDebuggeeResume();return true;case _DebugMessage.DebugMessage.STACKFRAMES_COMMAND:(0,_invariant.default)(args.kind==="stackframe");this.processStackframesCommand(requestID,args,loc);break;case _DebugMessage.DebugMessage.SCOPES_COMMAND:(0,_invariant.default)(args.kind==="scopes");this.processScopesCommand(requestID,args);break;case _DebugMessage.DebugMessage.VARIABLES_COMMAND:(0,_invariant.default)(args.kind==="variables");this.processVariablesCommand(requestID,
args);break;case _DebugMessage.DebugMessage.STEPINTO_COMMAND:(0,_invariant.default)(loc!==undefined);this._stepManager.processStepCommand("in",loc);this._onDebuggeeResume();return true;case _DebugMessage.DebugMessage.STEPOVER_COMMAND:(0,_invariant.default)(loc!==undefined);this._stepManager.processStepCommand("over",loc);this._onDebuggeeResume();return true;case _DebugMessage.DebugMessage.STEPOUT_COMMAND:(0,_invariant.default)(loc!==undefined);this._stepManager.processStepCommand("out",loc);this._onDebuggeeResume();
return true;case _DebugMessage.DebugMessage.EVALUATE_COMMAND:(0,_invariant.default)(args.kind==="evaluate");this.processEvaluateCommand(requestID,args);break;default:throw new _DebuggerError.DebuggerError("Invalid command","Invalid command from adapter: "+command);}return false}processStackframesCommand(requestID,args,astLoc){let frameInfos=[];let loc=this._getFrameLocation(astLoc?astLoc:null);let fileName=loc.fileName;let line=loc.line;let column=loc.column;for(let i=this._realm.contextStack.length-
1;i>=0;i--){let frame=this._realm.contextStack[i];let functionName="(anonymous function)";if(frame.function&&frame.function.__originalName!==undefined)functionName=frame.function.__originalName;let frameInfo={id:this._realm.contextStack.length-1-i,functionName:functionName,fileName:this._sourceMapManager.relativeToAbsolute(fileName),line:line,column:column};frameInfos.push(frameInfo);loc=this._getFrameLocation(frame.loc);fileName=loc.fileName;line=loc.line;column=loc.column}this._channel.sendStackframeResponse(requestID,
frameInfos)}_getFrameLocation(loc){let fileName="unknown";let line=0;let column=0;if(loc&&loc.source!==null){fileName=loc.source;line=loc.start.line;column=loc.start.column}return{fileName:fileName,line:line,column:column}}processScopesCommand(requestID,args){if(args.frameId<0||args.frameId>=this._realm.contextStack.length)throw new _DebuggerError.DebuggerError("Invalid command","Invalid frame id for scopes request: "+args.frameId);let stackIndex=this._realm.contextStack.length-1-args.frameId;let context=
this._realm.contextStack[stackIndex];(0,_invariant.default)(context instanceof _realm.ExecutionContext);let scopes=[];let lexicalEnv=context.lexicalEnvironment;while(lexicalEnv){let scope={name:this._getScopeName(lexicalEnv.environmentRecord),variablesReference:this._variableManager.getReferenceForValue(lexicalEnv),expensive:false};scopes.push(scope);lexicalEnv=lexicalEnv.parent}this._channel.sendScopesResponse(requestID,scopes)}_getScopeName(envRec){if(envRec instanceof _environment.GlobalEnvironmentRecord)return"Global";
else if(envRec instanceof _environment.DeclarativeEnvironmentRecord)if(envRec instanceof _environment.FunctionEnvironmentRecord){let name=envRec.$FunctionObject.__originalName;if(name===undefined)name="anonymous function";return"Local: "+name}else return"Block";else if(envRec instanceof _environment.ObjectEnvironmentRecord)return"With";else(0,_invariant.default)(false,"Invalid type of environment record")}processVariablesCommand(requestID,args){let variables=this._variableManager.getVariablesByReference(args.variablesReference);
this._channel.sendVariablesResponse(requestID,variables)}processEvaluateCommand(requestID,args){let evalResult=this._variableManager.evaluate(args.frameId,args.expression);this._channel.sendEvaluateResponse(requestID,evalResult)}_onDebuggeeResume(){this._variableManager.clean()}_checkAndUpdateLastExecuted(ast){if(ast.loc&&ast.loc.source!==null){let filePath=ast.loc.source;let line=ast.loc.start.line;let column=ast.loc.start.column;let stackSize=this._realm.contextStack.length;if(this._lastExecuted&&
filePath===this._lastExecuted.filePath&&line===this._lastExecuted.line&&stackSize===this._lastExecuted.stackSize)return false;this._lastExecuted={filePath:filePath,line:line,column:column,stackSize:this._realm.contextStack.length};return true}return false}handlePrepackError(diagnostic){(0,_invariant.default)(diagnostic.location&&diagnostic.location.source!==null);let location=diagnostic.location;let absoluteSource="";if(location.source!==null)absoluteSource=this._sourceMapManager.relativeToAbsolute(location.source);
let message=`${diagnostic.severity} ${diagnostic.errorCode}: ${diagnostic.message}`;console.log(message);this._channel.sendStoppedResponse("Diagnostic",absoluteSource,location.start.line,location.start.column,message);this.waitForRun(location)}shouldStopForSeverity(severity){switch(this._diagnosticSeverity){case "Information":return true;case "Warning":return severity!=="Information";case "RecoverableError":return severity==="RecoverableError"||severity==="FatalError";case "FatalError":return severity===
"FatalError";default:(0,_invariant.default)(false,"Unexpected severity type")}}shutdown(){this._channel.shutdown()}}exports.DebugServer=DebugServer},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.BreakpointManager=void 0;var _PerFileBreakpointMap=__webpack_require__(619);var _Breakpoint=__webpack_require__(620);var _types=__webpack_require__(21);class BreakpointManager{constructor(){this._breakpointMaps=new Map}getStoppableBreakpoint(ast){if(ast.loc&&
ast.loc.source!==null){let location=ast.loc;let filePath=location.source;if(filePath===null)return;let lineNum=location.start.line;let colNum=location.start.column;let breakpoint=this._findStoppableBreakpoint(filePath,lineNum,colNum);if(breakpoint===null)return;return breakpoint}}_findStoppableBreakpoint(filePath,lineNum,colNum){let breakpoint=this.getBreakpoint(filePath,lineNum,colNum);if(breakpoint&&breakpoint.enabled)return breakpoint;return null}addBreakpointMulti(breakpoints){this._doBreakpointsAction(breakpoints,
this._addBreakpoint.bind(this))}_addBreakpoint(bp){let breakpointMap=this._breakpointMaps.get(bp.filePath);if(!breakpointMap){breakpointMap=new _PerFileBreakpointMap.PerFileBreakpointMap(bp.filePath);this._breakpointMaps.set(bp.filePath,breakpointMap)}breakpointMap.addBreakpoint(bp.line,0)}getBreakpoint(filePath,lineNum,columnNum=0){let breakpointMap=this._breakpointMaps.get(filePath);if(breakpointMap)return breakpointMap.getBreakpoint(lineNum,columnNum);return undefined}removeBreakpointMulti(breakpoints){this._doBreakpointsAction(breakpoints,
this._removeBreakpoint.bind(this))}_removeBreakpoint(bp){let breakpointMap=this._breakpointMaps.get(bp.filePath);if(breakpointMap)breakpointMap.removeBreakpoint(bp.line,bp.column)}enableBreakpointMulti(breakpoints){this._doBreakpointsAction(breakpoints,this._enableBreakpoint.bind(this))}_enableBreakpoint(bp){let breakpointMap=this._breakpointMaps.get(bp.filePath);if(breakpointMap)breakpointMap.enableBreakpoint(bp.line,bp.column)}disableBreakpointMulti(breakpoints){this._doBreakpointsAction(breakpoints,
this._disableBreakpoint.bind(this))}_disableBreakpoint(bp){let breakpointMap=this._breakpointMaps.get(bp.filePath);if(breakpointMap)breakpointMap.disableBreakpoint(bp.line,bp.column)}_doBreakpointsAction(breakpoints,action){for(let bp of breakpoints)action(bp)}}exports.BreakpointManager=BreakpointManager},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.PerFileBreakpointMap=void 0;var _Breakpoint=__webpack_require__(620);class PerFileBreakpointMap{constructor(filePath){this._filePath=
filePath;this._breakpoints=new Map}addBreakpoint(line,column=0,temporary,enabled){let breakpoint=new _Breakpoint.Breakpoint(this._filePath,line,column,temporary,enabled);let key=this._getKey(line,column);this._breakpoints.set(key,breakpoint)}getBreakpoint(line,column=0){if(column!==0){let key=this._getKey(line,column);if(this._breakpoints.has(key))return this._breakpoints.get(key);else{key=this._getKey(line,0);if(this._breakpoints.has(key))return this._breakpoints.get(key)}}else{let key=this._getKey(line,
0);if(this._breakpoints.has(key))return this._breakpoints.get(key)}return undefined}removeBreakpoint(line,column=0){let key=this._getKey(line,column);if(this._breakpoints.has(key))this._breakpoints.delete(key)}enableBreakpoint(line,column=0){let key=this._getKey(line,column);let breakpoint=this._breakpoints.get(key);if(breakpoint)breakpoint.enabled=true}disableBreakpoint(line,column=0){let key=this._getKey(line,column);let breakpoint=this._breakpoints.get(key);if(breakpoint)breakpoint.enabled=false}_getKey(line,
column){return`${line}:${column}`}}exports.PerFileBreakpointMap=PerFileBreakpointMap},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.Breakpoint=void 0;class Breakpoint{constructor(filePath,line,column=0,temporary=false,enabled=true){this.filePath=filePath;this.line=line;this.temporary=temporary;this.enabled=enabled;this.column=column}}exports.Breakpoint=Breakpoint},function(module,exports,__webpack_require__){Object.defineProperty(exports,
"__esModule",{value:true});exports.default=invariant;function invariant(condition,format){if(condition)return;let error=new Error(format);error.name="Invariant Violation";throw error;}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.DebugMessage=void 0;function _defineProperty(obj,key,value){if(key in obj)Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});else obj[key]=value;return obj}class DebugMessage{}
exports.DebugMessage=DebugMessage;_defineProperty(DebugMessage,"DEBUGGER_ATTACHED","DebuggerAttached");_defineProperty(DebugMessage,"PREPACK_RUN_COMMAND","PrepackRun");_defineProperty(DebugMessage,"BREAKPOINT_ADD_COMMAND","Breakpoint-add-command");_defineProperty(DebugMessage,"BREAKPOINT_REMOVE_COMMAND","Breakpoint-remove-command");_defineProperty(DebugMessage,"BREAKPOINT_ENABLE_COMMAND","Breakpoint-enable-command");_defineProperty(DebugMessage,"BREAKPOINT_DISABLE_COMMAND","Breakpoint-disable-command");
_defineProperty(DebugMessage,"STACKFRAMES_COMMAND","Stackframes-command");_defineProperty(DebugMessage,"SCOPES_COMMAND","Scopes-command");_defineProperty(DebugMessage,"VARIABLES_COMMAND","Variables-command");_defineProperty(DebugMessage,"STEPINTO_COMMAND","StepInto-command");_defineProperty(DebugMessage,"STEPOVER_COMMAND","StepOver-command");_defineProperty(DebugMessage,"STEPOUT_COMMAND","StepOut-command");_defineProperty(DebugMessage,"EVALUATE_COMMAND","Evaluate-command");_defineProperty(DebugMessage,
"PREPACK_READY_RESPONSE","PrepackReady");_defineProperty(DebugMessage,"PREPACK_FINISH_RESPONSE","PrepackFinish");_defineProperty(DebugMessage,"STOPPED_RESPONSE","Stopped-response");_defineProperty(DebugMessage,"STACKFRAMES_RESPONSE","Stackframes-response");_defineProperty(DebugMessage,"SCOPES_RESPONSE","Scopes-response");_defineProperty(DebugMessage,"VARIABLES_RESPONSE","Variables-response");_defineProperty(DebugMessage,"STEPINTO_RESPONSE","StepInto-response");_defineProperty(DebugMessage,"EVALUATE_RESPONSE",
"Evaluate-response");_defineProperty(DebugMessage,"BREAKPOINT_ADD_ACKNOWLEDGE","Breakpoint-add-acknowledge");_defineProperty(DebugMessage,"BREAKPOINT_REMOVE_ACKNOWLEDGE","Breakpoint-remove-acknowledge");_defineProperty(DebugMessage,"BREAKPOINT_ENABLE_ACKNOWLEDGE","Breakpoint-enable-acknowledge");_defineProperty(DebugMessage,"BREAKPOINT_DISABLE_ACKNOWLEDGE","Breakpoint-disable-acknowledge")},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.DebuggerError=
void 0;class DebuggerError extends Error{constructor(errorType,message){super(`${errorType}: ${message}`);this.errorType=errorType;this.message=message}}exports.DebuggerError=DebuggerError},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.VariableManager=void 0;var _ReferenceMap=__webpack_require__(625);var _environment=__webpack_require__(20);var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(621));
var _is=__webpack_require__(229);var _DebuggerError=__webpack_require__(623);var _singletons=__webpack_require__(236);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class VariableManager{constructor(realm){this._containerCache=new Map;this._referenceMap=new _ReferenceMap.ReferenceMap;this._realm=realm}getReferenceForValue(value){let cachedRef=this._containerCache.get(value);if(cachedRef!==undefined)return cachedRef;let varRef=this._referenceMap.add(value);this._containerCache.set(value,
varRef);return varRef}getVariablesByReference(reference){let container=this._referenceMap.get(reference);if(!container)return[];if(container instanceof _environment.LexicalEnvironment)return this._getVariablesFromEnvRecord(container.environmentRecord);else if(container instanceof _index.ObjectValue)return this._getVariablesFromObject(container);else if(container instanceof _index.AbstractValue)return this._getAbstractValueContent(container);else(0,_invariant.default)(false,"Invalid variable container")}_getVariablesFromObject(object){let variables=
[];let names=object.properties.keys();for(let name of names){let binding=object.properties.get(name);(0,_invariant.default)(binding!==undefined);if(binding.descriptor)if((0,_is.IsDataDescriptor)(this._realm,binding.descriptor)){let value=binding.descriptor.value;if(value instanceof _index.Value){let variable=this._getVariableFromValue(name,value);variables.push(variable)}}}return variables}_getAbstractValueContent(value){let kindVar={name:"kind",value:value.kind||"undefined",variablesReference:0};
let contents=[kindVar];let argCount=1;for(let arg of value.args){contents.push(this._getVariableFromValue("arg-"+argCount,arg));argCount++}return contents}_getVariablesFromEnvRecord(envRecord){if(envRecord instanceof _environment.DeclarativeEnvironmentRecord)return this._getVariablesFromDeclarativeEnv(envRecord);else if(envRecord instanceof _environment.ObjectEnvironmentRecord)if(envRecord.object instanceof _index.ObjectValue)return this._getVariablesFromObject(envRecord.object);else if(envRecord.object instanceof
_index.AbstractObjectValue)return[];else(0,_invariant.default)(false,"Invalid type of object environment record");else if(envRecord instanceof _environment.GlobalEnvironmentRecord){let declVars=this._getVariablesFromEnvRecord(envRecord.$DeclarativeRecord);let objVars=this._getVariablesFromEnvRecord(envRecord.$ObjectRecord);return declVars.concat(objVars)}else(0,_invariant.default)(false,"Invalid type of environment record")}_getVariablesFromDeclarativeEnv(env){let variables=[];let bindings=env.bindings;
for(let name in bindings){let binding=bindings[name];if(binding.value){let variable=this._getVariableFromValue(name,binding.value);variables.push(variable)}}return variables}_getVariableFromValue(name,value){if(value instanceof _index.ConcreteValue)return this._getVariableFromConcreteValue(name,value);else if(value instanceof _index.AbstractValue)return this._getVariableFromAbstractValue(name,value);else(0,_invariant.default)(false,"Value is neither concrete nor abstract")}_getVariableFromAbstractValue(name,
value){let variable={name:name,value:this._getAbstractValueDisplay(value),variablesReference:this.getReferenceForValue(value)};return variable}_getAbstractValueDisplay(value){if(value.intrinsicName!==undefined&&!value.intrinsicName.startsWith("_"))return value.intrinsicName;return"Abstract "+value.types.getType().name}_getVariableFromConcreteValue(name,value){if(value instanceof _index.PrimitiveValue){let variable={name:name,value:value.toDisplayString(),variablesReference:0};return variable}else if(value instanceof
_index.ObjectValue){let variable={name:name,value:value.getKind(),variablesReference:this.getReferenceForValue(value)};return variable}else(0,_invariant.default)(false,"Concrete value must be primitive or object")}evaluate(frameId,expression){let evalRealm=this._realm;let isDirect=false;let isStrict=false;if(frameId!==undefined){if(frameId<0||frameId>=this._realm.contextStack.length)throw new _DebuggerError.DebuggerError("Invalid command","Invalid value for frame ID");let stackIndex=this._realm.contextStack.length-
1-frameId;let context=this._realm.contextStack[stackIndex];isDirect=true;isStrict=true;evalRealm=context.realm}let evalString=new _index.StringValue(this._realm,expression);try{let value=_singletons.Functions.PerformEval(this._realm,evalString,evalRealm,isStrict,isDirect);let varInfo=this._getVariableFromValue(expression,value);let result={kind:"evaluate",displayValue:varInfo.value,type:value.getType().name,variablesReference:varInfo.variablesReference};return result}catch(e){let result={kind:"evaluate",
displayValue:`Failed to evaluate: ${expression}`,type:"unknown",variablesReference:0};return result}}clean(){this._containerCache=new Map;this._referenceMap.clean()}}exports.VariableManager=VariableManager},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.ReferenceMap=void 0;class ReferenceMap{constructor(){this._counter=0;this._mapping=new Map}add(value){this._counter++;this._mapping.set(this._counter,value);return this._counter}get(reference){return this._mapping.get(reference)}clean(){this._counter=
0;this._mapping=new Map}}exports.ReferenceMap=ReferenceMap},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.SteppingManager=void 0;var _types=__webpack_require__(21);var _invariant=_interopRequireDefault(__webpack_require__(621));var _Stepper=__webpack_require__(627);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class SteppingManager{constructor(realm,keepOldSteppers){this._realm=realm;this._steppers=
[];this._keepOldSteppers=false;if(keepOldSteppers===true)this._keepOldSteppers=true}processStepCommand(kind,currentNodeLocation){if(kind==="in")this._processStepIn(currentNodeLocation);else if(kind==="over")this._processStepOver(currentNodeLocation);else if(kind==="out")this._processStepOut(currentNodeLocation);else(0,_invariant.default)(false,`Invalid step type: ${kind}`)}_processStepIn(loc){(0,_invariant.default)(loc&&loc.source!==null);if(!this._keepOldSteppers)this._steppers=[];this._steppers.push(new _Stepper.StepIntoStepper(loc.source,
loc.start.line,loc.start.column,this._realm.contextStack.length))}_processStepOver(loc){(0,_invariant.default)(loc&&loc.source!==null);if(!this._keepOldSteppers)this._steppers=[];this._steppers.push(new _Stepper.StepOverStepper(loc.source,loc.start.line,loc.start.column,this._realm.contextStack.length))}_processStepOut(loc){(0,_invariant.default)(loc&&loc.source!==null);if(!this._keepOldSteppers)this._steppers=[];this._steppers.push(new _Stepper.StepOutStepper(loc.source,loc.start.line,loc.start.column,
this._realm.contextStack.length))}getAndDeleteCompletedSteppers(ast){(0,_invariant.default)(ast.loc&&ast.loc.source);let i=0;let completedSteppers=[];while(i<this._steppers.length){let stepper=this._steppers[i];if(stepper.isComplete(ast,this._realm.contextStack.length)){completedSteppers.push(stepper);this._steppers.splice(i,1)}else i++}return completedSteppers}}exports.SteppingManager=SteppingManager},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});
exports.StepOutStepper=exports.StepOverStepper=exports.StepIntoStepper=exports.Stepper=void 0;var _types=__webpack_require__(21);var _invariant=_interopRequireDefault(__webpack_require__(621));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Stepper{constructor(filePath,line,column,stackSize){this._stepStartData={filePath:filePath,line:line,column:column,stackSize:stackSize}}isComplete(ast,currentStackSize){(0,_invariant.default)(false,"Abstract method, please override")}isAstLocationChanged(ast){let loc=
ast.loc;if(!loc)return false;let filePath=loc.source;let line=loc.start.line;let column=loc.start.column;if(filePath===null)return false;if(this._stepStartData){if(filePath===this._stepStartData.filePath&&line===this._stepStartData.line&&column===this._stepStartData.column)return false}else return false;return true}}exports.Stepper=Stepper;class StepIntoStepper extends Stepper{constructor(filePath,line,column,startStackSize){super(filePath,line,column,startStackSize)}isComplete(ast,currentStackSize){return this.isAstLocationChanged(ast)||
currentStackSize!==this._stepStartData.stackSize}}exports.StepIntoStepper=StepIntoStepper;class StepOverStepper extends Stepper{constructor(filePath,line,column,stackSize){super(filePath,line,column,stackSize)}isComplete(ast,currentStackSize){return currentStackSize<this._stepStartData.stackSize||currentStackSize===this._stepStartData.stackSize&&this.isAstLocationChanged(ast)}}exports.StepOverStepper=StepOverStepper;class StepOutStepper extends Stepper{constructor(filePath,line,column,stackSize){super(filePath,
line,column,stackSize)}isComplete(ast,currentStackSize){return currentStackSize<this._stepStartData.stackSize}}exports.StepOutStepper=StepOutStepper},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.StopEventManager=void 0;var _invariant=_interopRequireDefault(__webpack_require__(621));var _Breakpoint=__webpack_require__(620);var _Stepper=__webpack_require__(627);var _types=__webpack_require__(21);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}class StopEventManager{getDebuggeeStopReason(ast,stoppables){if(stoppables.length===0)return;let stoppable=stoppables[0];let stoppedReason;if(stoppable instanceof _Breakpoint.Breakpoint)stoppedReason="Breakpoint";else if(stoppable instanceof _Stepper.StepIntoStepper)stoppedReason="Step Into";else if(stoppable instanceof _Stepper.StepOverStepper)stoppedReason="Step Over";else if(stoppable instanceof _Stepper.StepOutStepper)stoppedReason="Step Out";else(0,_invariant.default)(false,
"Invalid stoppable object");return stoppedReason}}exports.StopEventManager=StopEventManager},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=simplifyAndRefineAbstractValue;var _errors=__webpack_require__(3);var _index=__webpack_require__(15);var _invariant=_interopRequireDefault(__webpack_require__(9));var _realm=__webpack_require__(7);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _EmptyValue=
_interopRequireDefault(__webpack_require__(383));var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function simplifyAndRefineAbstractValue(realm,isCondition,value){if(value.intrinsicName!==undefined)return value;let savedHandler=realm.errorHandler;let savedIsReadOnly=realm.isReadOnly;realm.isReadOnly=true;let isRootSimplification=false;realm.statistics.simplificationAttempts++;if(!realm.inSimplificationPath)realm.inSimplificationPath=
isRootSimplification=true;try{realm.errorHandler=(diagnostic)=>{if(diagnostic.errorCode==="PP0029")throw new _errors.FatalError(`${diagnostic.errorCode}: ${diagnostic.message}`);throw new _errors.FatalError;};let result=simplify(realm,value,isCondition,0);if(result!==value)realm.statistics.simplifications++;return result}catch(e){if(e.name==="Invariant Violation")throw e;if(e instanceof _errors.FatalError&&typeof e.message==="string"&&e.message.includes("PP0029")){if(isRootSimplification)return value;
throw e;}return value}finally{if(isRootSimplification){realm.abstractValueImpliesCounter=0;realm.inSimplificationPath=false}realm.errorHandler=savedHandler;realm.isReadOnly=savedIsReadOnly}}function simplify(realm,value,isCondition=false,depth){if(value instanceof _index2.ConcreteValue||depth>5)return value;(0,_invariant.default)(value instanceof _index2.AbstractValue);if(isCondition||value.getType()===_index2.BooleanValue){if(_singletons.Path.implies(value,depth+1))return realm.intrinsics.true;if(_singletons.Path.impliesNot(value,
depth+1))return realm.intrinsics.false}let loc=value.expressionLocation;let op=value.kind;switch(op){case "!":{let [x0]=value.args;(0,_invariant.default)(x0 instanceof _index2.AbstractValue);if(x0.kind==="!"){(0,_invariant.default)(x0 instanceof _index2.AbstractValue);let [x00]=x0.args;let xx=simplify(realm,x00,true,depth+1);if(isCondition||xx.getType()===_index2.BooleanValue)return xx}return negate(realm,x0,depth+1,loc,value,isCondition)}case "||":case "&&":{let [x0,y0]=value.args;let x=simplify(realm,
x0,isCondition,depth+1);let y=simplify(realm,y0,isCondition,depth+1);if(x instanceof _index2.AbstractValue&&x.equals(y))return x;if(!x.mightNotBeTrue())return op==="&&"?y:x;if(!x.mightNotBeFalse())return op==="||"?y:x;if(isCondition||x.getType()===_index2.BooleanValue&&y.getType()===_index2.BooleanValue){if(!y.mightNotBeTrue())return op==="&&"?x:realm.intrinsics.true;if(!y.mightNotBeFalse())return op==="||"?x:realm.intrinsics.false}if(op==="||")if(y instanceof _index2.AbstractValue&&y.kind==="||"){if(x.equals(y.args[0]))return y;
if(x instanceof _index2.AbstractValue&&x.kind==="!")if(isCondition&&x.args[0].equals(y.args[1]))return realm.intrinsics.true}if(op==="&&"){if(x instanceof _index2.AbstractValue)if(x.kind==="&&"){if(isCondition&&x.args[0].equals(y))return x;if(x.args[1].equals(y))return x}else if(x.kind==="!")if(isCondition&&x.args[0].equals(y))return realm.intrinsics.false;if(y instanceof _index2.AbstractValue&&y.kind==="&&")if(x.equals(y.args[0])||x.equals(y.args[1]))return y;if(y instanceof _index2.AbstractValue&&
y.kind==="||"){let [yx,yy]=y.args;let yxs,yys;if(yx instanceof _index2.AbstractValue&&yx.kind==="&&")if(x.equals(yx.args[0]))yxs=yx.args[1];else if(x.equals(yx.args[1]))yxs=yx.args[0];if(yy instanceof _index2.AbstractValue&&yy.kind==="&&")if(x.equals(yy.args[0]))yys=yy.args[1];else if(x.equals(yy.args[1]))yys=yy.args[0];if(yxs!==undefined||yys!==undefined){let ys=_index2.AbstractValue.createFromLogicalOp(realm,"||",yxs||yx,yys||yy,undefined,isCondition);return _index2.AbstractValue.createFromLogicalOp(realm,
"&&",x,ys,undefined,isCondition)}}}if(realm.instantRender.enabled)if(op==="||"&&x0 instanceof _index2.AbstractValue&&y0 instanceof _index2.AbstractValue)if(x0.kind==="==="&&y0.kind==="==="){let [xa,xb]=x0.args;let [ya,yb]=y0.args;if(xa.equals(ya)&&!xb.equals(yb)&&nullOrUndefined(xb)&&nullOrUndefined(yb))return rewrite(xa);else if(xb.equals(yb)&&!xa.equals(ya)&&nullOrUndefined(xa)&&nullOrUndefined(ya))return rewrite(xb);else if(xa.equals(yb)&&!xb.equals(ya)&&nullOrUndefined(xb)&&nullOrUndefined(ya))return rewrite(xa);
else if(xb.equals(ya)&&!xa.equals(yb)&&nullOrUndefined(xa)&&nullOrUndefined(yb))return rewrite(xb);function nullOrUndefined(z){return!z.mightNotBeNull()||!z.mightNotBeUndefined()}function rewrite(z){return _index2.AbstractValue.createFromBuildFunction(realm,_index2.BooleanValue,[xa],(0,_generator.createOperationDescriptor)("CANNOT_BECOME_OBJECT"),{kind:"global.__cannotBecomeObject(A)"})}}if(x.equals(x0)&&y.equals(y0))return value;return _index2.AbstractValue.createFromLogicalOp(realm,value.kind,x,
y,loc,isCondition,true)}case "<":case "<=":case ">":case ">=":return distributeConditional(realm,value,isCondition,(args)=>_index2.AbstractValue.createFromBinaryOp(realm,op,args[0],args[1],loc,undefined,isCondition,true));case "==":case "!=":case "===":case "!==":return simplifyEquality(realm,value,depth+1);case "conditional":{let [c0,x0,y0]=value.args;let c=simplify(realm,c0,true,depth+1);let x,y;if(c0 instanceof _index2.AbstractValue&&c.mightBeFalse()&&c.mightBeTrue()){try{x=_singletons.Path.withCondition(c0,
()=>simplify(realm,x0,isCondition,depth+1))}catch(e){if(e instanceof _errors.InfeasiblePathError)return simplify(realm,y0,isCondition,depth+1);throw e;}try{y=_singletons.Path.withInverseCondition(c0,()=>simplify(realm,y0,isCondition,depth+1))}catch(e){if(e instanceof _errors.InfeasiblePathError)return x;throw e;}}let cIsFalse=!c.mightNotBeFalse();let cIsTrue=!c.mightNotBeTrue();if(x===undefined&&!cIsFalse)x=simplify(realm,x0,isCondition,depth+1);if(cIsTrue){(0,_invariant.default)(x!==undefined);return x}if(y===
undefined)y=simplify(realm,y0,isCondition,depth+1);if(cIsFalse)return y;(0,_invariant.default)(x!==undefined);(0,_invariant.default)(c instanceof _index2.AbstractValue);if(_singletons.Path.implies(c,depth+1))return x;let notc=_index2.AbstractValue.createFromUnaryOp(realm,"!",c,true,loc,isCondition,true);if(!notc.mightNotBeTrue())return y;if(!notc.mightNotBeFalse())return x;(0,_invariant.default)(notc instanceof _index2.AbstractValue);if(_singletons.Path.implies(notc,depth+1))return y;if(!isCondition){if(_singletons.Path.implies(_index2.AbstractValue.createFromBinaryOp(realm,
"===",value,x),depth+1))return x;if(!x.mightBeNumber()&&_singletons.Path.implies(_index2.AbstractValue.createFromBinaryOp(realm,"!==",value,x),depth+1))return y;if(!y.mightBeNumber()&&_singletons.Path.implies(_index2.AbstractValue.createFromBinaryOp(realm,"!==",value,y),depth+1))return x;if(_singletons.Path.implies(_index2.AbstractValue.createFromBinaryOp(realm,"===",value,y),depth+1))return y}if(x.equals(y))return x;let cs=isCondition?c:simplify(realm,c0,false,depth+1);if(cs.equals(x))return _index2.AbstractValue.createFromLogicalOp(realm,
"||",x,y,loc,isCondition,true);if(cs.equals(y))return _index2.AbstractValue.createFromLogicalOp(realm,"&&",y,x,loc,isCondition,true);if(x instanceof _index2.AbstractValue&&x.kind==="conditional"){let [xc,xx]=x.args;if(c.equals(xc))return _index2.AbstractValue.createFromConditionalOp(realm,c,xx,y,value.expressionLocation,isCondition,true)}if(y instanceof _index2.AbstractValue&&y.kind==="conditional"){let [yc,,z]=y.args;if(c.equals(yc))return _index2.AbstractValue.createFromConditionalOp(realm,c,x,
z,value.expressionLocation,isCondition,true)}if(isCondition||x.getType()===_index2.BooleanValue&&y.getType()===_index2.BooleanValue){if(!x.mightNotBeTrue()&&!y.mightNotBeFalse())return c;if(!x.mightNotBeFalse()&&!y.mightNotBeTrue())return _index2.AbstractValue.createFromUnaryOp(realm,"!",c,true,loc,true)}if(c.equals(c0)&&x.equals(x0)&&y.equals(y0))return value;return _index2.AbstractValue.createFromConditionalOp(realm,c,x,y,value.expressionLocation,isCondition,true)}case "abstractConcreteUnion":{if(realm.pathConditions.isEmpty())return value;
let [abstractValue,concreteValues]=_index2.AbstractValue.dischargeValuesFromUnion(realm,value);(0,_invariant.default)(abstractValue instanceof _index2.AbstractValue);let remainingConcreteValues=[];for(let concreteValue of concreteValues){if(_singletons.Path.implies(_index2.AbstractValue.createFromBinaryOp(realm,"!==",value,concreteValue),depth+1))continue;if(_singletons.Path.implies(_index2.AbstractValue.createFromBinaryOp(realm,"===",value,concreteValue),depth+1))return concreteValue;remainingConcreteValues.push(concreteValue)}if(remainingConcreteValues.length===
0)return abstractValue;if(remainingConcreteValues.length===concreteValues.length)return value;return _index2.AbstractValue.createAbstractConcreteUnion(realm,abstractValue,remainingConcreteValues)}default:return value}}function distributeConditional(realm,value,isCondition,create){let condition;let args=value.args;for(let arg of args)if(arg instanceof _index2.AbstractValue&&arg.kind==="conditional")if(condition===undefined)condition=arg.args[0];else if(condition!==arg.args[0])return value;if(condition===
undefined)return value;let leftArgs=args.slice(0);let rightArgs=args.slice(0);for(let i=0;i<args.length;i++){let arg=args[i];if(arg instanceof _index2.AbstractValue&&arg.kind==="conditional"){leftArgs[i]=arg.args[1];rightArgs[i]=arg.args[2]}}return _index2.AbstractValue.createFromConditionalOp(realm,condition,create(leftArgs),create(rightArgs),condition.expressionLocation,isCondition,true)}function simplifyNullCheck(realm,op,value,depth,loc){if(op==="=="||op==="!="){if(!value.mightNotBeNull()||!value.mightNotBeUndefined())return op===
"=="?realm.intrinsics.true:realm.intrinsics.false;if(!value.mightBeNull()&&!value.mightBeUndefined())return op==="=="?realm.intrinsics.false:realm.intrinsics.true}else{if(!value.mightNotBeNull())return op==="==="?realm.intrinsics.true:realm.intrinsics.false;if(!value.mightBeNull())return op==="==="?realm.intrinsics.false:realm.intrinsics.true}(0,_invariant.default)(value instanceof _index2.AbstractValue);if(value.kind==="conditional"&&depth<10){let [cond,x,y]=value.args;let sx=simplifyNullCheck(realm,
op,x,depth+1,loc);let sy=simplifyNullCheck(realm,op,y,depth+1,loc);if(sx!==undefined&&sy!==undefined){if(!sx.mightNotBeTrue()&&!sy.mightNotBeFalse())return makeBoolean(realm,cond,loc);if(!sx.mightNotBeFalse()&&!sy.mightNotBeTrue())return negate(realm,cond,depth+1,loc)}if(sx!==undefined||sy!==undefined){if(sx===undefined)sx=_index2.AbstractValue.createFromBinaryOp(realm,op,x,realm.intrinsics.null,x.expressionLocation,undefined,false,true);if(sy===undefined)sy=_index2.AbstractValue.createFromBinaryOp(realm,
op,y,realm.intrinsics.null,y.expressionLocation,undefined,false,true);return _index2.AbstractValue.createFromConditionalOp(realm,cond,sx,sy,loc,true,true)}}}function simplifyUndefinedCheck(realm,op,value,depth,loc){if(op==="=="||op==="!="){if(!value.mightNotBeNull()||!value.mightNotBeUndefined())return op==="=="?realm.intrinsics.true:realm.intrinsics.false;if(!value.mightBeNull()&&!value.mightBeUndefined())return op==="=="?realm.intrinsics.false:realm.intrinsics.true}else{if(!value.mightNotBeUndefined())return op===
"==="?realm.intrinsics.true:realm.intrinsics.false;if(!value.mightBeUndefined())return op==="==="?realm.intrinsics.false:realm.intrinsics.true}(0,_invariant.default)(value instanceof _index2.AbstractValue);if(value.kind==="conditional"&&depth<10){let [cond,x,y]=value.args;let sx=simplifyUndefinedCheck(realm,op,x,depth+1,loc);let sy=simplifyUndefinedCheck(realm,op,y,depth+1,loc);if(sx!==undefined&&sy!==undefined){if(!sx.mightNotBeTrue()&&!sy.mightNotBeFalse())return makeBoolean(realm,cond,loc);if(!sx.mightNotBeFalse()&&
!sy.mightNotBeTrue())return negate(realm,cond,depth+1,loc)}if(sx!==undefined||sy!==undefined){if(sx===undefined)sx=_index2.AbstractValue.createFromBinaryOp(realm,op,x,realm.intrinsics.undefined,x.expressionLocation,undefined,false,true);if(sy===undefined)sy=_index2.AbstractValue.createFromBinaryOp(realm,op,y,realm.intrinsics.undefined,y.expressionLocation,undefined,false,true);return _index2.AbstractValue.createFromConditionalOp(realm,cond,sx,sy,loc,true,true)}}}function simplifyEquality(realm,equality,
depth){let loc=equality.expressionLocation;let op=equality.kind;let [x,y]=equality.args;if(y instanceof _EmptyValue.default)return equality;if(x instanceof _index2.ConcreteValue)[x,y]=[y,x];if(op==="==="||op==="=="||op==="!=="||op==="=="){if(!x.mightNotBeNull()){let sy=simplifyNullCheck(realm,op,y,depth+1);if(sy!==undefined)return sy}if(!y.mightNotBeNull()){let sx=simplifyNullCheck(realm,op,x,depth+1);if(sx!==undefined)return sx}if(!x.mightNotBeUndefined()){let sy=simplifyUndefinedCheck(realm,op,
y,depth+1);if(sy!==undefined)return sy}if(!y.mightNotBeUndefined()){let sx=simplifyUndefinedCheck(realm,op,x,depth+1);if(sx!==undefined)return sx}}if(op==="==="){let xType=x.getType();let yType=y.getType();if(xType!==yType){if(xType===_index2.Value||xType===_index2.PrimitiveValue||yType===_index2.Value||yType===_index2.PrimitiveValue)return equality;if(_index2.Value.isTypeCompatibleWith(xType,_index2.NumberValue)&&_index2.Value.isTypeCompatibleWith(yType,_index2.NumberValue)||_index2.Value.isTypeCompatibleWith(xType,
_index2.ObjectValue)&&_index2.Value.isTypeCompatibleWith(yType,_index2.ObjectValue))return equality;return realm.intrinsics.false}else if(x instanceof _index2.AbstractValue&&x.kind==="conditional"){let [cond,xx,xy]=x.args;if(xx.equals(y)&&!xy.equals(y))return cond;if(!xx.equals(y)&&xy.equals(y))return negate(realm,cond,depth+1,loc)}else if(y instanceof _index2.AbstractValue&&y.kind==="conditional"){let [cond,yx,yy]=y.args;if(yx.equals(x)&&!yy.equals(x))return cond;if(!x.equals(yx)&&x.equals(yy))return negate(realm,
cond,depth+1,loc)}}else if(op==="=="){let xType=x.getType();let xIsNullOrUndefined=xType===_index2.NullValue||xType===_index2.UndefinedValue;let yType=y.getType();let yIsNullOrUndefined=yType===_index2.NullValue||yType===_index2.UndefinedValue;(0,_invariant.default)(!xIsNullOrUndefined||!yIsNullOrUndefined);if(xIsNullOrUndefined)return yType===_index2.Value||yType===_index2.PrimitiveValue?equality:realm.intrinsics.false;if(yIsNullOrUndefined)return xType===_index2.Value||xType===_index2.PrimitiveValue?
equality:realm.intrinsics.false}return equality}function makeBoolean(realm,value,loc=undefined){if(value.getType()===_index2.BooleanValue)return value;if(value instanceof _index2.ConcreteValue)return new _index2.BooleanValue(realm,_singletons.To.ToBoolean(realm,value));(0,_invariant.default)(value instanceof _index2.AbstractValue);let v=_index2.AbstractValue.createFromUnaryOp(realm,"!",value,true,value.expressionLocation);if(v instanceof _index2.ConcreteValue)return new _index2.BooleanValue(realm,
!_singletons.To.ToBoolean(realm,v));(0,_invariant.default)(v instanceof _index2.AbstractValue);return _index2.AbstractValue.createFromUnaryOp(realm,"!",v,true,loc||value.expressionLocation)}function negate(realm,value,depth=0,loc=undefined,unsimplifiedNegation=undefined,isCondition){if(value instanceof _index2.ConcreteValue)return _index.ValuesDomain.computeUnary(realm,"!",value);(0,_invariant.default)(value instanceof _index2.AbstractValue);value=simplify(realm,value,true,depth+1);if(!value.mightNotBeTrue())return realm.intrinsics.false;
if(!value.mightNotBeFalse())return realm.intrinsics.true;(0,_invariant.default)(value instanceof _index2.AbstractValue);if(value.kind==="!"){let [x]=value.args;if(isCondition||x.getType()===_index2.BooleanValue)return simplify(realm,x,true,depth+1);if(unsimplifiedNegation!==undefined)return unsimplifiedNegation;return makeBoolean(realm,x,loc)}if(value.args.length===2&&!value.args[0].mightBeNumber()&&!value.args[1].mightBeNumber()){let invertedComparison;switch(value.kind){case "===":invertedComparison=
"!==";break;case "==":invertedComparison="!=";break;case "!==":invertedComparison="===";break;case "!=":invertedComparison="==";break;case "<":invertedComparison=">=";break;case "<=":invertedComparison=">";break;case ">":invertedComparison="<=";break;case ">=":invertedComparison="<";break;default:break}if(invertedComparison!==undefined){let left=simplify(realm,value.args[0],false,depth+1);let right=simplify(realm,value.args[1],false,depth+1);return _index2.AbstractValue.createFromBinaryOp(realm,invertedComparison,
left,right,loc||value.expressionLocation)}let invertedLogicalOp;switch(value.kind){case "&&":invertedLogicalOp="||";break;case "||":invertedLogicalOp="&&";break;default:break}if(invertedLogicalOp!==undefined){let left=negate(realm,value.args[0],depth+1);let right=negate(realm,value.args[1],depth+1);return _index2.AbstractValue.createFromLogicalOp(realm,invertedLogicalOp,left,right,loc||value.expressionLocation,true)}}if(unsimplifiedNegation!==undefined)return unsimplifiedNegation;return _index2.AbstractValue.createFromUnaryOp(realm,
"!",value,true,loc||value.expressionLocation,true)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _global=_interopRequireDefault(__webpack_require__(631));var _global2=_interopRequireDefault(__webpack_require__(633));var _global3=_interopRequireDefault(__webpack_require__(636));var _global4=_interopRequireDefault(__webpack_require__(637));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
function _default(realm){(0,_global.default)(realm);if(realm.isCompatibleWith("browser"))(0,_global2.default)(realm);if(realm.isCompatibleWith("fb-www")||realm.isCompatibleWith("node-react")){(0,_global2.default)(realm);(0,_global4.default)(realm)}if(realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)||realm.isCompatibleWith("mobile"))(0,_global3.default)(realm);return realm}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.createAbstractFunction=
createAbstractFunction;exports.default=_default;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _index2=__webpack_require__(232);var _index3=__webpack_require__(15);var _invariant=_interopRequireDefault(__webpack_require__(9));var _utils=__webpack_require__(632);var _utils2=__webpack_require__(443);var _utils3=__webpack_require__(291);var _errors=__webpack_require__(3);var t=_interopRequireWildcard(__webpack_require__(21));var _generator=__webpack_require__(237);var _ShapeInformation=
__webpack_require__(419);var _descriptors=__webpack_require__(268);function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function createAbstractFunction(realm,...additionalValues){return new _index.NativeFunctionValue(realm,"global.__abstract","__abstract",0,(context,[typeNameOrTemplate,_name,options])=>{let name=_name;if(name instanceof _index.StringValue)name=name.value;if(name!==undefined&&typeof name!=="string")throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"intrinsic name argument is not a string");if(options&&!(options instanceof _index.ObjectValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"options must be an ObjectValue if provided");return(0,_utils.createAbstract)(realm,typeNameOrTemplate,name,options,...additionalValues)})}function _default(realm){let global=realm.$GlobalObject;global.$DefineOwnProperty("__dump",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__dump","__dump",0,(context,args)=>{console.log("dump",args.map((arg)=>arg.serialize()));return context}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__abstract",
new _descriptors.PropertyDescriptor({value:createAbstractFunction(realm),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__abstractOrNull",new _descriptors.PropertyDescriptor({value:createAbstractFunction(realm,realm.intrinsics.null),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__abstractOrNullOrUndefined",new _descriptors.PropertyDescriptor({value:createAbstractFunction(realm,realm.intrinsics.null,realm.intrinsics.undefined),writable:true,
enumerable:false,configurable:true}));global.$DefineOwnProperty("__abstractOrUndefined",new _descriptors.PropertyDescriptor({value:createAbstractFunction(realm,realm.intrinsics.undefined),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__optimize",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__optimize","__optimize",1,(context,[value,argModelString])=>{let argModel;if(argModelString!==undefined)argModel=(0,_ShapeInformation.createAndValidateArgModel)(realm,
argModelString);if(value instanceof _index.ECMAScriptSourceFunctionValue||value instanceof _index.AbstractValue){let currentArgModel=realm.optimizedFunctions.get(value);if(currentArgModel){let currentString=argModelString instanceof _index.StringValue?argModelString.value:argModelString;if(JSON.stringify(currentArgModel)!==currentString){let argModelError=new _errors.CompilerDiagnostic("__optimize called twice with different argModelStrings",realm.currentLocation,"PP1008","Warning");if(realm.handleError(argModelError)!==
"Recover")throw new _errors.FatalError;else return realm.intrinsics.undefined}}realm.optimizedFunctions.set(value,argModel)}else{let location=value.expressionLocation?`${value.expressionLocation.start.line}:${value.expressionLocation.start.column} `+`${value.expressionLocation.end.line}:${value.expressionLocation.end.line}`:"location unknown";let result=realm.handleError(new _errors.CompilerDiagnostic(`Optimized Function Value ${location} is an not a function or react element`,realm.currentLocation,
"PP0033","Warning"));if(result!=="Recover")throw new _errors.FatalError;else return realm.intrinsics.undefined}return value}),writable:true,enumerable:false,configurable:true}));if(realm.react.enabled){global.$DefineOwnProperty("__reactComponentTrees",new _descriptors.PropertyDescriptor({value:new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,"__reactComponentTrees",true),writable:true,enumerable:false,configurable:true}));let reactComponentRootUid=0;global.$DefineOwnProperty("__optimizeReactComponentTree",
new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__optimizeReactComponentTree","__optimizeReactComponentTree",0,(context,[component,config])=>{let hasValidComponent=component instanceof _index.ECMAScriptSourceFunctionValue||component instanceof _index.BoundFunctionValue||(0,_utils3.valueIsKnownReactAbstraction)(realm,component);let hasValidConfig=config instanceof _index.ObjectValue||config===realm.intrinsics.undefined||config===undefined;if(!hasValidComponent||
!hasValidConfig){let diagnostic=new _errors.CompilerDiagnostic("__optimizeReactComponentTree(rootComponent, config) has been called with invalid arguments",realm.currentLocation,"PP0024","FatalError");realm.handleError(diagnostic);if(realm.handleError(diagnostic)==="Fail")throw new _errors.FatalError;}let reactComponentTree=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype);reactComponentTree.$Set("rootComponent",component,reactComponentTree);reactComponentTree.$Set("config",config||realm.intrinsics.undefined,
reactComponentTree);realm.assignToGlobal(t.memberExpression(t.memberExpression(t.identifier("global"),t.identifier("__reactComponentTrees")),t.identifier(""+reactComponentRootUid++)),reactComponentTree);return component}),writable:true,enumerable:false,configurable:true}))}global.$DefineOwnProperty("__evaluatePureFunction",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__evaluatePureFunction","__evaluatePureFunction",0,(context,[functionValue,callback])=>{(0,
_invariant.default)(functionValue instanceof _index.ECMAScriptSourceFunctionValue);(0,_invariant.default)(typeof functionValue.$Call==="function");let functionCall=functionValue.$Call;return realm.evaluatePure(()=>functionCall(realm.intrinsics.undefined,[]),true,callback===undefined||callback===realm.intrinsics.undefined?null:()=>{(0,_invariant.default)(callback instanceof _index.ECMAScriptSourceFunctionValue);let call=callback.$Call;(0,_invariant.default)(call!==undefined);call(realm.intrinsics.undefined,
[])})}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__initializedModules",new _descriptors.PropertyDescriptor({value:new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,"__initializedModules",true),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__checkedBindings",new _descriptors.PropertyDescriptor({value:new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,"__checkedBindings",true),writable:true,enumerable:false,
configurable:true}));function createNativeFunctionForResidualCall(unsafe){return new _index.NativeFunctionValue(realm,"global.__residual","__residual",2,(context,[typeNameOrTemplate,f,...args])=>{if(!realm.useAbstractInterpretation)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"realm is not partial");let {type,template}=(0,_utils.parseTypeNameOrTemplate)(realm,typeNameOrTemplate);if(!_index.Value.isTypeCompatibleWith(f.constructor,_index.FunctionValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"cannot determine residual function");(0,_invariant.default)(f instanceof _index.FunctionValue);f.isResidual=true;if(unsafe)f.isUnsafeResidual=true;let result=_index.AbstractValue.createTemporalFromBuildFunction(realm,type,[f].concat(args),(0,_generator.createOperationDescriptor)("RESIDUAL_CALL"));if(template){(0,_invariant.default)(result instanceof _index.AbstractValue,"the nested properties should only be rebuilt for an abstract value");template.makePartial();result.values=new _index3.ValuesDomain(new Set([template]));
(0,_invariant.default)(realm.generator);realm.rebuildNestedProperties(result,result.getIdentifier())}return result})}function createNativeFunctionForResidualInjection(name,initializeAndValidateArgs,operationDescriptor,numArgs){return new _index.NativeFunctionValue(realm,"global."+name,name,numArgs,(context,ciArgs)=>{initializeAndValidateArgs(ciArgs);(0,_invariant.default)(realm.generator!==undefined);realm.generator.emitStatement(ciArgs,operationDescriptor);return realm.intrinsics.undefined})}global.$DefineOwnProperty("__assume",
new _descriptors.PropertyDescriptor({value:createNativeFunctionForResidualInjection("__assume",([c,s])=>{if(!c.mightBeTrue()){let error=new _errors.CompilerDiagnostic(`Assumed condition cannot hold`,realm.currentLocation,"PP0040","FatalError");realm.handleError(error);throw new _errors.FatalError;}_singletons.Path.pushAndRefine(c)},(0,_generator.createOperationDescriptor)("ASSUME_CALL"),2),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__debugValue",new _descriptors.PropertyDescriptor({value:createNativeFunctionForResidualInjection("__debugValue",
([v,s])=>{debugger},(0,_generator.createOperationDescriptor)("NOOP"),2),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__residual",new _descriptors.PropertyDescriptor({value:createNativeFunctionForResidualCall(false),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__residual_unsafe",new _descriptors.PropertyDescriptor({value:createNativeFunctionForResidualCall(true),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__isAbstract",
new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__isAbstract","__isAbstract",1,(context,[value])=>{return new _index.BooleanValue(realm,value instanceof _index.AbstractValue)}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__makePartial",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__makePartial","__makePartial",1,(context,[object])=>{if(object instanceof _index.AbstractObjectValue||
object instanceof _index.ObjectValue){object.makePartial();return object}throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not an (abstract) object");}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__makeFinal",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__makeFinal","__makeFinal",1,(context,[object])=>{if(object instanceof _index.ObjectValue||object instanceof _index.AbstractObjectValue&&!object.values.isTop()){object.makeFinal();
return object}throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"not an object or abstract object value (non-top)");}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__makeSimple",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__makeSimple","__makeSimple",1,(context,[object,option])=>{if(object instanceof _index.AbstractObjectValue||object instanceof _index.ObjectValue){object.makeSimple(option);return object}throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"not an (abstract) object");}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__assumeDataProperty",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__assumeDataProperty","__assumeDataProperty",3,(context,[object,propertyName,value,invariantOptions])=>{if(!realm.useAbstractInterpretation)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"realm is not partial");if(object instanceof _index.AbstractObjectValue||object instanceof
_index.ObjectValue){let generator=realm.generator;(0,_invariant.default)(generator);let key=_singletons.To.ToStringPartial(realm,propertyName);if(realm.emitConcreteModel)generator.emitConcreteModel(key,value);else if(realm.invariantLevel>=1){let invariantOptionString=invariantOptions?_singletons.To.ToStringPartial(realm,invariantOptions):"FULL_INVARIANT";switch(invariantOptionString){case "VALUE_DEFINED_INVARIANT":generator.emitPropertyInvariant(object,key,value.mightBeUndefined()?"PRESENT":"DEFINED");
break;case "SKIP_INVARIANT":break;case "FULL_INVARIANT":generator.emitFullInvariant(object,key,value);break;default:(0,_invariant.default)(false,"Invalid invariantOption "+invariantOptionString)}if(!realm.neverCheckProperty(object,key))realm.markPropertyAsChecked(object,key)}realm.generator=undefined;object.$Set(key,value,object);realm.generator=generator;if(object.intrinsicName)realm.rebuildObjectProperty(object,key,value,object.intrinsicName);return context.$Realm.intrinsics.undefined}throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"not an (abstract) object");}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__replaceFunctionImplementation_unsafe",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__replaceFunctionImplementation_unsafe","__replaceFunctionImplementation_unsafe",2,(context,[target,source])=>{if(!(target instanceof _index.ECMAScriptSourceFunctionValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"first argument is not a function with source code");
if(!(source instanceof _index.ECMAScriptSourceFunctionValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"second argument is not a function with source code");target.$Environment=source.$Environment;target.$ScriptOrModule=source.$ScriptOrModule;target.$ConstructorKind=source.$ConstructorKind;target.$ThisMode=source.$ThisMode;target.$HomeObject=source.$HomeObject;target.$FunctionKind=source.$FunctionKind;target.$Strict=source.$Strict;target.$FormalParameters=source.$FormalParameters;
target.$ECMAScriptCode=source.$ECMAScriptCode;target.$HasComputedName=source.$HasComputedName;target.$HasEmptyConstructor=source.$HasEmptyConstructor;target.loc=source.loc;return context.$Realm.intrinsics.undefined}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__IntrospectionError",new _descriptors.PropertyDescriptor({value:realm.intrinsics.__IntrospectionError,writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__isIntegral",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,
"global.__isIntegral","__isIntegral",1,(context,[value])=>{return new _index.BooleanValue(realm,value instanceof _index.IntegralValue)}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__describe",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__describe","__describe",1,(context,[value])=>{return new _index.StringValue(realm,(0,_utils2.describeValue)(value))}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__fatal",
new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__fatal","__fatal",0,(context,[])=>{throw new _errors.FatalError;}),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("__eagerlyRequireModuleDependencies",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.__eagerlyRequireModuleDependencies","__eagerlyRequireModuleDependencies",1,(context,[functionValue])=>{if(!(0,_index2.IsCallable)(realm,functionValue)||
!(functionValue instanceof _index.FunctionValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"argument must be callable function");let functionCall=functionValue.$Call;if(typeof functionCall!=="function")throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"argument must be directly callable");let old=realm.eagerlyRequireModuleDependencies;realm.eagerlyRequireModuleDependencies=true;try{return functionCall(realm.intrinsics.undefined,[])}finally{realm.eagerlyRequireModuleDependencies=
old}}),writable:true,enumerable:false,configurable:true}))}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.parseTypeNameOrTemplate=parseTypeNameOrTemplate;exports.createAbstract=createAbstract;var _index=__webpack_require__(10);var _PreludeGenerator=__webpack_require__(238);var _index2=__webpack_require__(15);var _Error=__webpack_require__(424);var _singletons=__webpack_require__(236);var _AbstractObjectValue=_interopRequireDefault(__webpack_require__(395));
var _errors=__webpack_require__(3);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const throwTemplateSrc="(function(){throw new global.Error('abstract value defined at ' + A);})()";function parseTypeNameOrTemplate(realm,typeNameOrTemplate){if(typeNameOrTemplate===undefined||typeNameOrTemplate instanceof _index.UndefinedValue)return{type:_index.Value,template:undefined};else if(typeof typeNameOrTemplate===
"string"){let type=_singletons.Utils.getTypeFromName(typeNameOrTemplate);if(type===undefined)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"unknown typeNameOrTemplate");return{type,template:undefined}}else if(typeNameOrTemplate instanceof _index.StringValue){let typeNameString=_singletons.To.ToStringPartial(realm,typeNameOrTemplate);let hasFunctionResultType=typeNameString.startsWith(":");if(hasFunctionResultType)typeNameString=typeNameString.substring(1);let type=_singletons.Utils.getTypeFromName(typeNameString);
if(type===undefined)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"unknown typeNameOrTemplate");return hasFunctionResultType?{type:_index.FunctionValue,template:undefined,functionResultType:type}:{type,template:undefined}}else if(typeNameOrTemplate instanceof _index.FunctionValue)return{type:_index.FunctionValue,template:typeNameOrTemplate};else if(typeNameOrTemplate instanceof _index.ObjectValue)return{type:_index.ObjectValue,template:typeNameOrTemplate};else throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,
"typeNameOrTemplate has unsupported type");}function createAbstract(realm,typeNameOrTemplate,name,options,...additionalValues){if(!realm.useAbstractInterpretation)throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"realm is not partial");let {type,template,functionResultType}=parseTypeNameOrTemplate(realm,typeNameOrTemplate);let optionsMap=options?options.properties:new Map;let result;let locString,loc=null;for(let executionContext of realm.contextStack.slice().reverse()){let caller=
executionContext.caller;loc=executionContext.loc;locString=(0,_Error.describeLocation)(realm,caller?caller.function:undefined,caller?caller.lexicalEnvironment:undefined,loc);if(locString!==undefined)break}if(name===undefined){let locVal=new _index.StringValue(realm,locString!==undefined?locString:"(unknown location)");result=_index.AbstractValue.createFromTemplate(realm,throwTemplateSrc,type,[locVal]);result.hashValue=++realm.objectCount}else{if(!optionsMap.get("allowDuplicateNames")&&!realm.isNameStringUnique(name)){let error=
new _errors.CompilerDiagnostic("An abstract value with the same name exists",loc,"PP0019","FatalError");realm.handleError(error);throw new _errors.FatalError;}else realm.saveNameString(name);result=_index.AbstractValue.createFromTemplate(realm,optionsMap.get("disablePlaceholders")?name+_PreludeGenerator.DisablePlaceholderSuffix:name,type,[]);result.intrinsicName=name}if(template)result.values=new _index2.ValuesDomain(new Set([template]));if(template&&!(template instanceof _index.FunctionValue)){template.makePartial();
if(name!==undefined)realm.rebuildNestedProperties(result,name)}if(functionResultType){(0,_invariant.default)(result instanceof _AbstractObjectValue.default);result.functionResultType=functionResultType}if(additionalValues.length>0)result=_index.AbstractValue.createAbstractConcreteUnion(realm,result,additionalValues);return result}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _document=
_interopRequireDefault(__webpack_require__(634));var _console=_interopRequireDefault(__webpack_require__(635));var _errors=__webpack_require__(3);var _invariant=_interopRequireDefault(__webpack_require__(9));var _index2=__webpack_require__(15);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let global=realm.$GlobalObject;if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))global.$DefineOwnProperty("console",
new _descriptors.PropertyDescriptor({value:(0,_console.default)(realm),writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("self",new _descriptors.PropertyDescriptor({value:global,writable:true,enumerable:true,configurable:true}));global.$DefineOwnProperty("window",new _descriptors.PropertyDescriptor({value:global,writable:true,enumerable:true,configurable:true}));global.$DefineOwnProperty("document",new _descriptors.PropertyDescriptor({value:(0,_document.default)(realm),
writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("setTimeout",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.setTimeout","",2,(context,args)=>{let callback=args[0].throwIfNotConcrete();if(!(callback instanceof _index.FunctionValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"callback arguments must be function");if(!realm.useAbstractInterpretation)throw new _errors.FatalError("TODO #1003: implement global.setTimeout");
(0,_invariant.default)(realm.generator!==undefined);let generator=realm.generator;return generator.emitCallAndCaptureResult(_index2.TypesDomain.topVal,_index2.ValuesDomain.topVal,"global.setTimeout",args)}),writable:true,enumerable:true,configurable:true}));global.$DefineOwnProperty("clearTimeout",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.clearTimeout","",2,(context,args)=>{if(!realm.useAbstractInterpretation)throw new _errors.FatalError("TODO #1003: implement global.clearTimeout");
(0,_invariant.default)(realm.generator!==undefined);let generator=realm.generator;generator.emitCall("global.clearTimeout",args);return realm.intrinsics.undefined}),writable:true,enumerable:true,configurable:true}));global.$DefineOwnProperty("setInterval",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"global.setInterval","",2,(context,args)=>{if(!realm.useAbstractInterpretation)throw new _errors.FatalError("TODO #1003: implement global.setInterval");let callback=
args[0].throwIfNotConcrete();if(!(callback instanceof _index.FunctionValue))throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError,"callback arguments must be function");(0,_invariant.default)(realm.generator!==undefined);let generator=realm.generator;return generator.emitCallAndCaptureResult(_index2.TypesDomain.topVal,_index2.ValuesDomain.topVal,"global.setInterval",args)}),writable:true,enumerable:true,configurable:true}));global.$DefineOwnProperty("clearInterval",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,
"global.clearInterval","",2,(context,args)=>{if(!realm.useAbstractInterpretation)throw new _errors.FatalError("TODO #1003: implement global.clearInterval");(0,_invariant.default)(realm.generator!==undefined);let generator=realm.generator;generator.emitCall("global.clearInterval",args);return realm.intrinsics.undefined}),writable:true,enumerable:true,configurable:true}))}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;
var _index=__webpack_require__(10);var _utils=__webpack_require__(632);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const functions=["getElementById","getElementByTag","getElementByClassName","getElementByName","getElementByTagName","getElementByTagNameNS","querySelector","querySelectorAll","createElement","createDocumentFragment","createTextNode"];function _default(realm){let document=
new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,"document",false);if(realm.useAbstractInterpretation){for(let name of functions){let func=(0,_utils.createAbstract)(realm,"function",`document.${name}`);_singletons.Properties.Set(realm,document,name,func,false)}let body=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,"document.body");_singletons.Properties.Set(realm,document,"body",body,false);let abstractObject=(0,_utils.createAbstract)(realm,document,"document");(0,_invariant.default)(abstractObject instanceof
_index.AbstractObjectValue);return abstractObject}return document}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);const consoleMethods=["assert","clear","count","dir","dirxml","error","group","groupCollapsed","groupEnd","info","log","table","time","timeEnd","trace","warn"];function _default(realm){let obj=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,"console");for(let method of consoleMethods)obj.defineNativeMethod(method,
0,(context,args)=>{realm.outputToConsole(method,args);return realm.intrinsics.undefined});obj.defineNativeMethod("time",0,(context,args)=>{realm.outputToConsole("time",args);return realm.intrinsics.undefined});obj.defineNativeMethod("timeEnd",0,(context,args)=>{realm.outputToConsole("timeEnd",args);return realm.intrinsics.undefined});return obj}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _console=_interopRequireDefault(__webpack_require__(635));
var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let global=realm.$GlobalObject;if(!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)&&!realm.isCompatibleWith("mobile"))global.$DefineOwnProperty("console",new _descriptors.PropertyDescriptor({value:(0,_console.default)(realm),writable:true,enumerable:false,configurable:true}));for(let name of["document","setTimeout","setInterval","window","process","setImmediate",
"clearTimeout","clearInterval","clearImmediate","alert","navigator","module","requestAnimationFrame","cancelAnimationFrame","requestIdleCallback","cancelIdleCallback","Symbol","Promise","WeakSet","Proxy","WebSocket","Request","Response","Headers","FormData","Worker","Node","Blob","URLSearchParams","FileReader","XMLHttpRequest"])global.$DefineOwnProperty(name,new _descriptors.PropertyDescriptor({value:realm.intrinsics.undefined,writable:true,enumerable:false,configurable:true}))}},function(module,
exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _index=__webpack_require__(10);var _reactMocks=__webpack_require__(638);var _reactDomMocks=__webpack_require__(640);var _reactNativeMocks=__webpack_require__(646);var _relayMocks=__webpack_require__(647);var _utils=__webpack_require__(632);var _fbMocks=__webpack_require__(648);var _errors=__webpack_require__(3);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));
var _utils2=__webpack_require__(291);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _default(realm){let global=realm.$GlobalObject;if(realm.react.enabled){realm.react.defaultPropsHelper=(0,_utils2.createDefaultPropsHelper)(realm);let emptyArray=new _index.ArrayValue(realm);emptyArray.makeFinal();realm.react.emptyArray=emptyArray;let emptyObject=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype);emptyObject.makeFinal();
realm.react.emptyObject=emptyObject}let moduleValue=_index.AbstractValue.createAbstractObject(realm,"module");moduleValue.kind="resolved";let moduleExportsValue=_index.AbstractValue.createAbstractObject(realm,"module.exports");moduleExportsValue.kind="resolved";moduleValue.$DefineOwnProperty("exports",new _descriptors.PropertyDescriptor({value:moduleExportsValue,writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("module",new _descriptors.PropertyDescriptor({value:moduleValue,
writable:true,enumerable:false,configurable:true}));global.$DefineOwnProperty("require",new _descriptors.PropertyDescriptor({value:new _index.NativeFunctionValue(realm,"require","require",0,(context,[requireNameVal])=>{(0,_invariant.default)(requireNameVal instanceof _index.StringValue);let requireNameValValue=requireNameVal.value;if(requireNameValValue==="react"||requireNameValValue==="React"){if(realm.fbLibraries.react===undefined){let react=(0,_reactMocks.createMockReact)(realm,requireNameValValue);
realm.fbLibraries.react=react;return react}return realm.fbLibraries.react}else if(requireNameValValue==="react-dom"||requireNameValValue==="ReactDOM"){if(realm.fbLibraries.reactDom===undefined){let reactDom=(0,_reactDomMocks.createMockReactDOM)(realm,requireNameValValue);realm.fbLibraries.reactDom=reactDom;return reactDom}return realm.fbLibraries.reactDom}else if(requireNameValValue==="react-dom/server"||requireNameValValue==="ReactDOMServer"){if(realm.fbLibraries.reactDomServer===undefined){let reactDomServer=
(0,_reactDomMocks.createMockReactDOMServer)(realm,requireNameValValue);realm.fbLibraries.reactDomServer=reactDomServer;return reactDomServer}return realm.fbLibraries.reactDomServer}else if(requireNameValValue==="react-native"||requireNameValValue==="ReactNative"){if(realm.fbLibraries.reactNative===undefined){let reactNative=(0,_reactNativeMocks.createMockReactNative)(realm,requireNameValValue);realm.fbLibraries.reactNative=reactNative;return reactNative}return realm.fbLibraries.reactNative}else if(requireNameValValue===
"react-relay"||requireNameValValue==="RelayModern"){if(realm.fbLibraries.reactRelay===undefined){let reactRelay=(0,_relayMocks.createMockReactRelay)(realm,requireNameValValue);realm.fbLibraries.reactRelay=reactRelay;return reactRelay}return realm.fbLibraries.reactRelay}else if(requireNameValValue==="prop-types"||requireNameValValue==="PropTypes"){if(realm.fbLibraries.react===undefined)throw new _errors.FatalError("unable to require PropTypes due to React not being referenced in scope");let propTypes=
(0,_index2.Get)(realm,realm.fbLibraries.react,"PropTypes");(0,_invariant.default)(propTypes instanceof _index.ObjectValue);return propTypes}else{let requireVal;if(realm.fbLibraries.other.has(requireNameValValue))requireVal=realm.fbLibraries.other.get(requireNameValValue);else{requireVal=(0,_utils.createAbstract)(realm,"function",`require("${requireNameValValue}")`);realm.fbLibraries.other.set(requireNameValValue,requireVal)}(0,_invariant.default)(requireVal instanceof _index.AbstractValue);return requireVal}}),
writable:true,enumerable:false,configurable:true}));if(realm.isCompatibleWith("fb-www"))(0,_fbMocks.createFbMocks)(realm,global)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.createMockReact=createMockReact;var _parser=__webpack_require__(247);var _index=__webpack_require__(15);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _utils=__webpack_require__(291);var _elements=__webpack_require__(420);var _invariant=
_interopRequireDefault(__webpack_require__(9));var _utils2=__webpack_require__(639);var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}let reactCode=`
  function createReact(
    REACT_ELEMENT_TYPE,
    REACT_FRAGMENT_TYPE,
    REACT_PORTAL_TYPE,
    REACT_FORWARD_REF_TYPE,
    ReactElement,
    ReactCurrentOwner
  ) {
    function makeEmptyFunction(arg) {
      return function() {
        return arg;
      };
    }
    var emptyFunction = function() {};
    emptyFunction.thatReturns = makeEmptyFunction;
    emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
    emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
    emptyFunction.thatReturnsNull = makeEmptyFunction(null);
    emptyFunction.thatReturnsThis = function() { return this; };
    emptyFunction.thatReturnsArgument = function(arg) { return arg; };
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true,
    };
    function hasValidRef(config) {
      return config.ref !== undefined;
    }
    function hasValidKey(config) {
      return config.key !== undefined;
    }
    function Component(props, context) {
      this.props = props;
      this.context = context;
      this.refs = {};
      this.setState = function () {}; // NO-OP
      this.setState.__PREPACK_MOCK__ = true;
    }
    Component.prototype.isReactComponent = {};
    function PureComponent(props, context) {
      this.props = props;
      this.context = context;
      this.refs = {};
      this.setState = function () {}; // NO-OP
      this.setState.__PREPACK_MOCK__ = true;
    }
    PureComponent.prototype.isReactComponent = {};
    PureComponent.prototype.isPureReactComponent = true;
    function forwardRef(render) {
      // NOTE: In development there are a bunch of warnings which will be logged to validate the \`render\` function.
      // Since Prepack is a production only tool (for now) we don\u2019t include these warnings.
      //
      // https://github.com/facebook/react/blob/f9358c51c8de93abe3cdd0f4720b489befad8c48/packages/react/src/forwardRef.js
      return {
        $$typeof: REACT_FORWARD_REF_TYPE,
        render,
      };
    }
    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
      return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
    }
    function escape(key) {
      const escapeRegex = /[=:]/g;
      const escaperLookup = {
        '=': '=0',
        ':': '=2',
      };
      const escapedString = ('' + key).replace(escapeRegex, function(match) {
        return escaperLookup[match];
      });
      return '$' + escapedString;
    }
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    var POOL_SIZE = 10;
    function getPooledTraverseContext(
      mapResult,
      keyPrefix,
      mapFunction,
      mapContext,
    ) {
      return {
        result: mapResult,
        keyPrefix: keyPrefix,
        func: mapFunction,
        context: mapContext,
        count: 0,
      };
    }
    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }
      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }
    function getComponentKey(component, index) {
      // Do some typechecking here since we call this blindly. We want to ensure
      // that we don't block potential future ES APIs.
      if (
        typeof component === 'object' &&
        component !== null &&
        component.key != null
      ) {
        // Explicit key
        return escape(component.key);
      }
      // Implicit key determined by the index in the set
      return index.toString(36);
    }
    function traverseAllChildrenImpl(
      children,
      nameSoFar,
      callback,
      traverseContext,
    ) {
      const type = typeof children;
      if (type === 'undefined' || type === 'boolean') {
        // All of the above are perceived as null.
        children = null;
      }
      let invokeCallback = false;
      if (children === null) {
        invokeCallback = true;
      } else {
        switch (type) {
          case 'string':
          case 'number':
            invokeCallback = true;
            break;
          case 'object':
            switch (children.$$typeof) {
              case REACT_ELEMENT_TYPE:
              case REACT_PORTAL_TYPE:
                invokeCallback = true;
            }
        }
      }
      if (invokeCallback) {
        callback(
          traverseContext,
          children,
          // If it's the only child, treat the name as if it was wrapped in an array
          // so that it's consistent if the number of children grows.
          nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,
        );
        return 1;
      }
      let child;
      let nextName;
      let subtreeCount = 0; // Count of children found in the current subtree.
      const nextNamePrefix =
        nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
      if (Array.isArray(children)) {
        for (let i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(
            child,
            nextName,
            callback,
            traverseContext,
          );
        }
      } else {
        const iteratorFn = getIteratorFn(children);
        if (typeof iteratorFn === 'function') {
          var iterator = iteratorFn.call(children);
          let step;
          let ii = 0;
          while (!(step = iterator.next()).done) {
            child = step.value;
            nextName = nextNamePrefix + getComponentKey(child, ii++);
            subtreeCount += traverseAllChildrenImpl(
              child,
              nextName,
              callback,
              traverseContext,
            );
          }
        } else if (type === 'object') {
          let addendum = '';
          var childrenString = '' + children;
        }
      }
      return subtreeCount;
    }
    function cloneAndReplaceKey(oldElement, newKey) {
      var newElement = ReactElement(
        oldElement.type,
        newKey,
        oldElement.ref,
        oldElement.props,
      );
    
      return newElement;
    }
    function mapSingleChildIntoContext(bookKeeping, child, childKey) {
      var {result, keyPrefix, func, context} = bookKeeping;
    
      let mappedChild = func.call(context, child);
      if (Array.isArray(mappedChild)) {
        mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, c => c);
      } else if (mappedChild != null) {
        if (isValidElement(mappedChild)) {
          mappedChild = cloneAndReplaceKey(
            mappedChild,
            // Keep both the (mapped) and old keys if they differ, just as
            // traverseAllChildren used to do for objects as children
            keyPrefix +
              (mappedChild.key && (!child || child.key !== mappedChild.key)
                ? escapeUserProvidedKey(mappedChild.key) + '/'
                : '') +
              childKey,
          );
        }
        result.push(mappedChild);
      }
    }
    function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
      var escapedPrefix = '';
      if (prefix != null) {
        escapedPrefix = escapeUserProvidedKey(prefix) + '/';
      }
      const traverseContext = getPooledTraverseContext(
        array,
        escapedPrefix,
        func,
        context,
      );
      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
    }
    function forEachSingleChild(bookKeeping, child, name) {
      var {func, context} = bookKeeping;
      func.call(context, child);
    }
    function forEachChildren(children, forEachFunc, forEachContext) {
      if (children == null) {
        return children;
      }
      var traverseContext = getPooledTraverseContext(
        null,
        null,
        forEachFunc,
        forEachContext,
      );
      traverseAllChildren(children, forEachSingleChild, traverseContext);
    }
    function mapChildren(children, func, context) {
      if (children == null) {
        return children;
      }
      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, func, context);
      return result;
    }
    function countChildren(children) {
      return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
    }
    function onlyChild(children) {
      return children;
    }
    function toArray(children) {
      var result = [];
      mapIntoWithKeyPrefixInternal(
        children,
        result,
        null,
        emptyFunction.thatReturnsArgument,
      );
      return result;
    }
    function isValidElement(object) {
      return (
        typeof object === 'object' &&
        object !== null &&
        object.$$typeof === REACT_ELEMENT_TYPE
      );
    }
    function shim() {
    }
    shim.isRequired = shim;
    function getShim() {
      return shim;
    };
    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,
      any: shim,
      arrayOf: getShim,
      element: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim
    };
    ReactPropTypes.checkPropTypes = shim;
    ReactPropTypes.PropTypes = ReactPropTypes;
    var ReactSharedInternals = {
      ReactCurrentOwner,
    };
    return {
      Children: {
        forEach: forEachChildren,
        map: mapChildren,
        count: countChildren,
        only: onlyChild,
        toArray,
      },
      Component,
      PureComponent,
      forwardRef,
      Fragment: REACT_FRAGMENT_TYPE,
      isValidElement,
      version: "16.2.0",
      PropTypes: ReactPropTypes,
      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals,
    };
  }
`;let reactAst=(0,_parser.parseExpression)(reactCode,{plugins:["flow"]});function createMockReact(realm,reactRequireName){let reactFactory=_singletons.Environment.GetValue(realm,realm.$GlobalEnv.evaluate(reactAst,false));(0,_invariant.default)(reactFactory instanceof _index2.ECMAScriptSourceFunctionValue);let currentOwner=realm.react.currentOwner=new _index2.ObjectValue(realm,realm.intrinsics.ObjectPrototype,"currentOwner");let factory=reactFactory.$Call;(0,_invariant.default)(factory!==undefined);
let mockReactElementBuilder=new _index2.NativeFunctionValue(realm,undefined,"ReactElement",0,(context,[type,key,ref,props])=>{(0,_invariant.default)(props instanceof _index2.ObjectValue);return(0,_utils.createInternalReactElement)(realm,type,key,ref,props)});let reactValue=factory(realm.intrinsics.undefined,[(0,_utils.getReactSymbol)("react.element",realm),(0,_utils.getReactSymbol)("react.fragment",realm),(0,_utils.getReactSymbol)("react.portal",realm),(0,_utils.getReactSymbol)("react.forward_ref",
realm),mockReactElementBuilder,currentOwner]);(0,_invariant.default)(reactValue instanceof _index2.ObjectValue);reactValue.refuseSerialization=true;(0,_utils2.updateIntrinsicNames)(realm,reactValue,reactRequireName,["PropTypes","Children","isValidElement",{name:"Component",updatePrototype:true},{name:"PureComponent",updatePrototype:true}]);(0,_utils2.addMockFunctionToObject)(realm,reactValue,reactRequireName,"createElement",(context,[type,config,...children])=>{(0,_invariant.default)(type instanceof
_index2.Value);if(config===realm.intrinsics.undefined||config===realm.intrinsics.null||config===undefined)config=new _index2.ObjectValue(realm,realm.intrinsics.ObjectPrototype);if(config instanceof _index2.AbstractValue&&!(config instanceof _index2.AbstractObjectValue))config=_singletons.To.ToObject(realm,config);(0,_invariant.default)(config instanceof _index2.ObjectValue||config instanceof _index2.AbstractObjectValue);if(Array.isArray(children))if(children.length===0)children=undefined;else if(children.length===
1)children=children[0];else{let array=_singletons.Create.ArrayCreate(realm,0);let length=children.length;for(let i=0;i<length;i++)_singletons.Create.CreateDataPropertyOrThrow(realm,array,""+i,children[i]);children=array;children.makeFinal()}return(0,_elements.createReactElement)(realm,type,config,children)});(0,_utils2.addMockFunctionToObject)(realm,reactValue,reactRequireName,"cloneElement",(context,[element,config,...children])=>{(0,_invariant.default)(element instanceof _index2.ObjectValue);if(config===
realm.intrinsics.undefined||config===realm.intrinsics.null||config===undefined)config=realm.intrinsics.null;if(config instanceof _index2.AbstractValue&&!(config instanceof _index2.AbstractObjectValue))config=_singletons.To.ToObject(realm,config);(0,_invariant.default)(config instanceof _index2.ObjectValue||config instanceof _index2.AbstractObjectValue||config instanceof _index2.NullValue);if(Array.isArray(children))if(children.length===0)children=undefined;else if(children.length===1)children=children[0];
else{let array=_singletons.Create.ArrayCreate(realm,0);let length=children.length;for(let i=0;i<length;i++)_singletons.Create.CreateDataPropertyOrThrow(realm,array,""+i,children[i]);children=array;children.makeFinal()}return(0,_elements.cloneReactElement)(realm,element,config,children)});(0,_utils2.addMockFunctionToObject)(realm,reactValue,reactRequireName,"createContext",(funcValue,[defaultValue=realm.intrinsics.undefined])=>{(0,_invariant.default)(defaultValue instanceof _index2.Value);let consumerObject=
new _index2.ObjectValue(realm,realm.intrinsics.ObjectPrototype);let providerObject=new _index2.ObjectValue(realm,realm.intrinsics.ObjectPrototype);let consumer=_index2.AbstractValue.createTemporalFromBuildFunction(realm,_index2.ObjectValue,[funcValue,defaultValue],(0,_generator.createOperationDescriptor)("REACT_TEMPORAL_FUNC"),{skipInvariant:true,isPure:true});(0,_invariant.default)(consumer instanceof _index2.AbstractObjectValue);consumer.values=new _index.ValuesDomain(new Set([consumerObject]));
let provider=_index2.AbstractValue.createTemporalFromBuildFunction(realm,_index2.ObjectValue,[consumer],(0,_generator.createOperationDescriptor)("REACT_CREATE_CONTEXT_PROVIDER"),{skipInvariant:true,isPure:true});(0,_invariant.default)(provider instanceof _index2.AbstractObjectValue);provider.values=new _index.ValuesDomain(new Set([providerObject]));_singletons.Properties.Set(realm,consumerObject,"$$typeof",(0,_utils.getReactSymbol)("react.context",realm),true);_singletons.Properties.Set(realm,consumerObject,
"currentValue",defaultValue,true);_singletons.Properties.Set(realm,consumerObject,"defaultValue",defaultValue,true);_singletons.Properties.Set(realm,consumerObject,"changedBits",new _index2.NumberValue(realm,0),true);_singletons.Properties.Set(realm,consumerObject,"Consumer",consumer,true);_singletons.Properties.Set(realm,providerObject,"$$typeof",(0,_utils.getReactSymbol)("react.provider",realm),true);_singletons.Properties.Set(realm,providerObject,"context",consumer,true);_singletons.Properties.Set(realm,
consumerObject,"Provider",provider,true);return consumer});(0,_utils2.addMockFunctionToObject)(realm,reactValue,reactRequireName,"createRef",(funcVal)=>{let createRef=_index2.AbstractValue.createTemporalFromBuildFunction(realm,_index2.FunctionValue,[funcVal],(0,_generator.createOperationDescriptor)("REACT_TEMPORAL_FUNC"),{skipInvariant:true,isPure:true});(0,_invariant.default)(createRef instanceof _index2.AbstractObjectValue);return createRef});reactValue.refuseSerialization=false;reactValue.makeFinal();
return reactValue}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.updateIntrinsicNames=updateIntrinsicNames;exports.addMockFunctionToObject=addMockFunctionToObject;var _index=__webpack_require__(10);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function updateIntrinsicNames(realm,obj,requireName,properties){obj.intrinsicName=
`require("${requireName}")`;if(properties)for(let property of properties)if(typeof property==="string"){let val=(0,_index2.Get)(realm,obj,property);(0,_invariant.default)(val instanceof _index.Value);val.intrinsicName=`require("${requireName}").${property}`}else if(typeof property==="object"&&property!==null){let {name,updatePrototype}=property;let val=(0,_index2.Get)(realm,obj,name);(0,_invariant.default)(val instanceof _index.Value);val.intrinsicName=`require("${requireName}").${name}`;if(updatePrototype){(0,
_invariant.default)(val instanceof _index.ObjectValue);let proto=(0,_index2.Get)(realm,val,"prototype");proto.intrinsicName=`require("${requireName}").${name}.prototype`}}}function addMockFunctionToObject(realm,obj,requireName,funcName,func){let funcValue=new _index.NativeFunctionValue(realm,undefined,funcName,0,(context,args)=>func(funcValue,args));obj.defineNativeProperty(funcName,funcValue,{writable:false,enumerable:false,configurable:true});funcValue.intrinsicName=`require("${requireName}").${funcName}`}
},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.createMockReactDOM=createMockReactDOM;exports.createMockReactDOMServer=createMockReactDOMServer;var _index=__webpack_require__(10);var _utils=__webpack_require__(291);var _invariant=_interopRequireDefault(__webpack_require__(9));var _utils2=__webpack_require__(639);var _rendering=__webpack_require__(641);var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}function createMockReactDOM(realm,reactDomRequireName){let reactDomValue=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype);reactDomValue.refuseSerialization=true;(0,_utils2.updateIntrinsicNames)(realm,reactDomValue,reactDomRequireName);const genericTemporalFunc=(funcVal,args)=>{let reactDomMethod=_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.FunctionValue,[funcVal,...args],(0,_generator.createOperationDescriptor)("REACT_TEMPORAL_FUNC"),
{skipInvariant:true,isPure:true});(0,_invariant.default)(reactDomMethod instanceof _index.AbstractObjectValue);return reactDomMethod};(0,_utils2.addMockFunctionToObject)(realm,reactDomValue,reactDomRequireName,"render",genericTemporalFunc);(0,_utils2.addMockFunctionToObject)(realm,reactDomValue,reactDomRequireName,"hydrate",genericTemporalFunc);(0,_utils2.addMockFunctionToObject)(realm,reactDomValue,reactDomRequireName,"findDOMNode",genericTemporalFunc);(0,_utils2.addMockFunctionToObject)(realm,reactDomValue,
reactDomRequireName,"unmountComponentAtNode",genericTemporalFunc);const createPortalFunc=(funcVal,[reactPortalValue,domNodeValue])=>{let reactDomMethod=_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.ObjectValue,[funcVal,reactPortalValue,domNodeValue],(0,_generator.createOperationDescriptor)("REACT_TEMPORAL_FUNC"),{skipInvariant:true,isPure:true});(0,_invariant.default)(reactDomMethod instanceof _index.AbstractObjectValue);realm.react.abstractHints.set(reactDomMethod,(0,_utils.createReactHintObject)(reactDomValue,
"createPortal",[reactPortalValue,domNodeValue],realm.intrinsics.undefined));return reactDomMethod};(0,_utils2.addMockFunctionToObject)(realm,reactDomValue,reactDomRequireName,"createPortal",createPortalFunc);reactDomValue.refuseSerialization=false;reactDomValue.makeFinal();return reactDomValue}function createMockReactDOMServer(realm,requireName){let reactDomServerValue=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype);reactDomServerValue.refuseSerialization=true;(0,_utils2.updateIntrinsicNames)(realm,
reactDomServerValue,requireName);const genericTemporalFunc=(funcVal,args)=>{let reactDomMethod=_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.FunctionValue,[funcVal,...args],(0,_generator.createOperationDescriptor)("REACT_TEMPORAL_FUNC"),{skipInvariant:true,isPure:true});(0,_invariant.default)(reactDomMethod instanceof _index.AbstractObjectValue);return reactDomMethod};(0,_utils2.addMockFunctionToObject)(realm,reactDomServerValue,requireName,"renderToString",(funcVal,[input])=>
{if(input instanceof _index.ObjectValue&&(0,_utils.isReactElement)(input))return(0,_rendering.renderToString)(realm,input,false);return genericTemporalFunc(funcVal,[input])});(0,_utils2.addMockFunctionToObject)(realm,reactDomServerValue,requireName,"renderToStaticMarkup",(funcVal,[input])=>{if(input instanceof _index.ObjectValue&&(0,_utils.isReactElement)(input))return(0,_rendering.renderToString)(realm,input,true);return genericTemporalFunc(funcVal,[input])});(0,_utils2.addMockFunctionToObject)(realm,
reactDomServerValue,requireName,"renderToNodeStream",genericTemporalFunc);(0,_utils2.addMockFunctionToObject)(realm,reactDomServerValue,requireName,"renderToStaticNodeStream",genericTemporalFunc);reactDomServerValue.refuseSerialization=false;reactDomServerValue.makeFinal();return reactDomServerValue}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.createMarkupForCustomAttribute=createMarkupForCustomAttribute;exports.renderToString=renderToString;
var _types=__webpack_require__(408);var _completions=__webpack_require__(18);var _index=__webpack_require__(10);var _reconcilation=__webpack_require__(415);var _utils=__webpack_require__(291);var t=_interopRequireWildcard(__webpack_require__(21));var _invariant=_interopRequireDefault(__webpack_require__(9));var _utils2=__webpack_require__(642);var _domConfig=__webpack_require__(643);var _hyphenateStyleName=_interopRequireDefault(__webpack_require__(644));var _singletons=__webpack_require__(236);var _generator=
__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;else{var newObj={};if(obj!=null)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set)Object.defineProperty(newObj,key,desc);else newObj[key]=obj[key]}newObj.default=obj;return newObj}}
function renderValueWithHelper(realm,value,helper){let val=_index.AbstractValue.createFromBuildFunction(realm,_index.Value,[helper,value],(0,_generator.createOperationDescriptor)("REACT_SSR_RENDER_VALUE_HELPER"));(0,_invariant.default)(val instanceof _index.AbstractValue);return val}function dangerousStyleValue(realm,name,value,isCustomProperty){let isEmpty=value===realm.intrinsics.null||value===realm.intrinsics.undefined||value instanceof _index.BooleanValue||value instanceof _index.StringValue&&
value.value==="";if(isEmpty)return"";if(!isCustomProperty&&value instanceof _index.NumberValue&&value.value!==0&&!(_domConfig.isUnitlessNumber.hasOwnProperty(name)&&_domConfig.isUnitlessNumber[name]))return value.value+"px";if(value instanceof _index.StringValue||value instanceof _index.NumberValue)return(""+value.value).trim();else(0,_invariant.default)(false,"TODO")}function createMarkupForCustomAttribute(realm,name,value){if(!(0,_domConfig.isAttributeNameSafe)(name)||value==null)return"";if(value instanceof
_index.StringValue||value instanceof _index.NumberValue)return name+"="+(0,_utils2.quoteAttributeValueForBrowser)(value.value+"");else(0,_invariant.default)(false,"TODO")}function createMarkupForProperty(realm,name,value,htmlEscapeHelper){const propertyInfo=(0,_domConfig.getPropertyInfo)(name);if(name!=="style"&&(0,_domConfig.shouldIgnoreAttribute)(name,propertyInfo,false))return"";if((0,_domConfig.shouldRemoveAttribute)(realm,name,value,propertyInfo,false))return"";if(propertyInfo!==null){const attributeName=
propertyInfo.attributeName;const {type}=propertyInfo;if(type===_domConfig.BOOLEAN||type===_domConfig.OVERLOADED_BOOLEAN&&value===true)return attributeName+'=""';else if(value instanceof _index.StringValue||value instanceof _index.NumberValue||value instanceof _index.BooleanValue)return attributeName+"="+(0,_utils2.quoteAttributeValueForBrowser)(value.value+"");else if(value instanceof _index.AbstractValue)return[attributeName+"=",renderValueWithHelper(realm,value,htmlEscapeHelper)]}else if(value instanceof
_index.StringValue||value instanceof _index.NumberValue||value instanceof _index.BooleanValue)return name+"="+(0,_utils2.quoteAttributeValueForBrowser)(value.value+"");else if(value instanceof _index.AbstractValue)return[name+'="',renderValueWithHelper(realm,value,htmlEscapeHelper),'"'];(0,_invariant.default)(false,"TODO")}function createMarkupForStyles(realm,styles){let serialized=[];let delimiter="";if(styles instanceof _index.ObjectValue&&!styles.isPartialObject())for(let [styleName,binding]of styles.properties)if(binding.descriptor!==
undefined){let isCustomProperty=styleName.indexOf("--")===0;let styleValue=(0,_utils.getProperty)(realm,styles,styleName);if(styleValue!==realm.intrinsics.null&&styleValue!==realm.intrinsics.undefined){serialized.push(delimiter+(0,_hyphenateStyleName.default)(styleName)+":");serialized.push(dangerousStyleValue(realm,styleName,styleValue,isCustomProperty));delimiter=";"}}if(serialized.length>0)return renderReactNode(realm,serialized);return realm.intrinsics.null}function createOpenTagMarkup(realm,
tagVerbatim,tagLowercase,propsValue,namespace,makeStaticMarkup,isRootElement,htmlEscapeHelper){let ret=["<"+tagVerbatim];if(propsValue instanceof _index.ObjectValue&&!propsValue.isPartialObject())for(let [propName,binding]of propsValue.properties){if(binding.descriptor!==undefined){let propValue=(0,_utils.getProperty)(realm,propsValue,propName);if(propValue===realm.intrinsics.null||propValue===realm.intrinsics.undefined)continue;if(propName===_domConfig.STYLE)propValue=createMarkupForStyles(realm,
propValue);let markup;if((0,_utils2.isCustomComponent)(realm,tagLowercase,propsValue)){if(!_domConfig.RESERVED_PROPS.has(propName))markup=createMarkupForCustomAttribute(realm,propName,propValue)}else markup=createMarkupForProperty(realm,propName,propValue,htmlEscapeHelper);if(Array.isArray(markup))ret.push(" ",...markup);else if(typeof markup==="string"&&markup!=="")ret.push(" "+markup);else if(markup)ret.push(" ",markup)}}else(0,_invariant.default)(false,"TODO");if(makeStaticMarkup)return ret;if(isRootElement)ret.push(" "+
(0,_utils2.createMarkupForRoot)());return ret}function renderReactNode(realm,reactNode){let normalizedNode=(0,_utils2.normalizeNode)(realm,reactNode);if(typeof normalizedNode==="string")return new _index.StringValue(realm,normalizedNode);else if(normalizedNode instanceof _index.AbstractValue)return normalizedNode;(0,_invariant.default)(Array.isArray(normalizedNode));let args=[];let quasis=[];let lastWasAbstract=false;for(let element of normalizedNode)if(typeof element==="string"){lastWasAbstract=
false;quasis.push(t.templateElement({raw:element,cooked:element}))}else{if(lastWasAbstract)quasis.push(t.templateElement({raw:"",cooked:""}));lastWasAbstract=true;(0,_invariant.default)(element instanceof _index.Value);args.push(element)}let val=_index.AbstractValue.createFromBuildFunction(realm,_index.StringValue,args,(0,_generator.createOperationDescriptor)("REACT_SSR_TEMPLATE_LITERAL",{quasis}));(0,_invariant.default)(val instanceof _index.AbstractValue);return val}class ReactDOMServerRenderer{constructor(realm,
makeStaticMarkup){this.realm=realm;this.makeStaticMarkup=makeStaticMarkup;this.previousWasTextNode=false;this.htmlEscapeHelper=(0,_utils2.createHtmlEscapeHelper)(realm);this.arrayHelper=(0,_utils2.createArrayHelper)(realm)}render(value,namespace="html",depth=0){let rootReactNode=this._renderValue(value,namespace,depth);return renderReactNode(this.realm,rootReactNode)}_renderText(value){let text=value.value+"";if(text==="")return"";if(this.makeStaticMarkup)return(0,_utils2.escapeHtml)(text);if(this.previousWasTextNode)return"\x3c!-- --\x3e"+
(0,_utils2.escapeHtml)(text);this.previousWasTextNode=true;return(0,_utils2.escapeHtml)(text)}_renderAbstractConditionalValue(condValue,consequentVal,alternateVal,namespace,depth){let val=this.realm.evaluateWithAbstractConditional(condValue,()=>{return this.realm.evaluateForEffects(()=>this.render(consequentVal,namespace,depth),null,"_renderAbstractConditionalValue consequent")},()=>{return this.realm.evaluateForEffects(()=>this.render(alternateVal,namespace,depth),null,"_renderAbstractConditionalValue consequent")});
return(0,_utils2.convertValueToNode)(val)}_renderAbstractValue(value,namespace,depth){if(value.kind==="conditional"){let [condValue,consequentVal,alternateVal]=value.args;(0,_invariant.default)(condValue instanceof _index.AbstractValue);return this._renderAbstractConditionalValue(condValue,consequentVal,alternateVal,namespace,depth)}else return renderValueWithHelper(this.realm,value,this.htmlEscapeHelper)}_renderArrayValue(arrayValue,namespace,depth){if(_index.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(arrayValue)){let nestedOptimizedFunctionEffects=
arrayValue.nestedOptimizedFunctionEffects;if(nestedOptimizedFunctionEffects!==undefined){for(let [func,effects]of nestedOptimizedFunctionEffects){let funcCall=()=>{let result=effects.result;this.realm.applyEffects(effects);if(result instanceof _completions.SimpleNormalCompletion)result=result.value;(0,_invariant.default)(result instanceof _index.Value);return this.render(result,namespace,depth)};let pureFuncCall=()=>this.realm.evaluatePure(funcCall,true,()=>{(0,_invariant.default)(false,"SSR _renderArrayValue side-effect should have been caught in main React reconciler")});
let resolvedEffects;resolvedEffects=this.realm.evaluateForEffects(pureFuncCall,null,`react SSR resolve nested optimized closure`);nestedOptimizedFunctionEffects.set(func,resolvedEffects);this.realm.collectedNestedOptimizedFunctionEffects.set(func,resolvedEffects)}return renderValueWithHelper(this.realm,arrayValue,this.arrayHelper)}}let elements=[];(0,_utils.forEachArrayValue)(this.realm,arrayValue,(elementValue)=>{let renderedElement=this._renderValue(elementValue,namespace,depth);if(Array.isArray(renderedElement))elements.push(...renderedElement);
else elements.push(renderedElement)});return elements}_renderReactElement(reactElement,namespace,depth){let typeValue=(0,_utils.getProperty)(this.realm,reactElement,"type");let propsValue=(0,_utils.getProperty)(this.realm,reactElement,"props");(0,_invariant.default)(propsValue instanceof _index.AbstractObjectValue||propsValue instanceof _index.ObjectValue);if(typeValue instanceof _index.StringValue){let type=typeValue.value;let tag=type.toLowerCase();if(tag==="input"){let defaultValueProp=(0,_utils.getProperty)(this.realm,
propsValue,"defaultValue");let defaultCheckedProp=(0,_utils.getProperty)(this.realm,propsValue,"defaultChecked");let valueProp=(0,_utils.getProperty)(this.realm,propsValue,"value");let checkedProp=(0,_utils.getProperty)(this.realm,propsValue,"checked");let newProps=new _index.ObjectValue(this.realm,this.realm.intrinsics.ObjectPrototype);_singletons.Properties.Set(this.realm,newProps,"type",this.realm.intrinsics.undefined,true);let inputProps=new _index.ObjectValue(this.realm,this.realm.intrinsics.ObjectPrototype);
_singletons.Properties.Set(this.realm,inputProps,"defaultChecked",this.realm.intrinsics.undefined,true);_singletons.Properties.Set(this.realm,inputProps,"defaultValue",this.realm.intrinsics.undefined,true);_singletons.Properties.Set(this.realm,inputProps,"value",valueProp!==this.realm.intrinsics.null?valueProp:defaultValueProp,true);_singletons.Properties.Set(this.realm,inputProps,"checked",checkedProp!==this.realm.intrinsics.null?checkedProp:defaultCheckedProp,true);(0,_utils.applyObjectAssignConfigsForReactElement)(this.realm,
newProps,[propsValue,inputProps]);propsValue=newProps}else if(tag==="textarea"){let initialValue=(0,_utils.getProperty)(this.realm,propsValue,"value");if(initialValue===this.realm.intrinsics.null)(0,_invariant.default)(false,"TODO");let newProps=new _index.ObjectValue(this.realm,this.realm.intrinsics.ObjectPrototype);let textareaProps=new _index.ObjectValue(this.realm,this.realm.intrinsics.ObjectPrototype);_singletons.Properties.Set(this.realm,textareaProps,"value",this.realm.intrinsics.undefined,
true);_singletons.Properties.Set(this.realm,textareaProps,"children",initialValue,true);(0,_utils.applyObjectAssignConfigsForReactElement)(this.realm,newProps,[propsValue,textareaProps]);propsValue=newProps}else if(tag==="select")(0,_invariant.default)(false,"TODO");else if(tag==="option")(0,_invariant.default)(false,"TODO");let out=createOpenTagMarkup(this.realm,type,tag,propsValue,namespace,this.makeStaticMarkup,depth===0,this.htmlEscapeHelper);let footer="";if(_domConfig.omittedCloseTags.has(tag))out.push("/>");
else{out.push(">");footer="</"+type+">"}let innerMarkup=(0,_utils2.getNonChildrenInnerMarkup)(this.realm,propsValue);if(innerMarkup instanceof _index.StringValue){if(_domConfig.newlineEatingTags[tag]&&innerMarkup.value.charAt(0)==="\n")out.push("\n");out.push(innerMarkup.value)}else if(innerMarkup instanceof _index.ObjectValue)(0,_invariant.default)(false,"TODO");else{this.previousWasTextNode=false;let childrenValue=(0,_utils.getProperty)(this.realm,propsValue,"children");let childrenOut=this._renderValue(childrenValue,
namespace,depth+1);if(Array.isArray(childrenOut))out.push(...childrenOut);else out.push(childrenOut)}out.push(footer);this.previousWasTextNode=false;return out}else if(typeValue instanceof _index.SymbolValue&&typeValue===(0,_utils.getReactSymbol)("react.fragment",this.realm)){let childrenValue=(0,_utils.getProperty)(this.realm,propsValue,"children");let childrenOut=this._renderValue(childrenValue,namespace,depth+1);let out=[];if(Array.isArray(childrenOut))out.push(...childrenOut);else out.push(childrenOut);
this.previousWasTextNode=false;return out}else(0,_invariant.default)(false,"TODO")}_renderValue(value,namespace,depth){if(value instanceof _index.StringValue||value instanceof _index.NumberValue)return this._renderText(value);else if(value instanceof _index.ObjectValue&&(0,_utils.isReactElement)(value))return this._renderReactElement(value,namespace,depth);else if(value instanceof _index.AbstractValue)return this._renderAbstractValue(value,namespace,depth);else if(value instanceof _index.ArrayValue)return this._renderArrayValue(value,
namespace,depth);else if(value instanceof _index.BooleanValue||value instanceof _index.UndefinedValue||value instanceof _index.NullValue)return"";(0,_invariant.default)(false,"TODO")}}function renderToString(realm,reactElement,staticMarkup){let reactStatistics=new _types.ReactStatistics;let alreadyEvaluated=new Map;let reconciler=new _reconcilation.Reconciler(realm,{firstRenderOnly:true,isRoot:true,modelString:undefined},alreadyEvaluated,reactStatistics);let typeValue=(0,_utils.getProperty)(realm,
reactElement,"type");let propsValue=(0,_utils.getProperty)(realm,reactElement,"props");let evaluatedRootNode=(0,_utils.createReactEvaluatedNode)("ROOT",(0,_utils.getComponentName)(realm,typeValue));(0,_invariant.default)(typeValue instanceof _index.ECMAScriptSourceFunctionValue);if(propsValue instanceof _index.AbstractValue&&!(propsValue instanceof _index.AbstractObjectValue))propsValue=_singletons.To.ToObject(realm,propsValue);(0,_invariant.default)(propsValue instanceof _index.ObjectValue||propsValue instanceof
_index.AbstractObjectValue);let effects=reconciler.resolveReactComponentTree(typeValue,propsValue,null,evaluatedRootNode);(0,_invariant.default)(realm.generator);realm.generator.emitStatement([],(0,_generator.createOperationDescriptor)("REACT_SSR_REGEX_CONSTANT"));(0,_invariant.default)(realm.generator);realm.generator.emitStatement([],(0,_generator.createOperationDescriptor)("REACT_SSR_PREV_TEXT_NODE"));(0,_invariant.default)(effects);realm.applyEffects(effects);(0,_invariant.default)(effects.result instanceof
_completions.SimpleNormalCompletion);let serverRenderer=new ReactDOMServerRenderer(realm,staticMarkup);let renderValue=serverRenderer.render(effects.result.value);return renderValue}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.createMarkupForRoot=createMarkupForRoot;exports.isCustomComponent=isCustomComponent;exports.escapeHtml=escapeHtml;exports.normalizeNode=normalizeNode;exports.convertValueToNode=convertValueToNode;exports.createHtmlEscapeHelper=
createHtmlEscapeHelper;exports.createArrayHelper=createArrayHelper;exports.getNonChildrenInnerMarkup=getNonChildrenInnerMarkup;exports.quoteAttributeValueForBrowser=quoteAttributeValueForBrowser;var _parser=__webpack_require__(247);var _index=__webpack_require__(10);var _utils=__webpack_require__(291);var _invariant=_interopRequireDefault(__webpack_require__(9));var _domConfig=__webpack_require__(643);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const matchHtmlRegExp=
/["'&<>]/;function createMarkupForRoot(){return _domConfig.ROOT_ATTRIBUTE_NAME+'=""'}function isCustomComponent(realm,tagName,propsValue){if(tagName.indexOf("-")===-1){let is=(0,_utils.getProperty)(realm,propsValue,"is");return is instanceof _index.StringValue}switch(tagName){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return false;default:return true}}function escapeHtml(string){if(typeof string===
"boolean"||typeof string==="number")return""+string;let str=""+string;let match=matchHtmlRegExp.exec(str);if(!match)return str;let escape;let html="";let index=0;let lastIndex=0;for(index=match.index;index<str.length;index++){switch(str.charCodeAt(index)){case 34:escape="&quot;";break;case 38:escape="&amp;";break;case 39:escape="&#x27;";break;case 60:escape="&lt;";break;case 62:escape="&gt;";break;default:continue}if(lastIndex!==index)html+=str.substring(lastIndex,index);lastIndex=index+1;html+=escape}return lastIndex!==
index?html+str.substring(lastIndex,index):html}function normalizeNode(realm,reactNode){if(Array.isArray(reactNode)){let newReactNode;for(let element of reactNode)if(typeof element==="string")if(newReactNode===undefined)newReactNode=element;else if(typeof newReactNode==="string")newReactNode+=element;else{let lastNode=newReactNode[newReactNode.length-1];if(typeof lastNode==="string")newReactNode[newReactNode.length-1]+=element;else newReactNode.push(element)}else if(newReactNode===undefined)newReactNode=
[element];else if(typeof newReactNode==="string")newReactNode=[newReactNode,element];else newReactNode.push(element);(0,_invariant.default)(newReactNode!==undefined);return newReactNode}else if(typeof reactNode==="string"||reactNode instanceof _index.AbstractValue)return reactNode;(0,_invariant.default)(false,"TODO")}function convertValueToNode(value){if(value instanceof _index.AbstractValue)return value;else if(value instanceof _index.StringValue||value instanceof _index.NumberValue)return value.value+
"";(0,_invariant.default)(false,"TODO")}function createHtmlEscapeHelper(realm){let escapeHelperAst=(0,_parser.parseExpression)(escapeHtml.toString(),{plugins:["flow"]});let helper=new _index.ECMAScriptSourceFunctionValue(realm);helper.initialize(escapeHelperAst.params,escapeHelperAst.body);return helper}function createArrayHelper(realm){let arrayHelper=`
    function arrayHelper(array) {
      let length = array.length;
      let i = 0;
      let str = "";
      let item;
      while (i < length) {
        item = array[i++];
        if (previousWasTextNode === true) {
          str += "<!-- -->" + item;
        } else {
          str += item;
        }
        previousWasTextNode = item[0] !== "<";
      }
      return str;
    }
  `;let escapeHelperAst=(0,_parser.parseExpression)(arrayHelper,{plugins:["flow"]});let helper=new _index.ECMAScriptSourceFunctionValue(realm);helper.initialize(escapeHelperAst.params,escapeHelperAst.body);return helper}function getNonChildrenInnerMarkup(realm,propsValue){let innerHTML=(0,_utils.getProperty)(realm,propsValue,"dangerouslySetInnerHTML");if(innerHTML instanceof _index.ObjectValue){let _html=(0,_utils.getProperty)(realm,innerHTML,"dangerouslySetInnerHTML");if(_html instanceof _index.StringValue)return _html.value}else{let content=
(0,_utils.getProperty)(realm,propsValue,"children");if(content instanceof _index.StringValue||content instanceof _index.NumberValue)return escapeHtml(content.value)}return null}function quoteAttributeValueForBrowser(value){return'"'+escapeHtml(value)+'"'}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.getPropertyInfo=getPropertyInfo;exports.isAttributeNameSafe=isAttributeNameSafe;exports.shouldRemoveAttribute=shouldRemoveAttribute;exports.shouldIgnoreAttribute=
shouldIgnoreAttribute;exports.POSITIVE_NUMERIC=exports.NUMERIC=exports.OVERLOADED_BOOLEAN=exports.BOOLEAN=exports.BOOLEANISH_STRING=exports.STRING=exports.RESERVED=exports.VALID_ATTRIBUTE_NAME_REGEX=exports.ATTRIBUTE_NAME_CHAR=exports.ATTRIBUTE_NAME_START_CHAR=exports.ROOT_ATTRIBUTE_NAME=exports.isUnitlessNumber=exports.newlineEatingTags=exports.omittedCloseTags=exports.RESERVED_PROPS=exports.STYLE=void 0;var _index=__webpack_require__(10);var _invariant=_interopRequireDefault(__webpack_require__(9));
function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const STYLE="style";exports.STYLE=STYLE;const RESERVED_PROPS=new Set(["children","dangerouslySetInnerHTML","suppressContentEditableWarning","suppressHydrationWarning"]);exports.RESERVED_PROPS=RESERVED_PROPS;const omittedCloseTags=new Set(["area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"]);exports.omittedCloseTags=omittedCloseTags;const newlineEatingTags={listing:true,
pre:true,textarea:true};exports.newlineEatingTags=newlineEatingTags;const isUnitlessNumber={animationIterationCount:true,borderImageOutset:true,borderImageSlice:true,borderImageWidth:true,boxFlex:true,boxFlexGroup:true,boxOrdinalGroup:true,columnCount:true,columns:true,flex:true,flexGrow:true,flexPositive:true,flexShrink:true,flexNegative:true,flexOrder:true,gridRow:true,gridRowEnd:true,gridRowSpan:true,gridRowStart:true,gridColumn:true,gridColumnEnd:true,gridColumnSpan:true,gridColumnStart:true,
fontWeight:true,lineClamp:true,lineHeight:true,opacity:true,order:true,orphans:true,tabSize:true,widows:true,zIndex:true,zoom:true,fillOpacity:true,floodOpacity:true,stopOpacity:true,strokeDasharray:true,strokeDashoffset:true,strokeMiterlimit:true,strokeOpacity:true,strokeWidth:true};exports.isUnitlessNumber=isUnitlessNumber;const prefixes=["Webkit","ms","Moz","O"];const ROOT_ATTRIBUTE_NAME="data-reactroot";exports.ROOT_ATTRIBUTE_NAME=ROOT_ATTRIBUTE_NAME;const ATTRIBUTE_NAME_START_CHAR=":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
exports.ATTRIBUTE_NAME_START_CHAR=ATTRIBUTE_NAME_START_CHAR;const ATTRIBUTE_NAME_CHAR=ATTRIBUTE_NAME_START_CHAR+"\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";exports.ATTRIBUTE_NAME_CHAR=ATTRIBUTE_NAME_CHAR;const VALID_ATTRIBUTE_NAME_REGEX=new RegExp("^["+ATTRIBUTE_NAME_START_CHAR+"]["+ATTRIBUTE_NAME_CHAR+"]*$");exports.VALID_ATTRIBUTE_NAME_REGEX=VALID_ATTRIBUTE_NAME_REGEX;function prefixKey(prefix,key){return prefix+key.charAt(0).toUpperCase()+key.substring(1)}Object.keys(isUnitlessNumber).forEach(function(prop){prefixes.forEach(function(prefix){isUnitlessNumber[prefixKey(prefix,
prop)]=isUnitlessNumber[prop]})});const RESERVED=0;exports.RESERVED=RESERVED;const STRING=1;exports.STRING=STRING;const BOOLEANISH_STRING=2;exports.BOOLEANISH_STRING=BOOLEANISH_STRING;const BOOLEAN=3;exports.BOOLEAN=BOOLEAN;const OVERLOADED_BOOLEAN=4;exports.OVERLOADED_BOOLEAN=OVERLOADED_BOOLEAN;const NUMERIC=5;exports.NUMERIC=NUMERIC;const POSITIVE_NUMERIC=6;exports.POSITIVE_NUMERIC=POSITIVE_NUMERIC;const properties={};function PropertyInfoRecord(name,type,mustUseProperty,attributeName,attributeNamespace){this.acceptsBooleans=
type===BOOLEANISH_STRING||type===BOOLEAN||type===OVERLOADED_BOOLEAN;this.attributeName=attributeName;this.attributeNamespace=attributeNamespace;this.mustUseProperty=mustUseProperty;this.propertyName=name;this.type=type}[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(([name,attributeName])=>{properties[name]=new PropertyInfoRecord(name,STRING,false,attributeName,null)});["children","dangerouslySetInnerHTML","defaultValue","defaultChecked",
"innerHTML","suppressContentEditableWarning","suppressHydrationWarning","style"].forEach((name)=>{properties[name]=new PropertyInfoRecord(name,RESERVED,false,name,null)});["contentEditable","draggable","spellCheck","value"].forEach((name)=>{properties[name]=new PropertyInfoRecord(name,BOOLEANISH_STRING,false,name.toLowerCase(),null)});["autoReverse","externalResourcesRequired","preserveAlpha"].forEach((name)=>{properties[name]=new PropertyInfoRecord(name,BOOLEANISH_STRING,false,name,null)});["allowFullScreen",
"async","autoFocus","autoPlay","controls","default","defer","disabled","formNoValidate","hidden","loop","noModule","noValidate","open","playsInline","readOnly","required","reversed","scoped","seamless","itemScope"].forEach((name)=>{properties[name]=new PropertyInfoRecord(name,BOOLEAN,false,name.toLowerCase(),null)});["checked","multiple","muted","selected"].forEach((name)=>{properties[name]=new PropertyInfoRecord(name,BOOLEAN,true,name.toLowerCase(),null)});["capture","download"].forEach((name)=>
{properties[name]=new PropertyInfoRecord(name,OVERLOADED_BOOLEAN,false,name.toLowerCase(),null)});["cols","rows","size","span"].forEach((name)=>{properties[name]=new PropertyInfoRecord(name,POSITIVE_NUMERIC,false,name.toLowerCase(),null)});["rowSpan","start"].forEach((name)=>{properties[name]=new PropertyInfoRecord(name,NUMERIC,false,name.toLowerCase(),null)});const CAMELIZE=/[\-:]([a-z])/g;const capitalize=(token)=>token[1].toUpperCase();["accent-height","alignment-baseline","arabic-form","baseline-shift",
"cap-height","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-name","glyph-orientation-horizontal","glyph-orientation-vertical","horiz-adv-x","horiz-origin-x","image-rendering","letter-spacing","lighting-color","marker-end","marker-mid",
"marker-start","overline-position","overline-thickness","paint-order","panose-1","pointer-events","rendering-intent","shape-rendering","stop-color","stop-opacity","strikethrough-position","strikethrough-thickness","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","underline-position","underline-thickness","unicode-bidi","unicode-range","units-per-em","v-alphabetic","v-hanging",
"v-ideographic","v-mathematical","vector-effect","vert-adv-y","vert-origin-x","vert-origin-y","word-spacing","writing-mode","xmlns:xlink","x-height"].forEach((attributeName)=>{const name=attributeName.replace(CAMELIZE,capitalize);properties[name]=new PropertyInfoRecord(name,STRING,false,attributeName,null)});["xlink:actuate","xlink:arcrole","xlink:href","xlink:role","xlink:show","xlink:title","xlink:type"].forEach((attributeName)=>{const name=attributeName.replace(CAMELIZE,capitalize);properties[name]=
new PropertyInfoRecord(name,STRING,false,attributeName,"http://www.w3.org/1999/xlink")});["xml:base","xml:lang","xml:space"].forEach((attributeName)=>{const name=attributeName.replace(CAMELIZE,capitalize);properties[name]=new PropertyInfoRecord(name,STRING,false,attributeName,"http://www.w3.org/XML/1998/namespace")});properties.tabIndex=new PropertyInfoRecord("tabIndex",STRING,false,"tabindex",null);function getPropertyInfo(name){return properties.hasOwnProperty(name)?properties[name]:null}const illegalAttributeNameCache=
{};const validatedAttributeNameCache={};function isAttributeNameSafe(attributeName){if(validatedAttributeNameCache.hasOwnProperty(attributeName))return true;if(illegalAttributeNameCache.hasOwnProperty(attributeName))return false;if(VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)){validatedAttributeNameCache[attributeName]=true;return true}illegalAttributeNameCache[attributeName]=true;return false}function shouldRemoveAttributeWithWarning(name,value,propertyInfo,isCustomComponentTag){if(propertyInfo!==
null&&propertyInfo.type===RESERVED)return false;if(value instanceof _index.FunctionValue||value instanceof _index.SymbolValue)return true;else if(value instanceof _index.BooleanValue){if(isCustomComponentTag)return false;if(propertyInfo!==null)return!propertyInfo.acceptsBooleans;else{const prefix=name.toLowerCase().slice(0,5);return prefix!=="data-"&&prefix!=="aria-"}}else if(value instanceof _index.AbstractValue)(0,_invariant.default)(false,"TODO");return false}function shouldRemoveAttribute(realm,
name,value,propertyInfo,isCustomComponentTag){if(value===realm.intrinsics.null||value===realm.intrinsics.undefined)return true;if(shouldRemoveAttributeWithWarning(name,value,propertyInfo,isCustomComponentTag))return true;if(isCustomComponentTag)return false;if(propertyInfo!==null)switch(propertyInfo.type){case BOOLEAN:if(value instanceof _index.BooleanValue)return!value.value;return(0,_invariant.default)(false,"TODO");case OVERLOADED_BOOLEAN:if(value instanceof _index.BooleanValue)return value.value===
false;return(0,_invariant.default)(false,"TODO");case NUMERIC:if(value instanceof _index.NumberValue||value instanceof _index.StringValue)return isNaN(value.value);return(0,_invariant.default)(false,"TODO");case POSITIVE_NUMERIC:if(value instanceof _index.NumberValue||value instanceof _index.StringValue)return isNaN(value.value)||value.value<1;return(0,_invariant.default)(false,"TODO");default:return false}return false}function shouldIgnoreAttribute(name,propertyInfo,isCustomComponentTag){if(propertyInfo!==
null)return propertyInfo.type===RESERVED;if(isCustomComponentTag)return false;if(name.length>2&&(name[0]==="o"||name[0]==="O")&&(name[1]==="n"||name[1]==="N"))return true;return false}},function(module,exports,__webpack_require__){var hyphenate=__webpack_require__(645);var msPattern=/^ms-/;function hyphenateStyleName(string){return hyphenate(string).replace(msPattern,"-ms-")}module.exports=hyphenateStyleName},function(module,exports,__webpack_require__){var _uppercasePattern=/([A-Z])/g;function hyphenate(string){return string.replace(_uppercasePattern,
"-$1").toLowerCase()}module.exports=hyphenate},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.createMockReactNative=createMockReactNative;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _invariant=_interopRequireDefault(__webpack_require__(9));var _parser=__webpack_require__(247);var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}let reactNativeCode=
`
  function createReactNative(React, reactNameRequireName) {
    var Platform = __abstract("object", 'require("' + reactNameRequireName + '").Platform');
    var NativeModules = __abstract({
      nativePerformanceNow: __abstract("function"),
      nativeTraceBeginAsyncSection: __abstract("function"),
      nativeTraceEndAsyncSection: __abstract("function"),
      UIManager: __abstract({
        customBubblingEventTypes: __abstract(),
        customDirectEventTypes: __abstract(),
        ViewManagerNames: __abstract(),
        __takeSnapshot: undefined,
        takeSnapshot: undefined,
        RCTVirtualText: null,
      }),
      DeviceInfo: __abstract({
        Dimensions: __abstract({
          window: undefined,
          screen: undefined,
          windowPhysicalPixels: __abstract({
            width: __abstract("number"),
            height: __abstract("number"),
            scale: __abstract("number"),
            fontScale: __abstract("number"),
          }),
          screenPhysicalPixels: __abstract({
            width: __abstract("number"),
            height: __abstract("number"),
            scale: __abstract("number"),
            fontScale: __abstract("number"),
          }),
        }),
      }),
      I18n: __abstract({
        localeCountryCode: __abstract(),
        localeIdentifier: __abstract(),
        fbLocaleIdentifier: __abstract(),
        AdsCountriesConfig: __abstract({}),
        exports: __abstract({}),
      }),
      I18nManager: __abstract({
        isRTL: __abstract("boolean"),
        isRTLForced: __abstract("boolean"),
        doLeftAndRightSwapInRTL: __abstract("boolean"),
        allowRTL: function(allowRTL) {
          return __residual("void", function(allowRTL, global) {
            global.nativeModuleProxy.I18nManager.allowRTL(allowRTL);
          }, allowRTL, global);
        },
        forceRTL: function(forceRTL) {
          return __residual("void", function(forceRTL, global) {
            global.nativeModuleProxy.I18nManager.forceRTL(forceRTL);
          }, forceRTL, global);
        },
        swapLeftAndRightInRTL: function(flipStyles) {
          return __residual("void", function(flipStyles, global) {
            global.nativeModuleProxy.I18nManager.swapLeftAndRightInRTL(flipStyles);
          }, flipStyles, global);
        },
        exports: __abstract({}),
      }),
      DeviceEventManager: __abstract({}),
      Timing: __abstract({
        createTimer: function(id, duration, time, recurring) {
          return __residual("object", function(id, duration, time, recurring, global, Object) {
            global.nativeModuleProxy.Timing.createTimer(id, duration, time, recurring);
            return Object.create(null);
          }, id, duration, time, recurring, global, Object);
        }
      }),
      ExceptionsManager: __abstract({
        reportFatalException: function(message, stack, id) {
          console.log("nativeModuleProxy.ExceptionsManager.reportFatalException");
          console.log(message);
          for (var i = 0; i < stack.length; i++) {
            var s = stack[i];
            console.log("  at " + s.methodName + " (" + s.file + ":" + s.lineNumber + ":" + s.column + ")");
          }
        }
      }),
      PlatformConstants: __abstract({
        isTesting: false,
        reactNativeVersion: __abstract({
          major: 0,
          minor: 0,
          patch: 0,
          prerelease: null,
        }),
        Version: __abstract("number"),
        forceTouchAvailable: undefined,
        uiMode: __abstract(),
      }),
      RelayAPIConfig: __abstract({
        graphBatchURI: __abstract(),
      }),
      SourceCode: __abstract({
        scriptURL: __abstract("string"),
      }),
    }, 'require("' + reactNameRequireName + '").NativeModules');
    const {UIManager} = NativeModules;
    const ReactNativeViewAttributes = {};
    const viewConfigCallbacks = new Map();
    const TextAncestor = React.createContext(false);
    const ReactNativeStyleAttributes = {};
    const dummySize = {width: undefined, height: undefined};
    const sizesDiffer = function(one, two) {
      one = one || dummySize;
      two = two || dummySize;
      return one !== two && (one.width !== two.width || one.height !== two.height);
    };
    ReactNativeStyleAttributes.transform = {process: processTransform};
    ReactNativeStyleAttributes.shadowOffset = {diff: sizesDiffer};
    const colorAttributes = {process: processColor};
    ReactNativeStyleAttributes.backgroundColor = colorAttributes;
    ReactNativeStyleAttributes.borderBottomColor = colorAttributes;
    ReactNativeStyleAttributes.borderColor = colorAttributes;
    ReactNativeStyleAttributes.borderLeftColor = colorAttributes;
    ReactNativeStyleAttributes.borderRightColor = colorAttributes;
    ReactNativeStyleAttributes.borderTopColor = colorAttributes;
    ReactNativeStyleAttributes.borderStartColor = colorAttributes;
    ReactNativeStyleAttributes.borderEndColor = colorAttributes;
    ReactNativeStyleAttributes.color = colorAttributes;
    ReactNativeStyleAttributes.shadowColor = colorAttributes;
    ReactNativeStyleAttributes.textDecorationColor = colorAttributes;
    ReactNativeStyleAttributes.tintColor = colorAttributes;
    ReactNativeStyleAttributes.textShadowColor = colorAttributes;
    ReactNativeStyleAttributes.overlayColor = colorAttributes;
    ReactNativeViewAttributes.UIView = {
      pointerEvents: true,
      accessible: true,
      accessibilityActions: true,
      accessibilityLabel: true,
      accessibilityComponentType: true,
      accessibilityLiveRegion: true,
      accessibilityRole: true,
      accessibilityStates: true,
      accessibilityTraits: true,
      importantForAccessibility: true,
      nativeID: true,
      testID: true,
      renderToHardwareTextureAndroid: true,
      shouldRasterizeIOS: true,
      onLayout: true,
      onAccessibilityAction: true,
      onAccessibilityTap: true,
      onMagicTap: true,
      collapsable: true,
      needsOffscreenAlphaCompositing: true,
      style: ReactNativeStyleAttributes,
    };
    ReactNativeViewAttributes.RCTView = Object.assign({},
      ReactNativeViewAttributes.UIView,
      { removeClippedSubviews: true }
    );
    var viewConfig = {
      validAttributes: Object.assign({}, ReactNativeViewAttributes.UIView, {
        isHighlighted: true,
        numberOfLines: true,
        ellipsizeMode: true,
        allowFontScaling: true,
        disabled: true,
        selectable: true,
        selectionColor: true,
        adjustsFontSizeToFit: true,
        minimumFontScale: true,
        textBreakStrategy: true
      }),
      uiViewClassName: 'RCTText'
    };
    var MatrixMath = {
      createIdentityMatrix: function() {
        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
      },
      createCopy: function(m) {
        return [
          m[0],
          m[1],
          m[2],
          m[3],
          m[4],
          m[5],
          m[6],
          m[7],
          m[8],
          m[9],
          m[10],
          m[11],
          m[12],
          m[13],
          m[14],
          m[15],
        ];
      },
      createOrthographic: function(left, right, bottom, top, near, far) {
        const a = 2 / (right - left);
        const b = 2 / (top - bottom);
        const c = -2 / (far - near);
        const tx = -(right + left) / (right - left);
        const ty = -(top + bottom) / (top - bottom);
        const tz = -(far + near) / (far - near);
        return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];
      },
      createFrustum: function(left, right, bottom, top, near, far) {
        const r_width = 1 / (right - left);
        const r_height = 1 / (top - bottom);
        const r_depth = 1 / (near - far);
        const x = 2 * (near * r_width);
        const y = 2 * (near * r_height);
        const A = (right + left) * r_width;
        const B = (top + bottom) * r_height;
        const C = (far + near) * r_depth;
        const D = 2 * (far * near * r_depth);
        return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];
      },
      /**
       * This create a perspective projection towards negative z
       * Clipping the z range of [-near, -far]
       *
       * @param fovInRadians - field of view in randians
       */
      createPerspective: function(fovInRadians, aspect, near, far) {
        const h = 1 / Math.tan(fovInRadians / 2);
        const r_depth = 1 / (near - far);
        const C = (far + near) * r_depth;
        const D = 2 * (far * near * r_depth);
        return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];
      },
      createTranslate2d: function(x, y) {
        const mat = MatrixMath.createIdentityMatrix();
        MatrixMath.reuseTranslate2dCommand(mat, x, y);
        return mat;
      },
      reuseTranslate2dCommand: function(matrixCommand, x, y) {
        matrixCommand[12] = x;
        matrixCommand[13] = y;
      },
      reuseTranslate3dCommand: function(matrixCommand, x, y, z) {
        matrixCommand[12] = x;
        matrixCommand[13] = y;
        matrixCommand[14] = z;
      },
      createScale: function(factor) {
        const mat = MatrixMath.createIdentityMatrix();
        MatrixMath.reuseScaleCommand(mat, factor);
        return mat;
      },
      reuseScaleCommand: function(matrixCommand, factor) {
        matrixCommand[0] = factor;
        matrixCommand[5] = factor;
      },
      reuseScale3dCommand: function(matrixCommand, x, y, z) {
        matrixCommand[0] = x;
        matrixCommand[5] = y;
        matrixCommand[10] = z;
      },
      reusePerspectiveCommand: function(matrixCommand, p) {
        matrixCommand[11] = -1 / p;
      },
      reuseScaleXCommand(matrixCommand, factor) {
        matrixCommand[0] = factor;
      },
      reuseScaleYCommand(matrixCommand, factor) {
        matrixCommand[5] = factor;
      },
      reuseScaleZCommand(matrixCommand, factor) {
        matrixCommand[10] = factor;
      },
      reuseRotateXCommand: function(matrixCommand, radians) {
        matrixCommand[5] = Math.cos(radians);
        matrixCommand[6] = Math.sin(radians);
        matrixCommand[9] = -Math.sin(radians);
        matrixCommand[10] = Math.cos(radians);
      },
      reuseRotateYCommand: function(matrixCommand, amount) {
        matrixCommand[0] = Math.cos(amount);
        matrixCommand[2] = -Math.sin(amount);
        matrixCommand[8] = Math.sin(amount);
        matrixCommand[10] = Math.cos(amount);
      },
      // http://www.w3.org/TR/css3-transforms/#recomposing-to-a-2d-matrix
      reuseRotateZCommand: function(matrixCommand, radians) {
        matrixCommand[0] = Math.cos(radians);
        matrixCommand[1] = Math.sin(radians);
        matrixCommand[4] = -Math.sin(radians);
        matrixCommand[5] = Math.cos(radians);
      },
      createRotateZ: function(radians) {
        const mat = MatrixMath.createIdentityMatrix();
        MatrixMath.reuseRotateZCommand(mat, radians);
        return mat;
      },
      reuseSkewXCommand: function(matrixCommand, radians) {
        matrixCommand[4] = Math.tan(radians);
      },
      reuseSkewYCommand: function(matrixCommand, radians) {
        matrixCommand[1] = Math.tan(radians);
      },
      multiplyInto: function(out, a, b) {
        const a00 = a[0],
          a01 = a[1],
          a02 = a[2],
          a03 = a[3],
          a10 = a[4],
          a11 = a[5],
          a12 = a[6],
          a13 = a[7],
          a20 = a[8],
          a21 = a[9],
          a22 = a[10],
          a23 = a[11],
          a30 = a[12],
          a31 = a[13],
          a32 = a[14],
          a33 = a[15];
        let b0 = b[0],
          b1 = b[1],
          b2 = b[2],
          b3 = b[3];
        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
        b0 = b[4];
        b1 = b[5];
        b2 = b[6];
        b3 = b[7];
        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
        b0 = b[8];
        b1 = b[9];
        b2 = b[10];
        b3 = b[11];
        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
        b0 = b[12];
        b1 = b[13];
        b2 = b[14];
        b3 = b[15];
        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
      },
      determinant(matrix) {
        const [
          m00,
          m01,
          m02,
          m03,
          m10,
          m11,
          m12,
          m13,
          m20,
          m21,
          m22,
          m23,
          m30,
          m31,
          m32,
          m33,
        ] = matrix;
        return (
          m03 * m12 * m21 * m30 -
          m02 * m13 * m21 * m30 -
          m03 * m11 * m22 * m30 +
          m01 * m13 * m22 * m30 +
          m02 * m11 * m23 * m30 -
          m01 * m12 * m23 * m30 -
          m03 * m12 * m20 * m31 +
          m02 * m13 * m20 * m31 +
          m03 * m10 * m22 * m31 -
          m00 * m13 * m22 * m31 -
          m02 * m10 * m23 * m31 +
          m00 * m12 * m23 * m31 +
          m03 * m11 * m20 * m32 -
          m01 * m13 * m20 * m32 -
          m03 * m10 * m21 * m32 +
          m00 * m13 * m21 * m32 +
          m01 * m10 * m23 * m32 -
          m00 * m11 * m23 * m32 -
          m02 * m11 * m20 * m33 +
          m01 * m12 * m20 * m33 +
          m02 * m10 * m21 * m33 -
          m00 * m12 * m21 * m33 -
          m01 * m10 * m22 * m33 +
          m00 * m11 * m22 * m33
        );
      },
      /**
       * Inverse of a matrix. Multiplying by the inverse is used in matrix math
       * instead of division.
       *
       * Formula from:
       * http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
       */
      inverse(matrix: Array<number>): Array<number> {
        const det = MatrixMath.determinant(matrix);
        if (!det) {
          return matrix;
        }
        const [
          m00,
          m01,
          m02,
          m03,
          m10,
          m11,
          m12,
          m13,
          m20,
          m21,
          m22,
          m23,
          m30,
          m31,
          m32,
          m33,
        ] = matrix;
        return [
          (m12 * m23 * m31 -
            m13 * m22 * m31 +
            m13 * m21 * m32 -
            m11 * m23 * m32 -
            m12 * m21 * m33 +
            m11 * m22 * m33) /
            det,
          (m03 * m22 * m31 -
            m02 * m23 * m31 -
            m03 * m21 * m32 +
            m01 * m23 * m32 +
            m02 * m21 * m33 -
            m01 * m22 * m33) /
            det,
          (m02 * m13 * m31 -
            m03 * m12 * m31 +
            m03 * m11 * m32 -
            m01 * m13 * m32 -
            m02 * m11 * m33 +
            m01 * m12 * m33) /
            det,
          (m03 * m12 * m21 -
            m02 * m13 * m21 -
            m03 * m11 * m22 +
            m01 * m13 * m22 +
            m02 * m11 * m23 -
            m01 * m12 * m23) /
            det,
          (m13 * m22 * m30 -
            m12 * m23 * m30 -
            m13 * m20 * m32 +
            m10 * m23 * m32 +
            m12 * m20 * m33 -
            m10 * m22 * m33) /
            det,
          (m02 * m23 * m30 -
            m03 * m22 * m30 +
            m03 * m20 * m32 -
            m00 * m23 * m32 -
            m02 * m20 * m33 +
            m00 * m22 * m33) /
            det,
          (m03 * m12 * m30 -
            m02 * m13 * m30 -
            m03 * m10 * m32 +
            m00 * m13 * m32 +
            m02 * m10 * m33 -
            m00 * m12 * m33) /
            det,
          (m02 * m13 * m20 -
            m03 * m12 * m20 +
            m03 * m10 * m22 -
            m00 * m13 * m22 -
            m02 * m10 * m23 +
            m00 * m12 * m23) /
            det,
          (m11 * m23 * m30 -
            m13 * m21 * m30 +
            m13 * m20 * m31 -
            m10 * m23 * m31 -
            m11 * m20 * m33 +
            m10 * m21 * m33) /
            det,
          (m03 * m21 * m30 -
            m01 * m23 * m30 -
            m03 * m20 * m31 +
            m00 * m23 * m31 +
            m01 * m20 * m33 -
            m00 * m21 * m33) /
            det,
          (m01 * m13 * m30 -
            m03 * m11 * m30 +
            m03 * m10 * m31 -
            m00 * m13 * m31 -
            m01 * m10 * m33 +
            m00 * m11 * m33) /
            det,
          (m03 * m11 * m20 -
            m01 * m13 * m20 -
            m03 * m10 * m21 +
            m00 * m13 * m21 +
            m01 * m10 * m23 -
            m00 * m11 * m23) /
            det,
          (m12 * m21 * m30 -
            m11 * m22 * m30 -
            m12 * m20 * m31 +
            m10 * m22 * m31 +
            m11 * m20 * m32 -
            m10 * m21 * m32) /
            det,
          (m01 * m22 * m30 -
            m02 * m21 * m30 +
            m02 * m20 * m31 -
            m00 * m22 * m31 -
            m01 * m20 * m32 +
            m00 * m21 * m32) /
            det,
          (m02 * m11 * m30 -
            m01 * m12 * m30 -
            m02 * m10 * m31 +
            m00 * m12 * m31 +
            m01 * m10 * m32 -
            m00 * m11 * m32) /
            det,
          (m01 * m12 * m20 -
            m02 * m11 * m20 +
            m02 * m10 * m21 -
            m00 * m12 * m21 -
            m01 * m10 * m22 +
            m00 * m11 * m22) /
            det,
        ];
      },
      /**
       * Turns columns into rows and rows into columns.
       */
      transpose(m: Array<number>): Array<number> {
        return [
          m[0],
          m[4],
          m[8],
          m[12],
          m[1],
          m[5],
          m[9],
          m[13],
          m[2],
          m[6],
          m[10],
          m[14],
          m[3],
          m[7],
          m[11],
          m[15],
        ];
      },
      /**
       * Based on: http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c
       */
      multiplyVectorByMatrix(v: Array<number>, m: Array<number>): Array<number> {
        const [vx, vy, vz, vw] = v;
        return [
          vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],
          vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],
          vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],
          vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15],
        ];
      },
      /**
       * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
       */
      v3Length(a: Array<number>): number {
        return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
      },
      /**
       * Based on: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
       */
      v3Normalize(vector: Array<number>, v3Length: number): Array<number> {
        const im = 1 / (v3Length || MatrixMath.v3Length(vector));
        return [vector[0] * im, vector[1] * im, vector[2] * im];
      },
      /**
       * The dot product of a and b, two 3-element vectors.
       * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
       */
      v3Dot(a, b) {
        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
      },
      /**
       * From:
       * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp
       */
      v3Combine(
        a: Array<number>,
        b: Array<number>,
        aScale: number,
        bScale: number,
      ): Array<number> {
        return [
          aScale * a[0] + bScale * b[0],
          aScale * a[1] + bScale * b[1],
          aScale * a[2] + bScale * b[2],
        ];
      },
      /**
       * From:
       * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp
       */
      v3Cross(a: Array<number>, b: Array<number>): Array<number> {
        return [
          a[1] * b[2] - a[2] * b[1],
          a[2] * b[0] - a[0] * b[2],
          a[0] * b[1] - a[1] * b[0],
        ];
      },
      /**
       * Based on:
       * http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/
       * and:
       * http://quat.zachbennett.com/
       *
       * Note that this rounds degrees to the thousandth of a degree, due to
       * floating point errors in the creation of the quaternion.
       *
       * Also note that this expects the qw value to be last, not first.
       *
       * Also, when researching this, remember that:
       * yaw   === heading            === z-axis
       * pitch === elevation/attitude === y-axis
       * roll  === bank               === x-axis
       */
      quaternionToDegreesXYZ(q: Array<number>, matrix, row): Array<number> {
        const [qx, qy, qz, qw] = q;
        const qw2 = qw * qw;
        const qx2 = qx * qx;
        const qy2 = qy * qy;
        const qz2 = qz * qz;
        const test = qx * qy + qz * qw;
        const unit = qw2 + qx2 + qy2 + qz2;
        const conv = 180 / Math.PI;
        if (test > 0.49999 * unit) {
          return [0, 2 * Math.atan2(qx, qw) * conv, 90];
        }
        if (test < -0.49999 * unit) {
          return [0, -2 * Math.atan2(qx, qw) * conv, -90];
        }
        return [
          MatrixMath.roundTo3Places(
            Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv,
          ),
          MatrixMath.roundTo3Places(
            Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv,
          ),
          MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv),
        ];
      },
      /**
       * Based on:
       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round
       */
      roundTo3Places(n: number): number {
        const arr = n.toString().split('e');
        return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;
      },
      /**
       * Decompose a matrix into separate transform values, for use on platforms
       * where applying a precomposed matrix is not possible, and transforms are
       * applied in an inflexible ordering (e.g. Android).
       *
       * Implementation based on
       * http://www.w3.org/TR/css3-transforms/#decomposing-a-2d-matrix
       * http://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix
       * which was based on
       * http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c
       */
      decomposeMatrix(transformMatrix: Array<number>): ?Object {
        // output values
        var perspective = [];
        const quaternion = [];
        const scale = [];
        const skew = [];
        const translation = [];
        // create normalized, 2d array matrix
        // and normalized 1d array perspectiveMatrix with redefined 4th column
        if (!transformMatrix[15]) {
          return;
        }
        const matrix = [];
        const perspectiveMatrix = [];
        for (var i = 0; i < 4; i++) {
          matrix.push([]);
          for (let j = 0; j < 4; j++) {
            const value = transformMatrix[i * 4 + j] / transformMatrix[15];
            matrix[i].push(value);
            perspectiveMatrix.push(j === 3 ? 0 : value);
          }
        }
        perspectiveMatrix[15] = 1;
        // test for singularity of upper 3x3 part of the perspective matrix
        if (!MatrixMath.determinant(perspectiveMatrix)) {
          return;
        }
        // isolate perspective
        if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {
          // rightHandSide is the right hand side of the equation.
          // rightHandSide is a vector, or point in 3d space relative to the origin.
          const rightHandSide = [
            matrix[0][3],
            matrix[1][3],
            matrix[2][3],
            matrix[3][3],
          ];
          // Solve the equation by inverting perspectiveMatrix and multiplying
          // rightHandSide by the inverse.
          const inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);
          const transposedInversePerspectiveMatrix = MatrixMath.transpose(
            inversePerspectiveMatrix,
          );
          var perspective = MatrixMath.multiplyVectorByMatrix(
            rightHandSide,
            transposedInversePerspectiveMatrix,
          );
        } else {
          // no perspective
          perspective[0] = perspective[1] = perspective[2] = 0;
          perspective[3] = 1;
        }
        // translation is simple
        for (var i = 0; i < 3; i++) {
          translation[i] = matrix[3][i];
        }
        // Now get scale and shear.
        // 'row' is a 3 element array of 3 component vectors
        const row = [];
        for (i = 0; i < 3; i++) {
          row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];
        }
        // Compute X scale factor and normalize first row.
        scale[0] = MatrixMath.v3Length(row[0]);
        row[0] = MatrixMath.v3Normalize(row[0], scale[0]);
        // Compute XY shear factor and make 2nd row orthogonal to 1st.
        skew[0] = MatrixMath.v3Dot(row[0], row[1]);
        row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);
        // Compute XY shear factor and make 2nd row orthogonal to 1st.
        skew[0] = MatrixMath.v3Dot(row[0], row[1]);
        row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);
        // Now, compute Y scale and normalize 2nd row.
        scale[1] = MatrixMath.v3Length(row[1]);
        row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
        skew[0] /= scale[1];
        // Compute XZ and YZ shears, orthogonalize 3rd row
        skew[1] = MatrixMath.v3Dot(row[0], row[2]);
        row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);
        skew[2] = MatrixMath.v3Dot(row[1], row[2]);
        row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);
        // Next, get Z scale and normalize 3rd row.
        scale[2] = MatrixMath.v3Length(row[2]);
        row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
        skew[1] /= scale[2];
        skew[2] /= scale[2];
        // At this point, the matrix (in rows) is orthonormal.
        // Check for a coordinate system flip.  If the determinant
        // is -1, then negate the matrix and the scaling factors.
        const pdum3 = MatrixMath.v3Cross(row[1], row[2]);
        if (MatrixMath.v3Dot(row[0], pdum3) < 0) {
          for (i = 0; i < 3; i++) {
            scale[i] *= -1;
            row[i][0] *= -1;
            row[i][1] *= -1;
            row[i][2] *= -1;
          }
        }
        // Now, get the rotations out
        quaternion[0] =
          0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
        quaternion[1] =
          0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
        quaternion[2] =
          0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
        quaternion[3] =
          0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));
        if (row[2][1] > row[1][2]) {
          quaternion[0] = -quaternion[0];
        }
        if (row[0][2] > row[2][0]) {
          quaternion[1] = -quaternion[1];
        }
        if (row[1][0] > row[0][1]) {
          quaternion[2] = -quaternion[2];
        }
        // correct for occasional, weird Euler synonyms for 2d rotation
        let rotationDegrees;
        if (
          quaternion[0] < 0.001 &&
          quaternion[0] >= 0 &&
          quaternion[1] < 0.001 &&
          quaternion[1] >= 0
        ) {
          // this is a 2d rotation on the z-axis
          rotationDegrees = [
            0,
            0,
            MatrixMath.roundTo3Places(
              Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI,
            ),
          ];
        } else {
          rotationDegrees = MatrixMath.quaternionToDegreesXYZ(
            quaternion,
            matrix,
            row,
          );
        }
        // expose both base data and convenience names
        return {
          rotationDegrees,
          perspective,
          quaternion,
          scale,
          skew,
          translation,
          rotate: rotationDegrees[2],
          rotateX: rotationDegrees[0],
          rotateY: rotationDegrees[1],
          scaleX: scale[0],
          scaleY: scale[1],
          translateX: translation[0],
          translateY: translation[1],
        };
      },
    };
    function _multiplyTransform(result, matrixMathFunction, args): void {
      const matrixToApply = MatrixMath.createIdentityMatrix();
      const argsWithIdentity = [matrixToApply].concat(args);
      matrixMathFunction.apply(this, argsWithIdentity);
      MatrixMath.multiplyInto(result, result, matrixToApply);
    }
    function _convertToRadians(value: string): number {
      const floatValue = parseFloat(value);
      return value.indexOf('rad') > -1 ? floatValue : floatValue * Math.PI / 180;
    }
    function processTransform(transform) {
      // Android & iOS implementations of transform property accept the list of
      // transform properties as opposed to a transform Matrix. This is necessary
      // to control transform property updates completely on the native thread.
      if (Platform.OS === 'android' || Platform.OS === 'ios') {
        return transform;
      }
      const result = MatrixMath.createIdentityMatrix();
      transform.forEach(transformation => {
        const key = Object.keys(transformation)[0];
        const value = transformation[key];
        switch (key) {
          case 'matrix':
            MatrixMath.multiplyInto(result, result, value);
            break;
          case 'perspective':
            _multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);
            break;
          case 'rotateX':
            _multiplyTransform(result, MatrixMath.reuseRotateXCommand, [
              _convertToRadians(value),
            ]);
            break;
          case 'rotateY':
            _multiplyTransform(result, MatrixMath.reuseRotateYCommand, [
              _convertToRadians(value),
            ]);
            break;
          case 'rotate':
          case 'rotateZ':
            _multiplyTransform(result, MatrixMath.reuseRotateZCommand, [
              _convertToRadians(value),
            ]);
            break;
          case 'scale':
            _multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);
            break;
          case 'scaleX':
            _multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);
            break;
          case 'scaleY':
            _multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);
            break;
          case 'translate':
            _multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [
              value[0],
              value[1],
              value[2] || 0,
            ]);
            break;
          case 'translateX':
            _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [
              value,
              0,
            ]);
            break;
          case 'translateY':
            _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [
              0,
              value,
            ]);
            break;
          case 'skewX':
            _multiplyTransform(result, MatrixMath.reuseSkewXCommand, [
              _convertToRadians(value),
            ]);
            break;
          case 'skewY':
            _multiplyTransform(result, MatrixMath.reuseSkewYCommand, [
              _convertToRadians(value),
            ]);
            break;
          default:
            throw new Error('Invalid transform name: ' + key);
        }
      });
      return result;
    }
    function register(name, callback) {
      viewConfigCallbacks.set(name, callback);
      return name;
    };
    const createReactNativeComponentClass = function(name, callback) {
      return register(name, callback);
    };
    const RCTText = createReactNativeComponentClass(
      viewConfig.uiViewClassName,
      function () { return viewConfig }
    );
    const RCTVirtualText = UIManager.RCTVirtualText == null
      ? RCTText
      : createReactNativeComponentClass('RCTVirtualText', () => ({
            validAttributes: Object.assign({},
              ReactNativeViewAttributes.UIView,
              { isHighlighted: true }
            ),
            uiViewClassName: 'RCTVirtualText',
          }));
    function normalizeColor(color) {
      const matchers = getMatchers();
      let match;
      if (typeof color === 'number') {
        if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
          return color;
        }
        return null;
      }
      // Ordered based on occurrences on Facebook codebase
      if ((match = matchers.hex6.exec(color))) {
        return parseInt(match[1] + 'ff', 16) >>> 0;
      }
      if (names.hasOwnProperty(color)) {
        return names[color];
      }
      if ((match = matchers.rgb.exec(color))) {
        return (
          // b
          ((parse255(match[1]) << 24) | // r
          (parse255(match[2]) << 16) | // g
            (parse255(match[3]) << 8) |
            0x000000ff) >>> // a
          0
        );
      }
      if ((match = matchers.rgba.exec(color))) {
        return (
          // b
          ((parse255(match[1]) << 24) | // r
          (parse255(match[2]) << 16) | // g
            (parse255(match[3]) << 8) |
            parse1(match[4])) >>> // a
          0
        );
      }
      if ((match = matchers.hex3.exec(color))) {
        return (
          parseInt(
            match[1] +
            match[1] + // r
            match[2] +
            match[2] + // g
            match[3] +
            match[3] + // b
              'ff', // a
            16,
          ) >>> 0
        );
      }
      // https://drafts.csswg.org/css-color-4/#hex-notation
      if ((match = matchers.hex8.exec(color))) {
        return parseInt(match[1], 16) >>> 0;
      }
      if ((match = matchers.hex4.exec(color))) {
        return (
          parseInt(
            match[1] +
            match[1] + // r
            match[2] +
            match[2] + // g
            match[3] +
            match[3] + // b
              match[4] +
              match[4], // a
            16,
          ) >>> 0
        );
      }
      if ((match = matchers.hsl.exec(color))) {
        return (
          (hslToRgb(
            parse360(match[1]), // h
            parsePercentage(match[2]), // s
            parsePercentage(match[3]), // l
          ) |
            0x000000ff) >>> // a
          0
        );
      }
      if ((match = matchers.hsla.exec(color))) {
        return (
          (hslToRgb(
            parse360(match[1]), // h
            parsePercentage(match[2]), // s
            parsePercentage(match[3]), // l
          ) |
            parse1(match[4])) >>> // a
          0
        );
      }
      return null;
    }
    function hue2rgb(p, q, t) {
      if (t < 0) {
        t += 1;
      }
      if (t > 1) {
        t -= 1;
      }
      if (t < 1 / 6) {
        return p + (q - p) * 6 * t;
      }
      if (t < 1 / 2) {
        return q;
      }
      if (t < 2 / 3) {
        return p + (q - p) * (2 / 3 - t) * 6;
      }
      return p;
    }
    function hslToRgb(h, s, l) {
      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
      const p = 2 * l - q;
      const r = hue2rgb(p, q, h + 1 / 3);
      const g = hue2rgb(p, q, h);
      const b = hue2rgb(p, q, h - 1 / 3);
      return (
        (Math.round(r * 255) << 24) |
        (Math.round(g * 255) << 16) |
        (Math.round(b * 255) << 8)
      );
    }
    // var INTEGER = '[-+]?\\d+';
    const NUMBER = '[-+]?\\d*\\.?\\d+';
    const PERCENTAGE = NUMBER + '%';
    function call(...args) {
      return '\\(\\s*(' + args.join(')\\s*,\\s*(') + ')\\s*\\)';
    }
    function getMatchers() {
      var cachedMatchers = {
          rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
          rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),
          hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
          hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
          hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
          hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
          hex6: /^#([0-9a-fA-F]{6})$/,
          hex8: /^#([0-9a-fA-F]{8})$/,
        };
      return cachedMatchers;
    }
    function parse255(str) {
      const int = parseInt(str, 10);
      if (int < 0) {
        return 0;
      }
      if (int > 255) {
        return 255;
      }
      return int;
    }
    function parse360(str) {
      const int = parseFloat(str);
      return (((int % 360) + 360) % 360) / 360;
    }
    function parse1(str) {
      const num = parseFloat(str);
      if (num < 0) {
        return 0;
      }
      if (num > 1) {
        return 255;
      }
      return Math.round(num * 255);
    }
    function parsePercentage(str) {
      // parseFloat conveniently ignores the final %
      const int = parseFloat(str);
      if (int < 0) {
        return 0;
      }
      if (int > 100) {
        return 1;
      }
      return int / 100;
    }
    const names = {
      transparent: 0x00000000,
      // http://www.w3.org/TR/css3-color/#svg-color
      aliceblue: 0xf0f8ffff,
      antiquewhite: 0xfaebd7ff,
      aqua: 0x00ffffff,
      aquamarine: 0x7fffd4ff,
      azure: 0xf0ffffff,
      beige: 0xf5f5dcff,
      bisque: 0xffe4c4ff,
      black: 0x000000ff,
      blanchedalmond: 0xffebcdff,
      blue: 0x0000ffff,
      blueviolet: 0x8a2be2ff,
      brown: 0xa52a2aff,
      burlywood: 0xdeb887ff,
      burntsienna: 0xea7e5dff,
      cadetblue: 0x5f9ea0ff,
      chartreuse: 0x7fff00ff,
      chocolate: 0xd2691eff,
      coral: 0xff7f50ff,
      cornflowerblue: 0x6495edff,
      cornsilk: 0xfff8dcff,
      crimson: 0xdc143cff,
      cyan: 0x00ffffff,
      darkblue: 0x00008bff,
      darkcyan: 0x008b8bff,
      darkgoldenrod: 0xb8860bff,
      darkgray: 0xa9a9a9ff,
      darkgreen: 0x006400ff,
      darkgrey: 0xa9a9a9ff,
      darkkhaki: 0xbdb76bff,
      darkmagenta: 0x8b008bff,
      darkolivegreen: 0x556b2fff,
      darkorange: 0xff8c00ff,
      darkorchid: 0x9932ccff,
      darkred: 0x8b0000ff,
      darksalmon: 0xe9967aff,
      darkseagreen: 0x8fbc8fff,
      darkslateblue: 0x483d8bff,
      darkslategray: 0x2f4f4fff,
      darkslategrey: 0x2f4f4fff,
      darkturquoise: 0x00ced1ff,
      darkviolet: 0x9400d3ff,
      deeppink: 0xff1493ff,
      deepskyblue: 0x00bfffff,
      dimgray: 0x696969ff,
      dimgrey: 0x696969ff,
      dodgerblue: 0x1e90ffff,
      firebrick: 0xb22222ff,
      floralwhite: 0xfffaf0ff,
      forestgreen: 0x228b22ff,
      fuchsia: 0xff00ffff,
      gainsboro: 0xdcdcdcff,
      ghostwhite: 0xf8f8ffff,
      gold: 0xffd700ff,
      goldenrod: 0xdaa520ff,
      gray: 0x808080ff,
      green: 0x008000ff,
      greenyellow: 0xadff2fff,
      grey: 0x808080ff,
      honeydew: 0xf0fff0ff,
      hotpink: 0xff69b4ff,
      indianred: 0xcd5c5cff,
      indigo: 0x4b0082ff,
      ivory: 0xfffff0ff,
      khaki: 0xf0e68cff,
      lavender: 0xe6e6faff,
      lavenderblush: 0xfff0f5ff,
      lawngreen: 0x7cfc00ff,
      lemonchiffon: 0xfffacdff,
      lightblue: 0xadd8e6ff,
      lightcoral: 0xf08080ff,
      lightcyan: 0xe0ffffff,
      lightgoldenrodyellow: 0xfafad2ff,
      lightgray: 0xd3d3d3ff,
      lightgreen: 0x90ee90ff,
      lightgrey: 0xd3d3d3ff,
      lightpink: 0xffb6c1ff,
      lightsalmon: 0xffa07aff,
      lightseagreen: 0x20b2aaff,
      lightskyblue: 0x87cefaff,
      lightslategray: 0x778899ff,
      lightslategrey: 0x778899ff,
      lightsteelblue: 0xb0c4deff,
      lightyellow: 0xffffe0ff,
      lime: 0x00ff00ff,
      limegreen: 0x32cd32ff,
      linen: 0xfaf0e6ff,
      magenta: 0xff00ffff,
      maroon: 0x800000ff,
      mediumaquamarine: 0x66cdaaff,
      mediumblue: 0x0000cdff,
      mediumorchid: 0xba55d3ff,
      mediumpurple: 0x9370dbff,
      mediumseagreen: 0x3cb371ff,
      mediumslateblue: 0x7b68eeff,
      mediumspringgreen: 0x00fa9aff,
      mediumturquoise: 0x48d1ccff,
      mediumvioletred: 0xc71585ff,
      midnightblue: 0x191970ff,
      mintcream: 0xf5fffaff,
      mistyrose: 0xffe4e1ff,
      moccasin: 0xffe4b5ff,
      navajowhite: 0xffdeadff,
      navy: 0x000080ff,
      oldlace: 0xfdf5e6ff,
      olive: 0x808000ff,
      olivedrab: 0x6b8e23ff,
      orange: 0xffa500ff,
      orangered: 0xff4500ff,
      orchid: 0xda70d6ff,
      palegoldenrod: 0xeee8aaff,
      palegreen: 0x98fb98ff,
      paleturquoise: 0xafeeeeff,
      palevioletred: 0xdb7093ff,
      papayawhip: 0xffefd5ff,
      peachpuff: 0xffdab9ff,
      peru: 0xcd853fff,
      pink: 0xffc0cbff,
      plum: 0xdda0ddff,
      powderblue: 0xb0e0e6ff,
      purple: 0x800080ff,
      rebeccapurple: 0x663399ff,
      red: 0xff0000ff,
      rosybrown: 0xbc8f8fff,
      royalblue: 0x4169e1ff,
      saddlebrown: 0x8b4513ff,
      salmon: 0xfa8072ff,
      sandybrown: 0xf4a460ff,
      seagreen: 0x2e8b57ff,
      seashell: 0xfff5eeff,
      sienna: 0xa0522dff,
      silver: 0xc0c0c0ff,
      skyblue: 0x87ceebff,
      slateblue: 0x6a5acdff,
      slategray: 0x708090ff,
      slategrey: 0x708090ff,
      snow: 0xfffafaff,
      springgreen: 0x00ff7fff,
      steelblue: 0x4682b4ff,
      tan: 0xd2b48cff,
      teal: 0x008080ff,
      thistle: 0xd8bfd8ff,
      tomato: 0xff6347ff,
      turquoise: 0x40e0d0ff,
      violet: 0xee82eeff,
      wheat: 0xf5deb3ff,
      white: 0xffffffff,
      whitesmoke: 0xf5f5f5ff,
      yellow: 0xffff00ff,
      yellowgreen: 0x9acd32ff,
    };
    function processColor(color) {
      if (color === undefined || color === null) {
        return color;
      }
      var int32Color = normalizeColor(color);
      if (int32Color === null || int32Color === undefined) {
        return undefined;
      }
      // Converts 0xrrggbbaa into 0xaarrggbb
      int32Color = ((int32Color << 24) | (int32Color >>> 8)) >>> 0;
      if (Platform.OS === 'android') {
        // Android use 32 bit *signed* integer to represent the color
        // We utilize the fact that bitwise operations in JS also operates on
        // signed 32 bit integers, so that we can use those to convert from
        // *unsigned* to *signed* 32bit int that way.
        int32Color = int32Color | 0x0;
      }
      return int32Color;
    }
    const isTouchable = props =>
      props.onPress != null ||
      props.onLongPress != null ||
      props.onStartShouldSetResponder != null;
    // this is not a full implementation, but just for a hack
    function TouchableText(props) {
      var newProps = props;
      if (isTouchable(newProps)) {
        throw new Error("TODO: mocked TouchableText does not handle touch events");
      }
      if (props.selectionColor != null) {
        newProps = Object.assign({}, props, {
          selectionColor: processColor(props.selectionColor)
        });
      }
      return (
        React.createElement(
          TextAncestor.Consumer,
          null,
          function (hasTextAncestor) {
            return (
              hasTextAncestor ? (
                React.createElement(
                  RCTVirtualText,
                  Object.assign(
                    {},
                    newProps,
                    { ref: newProps.forwardedRef }
                  )
                )
              ) : (
                React.createElement(
                  TextAncestor.Provider,
                  { value: true },
                  React.createElement(
                    RCTText,
                    Object.assign(
                      {},
                      newProps,
                      { ref: newProps.forwardedRef }
                    )
                  )
                )
              )
            );
          }
        )
      );
    }
    TouchableText.defaultProps = {
      accessible: true,
      allowFontScaling: true,
      ellipsizeMode: 'tail',
    };
    function getDifferForType(typeName: string) {
      switch (typeName) {
        // iOS Types
        case 'CATransform3D':
          return matricesDiffer;
        case 'CGPoint':
          return pointsDiffer;
        case 'CGSize':
          return sizesDiffer;
        case 'UIEdgeInsets':
          return insetsDiffer;
        // Android Types
        // (not yet implemented)
      }
      return null;
    }
    function getProcessorForType(typeName) {
      switch (typeName) {
        // iOS Types
        case 'CGColor':
        case 'UIColor':
          return processColor;
        case 'CGColorArray':
        case 'UIColorArray':
          return processColorArray;
        case 'CGImage':
        case 'UIImage':
        case 'RCTImageSource':
          return resolveAssetSource;
        // Android Types
        case 'Color':
          return processColor;
        case 'ColorArray':
          return processColorArray;
      }
      return null;
    }
    function merge(destination, source) {
      if (!source) {
        return destination;
      }
      if (!destination) {
        return source;
      }
      for (const key in source) {
        if (!source.hasOwnProperty(key)) {
          continue;
        }
        let sourceValue = source[key];
        if (destination.hasOwnProperty(key)) {
          const destinationValue = destination[key];
          if (
            typeof sourceValue === 'object' &&
            typeof destinationValue === 'object'
          ) {
            sourceValue = merge(destinationValue, sourceValue);
          }
        }
        destination[key] = sourceValue;
      }
      return destination;
    }
    function requireNativeComponent(uiViewClassName) {
      return createReactNativeComponentClass(uiViewClassName, function() {
        const viewConfig = UIManager[viewName];
        let {baseModuleName, bubblingEventTypes, directEventTypes} = viewConfig;
        let nativeProps = viewConfig.NativeProps;
        while (baseModuleName) {
          const baseModule = UIManager[baseModuleName];
          if (!baseModule) {
            baseModuleName = null;
          } else {
            bubblingEventTypes = Object.assign({}, baseModule.bubblingEventTypes, bubblingEventTypes);
            directEventTypes = Object.assign({}, baseModule.directEventTypes, directEventTypes);
            nativeProps = Object.assign({}, baseModule.NativeProps, nativeProps);
            baseModuleName = baseModule.baseModuleName;
          }
        }
        const viewAttributes = {};
        for (const key in nativeProps) {
          const typeName = nativeProps[key];
          const diff = getDifferForType(typeName);
          const process = getProcessorForType(typeName);
          viewAttributes[key] =
            diff == null && process == null ? true : {diff, process};
        }
        viewAttributes.style = ReactNativeStyleAttributes;
        Object.assign(viewConfig, {
          uiViewClassName: viewName,
          validAttributes: viewAttributes,
          bubblingEventTypes,
          directEventTypes,
        });
        if (!hasAttachedDefaultEventTypes) {
          attachDefaultEventTypes(viewConfig);
          hasAttachedDefaultEventTypes = true;
        }
        return viewConfig;
      });
    }
    var hasAttachedDefaultEventTypes = false;
    function attachDefaultEventTypes(viewConfig) {
      // This is supported on UIManager platforms (ex: Android),
      // as lazy view managers are not implemented for all platforms.
      // See [UIManager] for details on constants and implementations.
      if (UIManager.ViewManagerNames) {
        // Lazy view managers enabled.
        viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
      } else {
        viewConfig.bubblingEventTypes = merge(
          viewConfig.bubblingEventTypes,
          UIManager.genericBubblingEventTypes,
        );
        viewConfig.directEventTypes = merge(
          viewConfig.directEventTypes,
          UIManager.genericDirectEventTypes,
        );
      }
    }
    const Text = React.forwardRef(function(props, ref) {
      return React.createElement(
        TouchableText,
        Object.assign(
          {},
          props
          // { forwardedRef: ref }
        )
      );
    });
    const StyleSheet = {
      create(obj){
        return obj;
      },
    };
    const RCTView = requireNativeComponent(
      'RCTView',
      {},
      {
        nativeOnly: {
          nativeBackgroundAndroid: true,
          nativeForegroundAndroid: true,
        },
      },
    );
    return {
      StyleSheet,
      Text,
      View: RCTView,
    };
  }
`;let reactNativeAst=(0,_parser.parseExpression)(reactNativeCode,{plugins:["flow"]});function createMockReactNative(realm,reactNativeRequireName){let reactNativeFactory=_singletons.Environment.GetValue(realm,realm.$GlobalEnv.evaluate(reactNativeAst,false));(0,_invariant.default)(reactNativeFactory instanceof _index.ECMAScriptSourceFunctionValue);let factory=reactNativeFactory.$Call;(0,_invariant.default)(factory!==undefined);let RCTViewDerivedReference=_index.AbstractValue.createTemporalFromBuildFunction(realm,
_index.StringValue,[new _index.StringValue(realm,"RCTView")],(0,_generator.createOperationDescriptor)("REACT_NATIVE_STRING_LITERAL"),{skipInvariant:true,isPure:true});(0,_invariant.default)(RCTViewDerivedReference instanceof _index.AbstractValue);realm.react.reactElementStringTypeReferences.set("RCTView",RCTViewDerivedReference);let RCTTextDerivedReference=_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.StringValue,[new _index.StringValue(realm,"RCTText")],(0,_generator.createOperationDescriptor)("REACT_NATIVE_STRING_LITERAL"),
{skipInvariant:true,isPure:true});(0,_invariant.default)(RCTTextDerivedReference instanceof _index.AbstractValue);realm.react.reactElementStringTypeReferences.set("RCTText",RCTTextDerivedReference);let RCTActivityIndicatorViewDerivedReference=_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.StringValue,[new _index.StringValue(realm,"RCTActivityIndicatorView")],(0,_generator.createOperationDescriptor)("REACT_NATIVE_STRING_LITERAL"),{skipInvariant:true,isPure:true});(0,_invariant.default)(RCTActivityIndicatorViewDerivedReference instanceof
_index.AbstractValue);realm.react.reactElementStringTypeReferences.set("RCTActivityIndicatorView",RCTActivityIndicatorViewDerivedReference);let reactLibrary=realm.fbLibraries.react;(0,_invariant.default)(reactLibrary!==undefined,"Could not find React library in sourcecode. Ensure React is bundled or required.");let reactNativeValue=factory(realm.intrinsics.undefined,[reactLibrary,new _index.StringValue(realm,reactNativeRequireName)]);(0,_invariant.default)(reactNativeValue instanceof _index.ObjectValue);
reactNativeValue.refuseSerialization=true;reactNativeValue.intrinsicName=`require("${reactNativeRequireName}")`;reactNativeValue.refuseSerialization=false;return reactNativeValue}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.createMockReactRelay=createMockReactRelay;var _index=__webpack_require__(10);var _singletons=__webpack_require__(236);var _utils=__webpack_require__(632);var _index2=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));
var _utils2=__webpack_require__(291);var _parser=__webpack_require__(247);var _utils3=__webpack_require__(639);var _generator=__webpack_require__(237);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}let reactRelayCode=`
  function createReactRelay(React) {
   function mapObject(obj, func) {
     var newObj = {};
      Object.keys(obj).forEach(function(key) {
        newObj[key] = func(obj[key]);
      });
      return newObj;
   }
    function isReactComponent(component) {
      return !!(
        component &&
        typeof component.prototype === 'object' &&
        component.prototype &&
        component.prototype.isReactComponent
      );
    }
    function getReactComponent(Component) {
      if (isReactComponent(Component)) {
        return Component;
      } else {
        return null;
      }
    }
    function getComponentName(Component) {
      let name;
      const ComponentClass = getReactComponent(Component);
      if (ComponentClass) {
        name = ComponentClass.displayName || ComponentClass.name;
      } else if (typeof Component === 'function') {
        name = Component.displayName || Component.name || 'StatelessComponent';
      } else {
        name = 'ReactElement';
      }
      return String(name);
    }
    function createFragmentContainer(Component, fragmentSpec) {
      var componentName = getComponentName(Component);
      var containerName = \`Relay(\${componentName})\`;
      return function(props, context) {
        var relay = context.relay;
        var {
          createFragmentSpecResolver,
          getFragment: getFragmentFromTag,
        } = relay.environment.unstable_internal;
        var fragments = mapObject(fragmentSpec, getFragmentFromTag);
        var resolver = createFragmentSpecResolver(
          relay,
          containerName,
          fragments,
          props,
        );
        var relayProp = {
          isLoading: resolver.isLoading(),
          environment: relay.environment,
        };
        var newProps = Object.assign({}, props, resolver.resolve(), {
          relay: relayProp,
        });
        return React.createElement(Component, newProps);
      };
    }
    return {
      createFragmentContainer,
    };
  }
`;let reactRelayAst=(0,_parser.parseExpression)(reactRelayCode,{plugins:["flow"]});function createReactRelayContainer(realm,reactRelay,containerName,reactRelayFirstRenderValue,relayRequireName){(0,_utils3.addMockFunctionToObject)(realm,reactRelay,relayRequireName,containerName,(funcValue,args)=>{let value=_index.AbstractValue.createTemporalFromBuildFunction(realm,_index.FunctionValue,[reactRelay,new _index.StringValue(realm,containerName),...args],(0,_generator.createOperationDescriptor)("REACT_RELAY_MOCK_CONTAINER"),
{skipInvariant:true,isPure:true});(0,_invariant.default)(value instanceof _index.AbstractValue);let firstRenderContainerValue=(0,_index2.Get)(realm,reactRelayFirstRenderValue,containerName);let firstRenderValue=realm.intrinsics.undefined;if(firstRenderContainerValue instanceof _index.ECMAScriptSourceFunctionValue){let firstRenderContainerValueCall=firstRenderContainerValue.$Call;(0,_invariant.default)(firstRenderContainerValueCall!==undefined);firstRenderValue=firstRenderContainerValueCall(realm.intrinsics.undefined,
args);(0,_invariant.default)(firstRenderValue instanceof _index.ECMAScriptSourceFunctionValue)}realm.react.abstractHints.set(value,(0,_utils2.createReactHintObject)(reactRelay,containerName,args,firstRenderValue));return value})}function createMockReactRelay(realm,relayRequireName){let reactRelayFirstRenderFactory=_singletons.Environment.GetValue(realm,realm.$GlobalEnv.evaluate(reactRelayAst,false));(0,_invariant.default)(reactRelayFirstRenderFactory instanceof _index.ECMAScriptSourceFunctionValue);
let factory=reactRelayFirstRenderFactory.$Call;(0,_invariant.default)(factory!==undefined);(0,_invariant.default)(realm.fbLibraries.react instanceof _index.ObjectValue,"mock ReactRelay cannot be required before mock React");let reactRelayFirstRenderValue=factory(realm.intrinsics.undefined,[realm.fbLibraries.react]);(0,_invariant.default)(reactRelayFirstRenderValue instanceof _index.ObjectValue);let reactRelay=new _index.ObjectValue(realm,realm.intrinsics.ObjectPrototype,`require("${relayRequireName}")`,
true);let queryRendererComponent=(0,_utils.createAbstract)(realm,"function",`require("${relayRequireName}").QueryRenderer`);_singletons.Create.CreateDataPropertyOrThrow(realm,reactRelay,"QueryRenderer",queryRendererComponent);let graphql=(0,_utils.createAbstract)(realm,"function",`require("${relayRequireName}").graphql`);_singletons.Create.CreateDataPropertyOrThrow(realm,reactRelay,"graphql",graphql);let reactRelayContainers=["createFragmentContainer","createPaginationContainer","createRefetchContainer"];
for(let reactRelayContainer of reactRelayContainers)createReactRelayContainer(realm,reactRelay,reactRelayContainer,reactRelayFirstRenderValue,relayRequireName);let commitLocalUpdate=(0,_utils.createAbstract)(realm,"function",`require("${relayRequireName}").commitLocalUpdate`);_singletons.Create.CreateDataPropertyOrThrow(realm,reactRelay,"commitLocalUpdate",commitLocalUpdate);let commitMutation=(0,_utils.createAbstract)(realm,"function",`require("${relayRequireName}").commitMutation`);_singletons.Create.CreateDataPropertyOrThrow(realm,
reactRelay,"commitMutation",commitMutation);let fetchQuery=(0,_utils.createAbstract)(realm,"function",`require("${relayRequireName}").fetchQuery`);_singletons.Create.CreateDataPropertyOrThrow(realm,reactRelay,"fetchQuery",fetchQuery);let requestSubscription=(0,_utils.createAbstract)(realm,"function",`require("${relayRequireName}").requestSubscription`);_singletons.Create.CreateDataPropertyOrThrow(realm,reactRelay,"requestSubscription",requestSubscription);reactRelay.refuseSerialization=false;reactRelay.makeFinal();
return reactRelay}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.createFbMocks=createFbMocks;var _index=__webpack_require__(15);var _index2=__webpack_require__(10);var _singletons=__webpack_require__(236);var _index3=__webpack_require__(232);var _invariant=_interopRequireDefault(__webpack_require__(9));var _utils=__webpack_require__(291);var _generator=__webpack_require__(237);var _descriptors=__webpack_require__(268);function _interopRequireDefault(obj){return obj&&
obj.__esModule?obj:{default:obj}}const fbMagicGlobalFunctions=["asset","cx","cssVar","csx","errorDesc","errorHelpCenterID","errorSummary","gkx","glyph","ifRequired","ix","fbglyph","requireWeak","xuiglyph"];const fbMagicGlobalObjects=["JSResource","fbt"];function createBabelHelpers(realm,global){let babelHelpersValue=new _index2.ObjectValue(realm,realm.intrinsics.ObjectPrototype,`babelHelpers`,true);let objectAssign=(0,_index3.Get)(realm,realm.intrinsics.Object,"assign");let objectCreate=(0,_index3.Get)(realm,
realm.intrinsics.Object,"create");let inheritsValue=new _index2.NativeFunctionValue(realm,undefined,`inherits`,2,(context,[subClass,superClass])=>{(0,_invariant.default)(objectAssign instanceof _index2.NativeFunctionValue);let objectAssignCall=objectAssign.$Call;(0,_invariant.default)(objectAssignCall!==undefined);objectAssignCall(realm.intrinsics.undefined,[subClass,superClass]);(0,_invariant.default)(superClass instanceof _index2.ObjectValue);let superClassPrototype=(0,_index3.Get)(realm,superClass,
"prototype");(0,_invariant.default)(objectCreate instanceof _index2.NativeFunctionValue);let objectCreateCall=objectCreate.$Call;(0,_invariant.default)(typeof objectCreateCall==="function");let newPrototype=objectCreateCall(realm.intrinsics.undefined,[superClassPrototype]);(0,_invariant.default)(subClass instanceof _index2.ObjectValue);(0,_invariant.default)(newPrototype instanceof _index2.ObjectValue);_singletons.Properties.Set(realm,subClass,"prototype",newPrototype,true);_singletons.Properties.Set(realm,
newPrototype,"constructor",subClass,true);_singletons.Properties.Set(realm,subClass,"__superConstructor__",superClass,true);return superClass});babelHelpersValue.defineNativeProperty("inherits",inheritsValue,{writable:false,enumerable:false,configurable:true});inheritsValue.intrinsicName=`babelHelpers.inherits`;const createObjectWithoutProperties=(obj,keys)=>{let removeKeys=new Set;(0,_utils.forEachArrayValue)(realm,keys,(key)=>{if(key instanceof _index2.StringValue||key instanceof _index2.NumberValue)removeKeys.add(key.value)});
let newObject=_singletons.Create.ObjectCreate(realm,realm.intrinsics.ObjectPrototype);for(let [propName,binding]of obj.properties)if(!removeKeys.has(propName))if(binding&&binding.descriptor&&binding.descriptor.throwIfNotConcrete(realm).enumerable){let value=(0,_index3.Get)(realm,obj,propName);_singletons.Properties.Set(realm,newObject,propName,value,true)}return newObject};let objectWithoutPropertiesValue=new _index2.NativeFunctionValue(realm,undefined,`objectWithoutProperties`,2,(context,[obj,keys])=>
{(0,_invariant.default)(obj instanceof _index2.ObjectValue||obj instanceof _index2.AbstractObjectValue||obj instanceof _index2.AbstractValue);(0,_invariant.default)(keys instanceof _index2.ArrayValue);if(obj.mightBeObject()&&(obj instanceof _index2.AbstractValue&&obj.values.isTop()||obj.isPartialObject())){let temporalArgs=[objectWithoutPropertiesValue,obj,keys];let temporalConfig={skipInvariant:true,isPure:true};let value=_index2.AbstractValue.createTemporalFromBuildFunction(realm,_index2.ObjectValue,
temporalArgs,(0,_generator.createOperationDescriptor)("BABEL_HELPERS_OBJECT_WITHOUT_PROPERTIES"),temporalConfig);(0,_invariant.default)(value instanceof _index2.AbstractObjectValue);if(obj instanceof _index2.ObjectValue){let template=createObjectWithoutProperties(obj,keys);value.values=new _index.ValuesDomain(template)}value.makeSimple();return value}else{(0,_invariant.default)(obj instanceof _index2.ObjectValue);return createObjectWithoutProperties(obj,keys)}});babelHelpersValue.defineNativeProperty("objectWithoutProperties",
objectWithoutPropertiesValue,{writable:false,enumerable:false,configurable:true});objectWithoutPropertiesValue.intrinsicName=`babelHelpers.objectWithoutProperties`;let taggedTemplateLiteralLooseValue=new _index2.NativeFunctionValue(realm,undefined,`taggedTemplateLiteralLoose`,2,(context,[strings,raw])=>{(0,_invariant.default)(strings instanceof _index2.ObjectValue);_singletons.Properties.Set(realm,strings,"raw",raw,true);return strings});babelHelpersValue.defineNativeProperty("taggedTemplateLiteralLoose",
taggedTemplateLiteralLooseValue,{writable:false,enumerable:false,configurable:true});taggedTemplateLiteralLooseValue.intrinsicName=`babelHelpers.taggedTemplateLiteralLoose`;babelHelpersValue.defineNativeProperty("extends",objectAssign,{writable:true,enumerable:true,configurable:true});babelHelpersValue.defineNativeProperty("_extends",objectAssign,{writable:true,enumerable:true,configurable:true});let functionBind=(0,_index3.Get)(realm,realm.intrinsics.FunctionPrototype,"bind");babelHelpersValue.defineNativeProperty("bind",
functionBind,{writable:true,enumerable:true,configurable:true});global.$DefineOwnProperty("babelHelpers",new _descriptors.PropertyDescriptor({value:babelHelpersValue,writable:true,enumerable:true,configurable:true}));babelHelpersValue.refuseSerialization=false}function createMagicGlobalFunction(realm,global,functionName){global.$DefineOwnProperty(functionName,new _descriptors.PropertyDescriptor({value:new _index2.NativeFunctionValue(realm,functionName,functionName,0,(context,args)=>{let val=_index2.AbstractValue.createTemporalFromBuildFunction(realm,
_index2.FunctionValue,[new _index2.StringValue(realm,functionName),...args],(0,_generator.createOperationDescriptor)("FB_MOCKS_MAGIC_GLOBAL_FUNCTION"),{skipInvariant:true,isPure:true});(0,_invariant.default)(val instanceof _index2.AbstractValue);return val}),writable:true,enumerable:false,configurable:true}))}function createMagicGlobalObject(realm,global,objectName){let globalObject=_index2.AbstractValue.createAbstractObject(realm,objectName);globalObject.kind="resolved";global.$DefineOwnProperty(objectName,
new _descriptors.PropertyDescriptor({value:globalObject,writable:true,enumerable:false,configurable:true}))}function createBootloader(realm,global){let bootloader=new _index2.ObjectValue(realm,realm.intrinsics.ObjectPrototype);let loadModules=new _index2.NativeFunctionValue(realm,"loadModules","loadModules",1,(context,args)=>{(0,_invariant.default)(context.$Realm.generator);let val=_index2.AbstractValue.createTemporalFromBuildFunction(realm,_index2.FunctionValue,args,(0,_generator.createOperationDescriptor)("FB_MOCKS_BOOTLOADER_LOAD_MODULES"),
{skipInvariant:true});(0,_invariant.default)(val instanceof _index2.AbstractValue);return val});_singletons.Properties.Set(realm,bootloader,"loadModules",loadModules,false);global.$DefineOwnProperty("Bootloader",new _descriptors.PropertyDescriptor({value:bootloader,writable:true,enumerable:false,configurable:true}));return _index2.AbstractValue.createAbstractObject(realm,"Bootloader",bootloader)}function createFbMocks(realm,global){global.$DefineOwnProperty("__DEV__",new _descriptors.PropertyDescriptor({value:realm.intrinsics.false,
writable:true,enumerable:false,configurable:true}));createBabelHelpers(realm,global);for(let functionName of fbMagicGlobalFunctions)createMagicGlobalFunction(realm,global,functionName);for(let objectName of fbMagicGlobalObjects)createMagicGlobalObject(realm,global,objectName);createBootloader(realm,global)}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.getRealmOptions=getRealmOptions;exports.getSerializerOptions=getSerializerOptions;
function getRealmOptions({compatibility="browser",debugNames=false,errorHandler,mathRandomSeed,invariantLevel=0,invariantMode="throw",emitConcreteModel=false,uniqueSuffix,instantRender,reactEnabled,reactOutput,reactVerbose,reactOptimizeNestedFunctions,serialize=true,check,strictlyMonotonicDateNow,stripFlow,timeout,maxStackDepth,abstractValueImpliesMax,debuggerConfigArgs,debugReproArgs,arrayNestedOptimizedFunctionsEnabled,reactFailOnUnsupportedSideEffects}){return{compatibility,debugNames,errorHandler,
mathRandomSeed,invariantLevel,invariantMode,emitConcreteModel,uniqueSuffix,instantRender,reactEnabled,reactOutput,reactVerbose,reactOptimizeNestedFunctions,serialize,check,strictlyMonotonicDateNow,stripFlow,timeout,maxStackDepth,abstractValueImpliesMax,debuggerConfigArgs,debugReproArgs,arrayNestedOptimizedFunctionsEnabled,reactFailOnUnsupportedSideEffects}}function getSerializerOptions({lazyObjectsRuntime,heapGraphFormat,delayInitializations=false,internalDebug=false,debugScopes=false,debugIdentifiers,
logStatistics=false,logModules=false,profile=false,inlineExpressions=false,modulesToInitialize,trace=false}){let result={delayInitializations,modulesToInitialize,internalDebug,debugScopes,debugIdentifiers,logStatistics,logModules,profile,inlineExpressions,trace};if(lazyObjectsRuntime!==undefined)result.lazyObjectsRuntime=lazyObjectsRuntime;if(heapGraphFormat!==undefined)result.heapGraphFormat=heapGraphFormat;return result}},function(module){module.exports={"_args":[["prepack@0.2.54","/Users/teo/Documents/UNIVERSITY/5th year/Project/tas458"]],
"_from":"prepack@0.2.54","_id":"prepack@0.2.54","_inBundle":false,"_integrity":"sha512-wu6j6J6h/TgpYNRS8tXEyprwul2WM2Zr+dSbc/o0O8cdhoOjvMy2T98WK2dhSNe+xyQ/SaqJpepWiCxS8EVjkA==","_location":"/prepack","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"prepack@0.2.54","name":"prepack","escapedName":"prepack","rawSpec":"0.2.54","saveSpec":null,"fetchSpec":"0.2.54"},"_requiredBy":["/","/prepack-webpack-plugin"],"_resolved":"https://registry.npmjs.org/prepack/-/prepack-0.2.54.tgz",
"_spec":"0.2.54","_where":"/Users/teo/Documents/UNIVERSITY/5th year/Project/tas458","author":{"name":"Facebook"},"bin":{"prepack":"bin/prepack.js","prepack-repl":"bin/prepack-repl.js"},"browser":"lib/prepack-standalone.js","bugs":{"url":"https://github.com/facebook/prepack/issues"},"dependencies":{"@babel/core":"^7.0.0","@babel/generator":"^7.0.0","@babel/node":"^7.0.0","@babel/parser":"^7.0.0","@babel/preset-flow":"^7.0.0","@babel/template":"^7.0.0","@babel/traverse":"^7.0.0","@babel/types":"^7.0.0",
"fbjs":"^0.8.16","node-zip":"^1.1.1","queue-fifo":"^0.2.3","seedrandom":"^2.4.2","source-map":"^0.5.6","v8-profiler-node8":"^6.0.1","vscode-debugadapter":"^1.24.0","vscode-debugprotocol":"^1.24.0","zip-dir":"^1.0.2"},"description":"Execute a JS bundle, serialize global state and side effects to a snapshot that can be quickly restored.","devDependencies":{"@babel/cli":"^7.0.0","@babel/plugin-proposal-class-properties":"^7.0.0","@babel/plugin-proposal-export-default-from":"^7.0.0","@babel/plugin-proposal-object-rest-spread":"^7.0.0",
"@babel/plugin-syntax-flow":"^7.0.0","@babel/plugin-transform-flow-strip-types":"^7.0.0","@babel/plugin-transform-modules-commonjs":"^7.0.0","@babel/plugin-transform-react-display-name":"^7.0.0","@babel/plugin-transform-react-jsx":"^7.0.0","@babel/preset-env":"^7.0.0","@babel/preset-flow":"^7.0.0","@babel/preset-react":"^7.0.0","@babel/register":"^7.0.0","babel-core":"7.0.0-bridge.0","babel-eslint":"^8.2.6","babel-jest":"^23.4.0","babel-loader":"^8.0.0-beta","babel-plugin-jest-hoist":"^23.2.0","chalk":"^1.1.3",
"eslint":"^4.18.2","eslint-plugin-babel":"^3.3.0","eslint-plugin-flow-header":"^0.1.1","eslint-plugin-flowtype":"^2.40.0","eslint-plugin-header":"^1.0.0","eslint-plugin-prettier":"^2.1.2","flow-bin":"^0.81.0","flow-typed":"^2.3.0","graceful-fs":"^4.1.11","invariant":"^2.2.0","istanbul":"^0.4.5","jest":"^23.4.1","js-beautify":"^1.7.5","js-yaml":"^3.6.1","jsdom":"^9.2.1","madge":"^1.6.0","minimist":"^1.2.0","prettier":"1.13.6","prop-types":"^15.6.0","react":"16.3.1","react-dom":"16.3.1","react-native":"^0.55.4",
"react-relay":"^1.4.1","react-test-renderer":"16.3.1","regenerator-runtime":"^0.12.0","remap-istanbul":"^0.9.1","source-map-support":"^0.4.6","test262-integrator":"^1.2.0","webpack":"^4.16.0","webpack-cli":"^3.0.8"},"engines":{"node":">=6.1.0"},"files":["LICENSE","PATENTS","/bin/","/lib/"],"homepage":"https://github.com/facebook/prepack","jest":{"preset":"react-native","roots":["<rootDir>/node_modules/react-native/","<rootDir>/lib/","<rootDir>/test/react/","<rootDir>/fb-www/"],"testEnvironment":"jsdom",
"testMatch":["**/test/react/*-test.js","**/fb-www/**/*-test.js"],"transformIgnorePatterns":["/node_modules/(?!react-native).+\\.js$"]},"keywords":["prepack"],"license":"BSD-3-Clause","main":"lib/prepack-node.js","name":"prepack","optionalDependencies":{"v8-profiler-node8":"^6.0.1"},"repository":{"type":"git","url":"git://github.com/facebook/prepack.git"},"scripts":{"build":"yarn build-prepack && yarn build-bundle","build-bundle":"webpack-cli --silent","build-prepack":"babel src --out-dir lib --source-maps",
"build-scripts":"babel scripts --out-dir lib --source-maps","debug-fb-www":"node --stack_trace_limit=200 --stack_size=10000 --max_old_space_size=16384 ./scripts/debug-fb-www.js","depcheck":"babel-node scripts/detect_bad_deps.js","flow":"flow","flow-ci":"flow version; flow check","fuzz":"cd fuzzer && yarn && yarn test","fuzz-overnight":"cd fuzzer && yarn && yarn overnight","fuzz-sample":"cd fuzzer && yarn && yarn sample","lint":"eslint src scripts","precheck":"yarn prepack-cli --check","prepack-cli":"node --stack_size=10000 --stack_trace_limit=200 --max_old_space_size=16384 lib/prepack-cli.js --compatibility jsc-600-1-4-17 --mathRandomSeed 0",
"prepublishOnly":"yarn build","prettier":"node ./scripts/prettier.js write-changed","prettier-all":"node ./scripts/prettier.js write","prettier-ci":"node ./scripts/prettier.js","repl":"node lib/repl-cli.js","test":"yarn test-serializer && yarn test-sourcemaps && yarn test-error-handler && yarn test-std-in && yarn test-test262 && yarn test-internal && yarn test-internal-react && yarn test-react","test-all-coverage":"istanbul --stack_size=10000 --max_old_space_size=16384 cover ./lib/multi-runner.js --dir coverage.most && ./node_modules/.bin/istanbul --stack_size=10000 --max_old_space_size=16384 cover ./lib/test262-runner.js --timeout 50 --singleThreaded && ./node_modules/.bin/remap-istanbul -i coverage/coverage.json -i coverage.most/coverage.json -o coverage-sourcemapped -t html",
"test-coverage-most":"istanbul --stack_size=10000 --max_old_space_size=16384 cover ./lib/multi-runner.js --dir coverage.most && ./node_modules/.bin/remap-istanbul -i coverage.most/coverage.json -o coverage-sourcemapped -t html","test-error-handler":"babel-node scripts/test-error-handler.js","test-error-handler-with-coverage":"istanbul cover ./lib/test-error-handler.js --dir coverage.error && ./node_modules/.bin/remap-istanbul -i coverage.error/coverage.json -o coverage-sourcemapped.error -t html",
"test-internal":"babel-node --stack_size=10000 --stack_trace_limit=200 --max_old_space_size=32768 scripts/test-internal.js","test-internal-react":"babel-node --stack_size=10000 --stack_trace_limit=200 --max_old_space_size=32768 scripts/test-internal-react.js","test-react":"jest","test-react-fast":"SKIP_REACT_JSX_TESTS=true jest","test-serializer":"babel-node --stack_trace_limit=200 --stack_size=10000 scripts/test-runner.js","test-serializer-single":"yarn test-serializer --debugNames --verbose --fast --filter",
"test-serializer-with-coverage":"istanbul cover ./lib/test-error-handler.js --dir coverage.error && node --stack_trace_limit=200 --stack_size=10000 ./node_modules/istanbul/lib/cli.js cover ./lib/test-runner.js && ./node_modules/.bin/remap-istanbul -i coverage.error/coverage.json -i coverage/coverage.json -o coverage-sourcemapped -t html","test-sourcemaps":"babel-node scripts/generate-sourcemaps-test.js && bash < scripts/test-sourcemaps.sh","test-std-in":"bash < scripts/test-std-in.sh","test-test262":"babel-node scripts/test262-runner.js",
"test-test262-new":"babel-node scripts/test262.js","test-test262-nightly":"NIGHTLY_BUILD=true babel-node scripts/test262-runner.js","validate":"yarn install --frozen-lockfile && yarn build && yarn build-scripts && yarn lint && yarn depcheck && yarn flow && yarn test","watch":"babel src scripts --out-dir lib --watch --source-maps --verbose"},"version":"0.2.54"}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.DebugChannel=void 0;var _invariant=
_interopRequireDefault(__webpack_require__(621));var _FileIOWrapper=__webpack_require__(652);var _DebugMessage=__webpack_require__(622);var _MessageMarshaller=__webpack_require__(655);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class DebugChannel{constructor(ioWrapper){this._requestReceived=false;this._ioWrapper=ioWrapper;this._marshaller=new _MessageMarshaller.MessageMarshaller}debuggerIsAttached(){let message=this._ioWrapper.readInSyncOnce();if(message===null)return false;
let parts=message.split(" ");let requestID=parseInt(parts[0],10);(0,_invariant.default)(!isNaN(requestID),"Request ID must be a number");let command=parts[1];if(command===_DebugMessage.DebugMessage.DEBUGGER_ATTACHED){this._requestReceived=true;this._ioWrapper.clearInFile();this.writeOut(`${requestID} ${_DebugMessage.DebugMessage.PREPACK_READY_RESPONSE}`);return true}return false}readIn(){let message=this._ioWrapper.readInSync();this._requestReceived=true;return this._marshaller.unmarshallRequest(message)}writeOut(contents){(0,
_invariant.default)(this._requestReceived,"Prepack writing message without being requested: "+contents);this._ioWrapper.writeOutSync(contents);this._requestReceived=false}sendBreakpointsAcknowledge(messageType,requestID,args){this.writeOut(this._marshaller.marshallBreakpointAcknowledge(requestID,messageType,args.breakpoints))}sendStoppedResponse(reason,filePath,line,column,message){this.writeOut(this._marshaller.marshallStoppedResponse(reason,filePath,line,column,message))}sendStackframeResponse(requestID,
stackframes){this.writeOut(this._marshaller.marshallStackFramesResponse(requestID,stackframes))}sendScopesResponse(requestID,scopes){this.writeOut(this._marshaller.marshallScopesResponse(requestID,scopes))}sendVariablesResponse(requestID,variables){this.writeOut(this._marshaller.marshallVariablesResponse(requestID,variables))}sendEvaluateResponse(requestID,evalResult){this.writeOut(this._marshaller.marshallEvaluateResponse(requestID,evalResult))}shutdown(){this._ioWrapper.clearInFile();this._ioWrapper.clearOutFile()}}
exports.DebugChannel=DebugChannel},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.FileIOWrapper=void 0;var _fs=_interopRequireDefault(__webpack_require__(653));var _MessagePackager=__webpack_require__(654);var _invariant=_interopRequireDefault(__webpack_require__(621));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class FileIOWrapper{constructor(isAdapter,inFilePath,outFilePath){this._inFilePath=inFilePath;
this._outFilePath=outFilePath;if(!_fs.default.existsSync(this._inFilePath))_fs.default.openSync(this._inFilePath,"w");if(!_fs.default.existsSync(this._outFilePath))_fs.default.openSync(this._outFilePath,"w");this._packager=new _MessagePackager.MessagePackager(isAdapter);this._isAdapter=isAdapter}readIn(errorHandler,messageProcessor){_fs.default.readFile(this._inFilePath,{encoding:"utf8"},(err,contents)=>{if(err){errorHandler(err);return}let message=this._packager.unpackage(contents);if(message===
null){this.readIn(errorHandler,messageProcessor);return}_fs.default.writeFileSync(this._inFilePath,"");messageProcessor(message)})}readInSync(){let message=null;while(true){let contents=_fs.default.readFileSync(this._inFilePath,"utf8");message=this._packager.unpackage(contents);if(message===null)continue;break}(0,_invariant.default)(message!==null);_fs.default.writeFileSync(this._inFilePath,"");return message}readInSyncOnce(){let contents=_fs.default.readFileSync(this._inFilePath,"utf8");let message=
this._packager.unpackage(contents);return message}writeOutSync(contents){_fs.default.writeFileSync(this._outFilePath,this._packager.package(contents))}clearInFile(){_fs.default.writeFileSync(this._inFilePath,"")}clearOutFile(){_fs.default.writeFileSync(this._outFilePath,"")}}exports.FileIOWrapper=FileIOWrapper},function(module,exports){module.exports=__WEBPACK_EXTERNAL_MODULE__653__},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.MessagePackager=
void 0;var _invariant=_interopRequireDefault(__webpack_require__(621));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const LENGTH_SEPARATOR="--";class MessagePackager{constructor(isAdapter){this._isAdapter=isAdapter}package(contents){return contents.length+LENGTH_SEPARATOR+contents}unpackage(contents){let separatorIndex=contents.indexOf(LENGTH_SEPARATOR);if(separatorIndex===-1)return null;let messageLength=parseInt(contents.slice(0,separatorIndex),10);(0,_invariant.default)(!isNaN(messageLength));
let startIndex=separatorIndex+LENGTH_SEPARATOR.length;let endIndex=startIndex+messageLength;(0,_invariant.default)(contents.length<=startIndex+messageLength);if(contents.length<endIndex)return null;let message=contents.slice(startIndex,endIndex);return message}}exports.MessagePackager=MessagePackager},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.MessageMarshaller=void 0;var _DebugMessage=__webpack_require__(622);var _invariant=_interopRequireDefault(__webpack_require__(621));
var _DebuggerError=__webpack_require__(623);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class MessageMarshaller{constructor(){this._lastRunRequestID=0}marshallBreakpointAcknowledge(requestID,messageType,breakpoints){return`${requestID} ${messageType} ${JSON.stringify(breakpoints)}`}marshallStoppedResponse(reason,filePath,line,column,message){let result={kind:"stopped",reason:reason,filePath:filePath,line:line,column:column,message:message};return`${this._lastRunRequestID} ${_DebugMessage.DebugMessage.STOPPED_RESPONSE} ${JSON.stringify(result)}`}marshallDebuggerStart(requestID){return`${requestID} ${_DebugMessage.DebugMessage.DEBUGGER_ATTACHED}`}marshallContinueRequest(requestID){return`${requestID} ${_DebugMessage.DebugMessage.PREPACK_RUN_COMMAND}`}marshallSetBreakpointsRequest(requestID,
breakpoints){return`${requestID} ${_DebugMessage.DebugMessage.BREAKPOINT_ADD_COMMAND} ${JSON.stringify(breakpoints)}`}marshallStackFramesRequest(requestID){return`${requestID} ${_DebugMessage.DebugMessage.STACKFRAMES_COMMAND}`}marshallStackFramesResponse(requestID,stackframes){return`${requestID} ${_DebugMessage.DebugMessage.STACKFRAMES_RESPONSE} ${JSON.stringify(stackframes)}`}marshallScopesRequest(requestID,frameId){return`${requestID} ${_DebugMessage.DebugMessage.SCOPES_COMMAND} ${frameId}`}marshallScopesResponse(requestID,
scopes){return`${requestID} ${_DebugMessage.DebugMessage.SCOPES_RESPONSE} ${JSON.stringify(scopes)}`}marshallVariablesRequest(requestID,variablesReference){return`${requestID} ${_DebugMessage.DebugMessage.VARIABLES_COMMAND} ${variablesReference}`}marshallVariablesResponse(requestID,variables){return`${requestID} ${_DebugMessage.DebugMessage.VARIABLES_RESPONSE} ${JSON.stringify(variables)}`}marshallStepIntoRequest(requestID){return`${requestID} ${_DebugMessage.DebugMessage.STEPINTO_COMMAND}`}marshallStepOverRequest(requestID){return`${requestID} ${_DebugMessage.DebugMessage.STEPOVER_COMMAND}`}marshallStepOutRequest(requestID){return`${requestID} ${_DebugMessage.DebugMessage.STEPOUT_COMMAND}`}marshallEvaluateRequest(requestID,
frameId,expression){let evalArgs={kind:"evaluate",expression:expression};if(frameId!==undefined)evalArgs.frameId=frameId;return`${requestID} ${_DebugMessage.DebugMessage.EVALUATE_COMMAND} ${JSON.stringify(evalArgs)}`}marshallEvaluateResponse(requestID,evalResult){return`${requestID} ${_DebugMessage.DebugMessage.EVALUATE_RESPONSE} ${JSON.stringify(evalResult)}`}unmarshallRequest(message){let parts=message.split(" ");(0,_invariant.default)(parts.length>=2,"Request is not well formed");let requestID=
parseInt(parts[0],10);(0,_invariant.default)(!isNaN(requestID),"Request ID must be a number");let command=parts[1];let args;switch(command){case _DebugMessage.DebugMessage.PREPACK_RUN_COMMAND:this._lastRunRequestID=requestID;let runArgs={kind:"run"};args=runArgs;break;case _DebugMessage.DebugMessage.BREAKPOINT_ADD_COMMAND:args=this._unmarshallBreakpointsArguments(requestID,parts.slice(2).join(" "));break;case _DebugMessage.DebugMessage.STACKFRAMES_COMMAND:let stackFrameArgs={kind:"stackframe"};args=
stackFrameArgs;break;case _DebugMessage.DebugMessage.SCOPES_COMMAND:args=this._unmarshallScopesArguments(requestID,parts[2]);break;case _DebugMessage.DebugMessage.VARIABLES_COMMAND:args=this._unmarshallVariablesArguments(requestID,parts[2]);break;case _DebugMessage.DebugMessage.STEPINTO_COMMAND:this._lastRunRequestID=requestID;let stepIntoArgs={kind:"stepInto"};args=stepIntoArgs;break;case _DebugMessage.DebugMessage.STEPOVER_COMMAND:this._lastRunRequestID=requestID;let stepOverArgs={kind:"stepOver"};
args=stepOverArgs;break;case _DebugMessage.DebugMessage.STEPOUT_COMMAND:this._lastRunRequestID=requestID;let stepOutArgs={kind:"stepOut"};args=stepOutArgs;break;case _DebugMessage.DebugMessage.EVALUATE_COMMAND:args=this._unmarshallEvaluateArguments(requestID,parts.slice(2).join(" "));break;default:throw new _DebuggerError.DebuggerError("Invalid command","Invalid command from adapter: "+command);}(0,_invariant.default)(args!==undefined);let result={id:requestID,command:command,arguments:args};return result}_unmarshallBreakpointsArguments(requestID,
responseString){let breakpoints=JSON.parse(responseString);for(const breakpoint of breakpoints){(0,_invariant.default)(breakpoint.hasOwnProperty("filePath"),"breakpoint missing filePath property");(0,_invariant.default)(breakpoint.hasOwnProperty("line"),"breakpoint missing line property");(0,_invariant.default)(breakpoint.hasOwnProperty("column"),"breakpoint missing column property");(0,_invariant.default)(!isNaN(breakpoint.line));(0,_invariant.default)(!isNaN(breakpoint.column))}let result={kind:"breakpoint",
breakpoints:breakpoints};return result}_unmarshallScopesArguments(requestID,responseString){let frameId=parseInt(responseString,10);(0,_invariant.default)(!isNaN(frameId));let result={kind:"scopes",frameId:frameId};return result}_unmarshallVariablesArguments(requestID,responseString){let varRef=parseInt(responseString,10);(0,_invariant.default)(!isNaN(varRef));let result={kind:"variables",variablesReference:varRef};return result}_unmarshallEvaluateArguments(requestID,responseString){let evalArgs=
JSON.parse(responseString);(0,_invariant.default)(evalArgs.hasOwnProperty("kind"),"Evaluate arguments missing kind field");(0,_invariant.default)(evalArgs.hasOwnProperty("expression"),"Evaluate arguments missing expression field");if(evalArgs.hasOwnProperty("frameId"))(0,_invariant.default)(!isNaN(evalArgs.frameId));return evalArgs}unmarshallResponse(message){try{let parts=message.split(" ");let requestID=parseInt(parts[0],10);(0,_invariant.default)(!isNaN(requestID));let messageType=parts[1];let dbgResult;
let resultString=parts.slice(2).join(" ");if(messageType===_DebugMessage.DebugMessage.PREPACK_READY_RESPONSE)dbgResult=this._unmarshallReadyResult();else if(messageType===_DebugMessage.DebugMessage.BREAKPOINT_ADD_ACKNOWLEDGE)dbgResult=this._unmarshallBreakpointsAddResult(resultString);else if(messageType===_DebugMessage.DebugMessage.STOPPED_RESPONSE)dbgResult=this._unmarshallStoppedResult(resultString);else if(messageType===_DebugMessage.DebugMessage.STACKFRAMES_RESPONSE)dbgResult=this._unmarshallStackframesResult(resultString);
else if(messageType===_DebugMessage.DebugMessage.SCOPES_RESPONSE)dbgResult=this._unmarshallScopesResult(resultString);else if(messageType===_DebugMessage.DebugMessage.VARIABLES_RESPONSE)dbgResult=this._unmarshallVariablesResult(resultString);else if(messageType===_DebugMessage.DebugMessage.EVALUATE_RESPONSE)dbgResult=this._unmarshallEvaluateResult(resultString);else(0,_invariant.default)(false,"Unexpected response type");let dbgResponse={id:requestID,result:dbgResult};return dbgResponse}catch(e){throw new _DebuggerError.DebuggerError("Invalid command",
e.message);}}_unmarshallStackframesResult(resultString){let frames=JSON.parse(resultString);(0,_invariant.default)(Array.isArray(frames),"Stack frames is not an array");for(const frame of frames){(0,_invariant.default)(frame.hasOwnProperty("id"),"Stack frame is missing id");(0,_invariant.default)(frame.hasOwnProperty("fileName"),"Stack frame is missing filename");(0,_invariant.default)(frame.hasOwnProperty("line"),"Stack frame is missing line number");(0,_invariant.default)(frame.hasOwnProperty("column"),
"Stack frame is missing column number");(0,_invariant.default)(frame.hasOwnProperty("functionName"),"Stack frame is missing function name")}let result={kind:"stackframe",stackframes:frames};return result}_unmarshallScopesResult(resultString){let scopes=JSON.parse(resultString);(0,_invariant.default)(Array.isArray(scopes),"Scopes is not an array");for(const scope of scopes){(0,_invariant.default)(scope.hasOwnProperty("name"),"Scope is missing name");(0,_invariant.default)(scope.hasOwnProperty("variablesReference"),
"Scope is missing variablesReference");(0,_invariant.default)(scope.hasOwnProperty("expensive"),"Scope is missing expensive")}let result={kind:"scopes",scopes:scopes};return result}_unmarshallVariablesResult(resultString){let variables=JSON.parse(resultString);(0,_invariant.default)(Array.isArray(variables),"Variables is not an array");for(const variable of variables){(0,_invariant.default)(variable.hasOwnProperty("name"));(0,_invariant.default)(variable.hasOwnProperty("value"));(0,_invariant.default)(variable.hasOwnProperty("variablesReference"))}let result=
{kind:"variables",variables:variables};return result}_unmarshallEvaluateResult(resultString){let evalResult=JSON.parse(resultString);(0,_invariant.default)(evalResult.hasOwnProperty("kind"),"eval result missing kind property");(0,_invariant.default)(evalResult.kind==="evaluate","eval result is the wrong kind");(0,_invariant.default)(evalResult.hasOwnProperty("displayValue","eval result missing display value property"));(0,_invariant.default)(evalResult.hasOwnProperty("type","eval result missing type property"));
(0,_invariant.default)(evalResult.hasOwnProperty("variablesReference","eval result missing variablesReference property"));return evalResult}_unmarshallBreakpointsAddResult(resultString){let breakpoints=JSON.parse(resultString);(0,_invariant.default)(Array.isArray(breakpoints));for(const breakpoint of breakpoints){(0,_invariant.default)(breakpoint.hasOwnProperty("filePath"),"breakpoint missing filePath property");(0,_invariant.default)(breakpoint.hasOwnProperty("line"),"breakpoint missing line property");
(0,_invariant.default)(breakpoint.hasOwnProperty("column"),"breakpoint missing column property");(0,_invariant.default)(!isNaN(breakpoint.line));(0,_invariant.default)(!isNaN(breakpoint.column))}let result={kind:"breakpoint-add",breakpoints:breakpoints};return result}_unmarshallStoppedResult(resultString){let result=JSON.parse(resultString);(0,_invariant.default)(result.kind==="stopped");(0,_invariant.default)(result.hasOwnProperty("reason"));(0,_invariant.default)(result.hasOwnProperty("filePath"));
(0,_invariant.default)(result.hasOwnProperty("line"));(0,_invariant.default)(!isNaN(result.line));(0,_invariant.default)(result.hasOwnProperty("column"));(0,_invariant.default)(!isNaN(result.column));return result}_unmarshallReadyResult(){let result={kind:"ready"};return result}}exports.MessageMarshaller=MessageMarshaller},function(module,exports){module.exports=__WEBPACK_EXTERNAL_MODULE__656__},function(module,exports,__webpack_require__){(function(__dirname){var Prepack=__webpack_require__(1);var fs=
__webpack_require__(653);var path=__webpack_require__(656);var interpreter=__webpack_require__(658);var parser=__webpack_require__(660);var prepackOptions={filename:"interpreter",compatibility:"node-react",inlineExpressions:true,logStatistics:false,internalDebug:false,timeout:Infinity,maxStackDepth:1E3,mathRandomSeed:"rnd"};var callback=function callback(err,result){if(err)throw err;console.log(result.toString());module.exports=result};function compiler(maxTermCalls,outputFile,inputFile){var program;
if(!global.__residual){__dirname=path.resolve(path.dirname(""));program=parser.parse(fs.readFileSync(path.join(__dirname,inputFile),"utf8"))}else program=global.__residual("object",function(__dirname,path,parser,fs,inputFile){__dirname=path.resolve(path.dirname(""));return parser.parse(fs.readFileSync(path.join(__dirname,inputFile),"utf8"))},__dirname,path,parser,fs,inputFile);var code=Prepack.prepackSources([{filePath:"./interpreter.js",fileContents:"(".concat(interpreter,")(").concat(JSON.stringify(program),
", ").concat(callback.toString(),", ").concat(maxTermCalls,");")}],prepackOptions).code;if(!global.__residual)fs.writeFileSync(path.join(__dirname,outputFile),code);else global.__residual("void",function(__dirname,path,fs,outputFile){fs.writeFileSync(path.join(__dirname,outputFile),code)},__dirname,path,fs,outputFile)}module.exports=compiler}).call(this,"/")},function(module,exports,__webpack_require__){module.exports=function(program,callback,maxTermCalls){var abstractedConsole;if(global.__residual)abstractedConsole=
__abstract({},"console");var emptyAddress=0;var printAddress=1;var readAddress=2;var stackAddress=readAddress;var stack=[];var reset=function reset(address){stack=stack.slice(0,address+1);stackAddress=address};var extend=function extend(value){stack[++stackAddress]=value;return stackAddress};var modify=function modify(address,value){stack[address]=value};var lookup=function lookup(address){return stack[address]};var memoized=[];var termCalls=0;maxTermCalls=maxTermCalls||125;var logDebug=!global.__residual?
process.env.DEBUG=="true":false;var trampoline=function trampoline(res){while(res&&res.fn)res=res.fn.apply(null,res.args)};var interpretLambda=function interpretLambda(lambda,env,callback){logDebug&&console.log("INTERPRET LAMBDA");var _loop=function _loop(i){if(lambda[i].type==="Def"&&lambda[i].value.type!=="Abstr"){logDebug&&console.log("INTERPRET DEFINITON: "+lambda[i].name);trampoline(interpretTermLazy(lambda[i].value,env,[],function(err,address){if(err)return{fn:callback,args:[err]};else{var result=
lookup(address);env[lambda[i].name]=extend(result);memoized[lambda[i].name]=true;logDebug&&console.log("FINISHED INTERPRETING DEFINITION");return}},false))}else{memoized[lambda[i].name]=true;env[lambda[i].name]=extend(lambda[i].value)}};for(var i=0;i<lambda.length-1;i++)_loop(i);return{fn:interpretTermLazy,args:[lambda[lambda.length-1],env,[],callback,false]}};var interpretTermLazy=function interpretTermLazy(term,env,addressesToBind,callback,isRhsApplication){termCalls++;if(global.__residual&&termCalls>
maxTermCalls)global.__residual("void",function(trampoline,interpretTerm,term,env,addressesToBind,callback,isRhsApplication){return trampoline({fn:interpretTerm,args:[term,env,addressesToBind,callback,isRhsApplication]})},trampoline,interpretTerm,term,env,addressesToBind,callback,isRhsApplication);else return{fn:interpretTerm,args:[term,env,addressesToBind,callback,isRhsApplication]}};var interpretTerm=function interpretTerm(term,env,addressesToBind,callback,isRhsApplication){logDebug&&console.log("\n---------INTERPRET TERM: "+
JSON.stringify(term));switch(term.type){case "Deref":return interpretDereference(term.value,env,addressesToBind,callback,isRhsApplication);case "Const":return interpretConstant(term.value,callback);case "Op":return interpretOperator(term,env,addressesToBind,callback,isRhsApplication);case "Abstr":return interpretAbstraction(term,env,addressesToBind,callback,isRhsApplication);case "Apply":return interpretApplication(term.value,env,addressesToBind,callback,isRhsApplication);default:return{fn:callback,
args:[new Error("Failed to interpret term for "+term.type),null]}}};var interpretAbstraction=function interpretAbstraction(abstraction,env,addressesToBind,callback,isRhsApplication){logDebug&&console.log("INTERPRET ABSTRACTION");var newEnv=Object.assign({},env);var hasBeenBound=false;if(addressesToBind.length>0){logDebug&&console.log("$$ATTENTION: There are this many addresses to bind: "+addressesToBind.length);newEnv[abstraction.binding]=addressesToBind.pop();hasBeenBound=true}else newEnv[abstraction.binding]=
extend({type:"Deref",value:{type:"Identifier",value:abstraction.binding}});logDebug&&console.log("$$ATTENTION: Abstracted value "+abstraction.binding+" has been bound with "+JSON.stringify(lookup(newEnv[abstraction.binding])));var abstrCallback=function abstrCallback(err,address){if(err)return{fn:callback,args:[err]};else{var result=lookup(address);if((!global.__isAbstract||!global.__isAbstract(result))&&isRhsApplication&&!hasBeenBound&&result&&result.type!==undefined){logDebug&&console.log("$ATTENTION: Variable "+
abstraction.binding+" needs to be abstracted again");address=extend({type:"Abstr",binding:abstraction.binding,value:result})}}if(hasBeenBound)logDebug&&console.log("$ATTENTION: Variable "+abstraction.binding+" was replaced so no need to abstract it again");return{fn:callback,args:[null,address]}};return{fn:interpretTermLazy,args:[abstraction.value,newEnv,addressesToBind,abstrCallback,true]}};var interpretApplication=function interpretApplication(application,env,addressesToBind,callback){logDebug&&
console.log("INTERPRET APPLICATION");var rhsCallback=function rhsCallback(err,rhsAddress){if(err)return{fn:callback,args:[err]};else{addressesToBind.push(rhsAddress);logDebug&&console.log("$ATTENTION: Added a new address to bind. There are "+addressesToBind.length);logDebug&&console.log("---END RHS---");var lhsCallback=function lhsCallback(err,lhsAddress){if(err)return{fn:callback,args:[err]};else{var lhs=lookup(lhsAddress);if((!global.__isAbstract||!global.__isAbstract(lhs))&&lhs&&lhs.type==="Deref"){logDebug&&
console.log("$CHECK: The new LHS is a dereference, so check if it was replaced by something else");if(application.lhs.type==="Deref"&&application.lhs.value.value===lhs.value.value){logDebug&&console.log("$ATTENTION: Application needs to be maintained as long as it is not printing a read value");var rhs=lookup(rhsAddress);modify(lhsAddress,{type:"Apply",value:{lhs:lhs,rhs:rhs}});lhs=lookup(lhsAddress)}}else if(global.__isAbstract&&global.__isAbstract(lhs))if(lhsAddress===printAddress){lhsAddress=rhsAddress;
rhsAddress=printAddress}if(rhsAddress!==lhsAddress)modify(rhsAddress,lhs);reset(rhsAddress);logDebug&&console.log("---END LHS---");return{fn:callback,args:[null,stackAddress]}}};logDebug&&console.log("\n---START LHS---");return{fn:interpretTermLazy,args:[application.lhs,env,addressesToBind,lhsCallback,false]}}};logDebug&&console.log("---RHS---");return{fn:interpretTermLazy,args:[application.rhs,env,[],rhsCallback,true]}};var waitForInput=function waitForInput(callback){var readline=__webpack_require__(659);
var rl=readline.createInterface({input:process.stdin,output:process.stdout});return{fn:function fn(){return rl.question.apply(rl,arguments)},args:["User input:\n",function(input){rl.close();modify(readAddress,parseInt(input));return trampoline({fn:callback,args:[null,readAddress]})}]}};var interpretIdentifier=function interpretIdentifier(identifier,env,callback){logDebug&&console.log("INTERPRET IDENTIFIER: "+identifier);var address=env[identifier];if(!address){logDebug&&console.log("$ERR: Variable "+
identifier+" is not declared");return{fn:callback,args:[new Error("Variable or named lambda "+identifier+" has not been defined")]}}else if(identifier==="_print"){modify(printAddress,lookup(address));return{fn:callback,args:[null,printAddress]}}else if(identifier==="_read")if(global.__residual){modify(readAddress,global.__abstract("object",'({type: "Deref", value: {type: "Identifier", value: "_read"}})'));return{fn:callback,args:[null,readAddress]}}else return{fn:waitForInput,args:[callback]};else return{fn:callback,
args:[null,address]}};var interpretDereference=function interpretDereference(dereference,env,addressesToBind,callback,isRhsApplication){logDebug&&console.log("INTERPRET DEREFERENCE");if(dereference.type!=="Identifier")return{fn:callback,args:[new Error("Failed to interpreter dereference for "+dereference.type)]};var derefCallback=function derefCallback(err,address){if(err)return{fn:callback,args:[err]};else if(address===printAddress)if(global.__isAbstract&&global.__isAbstract(lookup(address)))return{fn:callback,
args:[null,printAddress]};else{console.log(lookup(printAddress));return{fn:callback,args:[null,extend(true)]}}else if(global.__residual&&global.__isAbstract(lookup(address)))return{fn:callback,args:[null,extend(lookup(address))]};else{var newTerm=lookup(address);if(newTerm&&(newTerm.type==="Abstr"||newTerm.type==="Apply")&&(!isRhsApplication||!memoized[dereference.value])){logDebug&&console.log("$ATTENTION: Variable "+dereference.value+" holds an application");return{fn:interpretTermLazy,args:[newTerm,
env,addressesToBind,callback,true]}}else{logDebug&&console.log("$ATTENTION: Variable "+dereference.value+" does not need further interpreting");if(newTerm&&newTerm.type==="Identifier"){logDebug&&console.log("$ATTENTION: Variable "+dereference.value+" has been stored as a complex lambda");modify(address,{type:"Deref",value:newTerm})}return{fn:callback,args:[null,extend(lookup(address))]}}}};return{fn:interpretIdentifier,args:[dereference.value,env,derefCallback]}};var interpretConstant=function interpretConstant(constant,
callback){logDebug&&console.log("INTERPRET CONSTANT: "+constant);return{fn:callback,args:[null,extend(constant)]}};var applyOperator=function applyOperator(operator,lhsAddress,rhsAddress,callback){var err=null;var lhs=lookup(lhsAddress);var rhs=lookup(rhsAddress);if((!lhs||lhs.type===undefined)&&(!rhs||rhs.type===undefined))switch(operator){case "plus":modify(lhsAddress,lhs+rhs);break;case "minus":modify(lhsAddress,lhs-rhs);break;case "times":modify(lhsAddress,lhs*rhs);break;case "divide":modify(lhsAddress,
lhs/rhs);break;case "modulus":modify(lhsAddress,lhs%rhs);break;case "eq":modify(lhsAddress,lhs===rhs);break;case "noteq":modify(lhsAddress,lhs!==rhs);break;case "leq":modify(lhsAddress,lhs<=rhs);break;case "less":modify(lhsAddress,lhs<rhs);break;case "geq":modify(lhsAddress,lhs>=rhs);break;case "greater":modify(lhsAddress,lhs>rhs);break;case "and":modify(lhsAddress,lhs&&rhs);break;case "or":modify(lhsAddress,lhs||rhs);break;case "negate":modify(lhsAddress,!lhs);break;case "negative":modify(lhsAddress,
-lhs);break;default:err=new Error("Failed to interpret operator for "+operator.type)}else modify(lhsAddress,{type:"Op",op:operator,lhs:lhs.type!==undefined?lhs:{type:"Const",value:lhs},rhs:rhs.type!==undefined?rhs:{type:"Const",value:rhs}});return{fn:callback,args:[err,lhsAddress]}};var interpretOperator=function interpretOperator(operator,env,addressesToBind,callback,isRhsApplication){logDebug&&console.log("INTERPRET OPERATOR: "+operator.type);var lhsOpCallback=function lhsOpCallback(err,lhsAddress){if(err)return{fn:callback,
args:[err,null]};reset(lhsAddress);var rhsOpCallback=function rhsOpCallback(err,rhsAddress){if(err)return{fn:callback,args:[err,null]};return{fn:applyOperator,args:[operator.op,lhsAddress,rhsAddress,callback]}};if(operator.op!=="negate"&&operator.op!=="negative")if(operator.op==="or"&&lookup(lhsAddress)||operator.op==="and"&&!lookup(lhsAddress))return{fn:callback,args:[null,lhsAddress]};else if(operator.op==="or"&&!lookup(lhsAddress))return{fn:interpretTermLazy,args:[operator.rhs,env,addressesToBind,
callback,isRhsApplication]};else return{fn:interpretTermLazy,args:[operator.rhs,env,addressesToBind,rhsOpCallback,isRhsApplication]};else return{fn:rhsOpCallback,args:[null,emptyAddress]}};return{fn:interpretTermLazy,args:[operator.lhs,env,addressesToBind,lhsOpCallback,isRhsApplication]}};var lambdaCallback=function lambdaCallback(err,address){var result=lookup(address);if(global.__isAbstract&&global.__isAbstract(result))global.__residual("void",function(console,waitForInput,trampoline,toPrint,lookup,
callback){trampoline({fn:waitForInput,args:[function(err,address){if(toPrint)console.log(lookup(address));return{fn:callback,args:[err,lookup(address)]}}]})},abstractedConsole,waitForInput,trampoline,address===printAddress,lookup,callback);else if(result!==undefined&&result.type==="Abstr"){reset(readAddress);return{fn:callback,args:[null,function(){var argumentAddresses=[];for(var i=0;i<arguments.length;i++)argumentAddresses.push(extend(i<0||arguments.length<=i?undefined:arguments[i]));trampoline({fn:interpretAbstraction,
args:[result,[],argumentAddresses,lambdaCallback,true]})}]}}else return{fn:callback,args:[err,address>printAddress&&lookup(address)]}};trampoline({fn:interpretLambda,args:[program,{"_print":{"address":printAddress},"_read":{"address":readAddress}},lambdaCallback]})}},function(module,exports){module.exports=__WEBPACK_EXTERNAL_MODULE__659__},function(module,exports,__webpack_require__){var LambdaParser=__webpack_require__(661).Parser;module.exports=new LambdaParser},function(module,exports,__webpack_require__){(function(module){var lambdaParser=
function(){var o=function o(k,v,_o,l){for(_o=_o||{},l=k.length;l--;_o[k[l]]=v);return _o},$V0=[1,3],$V1=[1,6],$V2=[1,10],$V3=[1,11],$V4=[1,15],$V5=[1,12],$V6=[1,16],$V7=[1,13],$V8=[1,14],$V9=[1,33],$Va=[1,20],$Vb=[1,21],$Vc=[1,22],$Vd=[1,23],$Ve=[1,24],$Vf=[1,25],$Vg=[1,26],$Vh=[1,27],$Vi=[1,28],$Vj=[1,29],$Vk=[1,30],$Vl=[1,31],$Vm=[1,32],$Vn=[5,10,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36],$Vo=[5,10,18,22,24,25,29,30,31,32,33,34,35,36],$Vp=[5,10,18,22,29,30,31,32,33,34,35,36],$Vq=[5,10,18,22,
33,34,35,36],$Vr=[5,10,18,22,35,36],$Vs=[5,10,18,22];var parser={trace:function trace(){},yy:{},symbols_:{"error":2,"code":3,"lambda":4,"EOF":5,"let":6,"var":7,"=":8,"term":9,"in":10,"rec":11,"const":12,"operation":13,"abstraction":14,"application":15,"read":16,"(":17,")":18,"\u03bb":19,".":20,"id":21,"@":22,"print":23,"plus":24,"minus":25,"times":26,"divide":27,"modulus":28,"leq":29,"less":30,"geq":31,"greater":32,"eq":33,"noteq":34,"and":35,"or":36,"negate":37,"$accept":0,"$end":1},terminals_:{2:"error",
5:"EOF",6:"let",8:"=",10:"in",11:"rec",12:"const",16:"read",17:"(",18:")",19:"\u03bb",20:".",21:"id",22:"@",23:"print",24:"plus",25:"minus",26:"times",27:"divide",28:"modulus",29:"leq",30:"less",31:"geq",32:"greater",33:"eq",34:"noteq",35:"and",36:"or",37:"negate"},productions_:[0,[3,2],[4,6],[4,7],[4,1],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[9,3],[14,4],[7,1],[15,3],[15,3],[13,3],[13,3],[13,3],[13,3],[13,3],[13,2],[13,3],[13,3],[13,3],[13,3],[13,3],[13,3],[13,3],[13,3],[13,2]],performAction:function anonymous(yytext,
yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:return $$[$0-1];break;case 2:var definedLambda=createDefinition($$[$0-4].value,$$[$0-2],false);var lambda=$$[$0];lambda.unshift(definedLambda);this.$=lambda;break;case 3:var definedRecursiveLambda=createDefinition($$[$0-4].value,$$[$0-2],true);var lambda=$$[$0];lambda.unshift(definedRecursiveLambda);this.$=lambda;break;case 4:this.$=[$$[$0]];break;case 5:this.$=createTerm("Deref",$$[$0]);break;case 6:var value;if(yytext===
"true")value=true;else if(yytext==="false")value=false;else value=parseInt(yytext);this.$=createTerm("Const",value);break;case 7:case 8:case 9:this.$=$$[$0];break;case 10:this.$=createIO("_read");break;case 11:this.$=$$[$0-1];break;case 12:this.$=createAbstraction($$[$0-2].value,$$[$0]);break;case 13:this.$=createTerm("Identifier",yytext);break;case 14:this.$=createApplication($$[$0-2],$$[$0]);break;case 15:this.$=createApplication(createAbstraction("_print",createIO("_print")),$$[$0]);break;case 16:this.$=
createOperation("plus",$$[$0-2],$$[$0]);break;case 17:this.$=createOperation("minus",$$[$0-2],$$[$0]);break;case 18:this.$=createOperation("times",$$[$0-2],$$[$0]);break;case 19:this.$=createOperation("divide",$$[$0-2],$$[$0]);break;case 20:this.$=createOperation("modulus",$$[$0-2],$$[$0]);break;case 21:this.$=createOperation("minus",$$[$0]);break;case 22:this.$=createOperation("leq",$$[$0-2],$$[$0]);break;case 23:this.$=createOperation("less",$$[$0-2],$$[$0]);break;case 24:this.$=createOperation("geq",
$$[$0-2],$$[$0]);break;case 25:this.$=createOperation("greater",$$[$0-2],$$[$0]);break;case 26:this.$=createOperation("eq",$$[$0-2],$$[$0]);break;case 27:this.$=createOperation("noteq",$$[$0-2],$$[$0]);break;case 28:this.$=createOperation("and",$$[$0-2],$$[$0]);break;case 29:this.$=createOperation("or",$$[$0-2],$$[$0]);break;case 30:this.$=createOperation("negate",$$[$0]);break}},table:[{3:1,4:2,6:$V0,7:5,9:4,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{1:[3]},{5:[1,17]},
{7:18,11:[1,19],21:$V5},{5:[2,4],22:$V9,24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,32:$Vi,33:$Vj,34:$Vk,35:$Vl,36:$Vm},o($Vn,[2,5]),o($Vn,[2,6]),o($Vn,[2,7]),o($Vn,[2,8]),o($Vn,[2,9]),o($Vn,[2,10]),{7:5,9:34,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},o([5,8,10,18,20,22,24,25,26,27,28,29,30,31,32,33,34,35,36],[2,13]),{7:5,9:35,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:36,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,
23:$V6,25:$V7,37:$V8},{7:37,21:$V5},{22:[1,38]},{1:[2,1]},{8:[1,39]},{7:40,21:$V5},{7:5,9:41,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:42,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:43,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:44,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:45,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:46,
12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:47,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:48,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:49,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:50,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:51,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:52,12:$V1,13:7,
14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:53,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:54,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{18:[1,55],22:$V9,24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,32:$Vi,33:$Vj,34:$Vk,35:$Vl,36:$Vm},o($Vo,[2,21],{26:$Vc,27:$Vd,28:$Ve}),o($Vn,[2,30]),{20:[1,56]},{7:5,9:57,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{7:5,9:58,12:$V1,13:7,
14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{8:[1,59]},o($Vo,[2,16],{26:$Vc,27:$Vd,28:$Ve}),o($Vo,[2,17],{26:$Vc,27:$Vd,28:$Ve}),o($Vn,[2,18]),o($Vn,[2,19]),o($Vn,[2,20]),o($Vp,[2,22],{24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve}),o($Vp,[2,23],{24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve}),o($Vp,[2,24],{24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve}),o($Vp,[2,25],{24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve}),o($Vq,[2,26],{24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,32:$Vi}),o($Vq,[2,27],{24:$Va,25:$Vb,26:$Vc,
27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,32:$Vi}),o($Vr,[2,28],{24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,32:$Vi,33:$Vj,34:$Vk}),o($Vr,[2,29],{24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,32:$Vi,33:$Vj,34:$Vk}),o($Vs,[2,14],{24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,32:$Vi,33:$Vj,34:$Vk,35:$Vl,36:$Vm}),o($Vn,[2,11]),{7:5,9:60,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},o($Vs,[2,15],{24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,
32:$Vi,33:$Vj,34:$Vk,35:$Vl,36:$Vm}),{10:[1,61],22:$V9,24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,32:$Vi,33:$Vj,34:$Vk,35:$Vl,36:$Vm},{7:5,9:62,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},o([5,10,18],[2,12],{22:$V9,24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,30:$Vg,31:$Vh,32:$Vi,33:$Vj,34:$Vk,35:$Vl,36:$Vm}),{4:63,6:$V0,7:5,9:4,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{10:[1,64],22:$V9,24:$Va,25:$Vb,26:$Vc,27:$Vd,28:$Ve,29:$Vf,
30:$Vg,31:$Vh,32:$Vi,33:$Vj,34:$Vk,35:$Vl,36:$Vm},{5:[2,2]},{4:65,6:$V0,7:5,9:4,12:$V1,13:7,14:8,15:9,16:$V2,17:$V3,19:$V4,21:$V5,23:$V6,25:$V7,37:$V8},{5:[2,3]}],defaultActions:{17:[2,1],63:[2,2],65:[2,3]},parseError:function parseError(str,hash){if(hash.recoverable)this.trace(str);else{var error=new Error(str);error.hash=hash;throw error;}},parse:function parse(input){var self=this,stack=[0],tstack=[],vstack=[null],lstack=[],table=this.table,yytext="",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=
1;var args=lstack.slice.call(arguments,1);var lexer=Object.create(this.lexer);var sharedState={yy:{}};for(var k in this.yy)if(Object.prototype.hasOwnProperty.call(this.yy,k))sharedState.yy[k]=this.yy[k];lexer.setInput(input,sharedState.yy);sharedState.yy.lexer=lexer;sharedState.yy.parser=this;if(typeof lexer.yylloc=="undefined")lexer.yylloc={};var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;if(typeof sharedState.yy.parseError==="function")this.parseError=sharedState.yy.parseError;
else this.parseError=Object.getPrototypeOf(this).parseError;function popStack(n){stack.length=stack.length-2*n;vstack.length=vstack.length-n;lstack.length=lstack.length-n}_token_stack:var lex=function lex(){var token;token=lexer.lex()||EOF;if(typeof token!=="number")token=self.symbols_[token]||token;return token};var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;while(true){state=stack[stack.length-1];if(this.defaultActions[state])action=this.defaultActions[state];else{if(symbol===
null||typeof symbol=="undefined")symbol=lex();action=table[state]&&table[state][symbol]}if(typeof action==="undefined"||!action.length||!action[0]){var errStr="";expected=[];for(p in table[state])if(this.terminals_[p]&&p>TERROR)expected.push("'"+this.terminals_[p]+"'");if(lexer.showPosition)errStr="Parse error on line "+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(", ")+", got '"+(this.terminals_[symbol]||symbol)+"'";else errStr="Parse error on line "+(yylineno+1)+": Unexpected "+
(symbol==EOF?"end of input":"'"+(this.terminals_[symbol]||symbol)+"'");this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&action.length>1)throw new Error("Parse Error: multiple actions possible at state: "+state+", token: "+symbol);switch(action[0]){case 1:stack.push(symbol);vstack.push(lexer.yytext);lstack.push(lexer.yylloc);stack.push(action[1]);symbol=null;if(!preErrorSymbol){yyleng=lexer.yyleng;
yytext=lexer.yytext;yylineno=lexer.yylineno;yyloc=lexer.yylloc;if(recovering>0)recovering--}else{symbol=preErrorSymbol;preErrorSymbol=null}break;case 2:len=this.productions_[action[1]][1];yyval.$=vstack[vstack.length-len];yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column};if(ranges)yyval._$.range=[lstack[lstack.length-(len||1)].range[0],
lstack[lstack.length-1].range[1]];r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args));if(typeof r!=="undefined")return r;if(len){stack=stack.slice(0,-1*len*2);vstack=vstack.slice(0,-1*len);lstack=lstack.slice(0,-1*len)}stack.push(this.productions_[action[1]][0]);vstack.push(yyval.$);lstack.push(yyval._$);newState=table[stack[stack.length-2]][stack[stack.length-1]];stack.push(newState);break;case 3:return true}}return true}};function createDefinition(name,
value,recursive){return{type:"Def",recursive:recursive,name:name,value:value}}function createTerm(type,value){return{type:type,value:value}}function createIO(value){return{type:"Deref",value:createTerm("Identifier",value)}}function createAbstraction(binding,value){return{type:"Abstr",binding:binding,value:value}}function createApplication(lhs,rhs){return{type:"Apply",value:{lhs:lhs,rhs:rhs}}}function createOperation(op,lhs,rhs){return{type:"Op",op:op,lhs:lhs,rhs:rhs}}var lexer=function(){var lexer=
{EOF:1,parseError:function parseError(str,hash){if(this.yy.parser)this.yy.parser.parseError(str,hash);else throw new Error(str);},setInput:function setInput(input,yy){this.yy=yy||this.yy||{};this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match="";this.conditionStack=["INITIAL"];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges)this.yylloc.range=[0,0];this.offset=0;return this},input:function input(){var ch=
this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\r\n?|\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++}else this.yylloc.last_column++;if(this.options.ranges)this.yylloc.range[1]++;this._input=this._input.slice(1);return ch},unput:function unput(ch){var len=ch.length;var lines=ch.split(/(?:\r\n?|\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len);this.offset-=len;var oldLines=this.match.split(/(?:\r\n?|\n)/g);
this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1)this.yylineno-=lines.length-1;var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges)this.yylloc.range=
[r[0],r[0]+this.yyleng-len];this.yyleng=this.yytext.length;return this},more:function more(){this._more=true;return this},reject:function reject(){if(this.options.backtrack_lexer)this._backtrack=true;else return this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno});return this},less:function less(n){this.unput(this.match.slice(n))},
pastInput:function pastInput(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?"...":"")+past.substr(-20).replace(/\n/g,"")},upcomingInput:function upcomingInput(){var next=this.match;if(next.length<20)next+=this._input.substr(0,20-next.length);return(next.substr(0,20)+(next.length>20?"...":"")).replace(/\n/g,"")},showPosition:function showPosition(){var pre=this.pastInput();var c=(new Array(pre.length+1)).join("-");return pre+this.upcomingInput()+"\n"+
c+"^"},test_match:function test_match(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};
if(this.options.ranges)backup.yylloc.range=this.yylloc.range.slice(0)}lines=match[0].match(/(?:\r\n?|\n).*/g);if(lines)this.yylineno+=lines.length;this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges)this.yylloc.range=
[this.offset,this.offset+=this.yyleng];this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input)this.done=false;if(token)return token;else if(this._backtrack){for(var k in backup)this[k]=backup[k];return false}return false},next:function next(){if(this.done)return this.EOF;if(!this._input)this.done=true;var token,
match,tempMatch,index;if(!this._more){this.yytext="";this.match=""}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false)return token;else if(this._backtrack){match=false;continue}else return false}else if(!this.options.flex)break}}if(match){token=this.test_match(match,
rules[index]);if(token!==false)return token;return false}if(this._input==="")return this.EOF;else return this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function lex(){var r=this.next();if(r)return r;else return this.lex()},begin:function begin(condition){this.conditionStack.push(condition)},popState:function popState(){var n=this.conditionStack.length-1;if(n>0)return this.conditionStack.pop();else return this.conditionStack[0]},
_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1])return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;else return this.conditions["INITIAL"].rules},topState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0)return this.conditionStack[n];else return"INITIAL"},pushState:function pushState(condition){this.begin(condition)},stateStackSize:function stateStackSize(){return this.conditionStack.length},
options:{},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:break;case 1:break;case 2:return 6;break;case 3:return 11;break;case 4:return 10;break;case 5:return 19;break;case 6:return 20;break;case 7:return 17;break;case 8:return 18;break;case 9:return 22;break;case 10:return 8;break;case 11:return 16;break;case 12:return 23;break;case 13:return 12;break;case 14:return 21;break;case 15:return 12;break;case 16:return 12;
break;case 17:return 24;break;case 18:return 25;break;case 19:return 26;break;case 20:return 27;break;case 21:return 28;break;case 22:return 35;break;case 23:return 36;break;case 24:return 37;break;case 25:return 30;break;case 26:return 32;break;case 27:return 29;break;case 28:return 31;break;case 29:return 33;break;case 30:return 34;break;case 31:return 5;break}},rules:[/^(?:[ \\t]+)/,/^(?:\n)/,/^(?:let\b)/,/^(?:rec\b)/,/^(?:in\b)/,/^(?:\u03bb)/,/^(?:\.)/,/^(?:\()/,/^(?:\))/,/^(?:@)/,/^(?:=)/,/^(?:read\b)/,
/^(?:print\b)/,/^(?:([0-9])+)/,/^(?:([A-Za-z0-9]+))/,/^(?:true\b)/,/^(?:false\b)/,/^(?:\+)/,/^(?:-)/,/^(?:\*)/,/^(?:\/)/,/^(?:%)/,/^(?:&&)/,/^(?:\|\|)/,/^(?:!)/,/^(?:<)/,/^(?:>)/,/^(?:<=)/,/^(?:>=)/,/^(?:==)/,/^(?:!=)/,/^(?:$)/],conditions:{"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"inclusive":true}}};return lexer}();parser.lexer=lexer;function Parser(){this.yy={}}Parser.prototype=parser;parser.Parser=Parser;return new Parser}();if(true){exports.parser=
lambdaParser;exports.Parser=lambdaParser.Parser;exports.parse=function(){return lambdaParser.parse.apply(lambdaParser,arguments)};exports.main=function commonjsMain(args){if(!args[1]){console.log("Usage: "+args[0]+" FILE");process.exit(1)}var source=__webpack_require__(653).readFileSync(__webpack_require__(656).normalize(args[1]),"utf8");return exports.parser.parse(source)};if(true&&__webpack_require__.c[__webpack_require__.s]===module)exports.main(process.argv.slice(1))}}).call(this,__webpack_require__(92)(module))}])});