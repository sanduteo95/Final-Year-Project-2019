{"version":3,"sources":["webpack://machine/webpack/universalModuleDefinition","webpack://machine/webpack/bootstrap","webpack://machine/../viz/CBV-with-CBV-embedding/js/ast/binding.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/ast/operation.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/ast/reference.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/ast/term.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/ast/thunk.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/ast/var.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/goi-machine.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/graph.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/group.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/link.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/node.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/atom.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/contract.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/op.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/ops/and.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/ops/bool.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/ops/equals.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/ops/if.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/ops/int.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/ops/not.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/ops/or.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/ops/plus.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/ops/times.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/nodes/start.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/parser/lexer.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/parser/parser.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/parser/token.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/term.js","webpack://machine/../viz/CBV-with-CBV-embedding/js/token.js"],"names":["define","Term","Binding","ctx","id","param","body","Operation","sig","name","active","eas","das","Reference","Thunk","inner","Var","window","mainGraph","Variable","Lexer","Parser","MachineToken","Link","Graph","Group","Atom","Contract","Start","Op","IntOp","BoolOp","PlusOp","TimesOp","AndOp","OrOp","NotOp","EqualsOp","IfOp","Flag","RewriteFlag","GoIMachine","setMachine","graphSet","tokenSet","countSet","graph","token","count","source","lexer","parser","ast","parse","clear","start","addToGroup","child","term","toGraph","link","key","prin","reset","group","box","auxs","i","length","c","push","set","auxNode","splice","concat","atomNode","createDNet","op","toOp","next","visited","Number","isInteger","parseInt","graphTxt","linkTxt","flagTxt","finished","node","findNodeByKey","to","nextLink","rewriteFlag","REWRITE","rewrite","pass","setLink","printHistory","play","playing","val","draw","replace","SEARCH","outlinks","findLinksOutOf","RETURN","from","doneVisiting","findLinksInto","j","findJ","links","l","list","linkKey","allNodes","Map","allLinks","Array","findLinksConnected","delete","get","indexOf","fromNode","filter","x","width","height","str","Node","nodes","level","fromPort","toPort","colour","reverse","penWidth","addToGraph","addToNode","toNode","addLink","removeLink","port","showKey","shape","text","addNode","removeNode","nodeKeys","map","k","newNode","Token","inLinks","outLinks","nextNode","changeTo","copy","opLinks","changeFrom","cs","inputs","originalGroup","cList","n","inLink","b","reduce","sum","parseBoolean","newLink","left","right","keep","del","unbox","input","_input","_index","_token","undefined","_nextToken","_nextChar","test","COMMA","SEMIC","LPAREN","RPAREN","EOF","DEF","BIND","IN","NEW","PLUS","TIMES","AND","OR","NOT","EQUALS","IF","TRUE","FALSE","LCID","INT","fail","type","value","match","Error","console","error","result","thunk","skip","P","B","atom","operation","lookaheadType","gatherArgs","args","pred","forEach","boxed","clearFocus","focus"],"mappings":"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","file":"main.prepack.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"machine\"] = factory();\n\telse\n\t\troot[\"machine\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"../viz/CBV-with-CBV-embedding/js/goi-machine.js\");\n","define(['ast/term'], function(Term)  {\n    /**\n     * param here is the name of the variable of the abstraction. Body is the\n     * subtree  representing the body of the abstraction.\n     */\n\n  class Binding extends Term {\n    constructor(ctx, id, param, body) {\n      super(ctx);\n      this.id = id;\n      this.param = param;\n      this.body = body;\n    }\n  }\n  return Binding;\n});","define(['ast/term'], function(Term)  {\n  class Operation extends Term {\n    constructor(ctx, sig, name, active, eas, das) {\n      super(ctx);\n      this.sig = sig;\n      this.name = name;\n      this.active = active;\n      this.eas = eas;\n      this.das = das;\n    }\n  }\n  return Operation;\n});\n","define(['ast/term'], function(Term)  {\n    /**\n     * param here is the name of the variable of the reference. Body is the\n     * subtree  representing the body of the abstraction.\n     */\n\n  class Reference extends Term {\n    constructor(ctx, id, param, body) {\n      super(ctx);\n      this.id = id;\n      this.param = param;\n      this.body = body;\n    }\n  }\n  return Reference;\n});\n","define(function() {\n  class Term {\n    constructor(ctx) {\n      this.ctx = ctx;\n    }\n  }\n  return Term;\n});\n","define(['ast/term'], function(Term)  {\n  class Thunk extends Term {\n    constructor(ctx, inner) {\n      super(ctx);\n      this.inner = inner;\n    }\n  }\n  return Thunk;\n});\n","define(['ast/term'], function(Term) {\n    /**\n     * name is the string matched for this identifier.\n     */\n  class Var extends Term {\n    constructor(ctx, name) {\n      super(ctx);\n      this.name = name;\n    }\n  }\n  return Var;\n});\n","window.mainGraph = null;\n\ndefine('goi-machine', [\n\t'ast/var', 'ast/operation', 'ast/binding', 'ast/reference', 'ast/thunk',\n\t'parser/lexer', 'parser/parser',\n\t'token', 'link',\n\t'graph', 'group', 'term',\n\t'nodes/atom', 'nodes/contract', 'nodes/start', 'nodes/op',\n\t'nodes/ops/int', 'nodes/ops/bool', 'nodes/ops/plus', 'nodes/ops/times', 'nodes/ops/and', 'nodes/ops/or', 'nodes/ops/not', 'nodes/ops/equals', 'nodes/ops/if'\n],\n\tfunction(\n\t\tVariable, Operation, Binding, Reference, Thunk, \n\t\tLexer, Parser, \n\t\tMachineToken, Link, \n\t\tGraph, Group, Term, \n\t\tAtom, Contract, Start, Op,\n\t\tIntOp, BoolOp, PlusOp, TimesOp, AndOp, OrOp, NotOp, EqualsOp, IfOp) {\n\t\tvar Flag = MachineToken.RewriteFlag();\n\n\t\tclass GoIMachine {\n\n\t\t\tconstructor() {\n\t\t\t\tthis.setMachine(new Graph(),new MachineToken(),0);\n\t\t\t}\n\n\t\t\tsetMachine(graphSet,tokenSet,countSet) {\n\t\t\t\tthis.graph = graphSet;\n\t\t\t\twindow.mainGraph = this.graph; // cheating!\n\t\t\t\tthis.token = tokenSet;\n\t\t\t\tthis.count = countSet;\n\t\t\t}\n\n\t\t\tcompile(source) {\n\t\t\t\tconst lexer = new Lexer(source + '\\0');\n\t\t\t\tconst parser = new Parser(lexer);\n\t\t\t\tconst ast = parser.parse();\n\t\t\t\tthis.count = 0;\n\n\t\t\t\tthis.graph.clear();\n\t\t\t\tvar start = new Start().addToGroup(this.graph.child);\n\t\t\t\tvar term = this.toGraph(ast, this.graph.child, false);\n\t\t\t\tvar link = new Link(start.key, term.prin.key, \"_\", \"_\").addToGroup(this.graph.child);\n\t\t\t\tthis.token.reset(link);\n\t\t\t}\n\n\t\t\t// translation\n\t\t\ttoGraph(ast, group) {\n\t\t\t\tvar graph = this.graph;\n\n\t\t\t\tvar term = new Term().addToGroup(group);\n\t\t\t\tif (ast instanceof Thunk) {\n\t\t\t\t\tterm.box();\n\t\t\t\t\tast = ast.inner;\n\t\t\t\t}\n\n\t\t\t\t// VARIABLES & ATOMS\n\t\t\t\tif (ast instanceof Variable) {\n\t\t\t\t\tvar auxs = [];\n\t\t\t\t\tfor (var i = 0; i < ast.ctx.length; i++) {\n\t\t\t\t\t\tvar c = new Contract().addToGroup(term);\n\t\t\t\t\t\tauxs.push(c);\n\t\t\t\t\t\tif ((ast.ctx[i]).name == ast.name)\n\t\t\t\t\t\t \tvar prin = c;\n\t\t\t\t\t}\n\t\t\t\t\tterm.set(prin, auxs);\n\n\t\t\t\t// BINDINGS & REFERENCES\n\t\t\t\t} else if ((ast instanceof Binding) || (ast instanceof Reference))  {\n\t\t\t\t\tvar body = this.toGraph(ast.body, term, false).addToGroup(term);\n\t\t\t\t\tvar param = this.toGraph(ast.param, term, false).addToGroup(term);\n\n\t\t\t\t\tvar auxs = body.auxs;\n\t\t\t\t\tvar auxNode = auxs[0];\n\t\t\t\t\tauxs.splice(0,1)\n\t\t\t\t\tauxs = auxs.concat(param.auxs);\n\n\t\t\t\t\tif (ast instanceof Reference) {\n\t\t\t\t\t\tvar atomNode = new Atom(\"a\").addToGroup(param);\n\t\t\t\t\t\tnew Link(atomNode.key, param.prin.key, \"_\", \"_\").addToGroup(param);\n\t\t\t\t\t\tparam.prin = atomNode;\n\t\t\t\t\t}\n\t\t\t\t\tnew Link(auxNode.key, param.prin.key, \"_\", \"_\").addToGroup(term);\n\n\t\t\t\t\tauxs = Contract.createDNet(ast.ctx.length, auxs, term);\n\t\t\t\t\tterm.set(body.prin, auxs);\n\n\t\t\t\t// OPERATIONS\n\t\t\t\t} else if (ast instanceof Operation) {\n\t\t\t\t\tvar op = this.toOp(ast.name,ast.active).addToGroup(term);\n\n\t\t\t\t\tvar auxs = [];\n\n\t\t\t\t\tvar next;\n\t\t\t\t\tfor (var i = 0; i < ast.sig[0]; i++) {\n\t\t\t\t\t\tnext = this.toGraph(ast.eas[i], term).addToGroup(term);\n\t\t\t\t\t\tnew Link(op.key, next.prin.key, \"_\", \"_\").addToGroup(term);\n\t\t\t\t\t\tauxs = auxs.concat(next.auxs);\n\t\t\t\t\t}\n\t\t\t\t\tfor (var i = 0; i < ast.sig[1]; i++) {\n\t\t\t\t\t\tnext = this.toGraph(ast.das[i], term).addToGroup(term);\n\t\t\t\t\t\tvar link = new Link(op.key, next.prin.key, \"_\", \"_\");\n\t\t\t\t\t\tlink.visited = true; // hacking\n\t\t\t\t\t\tlink.addToGroup(term);\n\t\t\t\t\t\tauxs = auxs.concat(next.auxs);\n\t\t\t\t\t}\n\n\t\t\t\t\tauxs = Contract.createDNet(ast.ctx.length, auxs, term, op);\n\t\t\t\t\tterm.set(op, auxs);\n\t\t\t\t}\n\t\t\t\treturn term;\n\t\t\t}\n\n\t\t\ttoOp(name,active) {\n\t\t\t\tif (Number.isInteger(parseInt(name))) {\n\t\t\t\t\treturn new IntOp(name);\n\t\t\t\t} else if (name == \"true\" || name == \"false\") {\n\t\t\t\t\treturn new BoolOp(name);\n\t\t\t\t} else if (name == \"+\") {\n\t\t\t\t\treturn new PlusOp();\n\t\t\t\t} else if (name == \"*\") {\n\t\t\t\t\treturn new TimesOp();\n\t\t\t\t} else if (name == \"∧\") {\n\t\t\t\t\treturn new AndOp();\n\t\t\t\t} else if (name == \"∨\") {\n\t\t\t\t\treturn new OrOp();\n\t\t\t\t} else if (name == \"¬\") {\n\t\t\t\t\treturn new NotOp();\n\t\t\t\t} else if (name == \"==\") {\n\t\t\t\t\treturn new EqualsOp();\n\t\t\t\t} else if (name == \"if\") {\n\t\t\t\t\treturn new IfOp();\n\t\t\t\t} else {\n\t\t\t\t\treturn new Op(name,active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tquotieningRules() {\n\t\t\t\t// TODO\n\t\t\t\t// Loop through all links in the graph\n\t\t\t\t// Perform quotiening rules\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// machine step\n\t\t\ttransition(graphTxt, linkTxt, flagTxt) {\n\t\t\t\tif (!finished) {\n\t\t\t\t\tthis.count++;\n\t\t\t\t\tvar node = this.graph.findNodeByKey(this.token.link.to);\n\n\t\t\t\t\tvar nextLink;\n\t\t\t\t\tif (this.token.rewriteFlag == Flag.REWRITE) {\n\t\t\t\t\t\tnextLink = node.rewrite(this.token);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextLink = this.pass(this.token);\n\t\t\t\t\t}\n\t\t\t\t\tif (nextLink != null) {\n\t\t\t\t\t\tthis.token.setLink(nextLink);\n\t\t\t\t\t\tthis.printHistory(graphTxt, linkTxt, flagTxt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.token.setLink(null);\n\t\t\t\t\t\tplay = false;\n\t\t\t\t\t\tplaying = false;\n\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprintHistory(graphTxt, linkTxt, flagTxt) {\n\t\t\t\tgraphTxt.val(this.graph.draw().replace(/\\n/g, \"\") + '\\n' + graphTxt.val());\n\t\t\t\tlinkTxt.val(this.token.link + '\\n' + linkTxt.val());\n\t\t\t\tflagTxt.val(this.token.rewriteFlag + '\\n' + flagTxt.val());\n\t\t\t}\n\n\t\tpass(token) { // this needs cleaning up!\n\t\t\tvar link = token.link;\n\t\t\tif (token.rewriteFlag == Flag.SEARCH) {\n\t\t\t\tvar to = this.graph.findNodeByKey(link.to);\n\t\t\t\tvar outlinks = to.findLinksOutOf();\n\t\t\t\tif (to instanceof Atom) {\n\t\t\t\t\ttoken.rewriteFlag = Flag.RETURN;\n\t\t\t\t\treturn link;\n\t\t\t\t} else if (to instanceof Op) {\n\t\t\t\t\tif (outlinks.length == 0) {\n\t\t\t\t\t\tif (to.active) {\n\t\t\t\t\t\t\ttoken.rewriteFlag = Flag.REWRITE;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttoken.rewriteFlag = Flag.RETURN;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn link;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn outlinks[0];\n\t\t\t\t\t}\n\t\t\t\t} else if (to instanceof Contract) {\n\t\t\t\t\ttoken.rewriteFlag = Flag.REWRITE;\n\t\t\t\t\treturn link;\n\t\t\t\t}\n\t\t\t} else if (token.rewriteFlag == Flag.RETURN) {\n\t\t\t\tvar from = this.graph.findNodeByKey(link.from);\n\t\t\t\tvar outlinks = from.findLinksOutOf();\n\t\t\t\tif (this.doneVisiting(link,outlinks)) { // HACKING\n\t\t\t\t\tif (from.active) {\n\t\t\t\t\t\ttoken.rewriteFlag = Flag.REWRITE;\n\t\t\t\t\t\treturn from.findLinksInto()[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoken.rewriteFlag = Flag.RETURN;\n\t\t\t\t\t\treturn from.findLinksInto()[0];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\t\t\tvar j = this.findJ(link,outlinks);\n\t\t\t\t\treturn outlinks[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn link;\n\t\t}\n\n\t\tdoneVisiting(link, links) {\n\t\t\tfor (let l of links) {\n\t\t\t\tif ((!l.visited) && (l != link))\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\treturn true;\n\t\t\t}\n\n\t\tfindJ(link,list) {\n\t\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\t\tif ((!list[j].visited) && (list[j] != link))\n\t\t\t\t\treturn j;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t\treturn GoIMachine;\n\t}\n);\n","// general graph\ndefine(['group'], function(Group) {\n\n\tclass Graph {\n\n\t\tconstructor() {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tclear() {\n\t\t\tthis.key = 0;\n\t\t\tthis.linkKey = 0;\n\t\t\tthis.allNodes = new Map(); // for efficiency searching\n\t\t\tthis.allLinks = []; // for printing ONLY\n\t\t\tthis.child = new Group();\n\t\t}\n\n\t\t// give a key to a node and add it to allNodes\n\t\taddNode(node) {\n\t\t\tnode.key = 'nd' + this.key;\n\t\t\tthis.allNodes.set(node.key, node);\n\t\t\tthis.key++;\n\t\t}\n\n\t\t// also removes connected links\n\t\tremoveNode(node) {\n\t\t\tfor (let link of Array.from(node.findLinksConnected())) {\n\t\t\t\tlink.delete();\n\t\t\t}\n\t\t\treturn this.allNodes.delete(node.key);\n\t\t}\n\n\t\tfindNodeByKey(key) {\n\t\t\treturn this.allNodes.get(key);\n\t\t}\n\n\t\taddLink(link) {\n\t\t\tthis.allLinks.push(link);\n\t\t}\n\n\t\tremoveLink(link) {\n\t\t\tthis.allLinks.splice(this.allLinks.indexOf(link), 1);\n\t\t}\n\n\t\tfindLinkByKeys(from,to) {\n\t\t\tvar fromNode = this.findNodeByKey(from);\n\t\t\treturn fromNode.findLinksOutOf().filter(x => x.to == to)[0];\n\t\t}\n\n\t\tdraw(width, height) {\n\t\t\tvar str = this.child.draw('\\n  ');\n\t\t\tstr += '\\n';\n\t\t\tfor (let link of this.allLinks) {\n\t\t\t\tstr += link.draw('\\n  ');\n\t\t\t}\n\t\t\treturn 'digraph G {'\n\t\t\t   \t+'\\n  rankdir=BT;'\n\t\t\t   \t+'\\n  edge[arrowhead=none,arrowtail=none];'\n\t\t\t   \t+'\\n  node[fixedsize=true,shape=circle]'\n\t\t\t   \t+'\\n  size=\"' + width + ',' + height + '\";'\n\t\t\t   \t+'\\n  labeldistance=0;'\n\t\t\t   \t+'\\n  nodesep=.175;'\n\t  \t\t\t+'\\n  ranksep=.175;'\n\t\t\t\t+'\\n'\n\t\t\t\t+     str\n\t\t\t   \t+'\\n}';\n\t\t}\n\t}\n\n\treturn Graph;\n\n});\n","// general group in a graph (subgraph)\ndefine('group', ['node'], function(Node) {\n\n\tclass Group extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(null, null, null); // shape, text, name\n\t\t\tthis.nodes = [];\n\t\t\tthis.links = []; // for copying\n\t\t}\n\n\t\taddNode(node) {\n\t\t\tthis.nodes.push(node);\n\t\t}\n\n\t\tremoveNode(node) {\n\t\t\treturn this.nodes.splice(this.nodes.indexOf(node), 1);\n\t\t}\n\n\t\taddLink(link) {\n\t\t\tthis.links.push(link);\n\t\t}\n\n\t\tremoveLink(link) {\n\t\t\tvar i = this.links.indexOf(link);\n\t\t\tif (i != -1)\n\t\t\t\tthis.links.splice(i, 1);\n\t\t}\n\n\t\tdelete() {\n\t\t\tfor (let node of Array.from(this.nodes)) {\n\t\t\t\tnode.delete();\n\t\t\t}\n\t\t\tsuper.delete();\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = \"\";\n\t\t\tfor (let node of this.nodes) {\n\t\t\t\tstr += node.draw(level);\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t\tcopy() { } // should never be called as all groups are in terms\n\n\t}\n\n\treturn Group;\n});\n","define(function() {\n\n\tclass Link {\n\t\tconstructor(from, to, fromPort, toPort, colour) {\n\t\t\tthis.from = from;\n\t\t\tthis.to = to;\n\t\t\tthis.fromPort = fromPort;\n\t\t\tthis.toPort = toPort;\n\t\t\tthis.visited = false; // HACKING\n\n\t\t\tthis.reverse = false;\n\t\t\tthis.colour = colour;\n\t\t\tthis.penWidth = null;\n\t\t\tthis.addToGraph(window.mainGraph); // cheating\n\t\t\tif (colour != \"lightgrey\") { // cheating\n\t\t\t\tthis.addToNode(); // cheating\n\t\t\t}\n\t\t}\n\n\t\taddToNode() {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.push(this);\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.push(this);\n\t\t}\n\n\t\taddToGraph(graph) {\n\t\t\tif (graph != null)\n\t\t\t\tgraph.addLink(this);\n\t\t\tthis.graph = graph;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\taddToGroup(group) {\n\t\t\tgroup.addLink(this);\n\t\t\tthis.group = group;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\tchangeToGroup(group) {\n\t\t\tthis.group.removeLink(this);\n\t\t\tthis.addToGroup(group);\n\t\t\treturn this;\n\t\t}\n\n\t\tchangeFrom(key, port) {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.splice(fromNode.links.indexOf(this), 1);\n\n\t\t\tthis.from = key;\n\t\t\tthis.fromPort = port;\n\t\t\tfromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.push(this);\n\t\t}\n\n\t\tchangeTo(key, port) {\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.splice(toNode.links.indexOf(this), 1);\n\n\t\t\tthis.to = key;\n\t\t\tthis.toPort = port;\n\t\t\ttoNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.push(this);\n\t\t}\n\n\t\tfocus(colour) {\n\t\t\tthis.colour = colour;\n\t\t\tthis.penWidth = \"20\";\n\t\t}\n\n\t\tclearFocus() {\n\t\t\tthis.colour = null;\n\t\t\tthis.penWidth = null;\n\t\t\tthis.visited = true; // HACKING\n\t\t}\n\n\t\tdelete() {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.splice(fromNode.links.indexOf(this), 1);\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.splice(toNode.links.indexOf(this), 1);\n\t\t\tthis.group.removeLink(this);\n\t\t\tthis.graph.removeLink(this);\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this.from + \"->\" + this.to;\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = level;\n\n\t\t\tif (!this.reverse) {\n\t\t\t\tstr += this.from + '->' + this.to + '[';\n\t\t\t\tif (this.fromPort != null)\n\t\t\t\t\tstr += 'tailport=' + this.fromPort;\n\t\t\t\tif (this.toPort != null)\n\t\t\t\t\tstr += ',headport=' + this.toPort;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstr += this.to + '->' + this.from + '[dir=back';\n\t\t\t\tif (this.fromPort != null)\n\t\t\t\t\tstr += ',headport=' + this.fromPort;\n\t\t\t\tif (this.toPort != null)\n\t\t\t\t\tstr += ',tailport=' + this.toPort;\n\t\t\t}\n\n\t\t\tif (this.colour != null)\n\t\t\t\tstr += ',color=' + this.colour;\n\t\t\tif (this.penWidth != null)\n\t\t\t\tstr += ',penwidth=' + this.penWidth;\n\n\t\t\tstr += '];';\n\t\t\treturn str;\n\t\t}\n\t}\n\n\treturn Link;\n});\n","var showKey = false;\n\ndefine(function() {\n\n\tclass Node {\n\t\tconstructor(shape, text, name) {\n\t\t\tthis.key = null;\n\t\t\tthis.shape = shape;\n\t\t\tthis.text = text;\n\t\t\tthis.name = name; // identifier name or constant name if any\n\t\t\tthis.graph = null;\n\t\t\tthis.group = null;\n\t\t\tthis.width = 0.3;\n\t\t\tthis.height = 0.3;\n\t\t\tthis.links = [];\n\t\t\tthis.addToGraph(window.mainGraph); // cheating!\n\t\t}\n\n\t\taddToGraph(graph) {\n\t\t\tif (graph != null)\n\t\t\t\tgraph.addNode(this);\n\t\t\tthis.graph = graph;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\taddToGroup(group) {\n\t\t\tgroup.addNode(this);\n\t\t\tthis.group = group;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\tchangeToGroup(group) {\n\t\t\tthis.group.removeNode(this);\n\t\t\tthis.addToGroup(group);\n\t\t\treturn this;\n\t\t}\n\n\t\tfindLinksConnected() {\n\t\t\treturn this.links;\n\t\t}\n\n\t\tfindLinksInto() {\n\t\t\tvar links = [];\n\t\t\tfor (let link of this.links) {\n\t\t\t\tif (link.to == this.key)\n\t\t\t\t\tlinks.push(link);\n\t\t\t}\n\t\t\treturn links;\n\t\t}\n\n\t\tfindLinksOutOf() {\n\t\t\tvar links = [];\n\t\t\tfor (let link of this.links) {\n\t\t\t\tif (link.from == this.key)\n\t\t\t\t\tlinks.push(link);\n\t\t\t}\n\t\t\treturn links;\n\t\t}\n\n\t\tfindNodesOutOf() {\n\t\t\tvar links = this.findLinksOutOf()\n\t\t\tvar nodeKeys = links.map(l => l.to)\n\t\t\treturn nodeKeys.map(k => this.graph.findNodeByKey(k));\n\t\t}\n\n\t\tcopy(graph) {\n\t\t\tvar newNode = new Node(this.shape, this.text, this.name).addToGraph(graph);\n\t\t\tnewNode.width = this.width;\n\t\t\tnewNode.height = this.height;\n\t\t\treturn newNode;\n\t\t}\n\n\t\t// also delete any connected links\n\t\tdelete() {\n\t\t\tthis.group.removeNode(this);\n\t\t\tthis.graph.removeNode(this);\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = level + this.key + '[label=\"' + this.text;\n\t\t\tif (showKey)\n\t\t\t\tstr += ':' + this.key;\n\t\t\tstr += '\"';\n\t\t\tif (this.shape != null)\n\t\t\t\tstr += ',shape=' + this.shape;\n\t\t\tif (this.width != null)\n\t\t\t\tstr += ',width=' + this.width;\n\t\t\tif (this.height != null)\n\t\t\t\tstr += ',height=' + this.height;\n\t\t\treturn str += '];'\n\t\t}\n\n\t\t// machine instructions\n\t\ttransition(token, link) {\n\t\t\treturn link;\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\ttoken.rewrite = false;\n\t\t\treturn nextLink;\n\t\t}\n\t}\n\n\treturn Node;\n});\n","define(['token', 'node'], function(Token, Node) {\n\t\n\tvar Flag = Token.RewriteFlag();\n\tclass Atom extends Node {\n\n\t\tconstructor(name) {\n\t\t\tsuper(\"circle\", \"\", name);\n\t\t\tthis.height = 0.1;\n\t\t\tthis.width = 0.1;\n\t\t}\n\n\t}\n\n\treturn Atom;\n});\n","define('nodes/contract', ['token', 'node', 'nodes/atom', 'nodes/op', 'term', 'link', 'group'], \n\tfunction(Token, Node, Atom, Op, Term, Link,Group) {\n\tvar Flag = Token.RewriteFlag();\n\n\tclass Contract extends Node {\n\n\t\tconstructor(name) {\n\t\t\tsuper(\"point\", \"\", name);\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\treturn this.findLinksOutOf(null)[0];\n\t\t\t}\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar link = token.link;\n\t\t\tvar inLinks = this.findLinksInto();\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\tvar nextLink = outLinks[0];\n\t\t\tvar nextNode = this.graph.findNodeByKey(nextLink.to);\n\n\t\t\tif (nextNode instanceof Contract || nextNode instanceof Atom) {\n\t\t\t\tinLinks.map(l => l.changeTo(nextNode.key,\"_\"));\n\t\t\t\tnextLink.delete();\n\t\t\t\tthis.delete();\n\t\t\t} else if (nextNode instanceof Op) {\n\t\t\t\tvar term = new Term().addToGroup(this.group);\n\t\t\t\tvar copy = nextNode.copy().addToGroup(term);\n\n\t\t\t\t// clean up here\n\t\t\t\tvar opLinks = nextNode.findLinksOutOf();\n\t\t\t\tvar auxs = Contract.createDNet(opLinks.length,[nextNode,nextNode,copy,copy],term);\n\t\t\t\tlink.changeTo(copy.key,\"_\");\n\t\t\t\tfor (var i = 0; i < opLinks.length; i++) {\n\t\t\t\t\topLinks[i].changeFrom(auxs[i].key,\"_\");\n\t\t\t\t}\n\n\t\t\t\tterm.set(copy,auxs);\n\t\t}\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn link;\n\t\t}\n\n\t\tstatic createDNet(cs, inputs, originalGroup, op) {\n\t\t\tvar c;\n\t\t\tvar from;\n\t\t\tvar to;\n\t\t\tvar cList = [];\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor (var n = 0; n < cs; n++) {\n\t\t\t\tc = new Contract().addToGroup(group);\n\t\t\t\tcList.push(c);\n\n\t\t\tif (inputs.length == 0) // maybe this needs to be \"more elegant\"\n\t\t\t\tnew Link(op.key, c.key, \"_\", \"_\", \"lightgrey\").addToGroup(group);\n\t\t\t}\n\n\t\t\tif (cList.length > 0) {\n\t\t\t\tfor (var i = 0; i < inputs.length; i++) {\n\t\t\t\t\tfrom = inputs[i]; to = cList[(i%(cs))];\n\t\t\t\t\tnew Link(from.key, to.key, \"_\", \"_\").addToGroup(group);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgroup.addToGroup(originalGroup);\n\n\t\t\treturn cList;\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Contract(this.name);\n\t\t}\n\n\t\tdraw(level) {\n\t\t\treturn level + this.key + '[shape=' + this.shape + '];';\n\t\t}\n\t}\n\n\treturn Contract;\n});\n","define(['token', 'node', 'link'], function(Token, Node, Link) {\n\n\tvar Flag = Token.RewriteFlag();\n\n\tclass Op extends Node {\n\n\t\tconstructor(name, active) {\n\t\t\tsuper(null, name, name);\n\t\t\tthis.active = active;\n\t\t}\n\n\t\trewrite(token) { } // default none for passive ops\n\n\t\tcopy() { \n\t\t\treturn new Op(this.name,this.active);\n\t\t}\n\n\t}\n\n\treturn Op;\n});\n","define(['nodes/op', 'nodes/ops/bool', 'link', 'token'], function(Op, BoolOp, Link, Token) {\n\n\tvar Flag = Token.RewriteFlag();\n\n\tclass AndOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"∧\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new AndOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\t\n\t\t\tvar b = outLinks.reduce((sum,x) => sum && BoolOp.parseBoolean(this.graph.findNodeByKey(x.to).name), true);\n\n\t\t\tvar newNode = new BoolOp(b,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn AndOp;\n});\n","define(['nodes/op'], function(Op) {\n\tclass BoolOp extends Op {\n\n\t\tconstructor(b) {\n\t\t\tb = BoolOp.parseBoolean(b);\n\t\t\tsuper(b, false);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new BoolOp();\n\t\t}\n\n\t\tstatic parseBoolean(b) {\n\t\t\tif (b == \"false\" || b == 0) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn BoolOp;\n});\n","define(['nodes/op', 'nodes/ops/bool', 'link', 'token'], function(Op, BoolOp, Link, Token) {\n\n\tvar Flag = Token.RewriteFlag();\n\n\tclass EqualsOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"==\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new EqualsOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\n\t\t\tvar left = this.graph.findNodeByKey(outLinks[0].to).name;\n\t\t\tvar right = this.graph.findNodeByKey(outLinks[1].to).name;\n\t\t\tvar b = (left == right);\n\n\t\t\tvar newNode = new BoolOp(b,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn EqualsOp;\n});\n","define(['nodes/op', 'nodes/ops/bool', 'link', 'token'], function(Op, BoolOp, Link, Token) {\n\n\tvar Flag = Token.RewriteFlag();\n\n\tclass IfOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"if\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new IfOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\n\t\t\tvar name = this.graph.findNodeByKey(outLinks[0].to).name;\n\t\t\tvar keep; var del;\n\t\t\tif (BoolOp.parseBoolean(name)) {\n\t\t\t\tkeep = 1; del = 2;\n\t\t\t} else {\n\t\t\t\tkeep = 2; del = 1;\n\t\t\t}\n\t\t\toutLinks[del].delete();\n\t\t\tvar newNode = this.graph.findNodeByKey(outLinks[keep].to).group.unbox();\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks[0].delete();\n\t\t\tthis.graph.findNodeByKey(outLinks[0].to).delete();\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn IfOp;\n});\n","define(['nodes/op'], function(Op) {\n\n\tclass IntOp extends Op {\n\n\t\tconstructor(n) {\n\t\t\tsuper(n, false);\n\t\t}\n\n\t}\n\n\treturn IntOp;\n});\n","define(['nodes/op', 'nodes/ops/bool', 'link', 'token'], function(Op, BoolOp, Link, Token) {\n\n\tvar Flag = Token.RewriteFlag();\n\n\tclass NotOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"¬\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new NotOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\t\n\t\t\tvar b = !BoolOp.parseBoolean(this.graph.findNodeByKey(outLinks[0].to).name);\n\n\t\t\tvar newNode = new BoolOp(b,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn NotOp;\n});\n","define(['nodes/op', 'nodes/ops/bool', 'link', 'token'], function(Op, BoolOp, Link, Token) {\n\n\tvar Flag = Token.RewriteFlag();\n\n\tclass OrOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"∨\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new OrOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\n\t\t\tvar b = outLinks.reduce((sum,x) => sum || BoolOp.parseBoolean(this.graph.findNodeByKey(x.to).name), false);\n\n\t\t\tvar newNode = new BoolOp(b,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn OrOp;\n});\n","define(['nodes/op', 'nodes/ops/int', 'link', 'token'], function(Op, IntOp, Link, Token) {\n\n\tvar Flag = Token.RewriteFlag();\n\n\tclass PlusOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"+\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new PlusOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\t\n\t\t\tvar n = outLinks.reduce((sum,x) => sum + this.graph.findNodeByKey(x.to).name, 0);\n\n\t\t\tvar newNode = new IntOp(n,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn PlusOp;\n});\n","define(['nodes/op', 'nodes/ops/int', 'link', 'token'], function(Op, IntOp, Link, Token) {\n\n\tvar Flag = Token.RewriteFlag();\n\n\tclass TimesOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"*\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new TimesOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\t\n\t\t\tvar n = outLinks.reduce((sum,x) => sum * this.graph.findNodeByKey(x.to).name, 1);\n\n\t\t\tvar newNode = new IntOp(n,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn TimesOp;\n});\n","define(['node', 'token'], function(Node, Token) {\n\n\tvar Flag = Token.Flag;\n\n\tclass Start extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(\"point\", \"\");\n\t\t}\n\n\t\ttransition(token) {\n\t\t\treturn this.findLinksOutOf(null)[0];\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Start();\n\t\t}\n\n\t\tdraw(level) {\n\t\t\treturn level + this.key + '[shape=' + this.shape + '];';\n\t\t}\n\n\t}\n\n\treturn Start;\n});\n","define(['parser/token'], function(Token)  {\n\tclass Lexer {\n\t\tconstructor(input) {\n\t\t\tthis._input = input;\n\t\t\tthis._index = 0;\n\t\t\tthis._token = undefined;\n\t\t\tthis._nextToken();\n\t\t}\n\n\t\t/**\n\t\t * Return the next char of the input or '\\0' if we've reached the end\n\t\t */\n\t\t_nextChar() {\n\t\t\tif (this._index >= this._input.length) {\n\t\t\t\treturn '\\0';\n\t\t\t}\n\n\t\t\treturn this._input[this._index++];\n\t\t}\n\n\t\t/**\n\t\t * Set this._token based on the remaining of the input\n\t\t *\n\t\t * This method is meant to be private, it doesn't return a token, just sets\n\t\t * up the state for the helper functions.\n\t\t */\n\t\t_nextToken() {\n\t\t\tlet c;\n\t\t\tdo {\n\t\t\t\tc = this._nextChar();\n\t\t\t} while (/\\s/.test(c));\n\n\t\t\tswitch (c) {\n\t\t\tcase ',':\n\t\t\t\tthis._token = new Token(Token.COMMA);\n\t\t\t\tbreak;\n\n\t\t\tcase ';':\n\t\t\t\tthis._token = new Token(Token.SEMIC);\n\t\t\t\tbreak;\n\n\t\t\tcase '(':\n\t\t\t\tthis._token = new Token(Token.LPAREN);\n\t\t\t\tbreak;\n\n\t\t\tcase ')':\n\t\t\t\tthis._token = new Token(Token.RPAREN);\n\t\t\t\tbreak;\n\n\t\t\tcase '\\0':\n\t\t\t\tthis._token = new Token(Token.EOF);\n\t\t\t\tbreak;\n\n\t\t\tcase '=':\n\t\t\t\tthis._token = new Token(Token.DEF);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// text for string\n\t\t\t\tif (/[a-zA-Z]|'/.test(c)) {\n\t\t\t\t\tlet str = '';\n\t\t\t\t\tdo {\n\t\t\t\t\t\tstr += c;\n\t\t\t\t\t\tc = this._nextChar();\n\n\t\t\t\t\t} while (/[a-zA-Z]|'|_/.test(c));\n\n\t\t\t\t\t// put back the last char which is not part of the identifier\n\t\t\t\t\tthis._index--;\n\n\t\t\t\t\tif (str == \"bind\")\n\t\t\t\t\t\tthis._token = new Token(Token.BIND);\n\t\t\t\t\telse if (str == \"in\")\n\t\t\t\t\t\tthis._token = new Token(Token.IN);\n\t\t\t\t\telse if (str == \"new\")\n\t\t\t\t\t\tthis._token = new Token(Token.NEW);\n\t\t\t\t\telse if (str == \"PLUS\")\n\t\t\t\t\t\tthis._token = new Token(Token.PLUS);\n\t\t\t\t\telse if (str == \"TIMES\")\n\t\t\t\t\t\tthis._token = new Token(Token.TIMES);\n\t\t\t\t\telse if (str == \"AND\")\n\t\t\t\t\t\tthis._token = new Token(Token.AND);\n\t\t\t\t\telse if (str == \"OR\")\n\t\t\t\t\t\tthis._token = new Token(Token.OR);\n\t\t\t\t\telse if (str == \"NOT\")\n\t\t\t\t\t\tthis._token = new Token(Token.NOT);\n\t\t\t\t\telse if (str == \"EQUALS\")\n\t\t\t\t\t\tthis._token = new Token(Token.EQUALS);\n\t\t\t\t\telse if (str == \"IF\")\n\t\t\t\t\t\tthis._token = new Token(Token.IF);\n\t\t\t\t\telse if (str == \"TRUE\")\n\t\t\t\t\t\tthis._token = new Token(Token.TRUE, true);\n\t\t\t\t\telse if (str == \"FALSE\")\n\t\t\t\t\t\tthis._token = new Token(Token.FALSE, false);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._token = new Token(Token.LCID, str);\n\t\t\t\t}\n\n\t\t\t\t// text for numbers\n\t\t\t\telse if (/[0-9]/.test(c)) {\n\t\t\t\t\tlet str = '';\n\t\t\t\t\tdo {\n\t\t\t\t\t\tstr += c;\n\t\t\t\t\t\tc = this._nextChar();\n\t\t\t\t\t} while (/[0-9]/.test(c));\n\n\t\t\t\t\t// put back the last char which is not part of the identifier\n\t\t\t\t\tthis._index--;\n\t\t\t\t\tthis._token = new Token(Token.INT, parseInt(str));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.fail();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Assert that the next token has the given type, return it, and skip to the\n\t\t * next token.\n\t\t */\n\t\ttoken(type) {\n\t\t\tif (!type) {\n\t\t\t\treturn this._token.value;\n\t\t\t}\n\n\t\t\tconst token = this._token;\n\t\t\tthis.match(type);\n\t\t\treturn token.value;\n\t\t}\n\n\t\tvalue() {\n\t\t\treturn this._token.value;\n\t\t}\n\n\t\tlookahead() {\n\t\t\treturn this._token;\n\t\t}\n\n\t\tlookaheadType() {\n\t\t\treturn this._token.type;\n\t\t}\n\n\t\t/**\n\t\t * Throw an unexpected token error - ideally this would print the source\n\t\t * location\n\t\t */\n\t\tfail() {\n\t\t\tthrow new Error(`Unexpected token at offset ${this._index}`);\n\t\t}\n\n\t\t/**\n\t\t * Returns a boolean indicating whether the next token has the given type.\n\t\t */\n\t\tnext(type) {\n\t\t\treturn this._token.type == type;\n\t\t}\n\n\t\t/**\n\t\t * Assert that the next token has the given type and skip it.\n\t\t */\n\t\tmatch(type) {\n\t\t\tif (this.next(type)) {\n\t\t\t\tthis._nextToken();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.error(`${this._index}: Invalid token: Expected '${type}' found '${this._token.type}'`);\n\t\t\tthrow new Error('Parse Error');\n\t\t}\n\n\t\t/**\n\t\t * Same as `next`, but skips the token if it matches the expected type.\n\t\t */\n\t\tskip(type) {\n\t\t\tif (this.next(type)) {\n\t\t\t\tthis._nextToken();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn Lexer;\n});\n","define(['parser/token', 'ast/var', 'ast/operation', 'ast/binding', 'ast/reference', 'ast/thunk'], \n\tfunction(Token, Var, Operation, Binding, Reference, Thunk) {\n\n\tclass Parser {\n\t\tconstructor(lexer) {\n\t\t\tthis.lexer = lexer;\n\t\t}\n\n\t\tparse() {\n\t\t\tconst result = this.term([]);\n\t\t\t// make sure we consumed all the program, otherwise there was a syntax error\n\t\t\tthis.lexer.match(Token.EOF);\n\t\t\treturn result;\n\t\t}\n\n\t\t//  T ::= BIND LCID DEF term IN term  (BIND x = PARAM in BODY)\n\t\t//      | NEW  LCID IN term           (NEW x = PARAM in BODY)\n\t\t//      | op? ( EAS ; DAS )\n\n\t\tterm(ctx,thunk) {\n\t\t\tif (thunk) {\n\t\t\t\tconst inner = this.term(ctx);\n\t\t\t\treturn new Thunk(ctx,inner);\n\t\t\t} else {\n\t\t\t\tif (this.lexer.skip(Token.BIND)) {\n\t\t\t\t\tconst id = this.term(ctx);\n\t\t\t\t\tid.ctx = [id].concat(id.ctx);\n\t\t\t\t\tthis.lexer.match(Token.DEF);\n\t\t\t\t\tconst P = this.term(ctx);\n\t\t\t\t\tthis.lexer.match(Token.IN);\n\t\t\t\t\tconst B = this.term([id].concat(ctx));\n\t\t\t\t\treturn new Binding(ctx,id,P,B);\n\t\t\t\t} else if (this.lexer.skip(Token.NEW)) {\n\t\t\t\t\tconst id = this.term(ctx);\n\t\t\t\t\tid.ctx = [id].concat(id.ctx);\n\t\t\t\t\tthis.lexer.match(Token.DEF);\n\t\t\t\t\tconst P = this.term(ctx);\n\t\t\t\t\tthis.lexer.match(Token.IN);\n\t\t\t\t\tconst B = this.term([id].concat(ctx));\n\t\t\t\t\treturn new Reference(ctx,id,P,B);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.atom(ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// atom ::= LPAREN term RPAREN\n\t\t//        | LCID\n\t\tatom(ctx) {\n\t\t\tif (this.lexer.skip(Token.LPAREN)) {\n\t\t\t\tconst term = this.term(ctx);\n\t\t\t\tthis.lexer.match(Token.RPAREN);\n\t\t\t\treturn term;\n\t\t\t} else if (this.lexer.next(Token.LCID)) {\n\t\t\t\tconst id = this.lexer.token(Token.LCID);\n\t\t\t\treturn new Var(ctx, id);\n\t\t\t} else {\n\t\t\t\treturn this.operation(ctx);\n\t\t\t}\n\t\t}\n\n\t\t// BUILT-IN OPERATIONS\n\t\toperation(ctx) {\n\t\t\tvar name; var sig; var active;\n\t\t\tvar eas = [];\n\t\t\tvar das = [];\n\n\t\t\tvar token = this.lexer.lookaheadType();\n\t\t\tswitch(token) {\n\t\t\t\tcase Token.PLUS:\n\t\t\t\t\tname = \"+\"; sig = [2,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TIMES:\n\t\t\t\t\tname = \"*\"; sig = [2,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.AND:\n\t\t\t\t\tname = \"∧\"; sig = [2,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.OR:\n\t\t\t\t\tname = \"∨\"; sig = [2,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.NOT:\n\t\t\t\t\tname = \"¬\"; sig = [1,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.EQUALS:\n\t\t\t\t\tname = \"==\"; sig = [2,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.IF:\n\t\t\t\t\tname = \"if\"; sig = [1,2]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tname = this.lexer.value(); sig = [0,0]; active = false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.lexer.match(token);\n\t\t\tif (sig[0] > 0) {\n\t\t\t\tthis.lexer.match(Token.LPAREN);\n\t\t\t\teas = this.gatherArgs(ctx,sig[0],false);\n\t\t\t\tif (sig[1] == 0)\n\t\t\t\t\tthis.lexer.match(Token.RPAREN);\n\t\t\t}\n\t\t\tif (sig[1] > 0) {\n\t\t\t\tif (sig[0] == 0)\n\t\t\t\t\tthis.lexer.match(Token.LPAREN);\n\t\t\t\tthis.lexer.match(Token.SEMIC);\n\t\t\t\tdas = this.gatherArgs(ctx,sig[1],true);\n\t\t\t\tthis.lexer.match(Token.RPAREN);\n\t\t\t}\n\t\t\treturn new Operation(ctx,sig,name,active,eas,das);\n\t\t}\n\n\t\tgatherArgs(ctx,type,thunk) {\n\t\t\tvar args = [];\n\t\t\tfor (var i = 0; i < type; i++) {\n\t\t\t\tconst term = this.term(ctx,thunk);\n\t\t\t\targs.push(term);\n\t\t\t\tif (this.lexer.next(Token.COMMA)) {\n\t\t\t\t\tthis.lexer.match(Token.COMMA);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn args;\n\t\t}\n\n\t}\n\n\treturn Parser;\n});\n","define(function() {\n  class Token {\n    /**\n     * type should be one of the valid token types list below, and value is an\n     * optional value that can carry any extra information necessary for a given\n     * token type. (e.g. the matched string for an identifier)\n     */\n    constructor(type, value, pred) {\n      this.type = type;\n      this.value = value;\n      this.pred = pred;\n    }\n  }\n\n  [\n    'EOF', // we augment the tokens with EOF, to indicate the end of the input.\n    'LCID',\n\n    'LPAREN',\n    'RPAREN',\n    'SEMIC',\n\n    'BIND',\n    'NEW',\n    'DEF',\n    'IN',\n\n    'PLUS',\n    'TIMES',\n    'INT',\n    'AND',\n    'OR',\n    'NOT',\n    'TRUE',\n    'FALSE',\n    'EQUALS',\n\n    'IF'\n  ].forEach(token => Token[token] = token);\n\n  return Token;\n});\n","// specific group for a term in the calculus\n\ndefine('term', ['group'], function(Group) {\n\n\tclass Term extends Group {\n\n\t\tconstructor(prin, auxs) {\n\t\t\tsuper();\n\t\t\tthis.prin = null;\n\t\t\tthis.set(prin, auxs)\n\t\t\tthis.boxed = false;\n\t\t}\n\n\t\tset(prin, auxs) {\n\t\t\tthis.prin = prin;\n\t\t\tthis.auxs = auxs;\n\t\t\treturn this;\n\t\t}\n\n\t\tbox() {\n\t\t\tthis.boxed = true;\n\t\t\treturn this.prin;\n\t\t}\n\n\t\tunbox() {\n\t\t\tthis.boxed = false;\n\t\t\treturn this.prin;\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tif (this.boxed) {\n\t\t\t\tvar str = \"\";\n\t\t\t\tfor (let node of this.nodes) {\n\t\t\t\t\tstr += node.draw(level + '  ');\n\t\t\t\t}\n\t\t\t\treturn level + 'subgraph cluster_' + this.key + ' {'\n\t\t\t\t\t + level + '  graph[style=dotted];'\n\t\t\t\t\t + str\n\t\t\t\t\t + level + '};';\n\t\t\t }\n\t\treturn super.draw(level);\n\t\t}\n\n}\n\n\treturn Term;\n});\n","define(function() {\n\n\tvar Flag = {\n\t\tSEARCH:  '?',\n\t\tREWRITE: '↯',\n\t\tRETURN:\t '✓',\n\t}\n\n\tclass MachineToken {\n\n\t\tstatic RewriteFlag() {\n\t\t\treturn Flag;\n\t\t}\n\n\t\tconstructor() {\n\t\t\tthis.link = null;\n\t\t\tthis.rewriteFlag = null;\n\t\t\tthis.reset();\n\t\t}\n\n\t\tsetLink(link) {\n\t\t\tif (this.link != null)\n\t\t\t\tthis.link.clearFocus();\n\t\t\tthis.link = link;\n\t\t\tif (this.link != null) {\n\t\t\t\tthis.link.focus(\"red\");\n\t\t\t}\n\t\t}\n\n\t\treset(link) {\n\t\t\tthis.setLink(link);\n\t\t\tthis.rewriteFlag = Flag.SEARCH;\n\t\t}\n\t}\n\n\treturn MachineToken;\n});\n"],"sourceRoot":""}