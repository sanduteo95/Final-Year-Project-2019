{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/../viz/CBV-with-CBV-embedding/js/goi-machine.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/graph.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/group.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/link.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/node.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/atom.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/contract.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/op.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/and.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/bool.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/equals.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/if.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/int.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/not.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/or.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/plus.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/times.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/start.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/parser/ast.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/parser/lexer.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/parser/parser.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/parser/token.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/term.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/token.js"],"names":["graph","define","require","Flag","RewriteFlag","Variable","Operation","Binding","Reference","Thunk","Lexer","Parser","MachineToken","Link","Graph","Group","Term","Atom","Contract","Start","Op","IntOp","BoolOp","PlusOp","TimesOp","AndOp","OrOp","NotOp","EqualsOp","IfOp","GoIMachine","setMachine","graphSet","tokenSet","countSet","token","count","source","lexer","parser","ast","parse","clear","start","addToGroup","child","term","toGraph","link","key","prin","reset","group","box","inner","auxs","i","ctx","length","c","push","name","set","body","param","auxNode","splice","concat","atomNode","createDNet","op","toOp","active","next","sig","eas","das","visited","Number","isInteger","parseInt","graphTxt","linkTxt","flagTxt","finished","node","findNodeByKey","to","nextLink","rewriteFlag","REWRITE","rewrite","pass","setLink","printHistory","play","playing","val","draw","replace","SEARCH","outlinks","findLinksOutOf","RETURN","from","doneVisiting","findLinksInto","j","findJ","links","l","list","linkKey","allNodes","Map","allLinks","Array","findLinksConnected","delete","get","indexOf","fromNode","filter","x","width","height","str","Node","nodes","level","fromPort","toPort","colour","reverse","penWidth","addToGraph","addToNode","toNode","addLink","removeLink","port","showKey","shape","text","addNode","removeNode","nodeKeys","map","k","newNode","inLinks","outLinks","nextNode","changeTo","copy","opLinks","changeFrom","cs","inputs","originalGroup","cList","n","inLink","b","reduce","sum","parseBoolean","newLink","left","right","keep","del","unbox","Var","id","Token","input","_input","_index","_token","undefined","_nextToken","_nextChar","test","COMMA","SEMIC","LPAREN","RPAREN","EOF","DEF","BIND","IN","NEW","PLUS","TIMES","AND","OR","NOT","EQUALS","IF","TRUE","FALSE","LCID","INT","fail","type","value","match","Error","console","error","result","term2","thunk","skip","P","B","atom","operation","lookaheadType","gatherArgs","args","pred","forEach","boxed","clearFocus","focus"],"mappings":"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","file":"main.prepack.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"main\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"main\"] = factory();\n\telse\n\t\troot[\"main\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"../viz/CBV-with-CBV-embedding/js/goi-machine.js\");\n","var graph = null;\n\ndefine('goi-machine',\n\tfunction(require) {\n\t\tvar Flag = require('token').RewriteFlag();\n\n\t\tvar Variable = require('ast/var');\n\t\tvar Operation = require('ast/operation');\n\t\tvar Binding = require('ast/binding');\n\t\tvar Reference = require('ast/reference');\n\t\tvar Thunk = require('ast/thunk');\n\n\t\tvar Lexer = require('parser/lexer');\n\t\tvar Parser = require('parser/parser');\n\n\t\tvar MachineToken = require('token');\n\t\tvar Link = require('link');\n\n\t\tvar Graph = require('graph');\n\t\tvar Group = require('group');\n\t\tvar Term = require('term');\n\n\t\tvar Atom = require('nodes/atom');\n\t\tvar Contract = require('nodes/contract');\n\t\tvar Start = require('nodes/start');\n\t\tvar Op = require('nodes/op');\n\n\t\tvar IntOp = require('nodes/ops/int');\n\t\tvar BoolOp = require('nodes/ops/bool');\n\t\tvar PlusOp = require('nodes/ops/plus');\n\t\tvar TimesOp = require('nodes/ops/times');\n\t\tvar AndOp = require('nodes/ops/and');\n\t\tvar OrOp = require('nodes/ops/or');\n\t\tvar NotOp = require('nodes/ops/not');\n\t\tvar EqualsOp = require('nodes/ops/equals');\n\t\tvar IfOp = require('nodes/ops/if');\n\n\t\tclass GoIMachine {\n\n\t\t\tconstructor() {\n\t\t\t\tthis.setMachine(new Graph(),new MachineToken(),0);\n\t\t\t}\n\n\t\t\tsetMachine(graphSet,tokenSet,countSet) {\n\t\t\t\tthis.graph = graphSet;\n\t\t\t\tgraph = this.graph; // cheating!\n\t\t\t\tthis.token = tokenSet;\n\t\t\t\tthis.count = countSet;\n\t\t\t}\n\n\t\t\tcompile(source) {\n\t\t\t\tconst lexer = new Lexer(source + '\\0');\n\t\t\t\tconst parser = new Parser(lexer);\n\t\t\t\tconst ast = parser.parse();\n\t\t\t\tthis.count = 0;\n\n\t\t\t\tthis.graph.clear();\n\t\t\t\tvar start = new Start().addToGroup(this.graph.child);\n\t\t\t\tvar term = this.toGraph(ast, this.graph.child, false);\n\t\t\t\tvar link = new Link(start.key, term.prin.key, \"_\", \"_\").addToGroup(this.graph.child);\n\t\t\t\tthis.token.reset(link);\n\t\t\t}\n\n\t\t\t// translation\n\t\t\ttoGraph(ast, group) {\n\t\t\t\tvar graph = this.graph;\n\n\t\t\t\tvar term = new Term().addToGroup(group);\n\t\t\t\tif (ast instanceof Thunk) {\n\t\t\t\t\tterm.box();\n\t\t\t\t\tast = ast.inner;\n\t\t\t\t}\n\n\t\t\t\t// VARIABLES & ATOMS\n\t\t\t\tif (ast instanceof Variable) {\n\t\t\t\t\tvar auxs = [];\n\t\t\t\t\tfor (var i = 0; i < ast.ctx.length; i++) {\n\t\t\t\t\t\tvar c = new Contract().addToGroup(term);\n\t\t\t\t\t\tauxs.push(c);\n\t\t\t\t\t\tif ((ast.ctx[i]).name == ast.name)\n\t\t\t\t\t\t \tvar prin = c;\n\t\t\t\t\t}\n\t\t\t\t\tterm.set(prin, auxs);\n\n\t\t\t\t// BINDINGS & REFERENCES\n\t\t\t\t} else if ((ast instanceof Binding) || (ast instanceof Reference))  {\n\t\t\t\t\tvar body = this.toGraph(ast.body, term, false).addToGroup(term);\n\t\t\t\t\tvar param = this.toGraph(ast.param, term, false).addToGroup(term);\n\n\t\t\t\t\tvar auxs = body.auxs;\n\t\t\t\t\tvar auxNode = auxs[0];\n\t\t\t\t\tauxs.splice(0,1)\n\t\t\t\t\tauxs = auxs.concat(param.auxs);\n\n\t\t\t\t\tif (ast instanceof Reference) {\n\t\t\t\t\t\tvar atomNode = new Atom(\"a\").addToGroup(param);\n\t\t\t\t\t\tnew Link(atomNode.key, param.prin.key, \"_\", \"_\").addToGroup(param);\n\t\t\t\t\t\tparam.prin = atomNode;\n\t\t\t\t\t}\n\t\t\t\t\tnew Link(auxNode.key, param.prin.key, \"_\", \"_\").addToGroup(term);\n\n\t\t\t\t\tauxs = Contract.createDNet(ast.ctx.length, auxs, term);\n\t\t\t\t\tterm.set(body.prin, auxs);\n\n\t\t\t\t// OPERATIONS\n\t\t\t\t} else if (ast instanceof Operation) {\n\t\t\t\t\tvar op = this.toOp(ast.name,ast.active).addToGroup(term);\n\n\t\t\t\t\tvar auxs = [];\n\n\t\t\t\t\tvar next;\n\t\t\t\t\tfor (var i = 0; i < ast.sig[0]; i++) {\n\t\t\t\t\t\tnext = this.toGraph(ast.eas[i], term).addToGroup(term);\n\t\t\t\t\t\tnew Link(op.key, next.prin.key, \"_\", \"_\").addToGroup(term);\n\t\t\t\t\t\tauxs = auxs.concat(next.auxs);\n\t\t\t\t\t}\n\t\t\t\t\tfor (var i = 0; i < ast.sig[1]; i++) {\n\t\t\t\t\t\tnext = this.toGraph(ast.das[i], term).addToGroup(term);\n\t\t\t\t\t\tvar link = new Link(op.key, next.prin.key, \"_\", \"_\");\n\t\t\t\t\t\tlink.visited = true; // hacking\n\t\t\t\t\t\tlink.addToGroup(term);\n\t\t\t\t\t\tauxs = auxs.concat(next.auxs);\n\t\t\t\t\t}\n\n\t\t\t\t\tauxs = Contract.createDNet(ast.ctx.length, auxs, term, op);\n\t\t\t\t\tterm.set(op, auxs);\n\t\t\t\t}\n\t\t\t\treturn term;\n\t\t\t}\n\n\t\t\ttoOp(name,active) {\n\t\t\t\tif (Number.isInteger(parseInt(name))) {\n\t\t\t\t\treturn new IntOp(name);\n\t\t\t\t} else if (name == \"true\" || name == \"false\") {\n\t\t\t\t\treturn new BoolOp(name);\n\t\t\t\t} else if (name == \"+\") {\n\t\t\t\t\treturn new PlusOp();\n\t\t\t\t} else if (name == \"*\") {\n\t\t\t\t\treturn new TimesOp();\n\t\t\t\t} else if (name == \"∧\") {\n\t\t\t\t\treturn new AndOp();\n\t\t\t\t} else if (name == \"∨\") {\n\t\t\t\t\treturn new OrOp();\n\t\t\t\t} else if (name == \"¬\") {\n\t\t\t\t\treturn new NotOp();\n\t\t\t\t} else if (name == \"==\") {\n\t\t\t\t\treturn new EqualsOp();\n\t\t\t\t} else if (name == \"if\") {\n\t\t\t\t\treturn new IfOp();\n\t\t\t\t} else {\n\t\t\t\t\treturn new Op(name,active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tquotieningRules() {\n\t\t\t\t// TODO\n\t\t\t\t// Loop through all links in the graph\n\t\t\t\t// Perform quotiening rules\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// machine step\n\t\t\ttransition(graphTxt, linkTxt, flagTxt) {\n\t\t\t\tif (!finished) {\n\t\t\t\t\tthis.count++;\n\t\t\t\t\tvar node = this.graph.findNodeByKey(this.token.link.to);\n\n\t\t\t\t\tvar nextLink;\n\t\t\t\t\tif (this.token.rewriteFlag == Flag.REWRITE) {\n\t\t\t\t\t\tnextLink = node.rewrite(this.token);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextLink = this.pass(this.token);\n\t\t\t\t\t}\n\t\t\t\t\tif (nextLink != null) {\n\t\t\t\t\t\tthis.token.setLink(nextLink);\n\t\t\t\t\t\tthis.printHistory(graphTxt, linkTxt, flagTxt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.token.setLink(null);\n\t\t\t\t\t\tplay = false;\n\t\t\t\t\t\tplaying = false;\n\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprintHistory(graphTxt, linkTxt, flagTxt) {\n\t\t\t\tgraphTxt.val(this.graph.draw().replace(/\\n/g, \"\") + '\\n' + graphTxt.val());\n\t\t\t\tlinkTxt.val(this.token.link + '\\n' + linkTxt.val());\n\t\t\t\tflagTxt.val(this.token.rewriteFlag + '\\n' + flagTxt.val());\n\t\t\t}\n\n\t\tpass(token) { // this needs cleaning up!\n\t\t\tvar link = token.link;\n\t\t\tif (token.rewriteFlag == Flag.SEARCH) {\n\t\t\t\tvar to = this.graph.findNodeByKey(link.to);\n\t\t\t\tvar outlinks = to.findLinksOutOf();\n\t\t\t\tif (to instanceof Atom) {\n\t\t\t\t\ttoken.rewriteFlag = Flag.RETURN;\n\t\t\t\t\treturn link;\n\t\t\t\t} else if (to instanceof Op) {\n\t\t\t\t\tif (outlinks.length == 0) {\n\t\t\t\t\t\tif (to.active) {\n\t\t\t\t\t\t\ttoken.rewriteFlag = Flag.REWRITE;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttoken.rewriteFlag = Flag.RETURN;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn link;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn outlinks[0];\n\t\t\t\t\t}\n\t\t\t\t} else if (to instanceof Contract) {\n\t\t\t\t\ttoken.rewriteFlag = Flag.REWRITE;\n\t\t\t\t\treturn link;\n\t\t\t\t}\n\t\t\t} else if (token.rewriteFlag == Flag.RETURN) {\n\t\t\t\tvar from = this.graph.findNodeByKey(link.from);\n\t\t\t\tvar outlinks = from.findLinksOutOf();\n\t\t\t\tif (this.doneVisiting(link,outlinks)) { // HACKING\n\t\t\t\t\tif (from.active) {\n\t\t\t\t\t\ttoken.rewriteFlag = Flag.REWRITE;\n\t\t\t\t\t\treturn from.findLinksInto()[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoken.rewriteFlag = Flag.RETURN;\n\t\t\t\t\t\treturn from.findLinksInto()[0];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\t\t\tvar j = this.findJ(link,outlinks);\n\t\t\t\t\treturn outlinks[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn link;\n\t\t}\n\n\t\tdoneVisiting(link, links) {\n\t\t\tfor (let l of links) {\n\t\t\t\tif ((!l.visited) && (l != link))\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\treturn true;\n\t\t\t}\n\n\t\tfindJ(link,list) {\n\t\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\t\tif ((!list[j].visited) && (list[j] != link))\n\t\t\t\t\treturn j;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t\treturn GoIMachine;\n\t}\n);\n","// general graph\ndefine(function(require) {\n\n\tvar Group = require('group');\n\n\tclass Graph {\n\n\t\tconstructor() {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tclear() {\n\t\t\tthis.key = 0;\n\t\t\tthis.linkKey = 0;\n\t\t\tthis.allNodes = new Map(); // for efficiency searching\n\t\t\tthis.allLinks = []; // for printing ONLY\n\t\t\tthis.child = new Group();\n\t\t}\n\n\t\t// give a key to a node and add it to allNodes\n\t\taddNode(node) {\n\t\t\tnode.key = 'nd' + this.key;\n\t\t\tthis.allNodes.set(node.key, node);\n\t\t\tthis.key++;\n\t\t}\n\n\t\t// also removes connected links\n\t\tremoveNode(node) {\n\t\t\tfor (let link of Array.from(node.findLinksConnected())) {\n\t\t\t\tlink.delete();\n\t\t\t}\n\t\t\treturn this.allNodes.delete(node.key);\n\t\t}\n\n\t\tfindNodeByKey(key) {\n\t\t\treturn this.allNodes.get(key);\n\t\t}\n\n\t\taddLink(link) {\n\t\t\tthis.allLinks.push(link);\n\t\t}\n\n\t\tremoveLink(link) {\n\t\t\tthis.allLinks.splice(this.allLinks.indexOf(link), 1);\n\t\t}\n\n\t\tfindLinkByKeys(from,to) {\n\t\t\tvar fromNode = this.findNodeByKey(from);\n\t\t\treturn fromNode.findLinksOutOf().filter(x => x.to == to)[0];\n\t\t}\n\n\t\tdraw(width, height) {\n\t\t\tvar str = this.child.draw('\\n  ');\n\t\t\tstr += '\\n';\n\t\t\tfor (let link of this.allLinks) {\n\t\t\t\tstr += link.draw('\\n  ');\n\t\t\t}\n\t\t\treturn 'digraph G {'\n\t\t\t   \t+'\\n  rankdir=BT;'\n\t\t\t   \t+'\\n  edge[arrowhead=none,arrowtail=none];'\n\t\t\t   \t+'\\n  node[fixedsize=true,shape=circle]'\n\t\t\t   \t+'\\n  size=\"' + width + ',' + height + '\";'\n\t\t\t   \t+'\\n  labeldistance=0;'\n\t\t\t   \t+'\\n  nodesep=.175;'\n\t  \t\t\t+'\\n  ranksep=.175;'\n\t\t\t\t+'\\n'\n\t\t\t\t+     str\n\t\t\t   \t+'\\n}';\n\t\t}\n\t}\n\n\treturn Graph;\n\n});\n","// general group in a graph (subgraph)\ndefine('group', function(require) {\n\n\tvar Node = require('node');\n\n\tclass Group extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(null, null, null); // shape, text, name\n\t\t\tthis.nodes = [];\n\t\t\tthis.links = []; // for copying\n\t\t}\n\n\t\taddNode(node) {\n\t\t\tthis.nodes.push(node);\n\t\t}\n\n\t\tremoveNode(node) {\n\t\t\treturn this.nodes.splice(this.nodes.indexOf(node), 1);\n\t\t}\n\n\t\taddLink(link) {\n\t\t\tthis.links.push(link);\n\t\t}\n\n\t\tremoveLink(link) {\n\t\t\tvar i = this.links.indexOf(link);\n\t\t\tif (i != -1)\n\t\t\t\tthis.links.splice(i, 1);\n\t\t}\n\n\t\tdelete() {\n\t\t\tfor (let node of Array.from(this.nodes)) {\n\t\t\t\tnode.delete();\n\t\t\t}\n\t\t\tsuper.delete();\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = \"\";\n\t\t\tfor (let node of this.nodes) {\n\t\t\t\tstr += node.draw(level);\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t\tcopy() { } // should never be called as all groups are in terms\n\n\t}\n\n\treturn Group;\n});\n","define(function() {\n\n\tclass Link {\n\t\tconstructor(from, to, fromPort, toPort, colour) {\n\t\t\tthis.from = from;\n\t\t\tthis.to = to;\n\t\t\tthis.fromPort = fromPort;\n\t\t\tthis.toPort = toPort;\n\t\t\tthis.visited = false; // HACKING\n\n\t\t\tthis.reverse = false;\n\t\t\tthis.colour = colour;\n\t\t\tthis.penWidth = null;\n\t\t\tthis.addToGraph(graph); // cheating\n\t\t\tif (colour != \"lightgrey\") { // cheating\n\t\t\t\tthis.addToNode(); // cheating\n\t\t\t}\n\t\t}\n\n\t\taddToNode() {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.push(this);\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.push(this);\n\t\t}\n\n\t\taddToGraph(graph) {\n\t\t\tif (graph != null)\n\t\t\t\tgraph.addLink(this);\n\t\t\tthis.graph = graph;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\taddToGroup(group) {\n\t\t\tgroup.addLink(this);\n\t\t\tthis.group = group;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\tchangeToGroup(group) {\n\t\t\tthis.group.removeLink(this);\n\t\t\tthis.addToGroup(group);\n\t\t\treturn this;\n\t\t}\n\n\t\tchangeFrom(key, port) {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.splice(fromNode.links.indexOf(this), 1);\n\n\t\t\tthis.from = key;\n\t\t\tthis.fromPort = port;\n\t\t\tfromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.push(this);\n\t\t}\n\n\t\tchangeTo(key, port) {\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.splice(toNode.links.indexOf(this), 1);\n\n\t\t\tthis.to = key;\n\t\t\tthis.toPort = port;\n\t\t\ttoNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.push(this);\n\t\t}\n\n\t\tfocus(colour) {\n\t\t\tthis.colour = colour;\n\t\t\tthis.penWidth = \"20\";\n\t\t}\n\n\t\tclearFocus() {\n\t\t\tthis.colour = null;\n\t\t\tthis.penWidth = null;\n\t\t\tthis.visited = true; // HACKING\n\t\t}\n\n\t\tdelete() {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.splice(fromNode.links.indexOf(this), 1);\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.splice(toNode.links.indexOf(this), 1);\n\t\t\tthis.group.removeLink(this);\n\t\t\tthis.graph.removeLink(this);\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this.from + \"->\" + this.to;\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = level;\n\n\t\t\tif (!this.reverse) {\n\t\t\t\tstr += this.from + '->' + this.to + '[';\n\t\t\t\tif (this.fromPort != null)\n\t\t\t\t\tstr += 'tailport=' + this.fromPort;\n\t\t\t\tif (this.toPort != null)\n\t\t\t\t\tstr += ',headport=' + this.toPort;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstr += this.to + '->' + this.from + '[dir=back';\n\t\t\t\tif (this.fromPort != null)\n\t\t\t\t\tstr += ',headport=' + this.fromPort;\n\t\t\t\tif (this.toPort != null)\n\t\t\t\t\tstr += ',tailport=' + this.toPort;\n\t\t\t}\n\n\t\t\tif (this.colour != null)\n\t\t\t\tstr += ',color=' + this.colour;\n\t\t\tif (this.penWidth != null)\n\t\t\t\tstr += ',penwidth=' + this.penWidth;\n\n\t\t\tstr += '];';\n\t\t\treturn str;\n\t\t}\n\t}\n\n\treturn Link;\n});\n","var showKey = false;\n\ndefine(function(require) {\n\n\tclass Node {\n\t\tconstructor(shape, text, name) {\n\t\t\tthis.key = null;\n\t\t\tthis.shape = shape;\n\t\t\tthis.text = text;\n\t\t\tthis.name = name; // identifier name or constant name if any\n\t\t\tthis.graph = null;\n\t\t\tthis.group = null;\n\t\t\tthis.width = 0.3;\n\t\t\tthis.height = 0.3;\n\t\t\tthis.links = [];\n\t\t\tthis.addToGraph(graph); // cheating!\n\t\t}\n\n\t\taddToGraph(graph) {\n\t\t\tif (graph != null)\n\t\t\t\tgraph.addNode(this);\n\t\t\tthis.graph = graph;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\taddToGroup(group) {\n\t\t\tgroup.addNode(this);\n\t\t\tthis.group = group;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\tchangeToGroup(group) {\n\t\t\tthis.group.removeNode(this);\n\t\t\tthis.addToGroup(group);\n\t\t\treturn this;\n\t\t}\n\n\t\tfindLinksConnected() {\n\t\t\treturn this.links;\n\t\t}\n\n\t\tfindLinksInto() {\n\t\t\tvar links = [];\n\t\t\tfor (let link of this.links) {\n\t\t\t\tif (link.to == this.key)\n\t\t\t\t\tlinks.push(link);\n\t\t\t}\n\t\t\treturn links;\n\t\t}\n\n\t\tfindLinksOutOf() {\n\t\t\tvar links = [];\n\t\t\tfor (let link of this.links) {\n\t\t\t\tif (link.from == this.key)\n\t\t\t\t\tlinks.push(link);\n\t\t\t}\n\t\t\treturn links;\n\t\t}\n\n\t\tfindNodesOutOf() {\n\t\t\tvar links = this.findLinksOutOf()\n\t\t\tvar nodeKeys = links.map(l => l.to)\n\t\t\treturn nodeKeys.map(k => this.graph.findNodeByKey(k));\n\t\t}\n\n\t\tcopy(graph) {\n\t\t\tvar newNode = new Node(this.shape, this.text, this.name).addToGraph(graph);\n\t\t\tnewNode.width = this.width;\n\t\t\tnewNode.height = this.height;\n\t\t\treturn newNode;\n\t\t}\n\n\t\t// also delete any connected links\n\t\tdelete() {\n\t\t\tthis.group.removeNode(this);\n\t\t\tthis.graph.removeNode(this);\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = level + this.key + '[label=\"' + this.text;\n\t\t\tif (showKey)\n\t\t\t\tstr += ':' + this.key;\n\t\t\tstr += '\"';\n\t\t\tif (this.shape != null)\n\t\t\t\tstr += ',shape=' + this.shape;\n\t\t\tif (this.width != null)\n\t\t\t\tstr += ',width=' + this.width;\n\t\t\tif (this.height != null)\n\t\t\t\tstr += ',height=' + this.height;\n\t\t\treturn str += '];'\n\t\t}\n\n\t\t// machine instructions\n\t\ttransition(token, link) {\n\t\t\treturn link;\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\ttoken.rewrite = false;\n\t\t\treturn nextLink;\n\t\t}\n\t}\n\n\treturn Node;\n});\n","define(function(require) {\n\n\tvar Flag = require('token').RewriteFlag();\n\tvar Node = require('node');\n\n\tclass Atom extends Node {\n\n\t\tconstructor(name) {\n\t\t\tsuper(\"circle\", \"\", name);\n\t\t\tthis.height = 0.1;\n\t\t\tthis.width = 0.1;\n\t\t}\n\n\t}\n\n\treturn Atom;\n});\n","define('nodes/contract',function(require) {\n\n\tvar Flag = require('token').RewriteFlag();\n\tvar Node = require('node');\n\tvar Atom = require('nodes/atom');\n\tvar Op = require('nodes/op');\n\tvar Term = require('term');\n\tvar Link = require('link');\n\tvar Group = require('group');\n\n\tclass Contract extends Node {\n\n\t\tconstructor(name) {\n\t\t\tsuper(\"point\", \"\", name);\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\treturn this.findLinksOutOf(null)[0];\n\t\t\t}\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar link = token.link;\n\t\t\tvar inLinks = this.findLinksInto();\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\tvar nextLink = outLinks[0];\n\t\t\tvar nextNode = this.graph.findNodeByKey(nextLink.to);\n\n\t\t\tif (nextNode instanceof Contract || nextNode instanceof Atom) {\n\t\t\t\tinLinks.map(l => l.changeTo(nextNode.key,\"_\"));\n\t\t\t\tnextLink.delete();\n\t\t\t\tthis.delete();\n\t\t\t} else if (nextNode instanceof Op) {\n\t\t\t\tvar term = new Term().addToGroup(this.group);\n\t\t\t\tvar copy = nextNode.copy().addToGroup(term);\n\n\t\t\t\t// clean up here\n\t\t\t\tvar opLinks = nextNode.findLinksOutOf();\n\t\t\t\tvar auxs = Contract.createDNet(opLinks.length,[nextNode,nextNode,copy,copy],term);\n\t\t\t\tlink.changeTo(copy.key,\"_\");\n\t\t\t\tfor (var i = 0; i < opLinks.length; i++) {\n\t\t\t\t\topLinks[i].changeFrom(auxs[i].key,\"_\");\n\t\t\t\t}\n\n\t\t\t\tterm.set(copy,auxs);\n\t\t}\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn link;\n\t\t}\n\n\t\tstatic createDNet(cs, inputs, originalGroup, op) {\n\t\t\tvar c;\n\t\t\tvar from;\n\t\t\tvar to;\n\t\t\tvar cList = [];\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor (var n = 0; n < cs; n++) {\n\t\t\t\tc = new Contract().addToGroup(group);\n\t\t\t\tcList.push(c);\n\n\t\t\tif (inputs.length == 0) // maybe this needs to be \"more elegant\"\n\t\t\t\tnew Link(op.key, c.key, \"_\", \"_\", \"lightgrey\").addToGroup(group);\n\t\t\t}\n\n\t\t\tif (cList.length > 0) {\n\t\t\t\tfor (var i = 0; i < inputs.length; i++) {\n\t\t\t\t\tfrom = inputs[i]; to = cList[(i%(cs))];\n\t\t\t\t\tnew Link(from.key, to.key, \"_\", \"_\").addToGroup(group);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgroup.addToGroup(originalGroup);\n\n\t\t\treturn cList;\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Contract(this.name);\n\t\t}\n\n\t\tdraw(level) {\n\t\t\treturn level + this.key + '[shape=' + this.shape + '];';\n\t\t}\n\t}\n\n\treturn Contract;\n});\n","define(function(require) {\n\n\tvar Flag = require('token').RewriteFlag();\n\tvar Node = require('node');\n\tvar Link = require('link');\n\n\tclass Op extends Node {\n\n\t\tconstructor(name, active) {\n\t\t\tsuper(null, name, name);\n\t\t\tthis.active = active;\n\t\t}\n\n\t\trewrite(token) { } // default none for passive ops\n\n\t\tcopy() { \n\t\t\treturn new Op(this.name,this.active);\n\t\t}\n\n\t}\n\n\treturn Op;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\tvar BoolOp = require('nodes/ops/bool');\n\tvar Link = require('link');\n\tvar Flag = require('token').RewriteFlag();\n\n\tclass AndOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"∧\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new AndOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\t\n\t\t\tvar b = outLinks.reduce((sum,x) => sum && BoolOp.parseBoolean(this.graph.findNodeByKey(x.to).name), true);\n\n\t\t\tvar newNode = new BoolOp(b,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn AndOp;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\n\tclass BoolOp extends Op {\n\n\t\tconstructor(b) {\n\t\t\tb = BoolOp.parseBoolean(b);\n\t\t\tsuper(b, false);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new BoolOp();\n\t\t}\n\n\t\tstatic parseBoolean(b) {\n\t\t\tif (b == \"false\" || b == 0) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn BoolOp;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\tvar BoolOp = require('nodes/ops/bool');\n\tvar Link = require('link');\n\tvar Flag = require('token').RewriteFlag();\n\n\tclass EqualsOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"==\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new EqualsOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\n\t\t\tvar left = this.graph.findNodeByKey(outLinks[0].to).name;\n\t\t\tvar right = this.graph.findNodeByKey(outLinks[1].to).name;\n\t\t\tvar b = (left == right);\n\n\t\t\tvar newNode = new BoolOp(b,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn EqualsOp;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\tvar BoolOp = require('nodes/ops/bool');\n\tvar Link = require('link');\n\tvar Flag = require('token').RewriteFlag();\n\n\tclass IfOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"if\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new IfOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\n\t\t\tvar name = this.graph.findNodeByKey(outLinks[0].to).name;\n\t\t\tvar keep; var del;\n\t\t\tif (BoolOp.parseBoolean(name)) {\n\t\t\t\tkeep = 1; del = 2;\n\t\t\t} else {\n\t\t\t\tkeep = 2; del = 1;\n\t\t\t}\n\t\t\toutLinks[del].delete();\n\t\t\tvar newNode = this.graph.findNodeByKey(outLinks[keep].to).group.unbox();\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks[0].delete();\n\t\t\tthis.graph.findNodeByKey(outLinks[0].to).delete();\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn IfOp;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\n\tclass IntOp extends Op {\n\n\t\tconstructor(n) {\n\t\t\tsuper(n, false);\n\t\t}\n\n\t}\n\n\treturn IntOp;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\tvar BoolOp = require('nodes/ops/bool');\n\tvar Link = require('link');\n\tvar Flag = require('token').RewriteFlag();\n\n\tclass NotOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"¬\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new NotOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\t\n\t\t\tvar b = !BoolOp.parseBoolean(this.graph.findNodeByKey(outLinks[0].to).name);\n\n\t\t\tvar newNode = new BoolOp(b,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn NotOp;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\tvar BoolOp = require('nodes/ops/bool');\n\tvar Link = require('link');\n\tvar Flag = require('token').RewriteFlag();\n\n\tclass OrOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"∨\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new OrOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\n\t\t\tvar b = outLinks.reduce((sum,x) => sum || BoolOp.parseBoolean(this.graph.findNodeByKey(x.to).name), false);\n\n\t\t\tvar newNode = new BoolOp(b,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn OrOp;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\tvar IntOp = require('nodes/ops/int');\n\tvar Link = require('link');\n\tvar Flag = require('token').RewriteFlag();\n\n\tclass PlusOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"+\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new PlusOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\t\n\t\t\tvar n = outLinks.reduce((sum,x) => sum + this.graph.findNodeByKey(x.to).name, 0);\n\n\t\t\tvar newNode = new IntOp(n,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn PlusOp;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\tvar IntOp = require('nodes/ops/int');\n\tvar Link = require('link');\n\tvar Flag = require('token').RewriteFlag();\n\n\tclass TimesOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"*\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new TimesOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\t\n\t\t\tvar n = outLinks.reduce((sum,x) => sum * this.graph.findNodeByKey(x.to).name, 1);\n\n\t\t\tvar newNode = new IntOp(n,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn TimesOp;\n});\n","define(function(require) {\n\n\tvar Node = require('node');\n\tvar Flag = require('token').Flag;\n\n\tclass Start extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(\"point\", \"\");\n\t\t}\n\n\t\ttransition(token) {\n\t\t\treturn this.findLinksOutOf(null)[0];\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Start();\n\t\t}\n\n\t\tdraw(level) {\n\t\t\treturn level + this.key + '[shape=' + this.shape + '];';\n\t\t}\n\n\t}\n\n\treturn Start;\n});\n","// edited by todd\n\ndefine('ast/term', function() {\n  class Term {\n    constructor(ctx) {\n      this.ctx = ctx;\n    }\n  }\n  return Term;\n});\n\ndefine('ast/var', function(require) {\n  var Term = require('ast/term');\n    /**\n     * name is the string matched for this identifier.\n     */\n  class Var extends Term {\n    constructor(ctx, name) {\n      super(ctx);\n      this.name = name;\n    }\n  }\n  return Var;\n});\n\ndefine('ast/operation', function(require) {\n  var Term = require('ast/term');\n\n  class Operation extends Term {\n    constructor(ctx, sig, name, active, eas, das) {\n      super(ctx);\n      this.sig = sig;\n      this.name = name;\n      this.active = active;\n      this.eas = eas;\n      this.das = das;\n    }\n  }\n  return Operation;\n});\n\ndefine('ast/thunk', function(require) {\n  var Term = require('ast/term');\n\n  class Thunk extends Term {\n    constructor(ctx, inner) {\n      super(ctx);\n      this.inner = inner;\n    }\n  }\n  return Thunk;\n});\n\ndefine('ast/binding', function(require) {\n  var Term = require('ast/term');\n    /**\n     * param here is the name of the variable of the abstraction. Body is the\n     * subtree  representing the body of the abstraction.\n     */\n\n  class Binding extends Term {\n    constructor(ctx, id, param, body) {\n      super(ctx);\n      this.id = id;\n      this.param = param;\n      this.body = body;\n    }\n  }\n  return Binding;\n});\n\ndefine('ast/reference', function(require) {\n  var Term = require('ast/term');\n    /**\n     * param here is the name of the variable of the reference. Body is the\n     * subtree  representing the body of the abstraction.\n     */\n\n  class Reference extends Term {\n    constructor(ctx, id, param, body) {\n      super(ctx);\n      this.id = id;\n      this.param = param;\n      this.body = body;\n    }\n  }\n  return Reference;\n});\n","define(function(require) {\n\n\tvar Token = require('parser/token');\n\n\tclass Lexer {\n\t\tconstructor(input) {\n\t\t\tthis._input = input;\n\t\t\tthis._index = 0;\n\t\t\tthis._token = undefined;\n\t\t\tthis._nextToken();\n\t\t}\n\n\t\t/**\n\t\t * Return the next char of the input or '\\0' if we've reached the end\n\t\t */\n\t\t_nextChar() {\n\t\t\tif (this._index >= this._input.length) {\n\t\t\t\treturn '\\0';\n\t\t\t}\n\n\t\t\treturn this._input[this._index++];\n\t\t}\n\n\t\t/**\n\t\t * Set this._token based on the remaining of the input\n\t\t *\n\t\t * This method is meant to be private, it doesn't return a token, just sets\n\t\t * up the state for the helper functions.\n\t\t */\n\t\t_nextToken() {\n\t\t\tlet c;\n\t\t\tdo {\n\t\t\t\tc = this._nextChar();\n\t\t\t} while (/\\s/.test(c));\n\n\t\t\tswitch (c) {\n\t\t\tcase ',':\n\t\t\t\tthis._token = new Token(Token.COMMA);\n\t\t\t\tbreak;\n\n\t\t\tcase ';':\n\t\t\t\tthis._token = new Token(Token.SEMIC);\n\t\t\t\tbreak;\n\n\t\t\tcase '(':\n\t\t\t\tthis._token = new Token(Token.LPAREN);\n\t\t\t\tbreak;\n\n\t\t\tcase ')':\n\t\t\t\tthis._token = new Token(Token.RPAREN);\n\t\t\t\tbreak;\n\n\t\t\tcase '\\0':\n\t\t\t\tthis._token = new Token(Token.EOF);\n\t\t\t\tbreak;\n\n\t\t\tcase '=':\n\t\t\t\tthis._token = new Token(Token.DEF);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// text for string\n\t\t\t\tif (/[a-zA-Z]|'/.test(c)) {\n\t\t\t\t\tlet str = '';\n\t\t\t\t\tdo {\n\t\t\t\t\t\tstr += c;\n\t\t\t\t\t\tc = this._nextChar();\n\n\t\t\t\t\t} while (/[a-zA-Z]|'|_/.test(c));\n\n\t\t\t\t\t// put back the last char which is not part of the identifier\n\t\t\t\t\tthis._index--;\n\n\t\t\t\t\tif (str == \"bind\")\n\t\t\t\t\t\tthis._token = new Token(Token.BIND);\n\t\t\t\t\telse if (str == \"in\")\n\t\t\t\t\t\tthis._token = new Token(Token.IN);\n\t\t\t\t\telse if (str == \"new\")\n\t\t\t\t\t\tthis._token = new Token(Token.NEW);\n\t\t\t\t\telse if (str == \"PLUS\")\n\t\t\t\t\t\tthis._token = new Token(Token.PLUS);\n\t\t\t\t\telse if (str == \"TIMES\")\n\t\t\t\t\t\tthis._token = new Token(Token.TIMES);\n\t\t\t\t\telse if (str == \"AND\")\n\t\t\t\t\t\tthis._token = new Token(Token.AND);\n\t\t\t\t\telse if (str == \"OR\")\n\t\t\t\t\t\tthis._token = new Token(Token.OR);\n\t\t\t\t\telse if (str == \"NOT\")\n\t\t\t\t\t\tthis._token = new Token(Token.NOT);\n\t\t\t\t\telse if (str == \"EQUALS\")\n\t\t\t\t\t\tthis._token = new Token(Token.EQUALS);\n\t\t\t\t\telse if (str == \"IF\")\n\t\t\t\t\t\tthis._token = new Token(Token.IF);\n\t\t\t\t\telse if (str == \"TRUE\")\n\t\t\t\t\t\tthis._token = new Token(Token.TRUE, true);\n\t\t\t\t\telse if (str == \"FALSE\")\n\t\t\t\t\t\tthis._token = new Token(Token.FALSE, false);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._token = new Token(Token.LCID, str);\n\t\t\t\t}\n\n\t\t\t\t// text for numbers\n\t\t\t\telse if (/[0-9]/.test(c)) {\n\t\t\t\t\tlet str = '';\n\t\t\t\t\tdo {\n\t\t\t\t\t\tstr += c;\n\t\t\t\t\t\tc = this._nextChar();\n\t\t\t\t\t} while (/[0-9]/.test(c));\n\n\t\t\t\t\t// put back the last char which is not part of the identifier\n\t\t\t\t\tthis._index--;\n\t\t\t\t\tthis._token = new Token(Token.INT, parseInt(str));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.fail();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Assert that the next token has the given type, return it, and skip to the\n\t\t * next token.\n\t\t */\n\t\ttoken(type) {\n\t\t\tif (!type) {\n\t\t\t\treturn this._token.value;\n\t\t\t}\n\n\t\t\tconst token = this._token;\n\t\t\tthis.match(type);\n\t\t\treturn token.value;\n\t\t}\n\n\t\tvalue() {\n\t\t\treturn this._token.value;\n\t\t}\n\n\t\tlookahead() {\n\t\t\treturn this._token;\n\t\t}\n\n\t\tlookaheadType() {\n\t\t\treturn this._token.type;\n\t\t}\n\n\t\t/**\n\t\t * Throw an unexpected token error - ideally this would print the source\n\t\t * location\n\t\t */\n\t\tfail() {\n\t\t\tthrow new Error(`Unexpected token at offset ${this._index}`);\n\t\t}\n\n\t\t/**\n\t\t * Returns a boolean indicating whether the next token has the given type.\n\t\t */\n\t\tnext(type) {\n\t\t\treturn this._token.type == type;\n\t\t}\n\n\t\t/**\n\t\t * Assert that the next token has the given type and skip it.\n\t\t */\n\t\tmatch(type) {\n\t\t\tif (this.next(type)) {\n\t\t\t\tthis._nextToken();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.error(`${this._index}: Invalid token: Expected '${type}' found '${this._token.type}'`);\n\t\t\tthrow new Error('Parse Error');\n\t\t}\n\n\t\t/**\n\t\t * Same as `next`, but skips the token if it matches the expected type.\n\t\t */\n\t\tskip(type) {\n\t\t\tif (this.next(type)) {\n\t\t\t\tthis._nextToken();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn Lexer;\n});\n","define(function(require) {\n\n\tvar Token = require('parser/token');\n\tvar Var = require('ast/var');\n\tvar Operation = require('ast/operation');\n\tvar Binding = require('ast/binding');\n\tvar Reference = require('ast/reference');\n\tvar Thunk = require('ast/thunk');\n\n\tclass Parser {\n\t\tconstructor(lexer) {\n\t\t\tthis.lexer = lexer;\n\t\t}\n\n\t\tparse() {\n\t\t\tconst result = this.term2([]);\n\t\t\t// make sure we consumed all the program, otherwise there was a syntax error\n\t\t\tthis.lexer.match(Token.EOF);\n\t\t\treturn result;\n\t\t}\n\n\t\t//  T ::= BIND LCID DEF term IN term  (BIND x = PARAM in BODY)\n\t\t//      | NEW  LCID IN term           (NEW x = PARAM in BODY)\n\t\t//      | op? ( EAS ; DAS )\n\n\t\tterm2(ctx,thunk) {\n\t\t\tif (thunk) {\n\t\t\t\tconst inner = this.term2(ctx);\n\t\t\t\treturn new Thunk(ctx,inner);\n\t\t\t} else {\n\t\t\t\tif (this.lexer.skip(Token.BIND)) {\n\t\t\t\t\tconst id = this.term2(ctx);\n\t\t\t\t\tid.ctx = [id].concat(id.ctx);\n\t\t\t\t\tthis.lexer.match(Token.DEF);\n\t\t\t\t\tconst P = this.term2(ctx);\n\t\t\t\t\tthis.lexer.match(Token.IN);\n\t\t\t\t\tconst B = this.term2([id].concat(ctx));\n\t\t\t\t\treturn new Binding(ctx,id,P,B);\n\t\t\t\t} else if (this.lexer.skip(Token.NEW)) {\n\t\t\t\t\tconst id = this.term2(ctx);\n\t\t\t\t\tid.ctx = [id].concat(id.ctx);\n\t\t\t\t\tthis.lexer.match(Token.DEF);\n\t\t\t\t\tconst P = this.term2(ctx);\n\t\t\t\t\tthis.lexer.match(Token.IN);\n\t\t\t\t\tconst B = this.term2([id].concat(ctx));\n\t\t\t\t\treturn new Reference(ctx,id,P,B);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.atom(ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// atom ::= LPAREN term RPAREN\n\t\t//        | LCID\n\t\tatom(ctx) {\n\t\t\tif (this.lexer.skip(Token.LPAREN)) {\n\t\t\t\tconst term = this.term2(ctx);\n\t\t\t\tthis.lexer.match(Token.RPAREN);\n\t\t\t\treturn term;\n\t\t\t} else if (this.lexer.next(Token.LCID)) {\n\t\t\t\tconst id = this.lexer.token(Token.LCID);\n\t\t\t\treturn new Var(ctx, id);\n\t\t\t} else {\n\t\t\t\treturn this.operation(ctx);\n\t\t\t}\n\t\t}\n\n\t\t// BUILT-IN OPERATIONS\n\t\toperation(ctx) {\n\t\t\tvar name; var sig; var active;\n\t\t\tvar eas = [];\n\t\t\tvar das = [];\n\n\t\t\tvar token = this.lexer.lookaheadType();\n\t\t\tswitch(token) {\n\t\t\t\tcase Token.PLUS:\n\t\t\t\t\tname = \"+\"; sig = [2,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.TIMES:\n\t\t\t\t\tname = \"*\"; sig = [2,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.AND:\n\t\t\t\t\tname = \"∧\"; sig = [2,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.OR:\n\t\t\t\t\tname = \"∨\"; sig = [2,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.NOT:\n\t\t\t\t\tname = \"¬\"; sig = [1,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.EQUALS:\n\t\t\t\t\tname = \"==\"; sig = [2,0]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Token.IF:\n\t\t\t\t\tname = \"if\"; sig = [1,2]; active = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tname = this.lexer.value(); sig = [0,0]; active = false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.lexer.match(token);\n\t\t\tif (sig[0] > 0) {\n\t\t\t\tthis.lexer.match(Token.LPAREN);\n\t\t\t\teas = this.gatherArgs(ctx,sig[0],false);\n\t\t\t\tif (sig[1] == 0)\n\t\t\t\t\tthis.lexer.match(Token.RPAREN);\n\t\t\t}\n\t\t\tif (sig[1] > 0) {\n\t\t\t\tif (sig[0] == 0)\n\t\t\t\t\tthis.lexer.match(Token.LPAREN);\n\t\t\t\tthis.lexer.match(Token.SEMIC);\n\t\t\t\tdas = this.gatherArgs(ctx,sig[1],true);\n\t\t\t\tthis.lexer.match(Token.RPAREN);\n\t\t\t}\n\t\t\treturn new Operation(ctx,sig,name,active,eas,das);\n\t\t}\n\n\t\tgatherArgs(ctx,type,thunk) {\n\t\t\tvar args = [];\n\t\t\tfor (var i = 0; i < type; i++) {\n\t\t\t\tconst term = this.term2(ctx,thunk);\n\t\t\t\targs.push(term);\n\t\t\t\tif (this.lexer.next(Token.COMMA)) {\n\t\t\t\t\tthis.lexer.match(Token.COMMA);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn args;\n\t\t}\n\n\t}\n\n\treturn Parser;\n});\n","define(function() {\n  class Token {\n    /**\n     * type should be one of the valid token types list below, and value is an\n     * optional value that can carry any extra information necessary for a given\n     * token type. (e.g. the matched string for an identifier)\n     */\n    constructor(type, value, pred) {\n      this.type = type;\n      this.value = value;\n      this.pred = pred;\n    }\n  }\n\n  [\n    'EOF', // we augment the tokens with EOF, to indicate the end of the input.\n    'LCID',\n\n    'LPAREN',\n    'RPAREN',\n    'SEMIC',\n\n    'BIND',\n    'NEW',\n    'DEF',\n    'IN',\n\n    'PLUS',\n    'TIMES',\n    'INT',\n    'AND',\n    'OR',\n    'NOT',\n    'TRUE',\n    'FALSE',\n    'EQUALS',\n\n    'IF'\n  ].forEach(token => Token[token] = token);\n\n  return Token;\n});\n","// specific group for a term in the calculus\n\ndefine('term', function(require) {\n\n\tvar Group = require('group');\n\n\tclass Term extends Group {\n\n\t\tconstructor(prin, auxs) {\n\t\t\tsuper();\n\t\t\tthis.prin = null;\n\t\t\tthis.set(prin, auxs)\n\t\t\tthis.boxed = false;\n\t\t}\n\n\t\tset(prin, auxs) {\n\t\t\tthis.prin = prin;\n\t\t\tthis.auxs = auxs;\n\t\t\treturn this;\n\t\t}\n\n\t\tbox() {\n\t\t\tthis.boxed = true;\n\t\t\treturn this.prin;\n\t\t}\n\n\t\tunbox() {\n\t\t\tthis.boxed = false;\n\t\t\treturn this.prin;\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tif (this.boxed) {\n\t\t\t\tvar str = \"\";\n\t\t\t\tfor (let node of this.nodes) {\n\t\t\t\t\tstr += node.draw(level + '  ');\n\t\t\t\t}\n\t\t\t\treturn level + 'subgraph cluster_' + this.key + ' {'\n\t\t\t\t\t + level + '  graph[style=dotted];'\n\t\t\t\t\t + str\n\t\t\t\t\t + level + '};';\n\t\t\t }\n\t\treturn super.draw(level);\n\t\t}\n\n}\n\n\treturn Term;\n});\n","define(function(require) {\n\n\tvar Flag = {\n\t\tSEARCH:  '?',\n\t\tREWRITE: '↯',\n\t\tRETURN:\t '✓',\n\t}\n\n\tclass MachineToken {\n\n\t\tstatic RewriteFlag() {\n\t\t\treturn Flag;\n\t\t}\n\n\t\tconstructor() {\n\t\t\tthis.link = null;\n\t\t\tthis.rewriteFlag = null;\n\t\t\tthis.reset();\n\t\t}\n\n\t\tsetLink(link) {\n\t\t\tif (this.link != null)\n\t\t\t\tthis.link.clearFocus();\n\t\t\tthis.link = link;\n\t\t\tif (this.link != null) {\n\t\t\t\tthis.link.focus(\"red\");\n\t\t\t}\n\t\t}\n\n\t\treset(link) {\n\t\t\tthis.setLink(link);\n\t\t\tthis.rewriteFlag = Flag.SEARCH;\n\t\t}\n\t}\n\n\treturn MachineToken;\n});\n"],"sourceRoot":""}