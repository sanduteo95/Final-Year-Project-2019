{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/../viz/CBV-with-CBV-embedding/js/goi-machine.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/graph.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/group.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/link.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/node.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/atom.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/contract.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/op.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/int.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/plus.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/ops/times.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/nodes/start.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/parser/ast.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/parser/lexer.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/parser/parser.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/parser/token.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/term.js","webpack://[name]/../viz/CBV-with-CBV-embedding/js/token.js"],"names":["graph","define","require","Flag","RewriteFlag","Termast","Variable","Atom","Operation","Binding","Reference","Lexer","Parser","MachineToken","Link","Graph","Group","Term","AtomN","Contract","Start","Op","IntOp","PlusOp","TimesOp","GoIMachine","setMachine","graphSet","tokenSet","countSet","token","count","source","lexer","parser","ast","parse","clear","start","addToGroup","child","term","toGraph","link","key","prin","reset","group","auxs","i","ctx","length","c","push","name","set","body","param","auxNode","splice","concat","atomNode","createDNet","op","toOp","active","next","type","eas","Number","isInteger","parseInt","graphTxt","linkTxt","flagTxt","finished","node","findNodeByKey","to","nextLink","rewriteFlag","REWRITE","rewrite","pass","setLink","printHistory","play","playing","val","draw","replace","SEARCH","outlinks","findLinksOutOf","RETURN","from","doneVisiting","findLinksInto","j","findJ","links","l","visited","list","linkKey","allNodes","Map","allLinks","Array","findLinksConnected","delete","get","indexOf","fromNode","filter","x","width","height","str","Node","nodes","level","fromPort","toPort","colour","reverse","penWidth","addToGraph","addToNode","toNode","addLink","removeLink","port","showKey","shape","text","addNode","removeNode","nodeKeys","map","k","newNode","inLinks","outLinks","nextNode","changeTo","copy","outputs","findNodesOutOf","opLinks","changeFrom","cs","inputs","originalGroup","cList","n","inLink","reduce","sum","newLink","forward","Var","das","id","Token","input","_input","_index","_token","undefined","_nextToken","_nextChar","test","COMMA","SEMIC","LPAREN","RPAREN","EOF","DEF","BIND","IN","NEW","PLUS","TIMES","LCID","INT","fail","value","match","Error","console","error","result","skip","P","B","atom","operation","gatherEAs","log","pred","forEach","clearFocus","focus"],"mappings":"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","file":"main.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"main\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"main\"] = factory();\n\telse\n\t\troot[\"main\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"../viz/CBV-with-CBV-embedding/js/goi-machine.js\");\n","var graph = null;\n\ndefine('goi-machine',\n\tfunction(require) {\n\t\tvar Flag = require('token').RewriteFlag();\n\n\t\tvar Termast = require('ast/term');\n\n\t\tvar Variable = require('ast/var');\n\t\tvar Atom = require('ast/atom');\n\t\tvar Operation = require('ast/operation');\n\t\tvar Binding = require('ast/binding');\n\t\tvar Reference = require('ast/reference');\n\n\t\tvar Lexer = require('parser/lexer');\n\t\tvar Parser = require('parser/parser');\n\n\t\tvar MachineToken = require('token');\n\t\tvar Link = require('link');\n\n\t\tvar Graph = require('graph');\n\t\tvar Group = require('group');\n\t\tvar Term = require('term');\n\n\t\tvar AtomN = require('nodes/atom');\n\t\tvar Contract = require('nodes/contract');\n\t\tvar Start = require('nodes/start');\n\t\tvar Op = require('nodes/op');\n\n\t\tvar IntOp = require('nodes/ops/int');\n\t\tvar PlusOp = require('nodes/ops/plus');\n\t\tvar TimesOp = require('nodes/ops/times');\n\n\t\tclass GoIMachine {\n\n\t\t\tconstructor() {\n\t\t\t\tthis.setMachine(new Graph(),new MachineToken(),0);\n\t\t\t}\n\n\t\t\tsetMachine(graphSet,tokenSet,countSet) {\n\t\t\t\tthis.graph = graphSet;\n\t\t\t\tgraph = this.graph;\n\t\t\t\tthis.token = tokenSet;\n\t\t\t\tthis.count = countSet;\n\t\t\t}\n\n\t\t\tcompile(source) {\n\t\t\t\tconst lexer = new Lexer(source + '\\0');\n\t\t\t\tconst parser = new Parser(lexer);\n\t\t\t\tconst ast = parser.parse();\n\t\t\t\tthis.count = 0;\n\n\t\t\t\tthis.graph.clear();\n\t\t\t\tvar start = new Start().addToGroup(this.graph.child);\n\t\t\t\tvar term = this.toGraph(ast, this.graph.child);\n\t\t\t\tvar link = new Link(start.key, term.prin.key, \"_\", \"_\").addToGroup(this.graph.child);\n\t\t\t\tthis.token.reset(link);\n\t\t\t}\n\n\t\t\t// translation\n\t\t\ttoGraph(ast, group) {\n\t\t\t\tvar graph = this.graph;\n\t\t\t\tvar term = new Term().addToGroup(group);\n\n\t\t\t\t// VARIABLES & ATOMS\n\t\t\t\tif (ast instanceof Variable) {\n\t\t\t\t\tvar auxs = [];\n\t\t\t\t\tfor (var i = 0; i < ast.ctx.length; i++) {\n\t\t\t\t\t\tvar c = new Contract().addToGroup(term);\n\t\t\t\t\t\tauxs.push(c);\n\t\t\t\t\t\tif ((ast.ctx[i]).name == ast.name)\n\t\t\t\t\t\t \tvar prin = c;\n\t\t\t\t\t}\n\t\t\t\t\tterm.set(prin, auxs);\n\n\t\t\t\t// BINDINGS & REFERENCES\n\t\t\t\t} else if ((ast instanceof Binding) || (ast instanceof Reference))  {\n\t\t\t\t\tvar body = this.toGraph(ast.body, term).addToGroup(term);\n\t\t\t\t\tvar param = this.toGraph(ast.param, term).addToGroup(term);\n\n\t\t\t\t\tvar auxs = body.auxs;\n\t\t\t\t\tvar auxNode = auxs[0];\n\t\t\t\t\tauxs.splice(0,1)\n\t\t\t\t\tauxs = auxs.concat(param.auxs);\n\n\t\t\t\t\tif (ast instanceof Reference) {\n\t\t\t\t\t\tvar atomNode = new AtomN(\"a\").addToGroup(param);\n\t\t\t\t\t\tnew Link(atomNode.key, param.prin.key, \"_\", \"_\").addToGroup(param);\n\t\t\t\t\t\tparam.prin = atomNode;\n\t\t\t\t\t}\n\t\t\t\t\tnew Link(auxNode.key, param.prin.key, \"_\", \"_\").addToGroup(term);\n\n\t\t\t\t\tauxs = Contract.createDNet(ast.ctx.length, auxs, term);\n\t\t\t\t\tterm.set(body.prin, auxs);\n\n\t\t\t\t// OPERATIONS\n\t\t\t\t} else if (ast instanceof Operation) {\n\t\t\t\t\tvar op = this.toOp(ast.name,ast.active).addToGroup(term);\n\n\t\t\t\t\tvar auxs = [];\n\n\t\t\t\t\tvar next;\n\t\t\t\t\tfor (var i = 0; i < ast.type; i++) {\n\t\t\t\t\t\tnext = this.toGraph(ast.eas[i], term).addToGroup(term);\n\t\t\t\t\t\tnew Link(op.key, next.prin.key, \"_\", \"_\").addToGroup(term);\n\t\t\t\t\t\tauxs = auxs.concat(next.auxs);\n\t\t\t\t\t}\n\n\t\t\t\t\tauxs = Contract.createDNet(ast.ctx.length, auxs, term, op);\n\t\t\t\t\tterm.set(op, auxs);\n\n\t\t\t\t}\n\t\t\t\treturn term;\n\t\t\t}\n\n\t\t\ttoOp(name,active) {\n\t\t\t\tif (Number.isInteger(parseInt(name))) {\n\t\t\t\t\treturn new IntOp(name);\n\t\t\t\t} else if (name == \"+\") {\n\t\t\t\t\treturn new PlusOp();\n\t\t\t\t} else if (name == \"*\") {\n\t\t\t\t\treturn new TimesOp();\n\t\t\t\t} else {\n\t\t\t\t\treturn new Op(name,active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tquotieningRules() {\n\t\t\t\t// TODO\n\t\t\t\t// Loop through all links in the graph\n\t\t\t\t// Perform quotiening rules\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// machine step\n\t\t\ttransition(graphTxt, linkTxt, flagTxt) {\n\t\t\t\tif (!finished) {\n\t\t\t\t\tthis.count++;\n\t\t\t\t\tvar node = this.graph.findNodeByKey(this.token.link.to);\n\n\t\t\t\t\tvar nextLink;\n\t\t\t\t\tif (this.token.rewriteFlag == Flag.REWRITE) {\n\t\t\t\t\t\tnextLink = node.rewrite(this.token);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextLink = this.pass(this.token);\n\t\t\t\t\t}\n\t\t\t\t\tif (nextLink != null) {\n\t\t\t\t\t\tthis.token.setLink(nextLink);\n\t\t\t\t\t\tthis.printHistory(graphTxt, linkTxt, flagTxt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.token.setLink(null);\n\t\t\t\t\t\tplay = false;\n\t\t\t\t\t\tplaying = false;\n\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprintHistory(graphTxt, linkTxt, flagTxt) {\n\t\t\t\tgraphTxt.val(this.graph.draw().replace(/\\n/g, \"\") + '\\n' + graphTxt.val());\n\t\t\t\tlinkTxt.val(this.token.link + '\\n' + linkTxt.val());\n\t\t\t\tflagTxt.val(this.token.rewriteFlag + '\\n' + flagTxt.val());\n\t\t\t}\n\n\t\tpass(token) { // this needs cleaning up!\n\t\t\tvar link = token.link;\n\t\t\tif (token.rewriteFlag == Flag.SEARCH) {\n\t\t\t\tvar to = this.graph.findNodeByKey(link.to);\n\t\t\t\tvar outlinks = to.findLinksOutOf();\n\t\t\t\tif (to instanceof AtomN) {\n\t\t\t\t\ttoken.rewriteFlag = Flag.RETURN;\n\t\t\t\t\treturn link;\n\t\t\t\t} else if (to instanceof Op) {\n\t\t\t\t\tif (outlinks.length == 0) {\n\t\t\t\t\t\tif (to.active) {\n\t\t\t\t\t\t\ttoken.rewriteFlag = Flag.REWRITE;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttoken.rewriteFlag = Flag.RETURN;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn link;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn outlinks[0];\n\t\t\t\t\t}\n\t\t\t\t} else if (to instanceof Contract) {\n\t\t\t\t\ttoken.rewriteFlag = Flag.REWRITE;\n\t\t\t\t\treturn link;\n\t\t\t\t}\n\t\t\t} else if (token.rewriteFlag == Flag.RETURN) {\n\t\t\t\tvar from = this.graph.findNodeByKey(link.from);\n\t\t\t\tvar outlinks = from.findLinksOutOf();\n\t\t\t\tif (this.doneVisiting(link,outlinks)) { // HACKING\n\t\t\t\t\tif (from.active) {\n\t\t\t\t\t\ttoken.rewriteFlag = Flag.REWRITE;\n\t\t\t\t\t\treturn from.findLinksInto()[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoken.rewriteFlag = Flag.RETURN;\n\t\t\t\t\t\treturn from.findLinksInto()[0];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\t\t\tvar j = this.findJ(link,outlinks);\n\t\t\t\t\treturn outlinks[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn link;\n\t\t}\n\n\t\tdoneVisiting(link, links) {\n\t\t\tfor (let l of links) {\n\t\t\t\tif ((!l.visited) && (l != link))\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\treturn true;\n\t\t\t}\n\n\t\tfindJ(link,list) {\n\t\t\tfor (var j = 0; j < list.length; j++) {\n\t\t\t\tif ((!list[j].visited) && (list[j] != link))\n\t\t\t\t\treturn j;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t\treturn GoIMachine;\n\t}\n);\n","// general graph\ndefine(function(require) {\n\n\tvar Group = require('group');\n\n\tclass Graph {\n\n\t\tconstructor() {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tclear() {\n\t\t\tthis.key = 0;\n\t\t\tthis.linkKey = 0;\n\t\t\tthis.allNodes = new Map(); // for efficiency searching\n\t\t\tthis.allLinks = []; // for printing ONLY\n\t\t\tthis.child = new Group();\n\t\t}\n\n\t\t// give a key to a node and add it to allNodes\n\t\taddNode(node) {\n\t\t\tnode.key = 'nd' + this.key;\n\t\t\tthis.allNodes.set(node.key, node);\n\t\t\tthis.key++;\n\t\t}\n\n\t\t// also removes connected links\n\t\tremoveNode(node) {\n\t\t\tfor (let link of Array.from(node.findLinksConnected())) {\n\t\t\t\tlink.delete();\n\t\t\t}\n\t\t\treturn this.allNodes.delete(node.key);\n\t\t}\n\n\t\tfindNodeByKey(key) {\n\t\t\treturn this.allNodes.get(key);\n\t\t}\n\n\t\taddLink(link) {\n\t\t\tthis.allLinks.push(link);\n\t\t}\n\n\t\tremoveLink(link) {\n\t\t\tthis.allLinks.splice(this.allLinks.indexOf(link), 1);\n\t\t}\n\n\t\tfindLinkByKeys(from,to) {\n\t\t\tvar fromNode = this.findNodeByKey(from);\n\t\t\treturn fromNode.findLinksOutOf().filter(x => x.to == to)[0];\n\t\t}\n\n\t\tdraw(width, height) {\n\t\t\tvar str = this.child.draw('\\n  ');\n\t\t\tstr += '\\n';\n\t\t\tfor (let link of this.allLinks) {\n\t\t\t\tstr += link.draw('\\n  ');\n\t\t\t}\n\t\t\treturn 'digraph G {'\n\t\t\t   \t+'\\n  rankdir=BT;'\n\t\t\t   \t+'\\n  edge[arrowhead=none,arrowtail=none];'\n\t\t\t   \t+'\\n  node[fixedsize=true,shape=circle]'\n\t\t\t   \t+'\\n  size=\"' + width + ',' + height + '\";'\n\t\t\t   \t+'\\n  labeldistance=0;'\n\t\t\t   \t+'\\n  nodesep=.175;'\n\t  \t\t\t+'\\n  ranksep=.175;'\n\t\t\t\t+'\\n'\n\t\t\t\t+     str\n\t\t\t   \t+'\\n}';\n\t\t}\n\t}\n\n\treturn Graph;\n\n});\n","// general group in a graph (subgraph)\ndefine('group', function(require) {\n\n\tvar Node = require('node');\n\n\tclass Group extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(null, null, null); // shape, text, name\n\t\t\tthis.nodes = [];\n\t\t\tthis.links = []; // for copying\n\t\t}\n\n\t\taddNode(node) {\n\t\t\tthis.nodes.push(node);\n\t\t}\n\n\t\tremoveNode(node) {\n\t\t\treturn this.nodes.splice(this.nodes.indexOf(node), 1);\n\t\t}\n\n\t\taddLink(link) {\n\t\t\tthis.links.push(link);\n\t\t}\n\n\t\tremoveLink(link) {\n\t\t\tvar i = this.links.indexOf(link);\n\t\t\tif (i != -1)\n\t\t\t\tthis.links.splice(i, 1);\n\t\t}\n\n\t\tdelete() {\n\t\t\tfor (let node of Array.from(this.nodes)) {\n\t\t\t\tnode.delete();\n\t\t\t}\n\t\t\tsuper.delete();\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = \"\";\n\t\t\tfor (let node of this.nodes) {\n\t\t\t\tstr += node.draw(level);\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t\tcopy() { } // should never be called as all groups are in terms\n\n\t}\n\n\treturn Group;\n});\n","define(function() {\n\n\tclass Link {\n\t\tconstructor(from, to, fromPort, toPort, colour) {\n\t\t\tthis.from = from;\n\t\t\tthis.to = to;\n\t\t\tthis.fromPort = fromPort;\n\t\t\tthis.toPort = toPort;\n\t\t\tthis.visited = false; // HACKING\n\n\t\t\tthis.reverse = false;\n\t\t\tthis.colour = colour;\n\t\t\tthis.penWidth = null;\n\t\t\tthis.addToGraph(graph); // cheating\n\t\t\tif (colour != \"lightgrey\") { // cheating\n\t\t\t\tthis.addToNode(); // cheating\n\t\t\t}\n\t\t}\n\n\t\taddToNode() {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.push(this);\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.push(this);\n\t\t}\n\n\t\taddToGraph(graph) {\n\t\t\tif (graph != null)\n\t\t\t\tgraph.addLink(this);\n\t\t\tthis.graph = graph;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\taddToGroup(group) {\n\t\t\tgroup.addLink(this);\n\t\t\tthis.group = group;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\tchangeToGroup(group) {\n\t\t\tthis.group.removeLink(this);\n\t\t\tthis.addToGroup(group);\n\t\t\treturn this;\n\t\t}\n\n\t\tchangeFrom(key, port) {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.splice(fromNode.links.indexOf(this), 1);\n\n\t\t\tthis.from = key;\n\t\t\tthis.fromPort = port;\n\t\t\tfromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.push(this);\n\t\t}\n\n\t\tchangeTo(key, port) {\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.splice(toNode.links.indexOf(this), 1);\n\n\t\t\tthis.to = key;\n\t\t\tthis.toPort = port;\n\t\t\ttoNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.push(this);\n\t\t}\n\n\t\tfocus(colour) {\n\t\t\tthis.colour = colour;\n\t\t\tthis.penWidth = \"20\";\n\t\t}\n\n\t\tclearFocus() {\n\t\t\tthis.colour = null;\n\t\t\tthis.penWidth = null;\n\t\t\tthis.visited = true; // HACKING\n\t\t}\n\n\t\tdelete() {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.splice(fromNode.links.indexOf(this), 1);\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.splice(toNode.links.indexOf(this), 1);\n\t\t\tthis.group.removeLink(this);\n\t\t\tthis.graph.removeLink(this);\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this.from + \"->\" + this.to;\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = level;\n\n\t\t\tif (!this.reverse) {\n\t\t\t\tstr += this.from + '->' + this.to + '[';\n\t\t\t\tif (this.fromPort != null)\n\t\t\t\t\tstr += 'tailport=' + this.fromPort;\n\t\t\t\tif (this.toPort != null)\n\t\t\t\t\tstr += ',headport=' + this.toPort;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstr += this.to + '->' + this.from + '[dir=back';\n\t\t\t\tif (this.fromPort != null)\n\t\t\t\t\tstr += ',headport=' + this.fromPort;\n\t\t\t\tif (this.toPort != null)\n\t\t\t\t\tstr += ',tailport=' + this.toPort;\n\t\t\t}\n\n\t\t\tif (this.colour != null)\n\t\t\t\tstr += ',color=' + this.colour;\n\t\t\tif (this.penWidth != null)\n\t\t\t\tstr += ',penwidth=' + this.penWidth;\n\n\t\t\tstr += '];';\n\t\t\treturn str;\n\t\t}\n\t}\n\n\treturn Link;\n});\n","var showKey = false;\n\ndefine(function(require) {\n\n\tclass Node {\n\t\tconstructor(shape, text, name) {\n\t\t\tthis.key = null;\n\t\t\tthis.shape = shape;\n\t\t\tthis.text = text;\n\t\t\tthis.name = name; // identifier name or constant name if any\n\t\t\tthis.graph = null;\n\t\t\tthis.group = null;\n\t\t\tthis.width = 0.3;\n\t\t\tthis.height = 0.3;\n\t\t\tthis.links = [];\n\t\t\tthis.addToGraph(graph); // cheating!\n\t\t}\n\n\t\taddToGraph(graph) {\n\t\t\tif (graph != null)\n\t\t\t\tgraph.addNode(this);\n\t\t\tthis.graph = graph;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\taddToGroup(group) {\n\t\t\tgroup.addNode(this);\n\t\t\tthis.group = group;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\tchangeToGroup(group) {\n\t\t\tthis.group.removeNode(this);\n\t\t\tthis.addToGroup(group);\n\t\t\treturn this;\n\t\t}\n\n\t\tfindLinksConnected() {\n\t\t\treturn this.links;\n\t\t}\n\n\t\tfindLinksInto() {\n\t\t\tvar links = [];\n\t\t\tfor (let link of this.links) {\n\t\t\t\tif (link.to == this.key)\n\t\t\t\t\tlinks.push(link);\n\t\t\t}\n\t\t\treturn links;\n\t\t}\n\n\t\tfindLinksOutOf() {\n\t\t\tvar links = [];\n\t\t\tfor (let link of this.links) {\n\t\t\t\tif (link.from == this.key)\n\t\t\t\t\tlinks.push(link);\n\t\t\t}\n\t\t\treturn links;\n\t\t}\n\n\t\tfindNodesOutOf() {\n\t\t\tvar links = this.findLinksOutOf()\n\t\t\tvar nodeKeys = links.map(l => l.to)\n\t\t\treturn nodeKeys.map(k => this.graph.findNodeByKey(k));\n\t\t}\n\n\t\tcopy(graph) {\n\t\t\tvar newNode = new Node(this.shape, this.text, this.name).addToGraph(graph);\n\t\t\tnewNode.width = this.width;\n\t\t\tnewNode.height = this.height;\n\t\t\treturn newNode;\n\t\t}\n\n\t\t// also delete any connected links\n\t\tdelete() {\n\t\t\tthis.group.removeNode(this);\n\t\t\tthis.graph.removeNode(this);\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = level + this.key + '[label=\"' + this.text;\n\t\t\tif (showKey)\n\t\t\t\tstr += ':' + this.key;\n\t\t\tstr += '\"';\n\t\t\tif (this.shape != null)\n\t\t\t\tstr += ',shape=' + this.shape;\n\t\t\tif (this.width != null)\n\t\t\t\tstr += ',width=' + this.width;\n\t\t\tif (this.height != null)\n\t\t\t\tstr += ',height=' + this.height;\n\t\t\treturn str += '];'\n\t\t}\n\n\t\t// machine instructions\n\t\ttransition(token, link) {\n\t\t\treturn link;\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\ttoken.rewrite = false;\n\t\t\treturn nextLink;\n\t\t}\n\t}\n\n\treturn Node;\n});\n","define(function(require) {\n\n\tvar Flag = require('token').RewriteFlag();\n\tvar Node = require('node');\n\n\tclass Atom extends Node {\n\n\t\tconstructor(name) {\n\t\t\tsuper(\"circle\", \"\", name);\n\t\t\tthis.height = 0.1;\n\t\t\tthis.width = 0.1;\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\treturn null;\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\treturn null;\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn null;\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tif (token.rewriteFlag == Flag.SEARCH) {\n\t\t\t\t\ttoken.rewriteFlag = Flag.RETURN;\n\t\t\t\t\treturn link;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn Atom;\n});\n","define('nodes/contract',function(require) {\n\n\tvar Flag = require('token').RewriteFlag();\n\tvar Node = require('node');\n\tvar Atom = require('nodes/atom');\n\tvar Op = require('nodes/op');\n\tvar Term = require('term');\n\tvar Link = require('link');\n\tvar Group = require('group');\n\n\tclass Contract extends Node {\n\n\t\tconstructor(name) {\n\t\t\tsuper(\"point\", \"\", name);\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\treturn this.findLinksOutOf(null)[0];\n\t\t\t}\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar link = token.link;\n\t\t\tvar inLinks = this.findLinksInto();\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\tvar nextLink = outLinks[0];\n\t\t\tvar nextNode = this.graph.findNodeByKey(nextLink.to);\n\n\t\t\t// First/second contraction\n\t\t\tif (nextNode instanceof Contract || nextNode instanceof Atom) {\n\t\t\t\tinLinks.map(l => l.changeTo(nextNode.key,\"_\"));\n\t\t\t\tnextLink.delete();\n\t\t\t\tthis.delete();\n\t\t\t} else if (nextNode instanceof Op) {\n\t\t\t\tvar term = new Term().addToGroup(this.group);\n\t\t\t\tvar copy = nextNode.copy().addToGroup(term);\n\t\t\t\tvar outputs = nextNode.findNodesOutOf();\n\n\t\t\t\t// clean up here\n\t\t\t\tvar opLinks = nextNode.findLinksOutOf();\n\t\t\t\tvar auxs = Contract.createDNet(opLinks.length,[nextNode,nextNode,copy,copy],term);\n\t\t\t\tlink.changeTo(copy.key,\"_\");\n\t\t\t\tif (opLinks.length > 0) {\n\t\t\t\t\topLinks[0].changeFrom(auxs[0].key,\"_\");\n\t\t\t\t\topLinks[1].changeFrom(auxs[1].key,\"_\");\n\t\t\t\t}\n\n\t\t\t\tterm.set(copy,auxs);\n\t\t}\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn link;\n\t\t}\n\n\t\tstatic createDNet(cs, inputs, originalGroup, op) {\n\n\t\t\tvar c;\n\t\t\tvar from;\n\t\t\tvar to;\n\t\t\tvar cList = [];\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor (var n = 0; n < cs; n++) {\n\t\t\t\tc = new Contract().addToGroup(group);\n\t\t\t\tcList.push(c);\n\n\t\t\tif (inputs.length == 0) // maybe this needs to be \"more elegant\"\n\t\t\t\tnew Link(op.key, c.key, \"_\", \"_\", \"lightgrey\").addToGroup(group);\n\t\t\t}\n\n\t\t\tif (cList.length > 0) {\n\t\t\t\tfor (var i = 0; i < inputs.length; i++) {\n\t\t\t\t\tfrom = inputs[i]; to = cList[(i%(cs))];\n\t\t\t\t\tnew Link(from.key, to.key, \"_\", \"_\").addToGroup(group);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgroup.addToGroup(originalGroup);\n\n\t\t\treturn cList;\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Contract(this.name);\n\t\t}\n\n\t\tdraw(level) {\n\t\t\treturn level + this.key + '[shape=' + this.shape + '];';\n\t\t}\n\t}\n\n\treturn Contract;\n});\n","define(function(require) {\n\n\tvar Flag = require('token').RewriteFlag();\n\tvar Node = require('node');\n\tvar Link = require('link');\n\n\tclass Op extends Node {\n\n\t\tconstructor(name, active) {\n\t\t\tsuper(null, name, name);\n\t\t\tthis.active = active;\n\t\t}\n\n\t\trewrite(token) { } // default none for passive ops\n\n\t\tcopy() {\n\t\t\treturn new Op(this.name,this.active);\n\t\t}\n\n\t}\n\n\treturn Op;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\n\tclass IntOp extends Op {\n\n\t\tconstructor(n) {\n\t\t\tsuper(n, false);\n\t\t}\n\n\t}\n\n\treturn IntOp;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\tvar IntOp = require('nodes/ops/int');\n\tvar Link = require('link');\n\tvar Flag = require('token').RewriteFlag();\n\n\tclass PlusOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"+\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new PlusOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\tvar n = outLinks.reduce((sum,x) => sum + this.graph.findNodeByKey(x.to).name, 0);\n\n\t\t\tvar newNode = new IntOp(n,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn PlusOp;\n});\n","define(function(require) {\n\n\tvar Op = require('nodes/op');\n\tvar IntOp = require('nodes/ops/int');\n\tvar Link = require('link');\n\tvar Flag = require('token').RewriteFlag();\n\n\tclass TimesOp extends Op {\n\n\t\tconstructor() {\n\t\t\tsuper(\"*\", true);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new TimesOp();\n\t\t}\n\n\t\trewrite(token) {\n\t\t\tvar inLink = this.findLinksInto()[0];\n\t\t\tvar outLinks = this.findLinksOutOf();\n\t\t\tvar n = outLinks.reduce((sum,x) => sum * this.graph.findNodeByKey(x.to).name, 1);\n\n\t\t\tvar newNode = new IntOp(n,false).addToGroup(this.group);\n\t\t\tvar newLink = new Link(inLink.from,newNode.key,\"_\",\"_\").addToGroup(this.group);\n\n\t\t\toutLinks.map(x => x.delete());\n\t\t\toutLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n\t\t\tthis.delete();\n\n\t\t\ttoken.rewriteFlag = Flag.SEARCH;\n\t\t\treturn newLink;\n\t\t}\n\n\t}\n\n\treturn TimesOp;\n});\n","define(function(require) {\n\n\tvar Node = require('node');\n\tvar Flag = require('token').Flag;\n\n\tclass Start extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(\"point\", \"\");\n\t\t}\n\n\t\ttransition(token) {\n\t\t\t//if (token.link == null && token.dataStack.last() == CompData.PROMPT) {\n\t\t\t\ttoken.forward = true;\n\t\t\t\treturn this.findLinksOutOf(null)[0];\n\t\t\t//}\n\t\t\t//else\n\t\t\t\t//return null;\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Start();\n\t\t}\n\n\t\tdraw(level) {\n\t\t\treturn level + this.key + '[shape=' + this.shape + '];';\n\t\t}\n\n\t}\n\n\treturn Start;\n});\n","// edited by todd\n\ndefine('ast/term', function() {\n  class Term {\n    constructor(type, ctx) {\n      this.type = type;\n      this.ctx = ctx;\n    }\n  }\n  return Term;\n});\n\ndefine('ast/var', function(require) {\n  var Term = require('ast/term');\n    /**\n     * name is the string matched for this identifier.\n     */\n  class Var extends Term {\n    constructor(ctx, name) {\n      super(0,ctx);\n      this.name = name;\n    }\n  }\n  return Var;\n});\n\ndefine('ast/atom', function(require) {\n  var Term = require('ast/term');\n    /**\n     * name is the string matched for this identifier.\n     */\n  class Atom extends Term {\n    constructor(ctx, name) {\n      super(0);\n      this.name = name;\n    }\n  }\n  return Atom;\n});\n\ndefine('ast/operation', function(require) {\n  var Term = require('ast/term');\n\n  class Operation extends Term {\n    constructor(ctx, type, name, active, eas, das) {\n      super(type, ctx);\n      this.name = name;\n      this.active = active;\n      this.eas = eas;\n      this.das = das;\n    }\n  }\n  return Operation;\n});\n\ndefine('ast/binding', function(require) {\n  var Term = require('ast/term');\n    /**\n     * param here is the name of the variable of the abstraction. Body is the\n     * subtree  representing the body of the abstraction.\n     */\n\n  class Binding extends Term {\n    constructor(ctx, id, param, body) {\n      super(0, ctx);\n      this.id = id;\n      this.param = param;\n      this.body = body;\n    }\n  }\n  return Binding;\n});\n\ndefine('ast/reference', function(require) {\n  var Term = require('ast/term');\n    /**\n     * param here is the name of the variable of the reference. Body is the\n     * subtree  representing the body of the abstraction.\n     */\n\n  class Reference extends Term {\n    constructor(ctx, id, param, body) {\n      super(0, ctx);\n      this.id = id;\n      this.param = param;\n      this.body = body;\n    }\n  }\n  return Reference;\n});\n","define(function(require) {\n\n\tvar Token = require('parser/token');\n\n\tclass Lexer {\n\t\tconstructor(input) {\n\t\t\tthis._input = input;\n\t\t\tthis._index = 0;\n\t\t\tthis._token = undefined;\n\t\t\tthis._nextToken();\n\t\t}\n\n\t\t/**\n\t\t * Return the next char of the input or '\\0' if we've reached the end\n\t\t */\n\t\t_nextChar() {\n\t\t\tif (this._index >= this._input.length) {\n\t\t\t\treturn '\\0';\n\t\t\t}\n\n\t\t\treturn this._input[this._index++];\n\t\t}\n\n\t\t/**\n\t\t * Set this._token based on the remaining of the input\n\t\t *\n\t\t * This method is meant to be private, it doesn't return a token, just sets\n\t\t * up the state for the helper functions.\n\t\t */\n\t\t_nextToken() {\n\t\t\tlet c;\n\t\t\tdo {\n\t\t\t\tc = this._nextChar();\n\t\t\t} while (/\\s/.test(c));\n\n\t\t\tswitch (c) {\n\t\t\tcase ',':\n\t\t\t\tthis._token = new Token(Token.COMMA);\n\t\t\t\tbreak;\n\n\t\t\tcase ';':\n\t\t\t\tthis._token = new Token(Token.SEMIC);\n\t\t\t\tbreak;\n\n\t\t\tcase '(':\n\t\t\t\tthis._token = new Token(Token.LPAREN);\n\t\t\t\tbreak;\n\n\t\t\tcase ')':\n\t\t\t\tthis._token = new Token(Token.RPAREN);\n\t\t\t\tbreak;\n\n\t\t\tcase '\\0':\n\t\t\t\tthis._token = new Token(Token.EOF);\n\t\t\t\tbreak;\n\n\t\t\tcase '=':\n\t\t\t\tthis._token = new Token(Token.DEF);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// text for string\n\t\t\t\tif (/[a-zA-Z]|'/.test(c)) {\n\t\t\t\t\tlet str = '';\n\t\t\t\t\tdo {\n\t\t\t\t\t\tstr += c;\n\t\t\t\t\t\tc = this._nextChar();\n\n\t\t\t\t\t} while (/[a-zA-Z]|'|_/.test(c));\n\n\t\t\t\t\t// put back the last char which is not part of the identifier\n\t\t\t\t\tthis._index--;\n\n\t\t\t\t\tif (str == \"bind\")\n\t\t\t\t\t\tthis._token = new Token(Token.BIND);\n\t\t\t\t\telse if (str == \"in\")\n\t\t\t\t\t\tthis._token = new Token(Token.IN);\n\t\t\t\t\telse if (str == \"new\")\n\t\t\t\t\t\tthis._token = new Token(Token.NEW);\n\t\t\t\t\telse if (str == \"PLUS\")\n\t\t\t\t\t\tthis._token = new Token(Token.PLUS);\n\t\t\t\t\telse if (str == \"TIMES\")\n\t\t\t\t\t\tthis._token = new Token(Token.TIMES);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._token = new Token(Token.LCID, str);\n\t\t\t\t}\n\n\t\t\t\t// text for numbers\n\t\t\t\telse if (/[0-9]/.test(c)) {\n\t\t\t\t\tlet str = '';\n\t\t\t\t\tdo {\n\t\t\t\t\t\tstr += c;\n\t\t\t\t\t\tc = this._nextChar();\n\t\t\t\t\t} while (/[0-9]/.test(c));\n\n\t\t\t\t\t// put back the last char which is not part of the identifier\n\t\t\t\t\tthis._index--;\n\t\t\t\t\tthis._token = new Token(Token.INT, parseInt(str));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.fail();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Assert that the next token has the given type, return it, and skip to the\n\t\t * next token.\n\t\t */\n\t\ttoken(type) {\n\t\t\tif (!type) {\n\t\t\t\treturn this._token.value;\n\t\t\t}\n\n\t\t\tconst token = this._token;\n\t\t\tthis.match(type);\n\t\t\treturn token.value;\n\t\t}\n\n\t\tlookahead() {\n\t\t\treturn this._token;\n\t\t}\n\n\t\t/**\n\t\t * Throw an unexpected token error - ideally this would print the source\n\t\t * location\n\t\t */\n\t\tfail() {\n\t\t\tthrow new Error(`Unexpected token at offset ${this._index}`);\n\t\t}\n\n\t\t/**\n\t\t * Returns a boolean indicating whether the next token has the given type.\n\t\t */\n\t\tnext(type) {\n\t\t\treturn this._token.type == type;\n\t\t}\n\n\t\t/**\n\t\t * Assert that the next token has the given type and skip it.\n\t\t */\n\t\tmatch(type) {\n\t\t\tif (this.next(type)) {\n\t\t\t\tthis._nextToken();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.error(`${this._index}: Invalid token: Expected '${type}' found '${this._token.type}'`);\n\t\t\tthrow new Error('Parse Error');\n\t\t}\n\n\t\t/**\n\t\t * Same as `next`, but skips the token if it matches the expected type.\n\t\t */\n\t\tskip(type) {\n\t\t\tif (this.next(type)) {\n\t\t\t\tthis._nextToken();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn Lexer;\n});\n","define(function(require) {\n\n\tvar Token = require('parser/token');\n\tvar Var = require('ast/var');\n\tvar Atom = require('ast/atom');\n\tvar Operation = require('ast/operation');\n\tvar Binding = require('ast/binding');\n\tvar Reference = require('ast/reference');\n\n\tclass Parser {\n\t\tconstructor(lexer) {\n\t\t\tthis.lexer = lexer;\n\t\t}\n\n\t\tparse() {\n\t\t\tconst result = this.term([]);\n\t\t\t// make sure we consumed all the program, otherwise there was a syntax error\n\t\t\tthis.lexer.match(Token.EOF);\n\t\t\treturn result;\n\t\t}\n\n\t\t//  T ::= BIND LCID DEF term IN term  (BIND x = PARAM in BODY)\n\t\t//      | NEW  LCID IN term           (NEW x = PARAM in BODY)\n\t\t//      | op? ( EAS ; DAS )\n\n\t\tterm(ctx) {\n\t\t\tif (this.lexer.skip(Token.BIND)) {\n\t\t\t\tconst id = this.term(ctx);\n\t\t\t\tid.ctx = [id].concat(id.ctx); // necessary?\n\n\t\t\t\tif (this.lexer.skip(Token.DEF)) {\n\t\t\t\t\tconst P = this.term(ctx);\n\t\t\t\t\tthis.lexer.match(Token.IN);\n\t\t\t\t\tconst B = this.term([id].concat(ctx));\n\t\t\t\t\treturn new Binding(ctx,id,P,B);\n\t\t\t\t}\n\t\t\t} else if (this.lexer.skip(Token.NEW)) {\n\t\t\t\tconst id = this.term(ctx);\n\t\t\t\tid.ctx = [id].concat(id.ctx); // necessary?\n\n\t\t\t\tif (this.lexer.skip(Token.DEF)) {\n\t\t\t\t\tconst P = this.term(ctx);\n\t\t\t\t\tthis.lexer.match(Token.IN);\n\t\t\t\t\tconst B = this.term([id].concat(ctx));\n\t\t\t\t\treturn new Reference(ctx,id,P,B);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this.atom(ctx);\n\t\t\t}\n\t\t}\n\n\t\t// atom ::= LPAREN term RPAREN\n\t\t//        | LCID\n\t\tatom(ctx) {\n\t\t\tif (this.lexer.skip(Token.LPAREN)) {\n\t\t\t\tconst term = this.term(ctx);\n\t\t\t\tthis.lexer.match(Token.RPAREN);\n\t\t\t\treturn term;\n\t\t\t} else if (this.lexer.next(Token.LCID)) {\n\t\t\t\tconst id = this.lexer.token(Token.LCID);\n\t\t\t\treturn new Var(ctx, id);\n\t\t\t} else {\n\t\t\t\treturn this.operation(ctx);\n\t\t\t}\n\t\t}\n\n\t\t// op ::=\n\t\toperation(ctx) {\n\t\t\tif (this.lexer.skip(Token.PLUS)) {\n\t\t\t\tvar eas = this.gatherEAs(ctx,2);\n\t\t\t\treturn new Operation(ctx,2,\"+\",true,eas,[]);\n\t\t\t} else if (this.lexer.skip(Token.TIMES)) {\n\t\t\t\tvar eas = this.gatherEAs(ctx,2);\n\t\t\t\treturn new Operation(ctx,2,\"*\",true,eas,[]);\n\t\t\t} else if (this.lexer.next(Token.INT)) {\n\t\t\t\tconst n = this.lexer.token(Token.INT);\n\t\t\t\treturn new Operation(ctx,0,n,false,[],[]);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"no\");\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\tgatherEAs(ctx,type) {\n\t\t\tthis.lexer.match(Token.LPAREN);\n\t\t\tvar eas = [];\n\t\t\tfor (var i = 0; i < type; i++) {\n\t\t\t\tconst term = this.term(ctx);\n\t\t\t\teas.push(term);\n\t\t\t\tif (this.lexer.next(Token.COMMA)) {\n\t\t\t\t\tthis.lexer.match(Token.COMMA);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.lexer.match(Token.RPAREN);\n\t\t\treturn eas;\n\t\t}\n\n\t}\n\n\treturn Parser;\n});\n","define(function() {\n  class Token {\n    /**\n     * type should be one of the valid token types list below, and value is an\n     * optional value that can carry any extra information necessary for a given\n     * token type. (e.g. the matched string for an identifier)\n     */\n    constructor(type, value, pred) {\n      this.type = type;\n      this.value = value;\n      this.pred = pred;\n    }\n  }\n\n  [\n    'EOF', // we augment the tokens with EOF, to indicate the end of the input.\n    'LCID',\n\n    'LPAREN',\n    'RPAREN',\n    'SEMIC',\n\n    'BIND',\n    'NEW',\n    'DEF',\n    'IN',\n\n    'PLUS',\n    'TIMES',\n    'INT',\n  ].forEach(token => Token[token] = token);\n\n  return Token;\n});\n","// specific group for a term in the calculus\n\ndefine('term', function(require) {\n\n\tvar Group = require('group');\n\tvar Link = require('link');\n\t// var Contract = require('nodes/contract');\n\n\tclass Term extends Group {\n\n\t\tconstructor(prin, auxs) {\n\t\t\tsuper();\n\t\t\tthis.prin = null;\n\t\t\tthis.set(prin, auxs)\n\t\t}\n\n\t\tset(prin, auxs) {\n\t\t\tthis.prin = prin;\n\t\t\tthis.auxs = auxs;\n\t\t\treturn this;\n\t\t}\n\n\t// copyMap(map) {\n\t// \tvar group = new Term();\n\t// \tmap.set(this.key,group.key);\n\t//\n\t// \tvar newPrin = this.prin.copy().addToGroup(group);\n\t// \tgroup.set(newPrin,[]);\n\t//\n\t// \tmap.set(this.prin.key, newPrin.key);\n\t// \tvar nodes = this.nodes;\n\t//\n\t// \tfor (let node of nodes) {\n\t// \t\tvar newNode;\n\t// \t\tif (!map.has(node.key)) {\n\t// \t\t\tif (node instanceof Term) {\n\t// \t\t\t\tnewNode = node.copyMap(map).addToGroup(group);\n\t// \t\t\t\tmap.set(node.key, newNode.key);\n\t// \t\t\t} else {\n\t// \t\t\t\tnewNode = node.copy().addToGroup(group);\n\t// \t\t\t\tmap.set(node.key, newNode.key);\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t//\n\t// \tfor (let aux of this.auxs) {\n\t// \t\tvar newAux = aux.copy().addToGroup(group);\n\t// \t\tconsole.log(aux);\n\t// \t\tconsole.log(newAux);\n\t// \t\tgroup.auxs.push(newAux);\n\t// \t\tmap.set(aux.key, newAux.key);\n\t// \t}\n\t//\n\t// \tfor (let link of this.links) {\n\t// \t\tif (link.colour != \"lightgrey\") { // hacking!\n\t// \t\t\tvar newLink = new Link(map.get(link.from), map.get(link.to),\n\t// \t\t\t\t\t\t\t\t\t\t\t\tlink.fromPort, link.toPort).addToGroup(group);\n\t// \t\t\tnewLink.reverse = link.reverse;\n\t// \t\t}\n\t// \t}\n\t//\n\t// \treturn group.prin;\n\t// }\n\t//\n\t// copy() {\n\t// \tvar map = new Map();\n\t// \treturn this.copyMap(map);\n\t// }\n\n}\n\n\treturn Term;\n});\n","define(function(require) {\n\n\tvar Flag = {\n\t\tSEARCH:  '?',\n\t\tREWRITE: '↯',\n\t\tRETURN:\t '✓',\n\t}\n\n\tclass MachineToken {\n\n\t\tstatic RewriteFlag() {\n\t\t\treturn Flag;\n\t\t}\n\n\t\tconstructor() {\n\t\t\tthis.link = null;\n\t\t\tthis.rewriteFlag = null;\n\t\t\tthis.reset();\n\t\t}\n\n\t\tsetLink(link) {\n\t\t\tif (this.link != null)\n\t\t\t\tthis.link.clearFocus();\n\t\t\tthis.link = link;\n\t\t\tif (this.link != null) {\n\t\t\t\tthis.link.focus(\"red\");\n\t\t\t}\n\t\t}\n\n\t\treset(link) {\n\t\t\tthis.setLink(link);\n\t\t\tthis.rewriteFlag = Flag.SEARCH;\n\t\t}\n\t}\n\n\treturn MachineToken;\n});\n"],"sourceRoot":""}