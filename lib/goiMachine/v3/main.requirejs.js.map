{"version":3,"sources":["webpack://goi-machine/webpack/bootstrap","webpack://goi-machine/./lib/goiMachine/v3/main.prepack.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;;AAEA,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;;AAEA,+BAA+B;AAC/B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC,SAAS;AACT;AACA;AACA;;AAEA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA;;AAEA,yBAAyB,gBAAgB;AACzC;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;AACD,CAAC,e","file":"main.requirejs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/goiMachine/v3/main.prepack.js\");\n","/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n(function () {\n  var _$1_global = this;\n\n  var _3_ = function (Variable, Operation, Binding, Reference, Thunk, Lexer, Parser, MachineToken, Link, Graph, Group, Term, Atom, Contract, Start, Op, IntOp, BoolOp, PlusOp, TimesOp, AndOp, OrOp, NotOp, EqualsOp, IfOp) {\n    var _$0_derived = MachineToken.RewriteFlag();\n\n    var _5_ = class {\n      constructor() {\n        this.setMachine(new Graph(), new MachineToken(), 0);\n      }\n\n      setMachine(graphSet, tokenSet, countSet) {\n        this.graph = graphSet;\n        window.mainGraph = this.graph; // cheating!\n\n        this.token = tokenSet;\n        this.count = countSet;\n      }\n\n      compile(source) {\n        const lexer = new Lexer(source + '\\0');\n        const parser = new Parser(lexer);\n        const ast = parser.parse();\n        this.count = 0;\n        this.graph.clear();\n        var start = new Start().addToGroup(this.graph.child);\n        var term = this.toGraph(ast, this.graph.child, false);\n        var link = new Link(start.key, term.prin.key, \"_\", \"_\").addToGroup(this.graph.child);\n        this.token.reset(link);\n      }\n\n      toGraph(ast, group) {\n        var graph = this.graph;\n        var term = new Term().addToGroup(group);\n\n        if (ast instanceof Thunk) {\n          term.box();\n          ast = ast.inner;\n        } // VARIABLES & ATOMS\n\n\n        if (ast instanceof Variable) {\n          var auxs = [];\n\n          for (var i = 0; i < ast.ctx.length; i++) {\n            var c = new Contract().addToGroup(term);\n            auxs.push(c);\n            if (ast.ctx[i].name == ast.name) var prin = c;\n          }\n\n          term.set(prin, auxs); // BINDINGS & REFERENCES\n        } else if (ast instanceof Binding || ast instanceof Reference) {\n          var body = this.toGraph(ast.body, term, false).addToGroup(term);\n          var param = this.toGraph(ast.param, term, false).addToGroup(term);\n          var auxs = body.auxs;\n          var auxNode = auxs[0];\n          auxs.splice(0, 1);\n          auxs = auxs.concat(param.auxs);\n\n          if (ast instanceof Reference) {\n            var atomNode = new Atom(\"a\").addToGroup(param);\n            new Link(atomNode.key, param.prin.key, \"_\", \"_\").addToGroup(param);\n            param.prin = atomNode;\n          }\n\n          new Link(auxNode.key, param.prin.key, \"_\", \"_\").addToGroup(term);\n          auxs = Contract.createDNet(ast.ctx.length, auxs, term);\n          term.set(body.prin, auxs); // OPERATIONS\n        } else if (ast instanceof Operation) {\n          var op = this.toOp(ast.name, ast.active).addToGroup(term);\n          var auxs = [];\n          var next;\n\n          for (var i = 0; i < ast.sig[0]; i++) {\n            next = this.toGraph(ast.eas[i], term).addToGroup(term);\n            new Link(op.key, next.prin.key, \"_\", \"_\").addToGroup(term);\n            auxs = auxs.concat(next.auxs);\n          }\n\n          for (var i = 0; i < ast.sig[1]; i++) {\n            next = this.toGraph(ast.das[i], term).addToGroup(term);\n            var link = new Link(op.key, next.prin.key, \"_\", \"_\");\n            link.visited = true; // hacking\n\n            link.addToGroup(term);\n            auxs = auxs.concat(next.auxs);\n          }\n\n          auxs = Contract.createDNet(ast.ctx.length, auxs, term, op);\n          term.set(op, auxs);\n        }\n\n        return term;\n      }\n\n      toOp(name, active) {\n        if (Number.isInteger(parseInt(name))) {\n          return new IntOp(name);\n        } else if (name == \"true\" || name == \"false\") {\n          return new BoolOp(name);\n        } else if (name == \"+\") {\n          return new PlusOp();\n        } else if (name == \"*\") {\n          return new TimesOp();\n        } else if (name == \"∧\") {\n          return new AndOp();\n        } else if (name == \"∨\") {\n          return new OrOp();\n        } else if (name == \"¬\") {\n          return new NotOp();\n        } else if (name == \"==\") {\n          return new EqualsOp();\n        } else if (name == \"if\") {\n          return new IfOp();\n        } else {\n          return new Op(name, active);\n        }\n      }\n\n      quotieningRules() {\n        // TODO\n        // Loop through all links in the graph\n        // Perform quotiening rules\n        return null;\n      }\n\n      transition(graphTxt, linkTxt, flagTxt) {\n        if (!finished) {\n          this.count++;\n          var node = this.graph.findNodeByKey(this.token.link.to);\n          var nextLink;\n\n          if (this.token.rewriteFlag == _$0_derived.REWRITE) {\n            nextLink = node.rewrite(this.token);\n          } else {\n            nextLink = this.pass(this.token);\n          }\n\n          if (nextLink != null) {\n            this.token.setLink(nextLink);\n            this.printHistory(graphTxt, linkTxt, flagTxt);\n          } else {\n            this.token.setLink(null);\n            play = false;\n            playing = false;\n            finished = true;\n          }\n        }\n      }\n\n      printHistory(graphTxt, linkTxt, flagTxt) {\n        graphTxt.val(this.graph.draw().replace(/\\n/g, \"\") + '\\n' + graphTxt.val());\n        linkTxt.val(this.token.link + '\\n' + linkTxt.val());\n        flagTxt.val(this.token.rewriteFlag + '\\n' + flagTxt.val());\n      }\n\n      pass(token) {\n        // this needs cleaning up!\n        var link = token.link;\n\n        if (token.rewriteFlag == _$0_derived.SEARCH) {\n          var to = this.graph.findNodeByKey(link.to);\n          var outlinks = to.findLinksOutOf();\n\n          if (to instanceof Atom) {\n            token.rewriteFlag = _$0_derived.RETURN;\n            return link;\n          } else if (to instanceof Op) {\n            if (outlinks.length == 0) {\n              if (to.active) {\n                token.rewriteFlag = _$0_derived.REWRITE;\n              } else {\n                token.rewriteFlag = _$0_derived.RETURN;\n              }\n\n              return link;\n            } else {\n              return outlinks[0];\n            }\n          } else if (to instanceof Contract) {\n            token.rewriteFlag = _$0_derived.REWRITE;\n            return link;\n          }\n        } else if (token.rewriteFlag == _$0_derived.RETURN) {\n          var from = this.graph.findNodeByKey(link.from);\n          var outlinks = from.findLinksOutOf();\n\n          if (this.doneVisiting(link, outlinks)) {\n            // HACKING\n            if (from.active) {\n              token.rewriteFlag = _$0_derived.REWRITE;\n              return from.findLinksInto()[0];\n            } else {\n              token.rewriteFlag = _$0_derived.RETURN;\n              return from.findLinksInto()[0];\n            }\n          } else {\n            token.rewriteFlag = _$0_derived.SEARCH;\n            var j = this.findJ(link, outlinks);\n            return outlinks[j];\n          }\n        }\n\n        return link;\n      }\n\n      doneVisiting(link, links) {\n        for (let l of links) {\n          if (!l.visited && l != link) return false;\n        }\n\n        return true;\n      }\n\n      findJ(link, list) {\n        for (var j = 0; j < list.length; j++) {\n          if (!list[j].visited && list[j] != link) return j;\n        }\n\n        return null;\n      }\n\n    };\n\n    return _5_;\n  };\n\n  _$1_global.mainGraph = null;\n  _$1_global[\"goi-machine\"] = _3_;\n}).call(this);\n}.call(window));"],"sourceRoot":""}