{"version":3,"sources":["webpack://goi-machine/webpack/bootstrap","webpack://goi-machine/./lib/goiMachine/v2/main.prepack.js"],"names":["Machine","__get_scope_binding_0_get_95scope_95binding","__selector","__captured","__scope_0_main","Array","_$0_global","_I_Graph","clear","key","linkKey","allNodes","Map","allLinks","child","_1g_Group","node","set","from","findLinksConnected","link","delete","get","push","splice","indexOf","to","fromNode","findNodeByKey","findLinksOutOf","filter","x","width","height","str","draw","_1_Machine","setMachine","_K_MachineToken","graphSet","tokenSet","countSet","graph","__captured__scope_1_","token","count","source","lexer","_M_Lexer","parser","_O_Parser","ast","parse","start","_Q_Start","addToGroup","term","toGraph","_S_Link","prin","reset","group","_U_Term","_W_Thunk","box","inner","auxs","i","ctx","length","c","_Y_Contract","name","body","param","auxNode","concat","atomNode","_a_Atom","createDNet","op","toOp","active","next","sig","eas","das","visited","Number","isInteger","parseInt","_c_IntOp","_e_BoolOp","_g_PlusOp","_i_TimesOp","_k_AndOp","_m_OrOp","_o_NotOp","_q_EqualsOp","_s_IfOp","_u_Op","graphTxt","linkTxt","flagTxt","finished","nextLink","rewriteFlag","_E_Flag","REWRITE","rewrite","pass","setLink","printHistory","play","playing","val","replace","SEARCH","outlinks","RETURN","doneVisiting","findLinksInto","j","findJ","links","l","list","_1P_Node","shape","text","addToGraph","addNode","removeNode","nodeKeys","map","k","newNode","level","clearFocus","focus","input","_input","_index","_token","undefined","_nextToken","_nextChar","test","_2Q_Token","COMMA","SEMIC","LPAREN","RPAREN","EOF","DEF","BIND","IN","NEW","PLUS","TIMES","AND","OR","NOT","EQUALS","IF","TRUE","FALSE","LCID","INT","fail","type","value","match","Error","console","error","nodes","pred","result","term2","thunk","skip","id","P","B","atom","operation","lookaheadType","gatherArgs","args","fromPort","toPort","colour","reverse","penWidth","addToNode","toNode","addLink","removeLink","port","boxed","_1i_Term","inLinks","outLinks","nextNode","changeTo","copy","opLinks","changeFrom","cs","inputs","originalGroup","cList","n","b","parseBoolean","inLink","reduce","sum","newLink","left","right","keep","del","unbox","call"],"mappings":"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","file":"main.requirejs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/goiMachine/v2/main.prepack.js\");\n","var Machine;\n(function () {\n  var __get_scope_binding_0_get_95scope_95binding = function (__selector) {\n    var __captured;\n\n    switch (__selector) {\n      case 0:\n        __captured = [void 0];\n        break;\n    }\n\n    __scope_0_main[__selector] = __captured;\n    return __captured;\n  };\n\n  var __scope_0_main = new Array(1);\n\n  var _$0_global = this;\n\n  var _I_Graph = class {\n    constructor() {\n      this.clear();\n    }\n\n    clear() {\n      this.key = 0;\n      this.linkKey = 0;\n      this.allNodes = new Map(); // for efficiency searching\n\n      this.allLinks = []; // for printing ONLY\n\n      this.child = new _1g_Group();\n    }\n\n    addNode(node) {\n      node.key = 'nd' + this.key;\n      this.allNodes.set(node.key, node);\n      this.key++;\n    }\n\n    removeNode(node) {\n      for (let link of Array.from(node.findLinksConnected())) {\n        link.delete();\n      }\n\n      return this.allNodes.delete(node.key);\n    }\n\n    findNodeByKey(key) {\n      return this.allNodes.get(key);\n    }\n\n    addLink(link) {\n      this.allLinks.push(link);\n    }\n\n    removeLink(link) {\n      this.allLinks.splice(this.allLinks.indexOf(link), 1);\n    }\n\n    findLinkByKeys(from, to) {\n      var fromNode = this.findNodeByKey(from);\n      return fromNode.findLinksOutOf().filter(x => x.to == to)[0];\n    }\n\n    draw(width, height) {\n      var str = this.child.draw('\\n  ');\n      str += '\\n';\n\n      for (let link of this.allLinks) {\n        str += link.draw('\\n  ');\n      }\n\n      return 'digraph G {' + '\\n  rankdir=BT;' + '\\n  edge[arrowhead=none,arrowtail=none];' + '\\n  node[fixedsize=true,shape=circle]' + '\\n  size=\"' + width + ',' + height + '\";' + '\\n  labeldistance=0;' + '\\n  nodesep=.175;' + '\\n  ranksep=.175;' + '\\n' + str + '\\n}';\n    }\n\n  };\n\n  var _1_Machine = class {\n    constructor() {\n      this.setMachine(new _I_Graph(), new _K_MachineToken(), 0);\n    }\n\n    setMachine(graphSet, tokenSet, countSet) {\n      this.graph = graphSet;\n      __captured__scope_1_[0] = this.graph; // cheating!\n\n      this.token = tokenSet;\n      this.count = countSet;\n    }\n\n    compile(source) {\n      const lexer = new _M_Lexer(source + '\\0');\n      const parser = new _O_Parser(lexer);\n      const ast = parser.parse();\n      this.count = 0;\n      this.graph.clear();\n      var start = new _Q_Start().addToGroup(this.graph.child);\n      var term = this.toGraph(ast, this.graph.child, false);\n      var link = new _S_Link(start.key, term.prin.key, \"_\", \"_\").addToGroup(this.graph.child);\n      this.token.reset(link);\n    }\n\n    toGraph(ast, group) {\n      var graph = this.graph;\n      var term = new _U_Term().addToGroup(group);\n\n      if (ast instanceof _W_Thunk) {\n        term.box();\n        ast = ast.inner;\n      } // VARIABLES & ATOMS\n\n\n      if (ast instanceof _W_Thunk) {\n        var auxs = [];\n\n        for (var i = 0; i < ast.ctx.length; i++) {\n          var c = new _Y_Contract().addToGroup(term);\n          auxs.push(c);\n          if (ast.ctx[i].name == ast.name) var prin = c;\n        }\n\n        term.set(prin, auxs); // BINDINGS & REFERENCES\n      } else if (ast instanceof _W_Thunk || ast instanceof _W_Thunk) {\n        var body = this.toGraph(ast.body, term, false).addToGroup(term);\n        var param = this.toGraph(ast.param, term, false).addToGroup(term);\n        var auxs = body.auxs;\n        var auxNode = auxs[0];\n        auxs.splice(0, 1);\n        auxs = auxs.concat(param.auxs);\n\n        if (ast instanceof _W_Thunk) {\n          var atomNode = new _a_Atom(\"a\").addToGroup(param);\n          new _S_Link(atomNode.key, param.prin.key, \"_\", \"_\").addToGroup(param);\n          param.prin = atomNode;\n        }\n\n        new _S_Link(auxNode.key, param.prin.key, \"_\", \"_\").addToGroup(term);\n        auxs = _Y_Contract.createDNet(ast.ctx.length, auxs, term);\n        term.set(body.prin, auxs); // OPERATIONS\n      } else if (ast instanceof _W_Thunk) {\n        var op = this.toOp(ast.name, ast.active).addToGroup(term);\n        var auxs = [];\n        var next;\n\n        for (var i = 0; i < ast.sig[0]; i++) {\n          next = this.toGraph(ast.eas[i], term).addToGroup(term);\n          new _S_Link(op.key, next.prin.key, \"_\", \"_\").addToGroup(term);\n          auxs = auxs.concat(next.auxs);\n        }\n\n        for (var i = 0; i < ast.sig[1]; i++) {\n          next = this.toGraph(ast.das[i], term).addToGroup(term);\n          var link = new _S_Link(op.key, next.prin.key, \"_\", \"_\");\n          link.visited = true; // hacking\n\n          link.addToGroup(term);\n          auxs = auxs.concat(next.auxs);\n        }\n\n        auxs = _Y_Contract.createDNet(ast.ctx.length, auxs, term, op);\n        term.set(op, auxs);\n      }\n\n      return term;\n    }\n\n    toOp(name, active) {\n      if (Number.isInteger(parseInt(name))) {\n        return new _c_IntOp(name);\n      } else if (name == \"true\" || name == \"false\") {\n        return new _e_BoolOp(name);\n      } else if (name == \"+\") {\n        return new _g_PlusOp();\n      } else if (name == \"*\") {\n        return new _i_TimesOp();\n      } else if (name == \"∧\") {\n        return new _k_AndOp();\n      } else if (name == \"∨\") {\n        return new _m_OrOp();\n      } else if (name == \"¬\") {\n        return new _o_NotOp();\n      } else if (name == \"==\") {\n        return new _q_EqualsOp();\n      } else if (name == \"if\") {\n        return new _s_IfOp();\n      } else {\n        return new _u_Op(name, active);\n      }\n    }\n\n    quotieningRules() {\n      // TODO\n      // Loop through all links in the graph\n      // Perform quotiening rules\n      return null;\n    }\n\n    transition(graphTxt, linkTxt, flagTxt) {\n      if (!finished) {\n        this.count++;\n        var node = this.graph.findNodeByKey(this.token.link.to);\n        var nextLink;\n\n        if (this.token.rewriteFlag == _E_Flag.REWRITE) {\n          nextLink = node.rewrite(this.token);\n        } else {\n          nextLink = this.pass(this.token);\n        }\n\n        if (nextLink != null) {\n          this.token.setLink(nextLink);\n          this.printHistory(graphTxt, linkTxt, flagTxt);\n        } else {\n          this.token.setLink(null);\n          play = false;\n          playing = false;\n          finished = true;\n        }\n      }\n    }\n\n    printHistory(graphTxt, linkTxt, flagTxt) {\n      graphTxt.val(this.graph.draw().replace(/\\n/g, \"\") + '\\n' + graphTxt.val());\n      linkTxt.val(this.token.link + '\\n' + linkTxt.val());\n      flagTxt.val(this.token.rewriteFlag + '\\n' + flagTxt.val());\n    }\n\n    pass(token) {\n      // this needs cleaning up!\n      var link = token.link;\n\n      if (token.rewriteFlag == _E_Flag.SEARCH) {\n        var to = this.graph.findNodeByKey(link.to);\n        var outlinks = to.findLinksOutOf();\n\n        if (to instanceof _a_Atom) {\n          token.rewriteFlag = _E_Flag.RETURN;\n          return link;\n        } else if (to instanceof _u_Op) {\n          if (outlinks.length == 0) {\n            if (to.active) {\n              token.rewriteFlag = _E_Flag.REWRITE;\n            } else {\n              token.rewriteFlag = _E_Flag.RETURN;\n            }\n\n            return link;\n          } else {\n            return outlinks[0];\n          }\n        } else if (to instanceof _Y_Contract) {\n          token.rewriteFlag = _E_Flag.REWRITE;\n          return link;\n        }\n      } else if (token.rewriteFlag == _E_Flag.RETURN) {\n        var from = this.graph.findNodeByKey(link.from);\n        var outlinks = from.findLinksOutOf();\n\n        if (this.doneVisiting(link, outlinks)) {\n          // HACKING\n          if (from.active) {\n            token.rewriteFlag = _E_Flag.REWRITE;\n            return from.findLinksInto()[0];\n          } else {\n            token.rewriteFlag = _E_Flag.RETURN;\n            return from.findLinksInto()[0];\n          }\n        } else {\n          token.rewriteFlag = _E_Flag.SEARCH;\n          var j = this.findJ(link, outlinks);\n          return outlinks[j];\n        }\n      }\n\n      return link;\n    }\n\n    doneVisiting(link, links) {\n      for (let l of links) {\n        if (!l.visited && l != link) return false;\n      }\n\n      return true;\n    }\n\n    findJ(link, list) {\n      for (var j = 0; j < list.length; j++) {\n        if (!list[j].visited && list[j] != link) return j;\n      }\n\n      return null;\n    }\n\n  };\n\n  var _1P_Node = class {\n    constructor(shape, text, name) {\n      this.key = null;\n      this.shape = shape;\n      this.text = text;\n      this.name = name; // identifier name or constant name if any\n\n      this.graph = null;\n      this.group = null;\n      this.width = 0.3;\n      this.height = 0.3;\n      this.links = [];\n      this.addToGraph(graph); // cheating!\n    }\n\n    addToGraph(graph) {\n      if (graph != null) graph.addNode(this);\n      this.graph = graph;\n      return this; // to provide chain operation\n    }\n\n    addToGroup(group) {\n      group.addNode(this);\n      this.group = group;\n      return this; // to provide chain operation\n    }\n\n    changeToGroup(group) {\n      this.group.removeNode(this);\n      this.addToGroup(group);\n      return this;\n    }\n\n    findLinksConnected() {\n      return this.links;\n    }\n\n    findLinksInto() {\n      var links = [];\n\n      for (let link of this.links) {\n        if (link.to == this.key) links.push(link);\n      }\n\n      return links;\n    }\n\n    findLinksOutOf() {\n      var links = [];\n\n      for (let link of this.links) {\n        if (link.from == this.key) links.push(link);\n      }\n\n      return links;\n    }\n\n    findNodesOutOf() {\n      var links = this.findLinksOutOf();\n      var nodeKeys = links.map(l => l.to);\n      return nodeKeys.map(k => this.graph.findNodeByKey(k));\n    }\n\n    copy(graph) {\n      var newNode = new _1P_Node(this.shape, this.text, this.name).addToGraph(graph);\n      newNode.width = this.width;\n      newNode.height = this.height;\n      return newNode;\n    }\n\n    delete() {\n      this.group.removeNode(this);\n      this.graph.removeNode(this);\n    }\n\n    draw(level) {\n      var str = level + this.key + '[label=\"' + this.text;\n      ;\n      str += '\"';\n      if (this.shape != null) str += ',shape=' + this.shape;\n      if (this.width != null) str += ',width=' + this.width;\n      if (this.height != null) str += ',height=' + this.height;\n      return str += '];';\n    }\n\n    transition(token, link) {\n      return link;\n    }\n\n    rewrite(token, nextLink) {\n      token.rewrite = false;\n      return nextLink;\n    }\n\n  };\n\n  var _K_MachineToken = class {\n    constructor() {\n      this.link = null;\n      this.rewriteFlag = null;\n      this.reset();\n    }\n\n    static RewriteFlag() {\n      return _E_Flag;\n    }\n\n    setLink(link) {\n      if (this.link != null) this.link.clearFocus();\n      this.link = link;\n\n      if (this.link != null) {\n        this.link.focus(\"red\");\n      }\n    }\n\n    reset(link) {\n      this.setLink(link);\n      this.rewriteFlag = _E_Flag.SEARCH;\n    }\n\n  };\n\n  var _M_Lexer = class {\n    constructor(input) {\n      this._input = input;\n      this._index = 0;\n      this._token = undefined;\n\n      this._nextToken();\n    }\n\n    _nextChar() {\n      if (this._index >= this._input.length) {\n        return '\\0';\n      }\n\n      return this._input[this._index++];\n    }\n\n    _nextToken() {\n      let c;\n\n      do {\n        c = this._nextChar();\n      } while (/\\s/.test(c));\n\n      switch (c) {\n        case ',':\n          this._token = new _2Q_Token(_2Q_Token.COMMA);\n          break;\n\n        case ';':\n          this._token = new _2Q_Token(_2Q_Token.SEMIC);\n          break;\n\n        case '(':\n          this._token = new _2Q_Token(_2Q_Token.LPAREN);\n          break;\n\n        case ')':\n          this._token = new _2Q_Token(_2Q_Token.RPAREN);\n          break;\n\n        case '\\0':\n          this._token = new _2Q_Token(_2Q_Token.EOF);\n          break;\n\n        case '=':\n          this._token = new _2Q_Token(_2Q_Token.DEF);\n          break;\n\n        default:\n          // text for string\n          if (/[a-zA-Z]|'/.test(c)) {\n            let str = '';\n\n            do {\n              str += c;\n              c = this._nextChar();\n            } while (/[a-zA-Z]|'|_/.test(c)); // put back the last char which is not part of the identifier\n\n\n            this._index--;\n            if (str == \"bind\") this._token = new _2Q_Token(_2Q_Token.BIND);else if (str == \"in\") this._token = new _2Q_Token(_2Q_Token.IN);else if (str == \"new\") this._token = new _2Q_Token(_2Q_Token.NEW);else if (str == \"PLUS\") this._token = new _2Q_Token(_2Q_Token.PLUS);else if (str == \"TIMES\") this._token = new _2Q_Token(_2Q_Token.TIMES);else if (str == \"AND\") this._token = new _2Q_Token(_2Q_Token.AND);else if (str == \"OR\") this._token = new _2Q_Token(_2Q_Token.OR);else if (str == \"NOT\") this._token = new _2Q_Token(_2Q_Token.NOT);else if (str == \"EQUALS\") this._token = new _2Q_Token(_2Q_Token.EQUALS);else if (str == \"IF\") this._token = new _2Q_Token(_2Q_Token.IF);else if (str == \"TRUE\") this._token = new _2Q_Token(_2Q_Token.TRUE, true);else if (str == \"FALSE\") this._token = new _2Q_Token(_2Q_Token.FALSE, false);else this._token = new _2Q_Token(_2Q_Token.LCID, str);\n          } // text for numbers\n          else if (/[0-9]/.test(c)) {\n              let str = '';\n\n              do {\n                str += c;\n                c = this._nextChar();\n              } while (/[0-9]/.test(c)); // put back the last char which is not part of the identifier\n\n\n              this._index--;\n              this._token = new _2Q_Token(_2Q_Token.INT, parseInt(str));\n            } else {\n              this.fail();\n            }\n\n      }\n    }\n\n    token(type) {\n      if (!type) {\n        return this._token.value;\n      }\n\n      const token = this._token;\n      this.match(type);\n      return token.value;\n    }\n\n    value() {\n      return this._token.value;\n    }\n\n    lookahead() {\n      return this._token;\n    }\n\n    lookaheadType() {\n      return this._token.type;\n    }\n\n    fail() {\n      throw new Error(`Unexpected token at offset ${this._index}`);\n    }\n\n    next(type) {\n      return this._token.type == type;\n    }\n\n    match(type) {\n      if (this.next(type)) {\n        this._nextToken();\n\n        return;\n      }\n\n      console.error(`${this._index}: Invalid token: Expected '${type}' found '${this._token.type}'`);\n      throw new Error('Parse Error');\n    }\n\n    skip(type) {\n      if (this.next(type)) {\n        this._nextToken();\n\n        return true;\n      }\n\n      return false;\n    }\n\n  };\n\n  var _1g_Group = class extends _1P_Node {\n    constructor() {\n      super(null, null, null); // shape, text, name\n\n      this.nodes = [];\n      this.links = []; // for copying\n    }\n\n    addNode(node) {\n      this.nodes.push(node);\n    }\n\n    removeNode(node) {\n      return this.nodes.splice(this.nodes.indexOf(node), 1);\n    }\n\n    addLink(link) {\n      this.links.push(link);\n    }\n\n    removeLink(link) {\n      var i = this.links.indexOf(link);\n      if (i != -1) this.links.splice(i, 1);\n    }\n\n    delete() {\n      for (let node of Array.from(this.nodes)) {\n        node.delete();\n      }\n\n      super.delete();\n    }\n\n    draw(level) {\n      var str = \"\";\n\n      for (let node of this.nodes) {\n        str += node.draw(level);\n      }\n\n      return str;\n    }\n\n    copy() {}\n\n  };\n\n  var _E_Flag = {\n    SEARCH: \"?\",\n    REWRITE: \"\\u21AF\",\n    RETURN: \"\\u2713\"\n  };\n\n  var _2Q_Token = class {\n    constructor(type, value, pred) {\n      this.type = type;\n      this.value = value;\n      this.pred = pred;\n    }\n\n  };\n\n  _2Q_Token.EOF = \"EOF\";\n  _2Q_Token.LCID = \"LCID\";\n  _2Q_Token.LPAREN = \"LPAREN\";\n  _2Q_Token.RPAREN = \"RPAREN\";\n  _2Q_Token.SEMIC = \"SEMIC\";\n  _2Q_Token.BIND = \"BIND\";\n  _2Q_Token.NEW = \"NEW\";\n  _2Q_Token.DEF = \"DEF\";\n  _2Q_Token.IN = \"IN\";\n  _2Q_Token.PLUS = \"PLUS\";\n  _2Q_Token.TIMES = \"TIMES\";\n  _2Q_Token.INT = \"INT\";\n  _2Q_Token.AND = \"AND\";\n  _2Q_Token.OR = \"OR\";\n  _2Q_Token.NOT = \"NOT\";\n  _2Q_Token.TRUE = \"TRUE\";\n\n  var _O_Parser = class {\n    constructor(lexer) {\n      this.lexer = lexer;\n    }\n\n    parse() {\n      const result = this.term2([]); // make sure we consumed all the program, otherwise there was a syntax error\n\n      this.lexer.match(_2Q_Token.EOF);\n      return result;\n    }\n\n    term2(ctx, thunk) {\n      if (thunk) {\n        const inner = this.term2(ctx);\n        return new _W_Thunk(ctx, inner);\n      } else {\n        if (this.lexer.skip(_2Q_Token.BIND)) {\n          const id = this.term2(ctx);\n          id.ctx = [id].concat(id.ctx);\n          this.lexer.match(_2Q_Token.DEF);\n          const P = this.term2(ctx);\n          this.lexer.match(_2Q_Token.IN);\n          const B = this.term2([id].concat(ctx));\n          return new _W_Thunk(ctx, id, P, B);\n        } else if (this.lexer.skip(_2Q_Token.NEW)) {\n          const id = this.term2(ctx);\n          id.ctx = [id].concat(id.ctx);\n          this.lexer.match(_2Q_Token.DEF);\n          const P = this.term2(ctx);\n          this.lexer.match(_2Q_Token.IN);\n          const B = this.term2([id].concat(ctx));\n          return new _W_Thunk(ctx, id, P, B);\n        } else {\n          return this.atom(ctx);\n        }\n      }\n    }\n\n    atom(ctx) {\n      if (this.lexer.skip(_2Q_Token.LPAREN)) {\n        const term = this.term2(ctx);\n        this.lexer.match(_2Q_Token.RPAREN);\n        return term;\n      } else if (this.lexer.next(_2Q_Token.LCID)) {\n        const id = this.lexer.token(_2Q_Token.LCID);\n        return new _W_Thunk(ctx, id);\n      } else {\n        return this.operation(ctx);\n      }\n    }\n\n    operation(ctx) {\n      var name;\n      var sig;\n      var active;\n      var eas = [];\n      var das = [];\n      var token = this.lexer.lookaheadType();\n\n      switch (token) {\n        case _2Q_Token.PLUS:\n          name = \"+\";\n          sig = [2, 0];\n          active = true;\n          break;\n\n        case _2Q_Token.TIMES:\n          name = \"*\";\n          sig = [2, 0];\n          active = true;\n          break;\n\n        case _2Q_Token.AND:\n          name = \"∧\";\n          sig = [2, 0];\n          active = true;\n          break;\n\n        case _2Q_Token.OR:\n          name = \"∨\";\n          sig = [2, 0];\n          active = true;\n          break;\n\n        case _2Q_Token.NOT:\n          name = \"¬\";\n          sig = [1, 0];\n          active = true;\n          break;\n\n        case _2Q_Token.EQUALS:\n          name = \"==\";\n          sig = [2, 0];\n          active = true;\n          break;\n\n        case _2Q_Token.IF:\n          name = \"if\";\n          sig = [1, 2];\n          active = true;\n          break;\n\n        default:\n          name = this.lexer.value();\n          sig = [0, 0];\n          active = false;\n          break;\n      }\n\n      this.lexer.match(token);\n\n      if (sig[0] > 0) {\n        this.lexer.match(_2Q_Token.LPAREN);\n        eas = this.gatherArgs(ctx, sig[0], false);\n        if (sig[1] == 0) this.lexer.match(_2Q_Token.RPAREN);\n      }\n\n      if (sig[1] > 0) {\n        if (sig[0] == 0) this.lexer.match(_2Q_Token.LPAREN);\n        this.lexer.match(_2Q_Token.SEMIC);\n        das = this.gatherArgs(ctx, sig[1], true);\n        this.lexer.match(_2Q_Token.RPAREN);\n      }\n\n      return new _W_Thunk(ctx, sig, name, active, eas, das);\n    }\n\n    gatherArgs(ctx, type, thunk) {\n      var args = [];\n\n      for (var i = 0; i < type; i++) {\n        const term = this.term2(ctx, thunk);\n        args.push(term);\n\n        if (this.lexer.next(_2Q_Token.COMMA)) {\n          this.lexer.match(_2Q_Token.COMMA);\n        }\n      }\n\n      return args;\n    }\n\n  };\n\n  var _Q_Start = class extends _1P_Node {\n    constructor() {\n      super(\"point\", \"\");\n    }\n\n    transition(token) {\n      return this.findLinksOutOf(null)[0];\n    }\n\n    copy() {\n      return new _Q_Start();\n    }\n\n    draw(level) {\n      return level + this.key + '[shape=' + this.shape + '];';\n    }\n\n  };\n\n  var _S_Link = class {\n    constructor(from, to, fromPort, toPort, colour) {\n      this.from = from;\n      this.to = to;\n      this.fromPort = fromPort;\n      this.toPort = toPort;\n      this.visited = false; // HACKING\n\n      this.reverse = false;\n      this.colour = colour;\n      this.penWidth = null;\n      this.addToGraph(graph); // cheating\n\n      if (colour != \"lightgrey\") {\n        // cheating\n        this.addToNode(); // cheating\n      }\n    }\n\n    addToNode() {\n      var fromNode = this.graph.findNodeByKey(this.from);\n      fromNode.links.push(this);\n      var toNode = this.graph.findNodeByKey(this.to);\n      toNode.links.push(this);\n    }\n\n    addToGraph(graph) {\n      if (graph != null) graph.addLink(this);\n      this.graph = graph;\n      return this; // to provide chain operation\n    }\n\n    addToGroup(group) {\n      group.addLink(this);\n      this.group = group;\n      return this; // to provide chain operation\n    }\n\n    changeToGroup(group) {\n      this.group.removeLink(this);\n      this.addToGroup(group);\n      return this;\n    }\n\n    changeFrom(key, port) {\n      var fromNode = this.graph.findNodeByKey(this.from);\n      fromNode.links.splice(fromNode.links.indexOf(this), 1);\n      this.from = key;\n      this.fromPort = port;\n      fromNode = this.graph.findNodeByKey(this.from);\n      fromNode.links.push(this);\n    }\n\n    changeTo(key, port) {\n      var toNode = this.graph.findNodeByKey(this.to);\n      toNode.links.splice(toNode.links.indexOf(this), 1);\n      this.to = key;\n      this.toPort = port;\n      toNode = this.graph.findNodeByKey(this.to);\n      toNode.links.push(this);\n    }\n\n    focus(colour) {\n      this.colour = colour;\n      this.penWidth = \"20\";\n    }\n\n    clearFocus() {\n      this.colour = null;\n      this.penWidth = null;\n      this.visited = true; // HACKING\n    }\n\n    delete() {\n      var fromNode = this.graph.findNodeByKey(this.from);\n      fromNode.links.splice(fromNode.links.indexOf(this), 1);\n      var toNode = this.graph.findNodeByKey(this.to);\n      toNode.links.splice(toNode.links.indexOf(this), 1);\n      this.group.removeLink(this);\n      this.graph.removeLink(this);\n    }\n\n    toString() {\n      return this.from + \"->\" + this.to;\n    }\n\n    draw(level) {\n      var str = level;\n\n      if (!this.reverse) {\n        str += this.from + '->' + this.to + '[';\n        if (this.fromPort != null) str += 'tailport=' + this.fromPort;\n        if (this.toPort != null) str += ',headport=' + this.toPort;\n      } else {\n        str += this.to + '->' + this.from + '[dir=back';\n        if (this.fromPort != null) str += ',headport=' + this.fromPort;\n        if (this.toPort != null) str += ',tailport=' + this.toPort;\n      }\n\n      if (this.colour != null) str += ',color=' + this.colour;\n      if (this.penWidth != null) str += ',penwidth=' + this.penWidth;\n      str += '];';\n      return str;\n    }\n\n  };\n\n  var _U_Term = class extends _1g_Group {\n    constructor(prin, auxs) {\n      super();\n      this.prin = null;\n      this.set(prin, auxs);\n      this.boxed = false;\n    }\n\n    set(prin, auxs) {\n      this.prin = prin;\n      this.auxs = auxs;\n      return this;\n    }\n\n    box() {\n      this.boxed = true;\n      return this.prin;\n    }\n\n    unbox() {\n      this.boxed = false;\n      return this.prin;\n    }\n\n    draw(level) {\n      if (this.boxed) {\n        var str = \"\";\n\n        for (let node of this.nodes) {\n          str += node.draw(level + '  ');\n        }\n\n        return level + 'subgraph cluster_' + this.key + ' {' + level + '  graph[style=dotted];' + str + level + '};';\n      }\n\n      return super.draw(level);\n    }\n\n  };\n\n  var _W_Thunk = class extends _1i_Term {\n    constructor(ctx, id, param, body) {\n      super(ctx);\n      this.id = id;\n      this.param = param;\n      this.body = body;\n    }\n\n  };\n\n  var _Y_Contract = class extends _1P_Node {\n    constructor(name) {\n      super(\"point\", \"\", name);\n    }\n\n    transition(token, link) {\n      if (link.to == this.key) {\n        return this.findLinksOutOf(null)[0];\n      }\n    }\n\n    rewrite(token) {\n      var link = token.link;\n      var inLinks = this.findLinksInto();\n      var outLinks = this.findLinksOutOf();\n      var nextLink = outLinks[0];\n      var nextNode = this.graph.findNodeByKey(nextLink.to);\n\n      if (nextNode instanceof _Y_Contract || nextNode instanceof _a_Atom) {\n        inLinks.map(l => l.changeTo(nextNode.key, \"_\"));\n        nextLink.delete();\n        this.delete();\n      } else if (nextNode instanceof _u_Op) {\n        var term = new _U_Term().addToGroup(this.group);\n        var copy = nextNode.copy().addToGroup(term); // clean up here\n\n        var opLinks = nextNode.findLinksOutOf();\n\n        var auxs = _Y_Contract.createDNet(opLinks.length, [nextNode, nextNode, copy, copy], term);\n\n        link.changeTo(copy.key, \"_\");\n\n        for (var i = 0; i < opLinks.length; i++) {\n          opLinks[i].changeFrom(auxs[i].key, \"_\");\n        }\n\n        term.set(copy, auxs);\n      }\n\n      token.rewriteFlag = _E_Flag.SEARCH;\n      return link;\n    }\n\n    static createDNet(cs, inputs, originalGroup, op) {\n      var c;\n      var from;\n      var to;\n      var cList = [];\n      var group = new _1g_Group();\n\n      for (var n = 0; n < cs; n++) {\n        c = new _Y_Contract().addToGroup(group);\n        cList.push(c);\n        if (inputs.length == 0) // maybe this needs to be \"more elegant\"\n          new _S_Link(op.key, c.key, \"_\", \"_\", \"lightgrey\").addToGroup(group);\n      }\n\n      if (cList.length > 0) {\n        for (var i = 0; i < inputs.length; i++) {\n          from = inputs[i];\n          to = cList[i % cs];\n          new _S_Link(from.key, to.key, \"_\", \"_\").addToGroup(group);\n        }\n      }\n\n      group.addToGroup(originalGroup);\n      return cList;\n    }\n\n    copy() {\n      return new _Y_Contract(this.name);\n    }\n\n    draw(level) {\n      return level + this.key + '[shape=' + this.shape + '];';\n    }\n\n  };\n\n  var _a_Atom = class extends _1P_Node {\n    constructor(name) {\n      super(\"circle\", \"\", name);\n      this.height = 0.1;\n      this.width = 0.1;\n    }\n\n  };\n\n  var _c_IntOp = class extends _u_Op {\n    constructor(n) {\n      super(n, false);\n    }\n\n  };\n\n  var _e_BoolOp = class extends _u_Op {\n    constructor(b) {\n      b = _e_BoolOp.parseBoolean(b);\n      super(b, false);\n    }\n\n    copy() {\n      return new _e_BoolOp();\n    }\n\n    static parseBoolean(b) {\n      if (b == \"false\" || b == 0) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n\n  };\n\n  var _g_PlusOp = class extends _u_Op {\n    constructor() {\n      super(\"+\", true);\n    }\n\n    copy() {\n      return new _g_PlusOp();\n    }\n\n    rewrite(token) {\n      var inLink = this.findLinksInto()[0];\n      var outLinks = this.findLinksOutOf();\n      var n = outLinks.reduce((sum, x) => sum + this.graph.findNodeByKey(x.to).name, 0);\n      var newNode = new _c_IntOp(n, false).addToGroup(this.group);\n      var newLink = new _S_Link(inLink.from, newNode.key, \"_\", \"_\").addToGroup(this.group);\n      outLinks.map(x => x.delete());\n      outLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n      this.delete();\n      token.rewriteFlag = _E_Flag.SEARCH;\n      return newLink;\n    }\n\n  };\n\n  var _i_TimesOp = class extends _u_Op {\n    constructor() {\n      super(\"*\", true);\n    }\n\n    copy() {\n      return new _i_TimesOp();\n    }\n\n    rewrite(token) {\n      var inLink = this.findLinksInto()[0];\n      var outLinks = this.findLinksOutOf();\n      var n = outLinks.reduce((sum, x) => sum * this.graph.findNodeByKey(x.to).name, 1);\n      var newNode = new _c_IntOp(n, false).addToGroup(this.group);\n      var newLink = new _S_Link(inLink.from, newNode.key, \"_\", \"_\").addToGroup(this.group);\n      outLinks.map(x => x.delete());\n      outLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n      this.delete();\n      token.rewriteFlag = _E_Flag.SEARCH;\n      return newLink;\n    }\n\n  };\n\n  var _k_AndOp = class extends _u_Op {\n    constructor() {\n      super(\"∧\", true);\n    }\n\n    copy() {\n      return new _k_AndOp();\n    }\n\n    rewrite(token) {\n      var inLink = this.findLinksInto()[0];\n      var outLinks = this.findLinksOutOf();\n      var b = outLinks.reduce((sum, x) => sum && _e_BoolOp.parseBoolean(this.graph.findNodeByKey(x.to).name), true);\n      var newNode = new _e_BoolOp(b, false).addToGroup(this.group);\n      var newLink = new _S_Link(inLink.from, newNode.key, \"_\", \"_\").addToGroup(this.group);\n      outLinks.map(x => x.delete());\n      outLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n      this.delete();\n      token.rewriteFlag = _E_Flag.SEARCH;\n      return newLink;\n    }\n\n  };\n\n  var _m_OrOp = class extends _u_Op {\n    constructor() {\n      super(\"∨\", true);\n    }\n\n    copy() {\n      return new _m_OrOp();\n    }\n\n    rewrite(token) {\n      var inLink = this.findLinksInto()[0];\n      var outLinks = this.findLinksOutOf();\n      var b = outLinks.reduce((sum, x) => sum || _e_BoolOp.parseBoolean(this.graph.findNodeByKey(x.to).name), false);\n      var newNode = new _e_BoolOp(b, false).addToGroup(this.group);\n      var newLink = new _S_Link(inLink.from, newNode.key, \"_\", \"_\").addToGroup(this.group);\n      outLinks.map(x => x.delete());\n      outLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n      this.delete();\n      token.rewriteFlag = _E_Flag.SEARCH;\n      return newLink;\n    }\n\n  };\n\n  var _o_NotOp = class extends _u_Op {\n    constructor() {\n      super(\"¬\", true);\n    }\n\n    copy() {\n      return new _o_NotOp();\n    }\n\n    rewrite(token) {\n      var inLink = this.findLinksInto()[0];\n      var outLinks = this.findLinksOutOf();\n      var b = !_e_BoolOp.parseBoolean(this.graph.findNodeByKey(outLinks[0].to).name);\n      var newNode = new _e_BoolOp(b, false).addToGroup(this.group);\n      var newLink = new _S_Link(inLink.from, newNode.key, \"_\", \"_\").addToGroup(this.group);\n      outLinks.map(x => x.delete());\n      outLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n      this.delete();\n      token.rewriteFlag = _E_Flag.SEARCH;\n      return newLink;\n    }\n\n  };\n\n  var _q_EqualsOp = class extends _u_Op {\n    constructor() {\n      super(\"==\", true);\n    }\n\n    copy() {\n      return new _q_EqualsOp();\n    }\n\n    rewrite(token) {\n      var inLink = this.findLinksInto()[0];\n      var outLinks = this.findLinksOutOf();\n      var left = this.graph.findNodeByKey(outLinks[0].to).name;\n      var right = this.graph.findNodeByKey(outLinks[1].to).name;\n      var b = left == right;\n      var newNode = new _e_BoolOp(b, false).addToGroup(this.group);\n      var newLink = new _S_Link(inLink.from, newNode.key, \"_\", \"_\").addToGroup(this.group);\n      outLinks.map(x => x.delete());\n      outLinks.map(x => this.graph.findNodeByKey(x.to).delete());\n      this.delete();\n      token.rewriteFlag = _E_Flag.SEARCH;\n      return newLink;\n    }\n\n  };\n\n  var _s_IfOp = class extends _u_Op {\n    constructor() {\n      super(\"if\", true);\n    }\n\n    copy() {\n      return new _s_IfOp();\n    }\n\n    rewrite(token) {\n      var inLink = this.findLinksInto()[0];\n      var outLinks = this.findLinksOutOf();\n      var name = this.graph.findNodeByKey(outLinks[0].to).name;\n      var keep;\n      var del;\n\n      if (_e_BoolOp.parseBoolean(name)) {\n        keep = 1;\n        del = 2;\n      } else {\n        keep = 2;\n        del = 1;\n      }\n\n      outLinks[del].delete();\n      var newNode = this.graph.findNodeByKey(outLinks[keep].to).group.unbox();\n      var newLink = new _S_Link(inLink.from, newNode.key, \"_\", \"_\").addToGroup(this.group);\n      outLinks[0].delete();\n      this.graph.findNodeByKey(outLinks[0].to).delete();\n      this.delete();\n      token.rewriteFlag = _E_Flag.SEARCH;\n      return newLink;\n    }\n\n  };\n\n  var _u_Op = class extends _1P_Node {\n    constructor(name, active) {\n      super(null, name, name);\n      this.active = active;\n    }\n\n    rewrite(token) {}\n\n    copy() {\n      return new _u_Op(this.name, this.active);\n    }\n\n  };\n\n  _2Q_Token.FALSE = \"FALSE\";\n  _2Q_Token.EQUALS = \"EQUALS\";\n\n  var _1i_Term = class {\n    constructor(ctx) {\n      this.ctx = ctx;\n    }\n\n  };\n\n  _2Q_Token.IF = \"IF\";\n  _$0_global.Machine = _1_Machine;\n}).call(this);"],"sourceRoot":""}