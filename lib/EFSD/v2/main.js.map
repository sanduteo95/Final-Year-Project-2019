{"version":3,"sources":["webpack://machine/webpack/universalModuleDefinition","webpack://machine/webpack/bootstrap","webpack://machine/../EFSD-vis/js/ast/abstraction.js","webpack://machine/../EFSD-vis/js/ast/application.js","webpack://machine/../EFSD-vis/js/ast/assign.js","webpack://machine/../EFSD-vis/js/ast/binary-op.js","webpack://machine/../EFSD-vis/js/ast/change.js","webpack://machine/../EFSD-vis/js/ast/constant.js","webpack://machine/../EFSD-vis/js/ast/deprecation.js","webpack://machine/../EFSD-vis/js/ast/deref.js","webpack://machine/../EFSD-vis/js/ast/identifier.js","webpack://machine/../EFSD-vis/js/ast/if-then-else.js","webpack://machine/../EFSD-vis/js/ast/operation.js","webpack://machine/../EFSD-vis/js/ast/propagation.js","webpack://machine/../EFSD-vis/js/ast/provisional-constant.js","webpack://machine/../EFSD-vis/js/ast/recursion.js","webpack://machine/../EFSD-vis/js/ast/unary-op.js","webpack://machine/../EFSD-vis/js/box-wrapper.js","webpack://machine/../EFSD-vis/js/box.js","webpack://machine/../EFSD-vis/js/gc.js","webpack://machine/../EFSD-vis/js/goi-machine.js","webpack://machine/../EFSD-vis/js/graph.js","webpack://machine/../EFSD-vis/js/group.js","webpack://machine/../EFSD-vis/js/link.js","webpack://machine/../EFSD-vis/js/node.js","webpack://machine/../EFSD-vis/js/nodes/abs.js","webpack://machine/../EFSD-vis/js/nodes/app.js","webpack://machine/../EFSD-vis/js/nodes/binop.js","webpack://machine/../EFSD-vis/js/nodes/const.js","webpack://machine/../EFSD-vis/js/nodes/contract.js","webpack://machine/../EFSD-vis/js/nodes/delta.js","webpack://machine/../EFSD-vis/js/nodes/dep.js","webpack://machine/../EFSD-vis/js/nodes/der.js","webpack://machine/../EFSD-vis/js/nodes/deref.js","webpack://machine/../EFSD-vis/js/nodes/expo.js","webpack://machine/../EFSD-vis/js/nodes/if.js","webpack://machine/../EFSD-vis/js/nodes/mod.js","webpack://machine/../EFSD-vis/js/nodes/pax.js","webpack://machine/../EFSD-vis/js/nodes/promo.js","webpack://machine/../EFSD-vis/js/nodes/prop.js","webpack://machine/../EFSD-vis/js/nodes/prov.js","webpack://machine/../EFSD-vis/js/nodes/recur.js","webpack://machine/../EFSD-vis/js/nodes/set.js","webpack://machine/../EFSD-vis/js/nodes/start.js","webpack://machine/../EFSD-vis/js/nodes/unop.js","webpack://machine/../EFSD-vis/js/nodes/var.js","webpack://machine/../EFSD-vis/js/nodes/weak.js","webpack://machine/../EFSD-vis/js/op.js","webpack://machine/../EFSD-vis/js/parser/lexer.js","webpack://machine/../EFSD-vis/js/parser/parser.js","webpack://machine/../EFSD-vis/js/parser/token.js","webpack://machine/../EFSD-vis/js/term.js","webpack://machine/../EFSD-vis/js/token.js"],"names":["define","Abstraction","param","body","Application","lhs","rhs","Assign","UnaryOp","BinaryOp","type","name","v1","v2","Change","Constant","value","Deprecation","term","Dereference","Identifier","IfThenElse","cond","t1","t2","Operation","Propagation","ProvisionalConstant","Recursion","Link","Term","Box","Promo","BoxWrapper","prin","box","auxs","aux","splice","indexOf","deleteAndPreserveOutLink","Array","from","links","link","changeToGroup","group","nodes","node","map","newBoxWrapper","newPrin","copy","addToGroup","set","key","newBox","newNode","copyBox","newAux","push","newLink","get","to","fromPort","toPort","reverse","Map","delete","removeAux","deleteAndPreserveInLink","level","str","draw","wrapper","promo","Group","graph","Contract","Recur","Abs","Weak","GC","noMore","findLinksInto","length","findLinksOutOf","nextNode","findNodeByKey","collectFromBottom","collectInGroup","window","mainGraph","union_arrays","x","y","obj","i","res","k","hasOwnProperty","Lexer","Parser","MachineToken","Graph","Expo","App","BinOp","Const","Der","Var","If","Pax","Start","UnOp","Delta","Set","Dep","Deref","Mod","Prop","Prov","GoIMachine","token","gc","count","isMain","evalTokens","cells","evaluating","newValues","hasUpdate","source","lexer","parser","ast","parse","clear","reset","readyEvalTokens","start","child","toGraph","deleteVarNode","v","create","abs","paramUsed","auxNode","createPaxsOnTopOf","app","left","der","right","joinAuxs","constant","binop","subType","unop","ifnode","p1","recur","p1Used","auxNode1","prov","dep","deref","delta","con","setn","prop","cell","evalToken","setLink","a","j","Math","floor","random","tokens","arr_2","tokenPass","flag","dataStack","boxStack","modStack","finished","batchPass","machine","forEach","mod","oldData","update","transited","target","forward","nextLink","rewrite","transition","console","log","printHistory","play","playing","val","rewriteFlag","dataStr","toString","boxStr","linkKey","allNodes","allLinks","findLinksConnected","width","height","Node","colour","penWidth","addToGraph","addToNode","fromNode","toNode","addLink","removeLink","port","showKey","shape","text","addNode","removeNode","Token","CompData","RewriteFlag","data","last","PROMPT","pop","LAMBDA","EMPTY","R","F_LAMBDA","prev","appLink","appOtherLink","otherNextLink","changeFrom","changeTo","otherNode","Op","BinOpType","l","r","result","binOpApply","F_OP","newConst","And","Or","Plus","parseFloat","Sub","Mult","Div","Lte","F_C","inLink","UNIT","F_DELTA","substring","weak1","weak2","F_DEP","isNumber","outLink","weak","F_IF","downLink","otherLink","leftLink","F_PROMO","oldGroup","moveOut","deleteAndPreserveLink","newNextLink","inLinks","prevLink","F_PROP","startPropagation","F_MOD","F_RECUR","oldBox","new_v","string","s","split","require","UnOpType","unOpApply","Not","inNode","OpType","input","_input","_index","_token","undefined","_nextToken","c","_nextChar","test","DOT","COMMA","SEQ","LPAREN","RPAREN","CLPAREN","CRPAREN","EOF","NOT","AND","fail","c2","OR","PLUS","SUB","MULT","DIV","LTE","DEFINE","LET","IN","REC","TRUE","FALSE","IF","THEN","ELSE","CHANGE","SET","TO","PROP","DEP","DEREF","LCID","INT","match","Error","next","error","ctx","skip","id","concat","N","M","application","pred","nextToken","lookahead","isBinaryOp","op","atom","parseBinop","n","newPaxs","pax","newPax","leftAuxs","rightAuxs","newAuxs","outter","leftAux","rightAux","IF0","IF1","clearFocus","focus"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"machine\"] = factory();\n\telse\n\t\troot[\"machine\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"../EFSD-vis/js/goi-machine.js\");\n","define('ast/abstraction', function() {\n    class Abstraction {\n      /**\n       * param here is the name of the variable of the abstraction. Body is the\n       * subtree  representing the body of the abstraction.\n       */\n      constructor(param, body) {\n        this.param = param;\n        this.body = body;\n      }\n    }\n    return Abstraction;\n});","define('ast/application', function() {\n    class Application {\n      /**\n       * (lhs rhs) - left-hand side and right-hand side of an application.\n       */\n      constructor(lhs, rhs) {\n        this.lhs = lhs;\n        this.rhs = rhs;\n      }\n    }\n    return Application;\n});","define('ast/assign', function() {\n    class Assign {\n      constructor(param, body) {\n        this.param = param;\n        this.body = body;\n      }\n    }\n    return Assign;\n});","define('ast/binary-op', ['ast/unary-op'], function(UnaryOp) {\n    class BinaryOp extends UnaryOp {\n      constructor(type, name, v1, v2) {\n        super(type, name, v1);\n        this.v2 = v2;\n      }\n    }\n    return BinaryOp;\n});","define('ast/change', function() {\n    class Change {\n      constructor(param, body) {\n        this.param = param;\n        this.body = body;\n      }\n    }\n    return Change;\n});","define('ast/constant', function() {\n    class Constant {\n      constructor(value) {\n        this.value = value;\n      }\n    }\n    return Constant;\n});","define('ast/deprecation', function() {\n    class Deprecation {\n      constructor(term) {\n        this.term = term;\n      }\n    }\n    return Deprecation;\n});","define('ast/deref', function() {\n    class Dereference {\n      constructor(term) {\n        this.term = term;\n      }\n    }\n    return Dereference;\n});","define('ast/identifier', function() {\n    class Identifier {\n      /**\n       * name is the string matched for this identifier.\n       */\n      constructor(value, name) {\n        this.value = value;\n        this.name = name;\n      }\n    }\n    return Identifier;\n});","define('ast/if-then-else', function() {\n    class IfThenElse {\n      constructor(cond, t1, t2) {\n        this.cond = cond;\n        this.t1 = t1;\n        this.t2 = t2;\n      }\n    }\n    return IfThenElse;\n});","define('ast/operation', function() {\n    class Operation {\n      constructor(type, name) {\n        this.type = type;\n        this.name = name;\n      }\n    }\n    return Operation;\n});","define('ast/propagation', function() {\n    class Propagation {\n      constructor() {\n      }\n    }\n    return Propagation;\n});","define('ast/provisional-constant', function() {\n    class ProvisionalConstant {\n      constructor(term) {\n        this.term = term;\n      }\n    }\n    return ProvisionalConstant;\n});","define('ast/recursion', function() {\n    class Recursion {\n      constructor(param, body) {\n        this.param = param;\n        this.body = body;\n      }\n    }\n    return Recursion;\n});","define('ast/unary-op', ['ast/operation'], function(Operation) {    \n    class UnaryOp extends Operation {\n      constructor(type, name, v1) {\n        super(type, name);\n        this.v1 = v1;\n      }\n    }\n    return UnaryOp;\n});","define(['link', 'term', 'box', 'nodes/promo'], \n    function(Link, Term, Box, Promo) {\n\n\t// !-box \n\tclass BoxWrapper extends Term {\n\n\t\tconstructor(prin, box, auxs) {\n\t\t\tsuper(prin, auxs);\n\t\t\tthis.box = box;\n\t\t}\n\n\t\tstatic create() {\n\t\t\tvar wrapper = new BoxWrapper();\n\t\t\tvar box = new Box().addToGroup(wrapper);\n\t\t\tvar promo = new Promo().addToGroup(wrapper);\n\t\t\twrapper.set(promo, box, []);\n\t\t\treturn wrapper;\n\t\t}\n\n\t\tset(prin, box, auxs) {\n\t\t\tsuper.set(prin, auxs);\n\t\t\tthis.box = box;\n\t\t}\n\n\t\tremoveAux(aux) {\n\t\t\tthis.auxs.splice(this.auxs.indexOf(aux), 1);\n\t\t\taux.deleteAndPreserveOutLink();\n\t\t}\n\n\t\tmoveOut() {\n\t\t\tfor (let link of Array.from(this.box.links)) {\n\t\t\t\tlink.changeToGroup(this.group);\n\t\t\t}\n\t\t\tfor (let link of Array.from(this.links)) {\n\t\t\t\tlink.changeToGroup(this.group);\n\t\t\t}\n\t\t\tfor (let node of Array.from(this.box.nodes)) {\n\t\t\t\tnode.changeToGroup(this.group);\n\t\t\t}\n\t\t\tfor (let aux of Array.from(this.auxs)) {\n\t\t\t\taux.changeToGroup(this.group);\n\t\t\t}\n\t\t\tthis.prin.changeToGroup(this.group);\n\t\t\tfor (let node of Array.from(this.nodes)) {\n\t\t\t\tnode.changeToGroup(this.group);\n\t\t\t}\n\t\t}\n\n\t\tcopyBox(map) {\n\t\t\tvar newBoxWrapper = new BoxWrapper();\n\t\t\tvar newPrin = this.prin.copy().addToGroup(newBoxWrapper);\n\t\t\tnewBoxWrapper.prin = newPrin;\n\t\t\tmap.set(this.prin.key, newPrin.key);\n\n\t\t\tvar newBox = new Box().addToGroup(newBoxWrapper);\n\t\t\tnewBoxWrapper.box = newBox;\n\n\t\t\tnewBoxWrapper.auxs = [];\n\t\t\tfor (let node of this.box.nodes) {\n\t\t\t\tvar newNode;\n\t\t\t\tif (node instanceof BoxWrapper) {\n\t\t\t\t\tnewNode = node.copyBox(map).addToGroup(newBox);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar newNode = node.copy().addToGroup(newBox);\n\t\t\t\t\tmap.set(node.key, newNode.key);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let aux of this.auxs) {\n\t\t\t\tvar newAux = aux.copy().addToGroup(newBoxWrapper);\n\t\t\t\tnewBoxWrapper.auxs.push(newAux);\n\t\t\t\tmap.set(aux.key, newAux.key);\n\t\t\t}\n\n\t\t\tfor (let link of this.box.links) {\n\t\t\t\tvar newLink = new Link(map.get(link.from), map.get(link.to), link.fromPort, link.toPort).addToGroup(newBox);\n\t\t\t\tnewLink.reverse = link.reverse;\n\t\t\t}\n\t\t\tfor (let link of this.links) {\n\t\t\t\tvar newLink = new Link(map.get(link.from), map.get(link.to), link.fromPort, link.toPort).addToGroup(newBoxWrapper);\n\t\t\t\tnewLink.reverse = link.reverse;\n\t\t\t}\n\n\t\t\treturn newBoxWrapper;\n\t\t}\n\n\t\tcopy() {\n\t\t\tvar map = new Map();\n\t\t\treturn this.copyBox(map);\n\t\t}\n\n\t\tdelete() {\n\t\t\tthis.box.delete();\n\t\t\tfor (let aux of Array.from(this.auxs)) {\n\t\t\t\taux.delete();\n\t\t\t}\n\t\t\tthis.prin.delete();\n\t\t\tsuper.delete();\n\t\t}\n\n\t\tdeleteAndPreserveLink() {\n\t\t\tthis.box.delete();\n\t\t\tfor (let aux of Array.from(this.auxs)) {\n\t\t\t\tthis.removeAux(aux); // preserve outLink\n\t\t\t}\n\t\t\tthis.prin.deleteAndPreserveInLink(); //preserve inLink\n\t\t\tsuper.delete();\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = \"\";\n\t\t\t\n\t\t\tfor (let node of this.nodes) {\n\t\t\t\tstr += node.draw(level);\n\t\t\t}\n\t\t\t\n\t\t\treturn str;\n\t\t}\n\t}\n\n\treturn BoxWrapper;\n});","define(['group'], function(Group) {\n\n    // general box-ed subgraph\n\tclass Box extends Group {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.nodes = [];\n\t\t\tthis.links = [];\n\t\t}\n\n\t\tcopy(graph) {\n\t\t\t// this shouldnt be call, since every box should be inside a wrapper\n\t\t}\t\n\n\t\tdraw(level) {\n\t\t\tvar str = \"\";\n\t\t\tfor (let node of this.nodes) {\n\t\t\t\tstr += node.draw(level + '  ');\n\t\t\t}\n\t\t\treturn level + 'subgraph cluster_' + this.key + ' {' \n\t\t\t\t + level + '  graph[style=dotted];'\n\t\t\t\t + str \n\t\t\t\t + level + '};';\n\t\t}\n\t}\n\treturn Box;\n});","define(['group', 'nodes/contract', 'nodes/promo', 'nodes/recur', 'nodes/abs', 'nodes/weak'],\n\tfunction(Group, Contract, Promo, Recur, Abs, Weak) {\n\n\tclass GC {\n\n\t\tconstructor(graph) {\n\t\t\tthis.graph = graph;\n\t\t\tthis.noMore = false;\n\t\t}\n\t\t\n\t\tcollect() {\n\t\t\t/*\n\t\t\tdo {\n\t\t\t\tthis.noMore = true;\n\t\t\t\tthis.collectInGroup(this.graph.child);\n\t\t\t} while (!this.noMore)\n\t\t\t*/\n\t\t}\n\n\t\tcollectInGroup(group) {\n\t\t\tfor (let node of Array.from(group.nodes)) {\n\t\t\t\tif ((node instanceof Weak) || (node instanceof Contract && node.findLinksInto(null).length == 0)) {\n\t\t\t\t\tvar link = node.findLinksOutOf(null)[0];\n\t\t\t\t\tvar nextNode = this.graph.findNodeByKey(link.to);\n\t\t\t\t\tif (!(nextNode instanceof Abs && link.toPort == \"w\")) { \n\t\t\t\t\t\tthis.noMore = false;\n\t\t\t\t\t\tthis.collectFromBottom(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (node instanceof Group) {\n\t\t\t\t\tthis.collectInGroup(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcollectFromBottom(node) {\n\t\t\tif ((node instanceof Contract && node.findLinksInto(null).length != 0)) {\n\n\t\t\t}\n\t\t\telse if (node instanceof Promo || node instanceof Recur) {\n\t\t\t\tfor (let aux of node.group.auxs) {\n\t\t\t\t\tthis.collectFromBottom(aux);\n\t\t\t\t}\n\t\t\t\tnode.group.delete();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (let link of node.findLinksOutOf(null)) {\n\t\t\t\t\tthis.collectFromBottom(this.graph.findNodeByKey(link.to));\n\t\t\t\t}\n\t\t\t\tnode.delete();\n\t\t\t}\n\t\t}\n\t}\n\n\treturn GC;\n});","window.mainGraph = null;\n\nfunction union_arrays (x, y) {\n  var obj = {};\n  for (var i = x.length-1; i >= 0; -- i)\n     obj[x[i]] = x[i];\n  for (var i = y.length-1; i >= 0; -- i)\n     obj[y[i]] = y[i];\n  var res = []\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k))  // <-- optional\n      res.push(obj[k]);\n  }\n  return res;\n}\n\n\ndefine(['ast/abstraction', 'ast/application', 'ast/identifier', 'ast/constant',\n\t'ast/operation', 'ast/unary-op', 'ast/binary-op', 'ast/if-then-else', 'ast/recursion',\n\t'ast/provisional-constant', 'ast/change', 'ast/assign', 'ast/propagation', \n\t'ast/deprecation', 'ast/deref', 'parser/lexer', 'parser/parser', 'token', 'link',\n\t'graph', 'group', 'term', 'box-wrapper', 'nodes/expo', 'nodes/abs', 'nodes/app',\n\t'nodes/binop', 'nodes/const', 'nodes/contract', 'nodes/der', 'nodes/var', \n\t'nodes/if', 'nodes/pax', 'nodes/promo', 'nodes/recur', 'nodes/start', 'nodes/unop',\n\t'nodes/weak', 'nodes/delta', 'nodes/set', 'nodes/dep', 'nodes/deref', 'nodes/mod',\n\t'nodes/prop', 'nodes/prov', 'gc'\n], \n\tfunction(Abstraction, Application, Identifier, Constant, \n\t\tOperation, UnaryOp, BinaryOp, IfThenElse, Recursion,\n\t\tProvisionalConstant, Change, Assign, Propagation,\n\t\tDeprecation, Dereference, Lexer, Parser, MachineToken, Link,\n\t\tGraph, Group, Term, BoxWrapper, Expo, Abs, App,\n\t\tBinOp, Const, Contract, Der, Var, \n\t\tIf, Pax, Promo, Recur, Start, UnOp,\n\t\tWeak, Delta, Set, Dep, Deref, Mod, Prop, Prov, GC) {\n\t\t\t\n\tclass GoIMachine {\n\t\t\n\t\tconstructor() {\n\t\t\tthis.graph = new Graph(this);\n\t\t\twindow.mainGraph = this.graph; // cheating!\n\t\t\tthis.token = new MachineToken(this); \n\t\t\tthis.gc = new GC(this.graph);\n\t\t\tthis.count = 0;\n\n\t\t\tthis.token.isMain = true;\n\t\t\tthis.evalTokens = [];\n\t\t\tthis.cells = [];\n\t\t\tthis.evaluating = false;\n\t\t\tthis.newValues = new Map();\n\t\t\tthis.hasUpdate = false;\n\t\t}\n\n\t\tcompile(source) {\n\t\t\tconst lexer = new Lexer(source + '\\0');\n\t\t\tconst parser = new Parser(lexer);\n\t\t\tconst ast = parser.parse();\n\t\t\t// init\n\t\t\tthis.graph.clear();\n\t\t\tthis.token.reset();\n\t\t\tthis.count = 0;\n\n\t\t\tthis.evalTokens = [];\n\t\t\tthis.cells = [];\n\t\t\tthis.readyEvalTokens = 0;\n\t\t\tthis.evaluating = false;\n\t\t\tthis.newValues.clear();\n\t\t\tthis.hasUpdate = false;\n\t\t\t// create graph\n\t\t\tvar start = new Start().addToGroup(this.graph.child);\n\t\t\tvar term = this.toGraph(ast, this.graph.child);\n\t\t\tnew Link(start.key, term.prin.key, \"n\", \"s\").addToGroup(this.graph.child);\n\t\t\tthis.deleteVarNode(this.graph.child);\n\t\t}\n\n\t\t// translation\n\t\ttoGraph(ast, group) {\n\t\t\tvar graph = this.graph;\n\n\t\t\tif (ast instanceof Identifier) {\n\t\t\t\tvar v = new Var(ast.name).addToGroup(group);\n\t\t\t\treturn new Term(v, [v]);\n\t\t\t} \n\n\t\t\telse if (ast instanceof Abstraction) {\n\t\t\t\tvar param = ast.param;\n\t\t\t\tvar wrapper = BoxWrapper.create().addToGroup(group);\n\t\t\t\tvar abs = new Abs().addToGroup(wrapper.box);\n\t\t\t\tvar term = this.toGraph(ast.body, wrapper.box);\n\t\t\t\tnew Link(wrapper.prin.key, abs.key, \"n\", \"s\").addToGroup(wrapper);\n\n\t\t\t\tnew Link(abs.key, term.prin.key, \"e\", \"s\").addToGroup(abs.group);\n\n\t\t\t\tvar auxs = Array.from(term.auxs);\n\t\t\t\tvar paramUsed = false;\n\t\t\t\tvar auxNode;\n\t\t\t\tfor (let aux of term.auxs) {\n\t\t\t\t\tif (aux.name == param) {\n\t\t\t\t\t\tparamUsed = true;\n\t\t\t\t\t\tauxNode = aux;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (paramUsed) {\n\t\t\t\t\tauxs.splice(auxs.indexOf(auxNode), 1);\n\t\t\t\t} else {\n\t\t\t\t\tauxNode = new Weak(param).addToGroup(abs.group);\n\t\t\t\t}\n\t\t\t\tnew Link(auxNode.key, abs.key, \"nw\", \"w\", true).addToGroup(abs.group);\n\n\t\t\t\twrapper.auxs = wrapper.createPaxsOnTopOf(auxs);\n\n\t\t\t\treturn new Term(wrapper.prin, wrapper.auxs);\n\t\t\t} \n\n\t\t\telse if (ast instanceof Application) {\n\t\t\t\tvar app = new App().addToGroup(group);\n\t\t\t\t//lhs\n\t\t\t\tvar left = this.toGraph(ast.lhs, group);\n\t\t\t\tvar der = new Der(left.prin.name).addToGroup(group);\n\t\t\t\tnew Link(der.key, left.prin.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\t// rhs\n\t\t\t\tvar right = this.toGraph(ast.rhs, group);\t\t\n\t\t\t\t\n\t\t\t\tnew Link(app.key, der.key, \"w\", \"s\").addToGroup(group);\n\t\t\t\tnew Link(app.key, right.prin.key, \"e\", \"s\").addToGroup(group);\n\n\t\t\t\treturn new Term(app, Term.joinAuxs(left.auxs, right.auxs, group));\n\t\t\t} \n\n\t\t\telse if (ast instanceof Constant) {\n\t\t\t\tvar wrapper = BoxWrapper.create().addToGroup(group);\n\t\t\t\tvar constant = new Const(ast.value).addToGroup(wrapper.box);\n\t\t\t\tnew Link(wrapper.prin.key, constant.key, \"n\", \"s\").addToGroup(wrapper);\n\t\t\t\treturn new Term(wrapper.prin, wrapper.auxs);\n\t\t\t}\n\n\t\t\telse if (ast instanceof BinaryOp) {\n\t\t\t\tvar binop = new BinOp(ast.name).addToGroup(group);\n\n\t\t\t\tbinop.subType = ast.type;\n\t\t\t\tvar left = this.toGraph(ast.v1, group);\n\t\t\t\tvar right = this.toGraph(ast.v2, group);\n\n\t\t\t\tnew Link(binop.key, left.prin.key, \"w\", \"s\").addToGroup(group);\n\t\t\t\tnew Link(binop.key, right.prin.key, \"e\", \"s\").addToGroup(group);\n\n\t\t\t\treturn new Term(binop, Term.joinAuxs(left.auxs, right.auxs, group));\n\t\t\t}\n\n\t\t\telse if (ast instanceof UnaryOp) {\n\t\t\t\tvar unop = new UnOp(ast.name).addToGroup(group);\n\t\t\t\tunop.subType = ast.type;\n\t\t\t\tvar box = this.toGraph(ast.v1, group);\n\n\t\t\t\tnew Link(unop.key, box.prin.key, \"n\", \"s\").addToGroup(group);\n\n\t\t\t\treturn new Term(unop, box.auxs);\n\t\t\t}\n\n\t\t\telse if (ast instanceof IfThenElse) {\n\t\t\t\tvar ifnode = new If().addToGroup(group);\n\t\t\t\tvar cond = this.toGraph(ast.cond, group);\n\t\t\t\tvar t1 = this.toGraph(ast.t1, group);\n\t\t\t\tvar t2 = this.toGraph(ast.t2, group);\n\n\t\t\t\tnew Link(ifnode.key, cond.prin.key, \"w\", \"s\").addToGroup(group);\n\t\t\t\tnew Link(ifnode.key, t1.prin.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\tnew Link(ifnode.key, t2.prin.key, \"e\", \"s\").addToGroup(group);\n\n\t\t\t\treturn new Term(ifnode, Term.joinAuxs(Term.joinAuxs(t1.auxs, t2.auxs, group), cond.auxs, group));\n\t\t\t}\n\n\t\t\telse if (ast instanceof Recursion) {\n\t\t\t\tvar p1 = ast.param;\n\t\t\t\t// recur term\n\t\t\t\tvar wrapper = BoxWrapper.create().addToGroup(group);\n\t\t\t\twrapper.prin.delete();\n\t\t\t\tvar recur = new Recur().addToGroup(wrapper);\n\t\t\t\twrapper.prin = recur;\n\t\t\t\tvar box = this.toGraph(ast.body, wrapper.box);\n\t\t\t\twrapper.auxs = wrapper.createPaxsOnTopOf(box.auxs);\n\n\t\t\t\tnew Link(recur.key, box.prin.key, \"e\", \"s\").addToGroup(wrapper);\n\n\t\t\t\tvar p1Used = false;\n\t\t\t\tvar auxNode1;\n\t\t\t\tfor (var i=0; i<wrapper.auxs.length; i++) {\n\t\t\t\t\tvar aux = wrapper.auxs[i];\n\t\t\t\t\tif (aux.name == p1) {\n\t\t\t\t\t\tp1Used = true;\n\t\t\t\t\t\tauxNode1 = this.graph.findNodeByKey(aux.findLinksInto(null)[0].from);\n\t\t\t\t\t\taux.delete();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (p1Used) {\n\t\t\t\t\t// wrapper.auxs.splice(wrapper.auxs.indexOf(auxNode1), 1);\n\t\t\t\t} else {\n\t\t\t\t\tauxNode1 = new Weak(p1).addToGroup(wrapper.box);\n\t\t\t\t}\n\t\t\t\tnew Link(auxNode1.key, recur.key, \"nw\", \"w\", true).addToGroup(wrapper);\n\t\t\t\treturn new Term(wrapper.prin, wrapper.auxs);\n\t\t\t}\n\n\t\t\telse if (ast instanceof ProvisionalConstant) {\n\t\t\t\tvar term = this.toGraph(ast.term, group);\n\t\t\t\tvar prov = new Prov().addToGroup(group);\n\t\t\t\tnew Link(prov.key, term.prin.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\treturn new Term(prov, term.auxs);\n\t\t\t}\n\n\t\t\telse if (ast instanceof Deprecation) {\n\t\t\t\tvar term = this.toGraph(ast.term, group);\n\t\t\t\tvar dep = new Dep().addToGroup(group);\n\t\t\t\tnew Link(dep.key, term.prin.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\treturn new Term(dep, term.auxs);\n\t\t\t}\n\n\t\t\telse if (ast instanceof Dereference) {\n\t\t\t\tvar term = this.toGraph(ast.term, group);\n\t\t\t\tvar deref = new Deref().addToGroup(group);\n\t\t\t\tnew Link(deref.key, term.prin.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\treturn new Term(deref, term.auxs); \n\t\t\t}\n\n\t\t\telse if (ast instanceof Change) {\n\t\t\t\tvar param = ast.param;\n\t\t\t\tvar delta = new Delta().addToGroup(group);\n\t\t\t\tvar term = this.toGraph(ast.body, group);\n\t\t\t\tvar v = new Var(param).addToGroup(group);\n\t\t\t\tnew Link(delta.key, v.key, \"w\", \"s\").addToGroup(group);\n\t\t\t\tnew Link(delta.key, term.prin.key, \"e\", \"s\").addToGroup(group);\n\n\t\t\t\tvar auxs = Array.from(term.auxs);\n\t\t\t\tvar p1Used = false;\n\t\t\t\tvar auxNode1;\n\t\t\t\tfor (var i=0; i<term.auxs.length; i++) {\n\t\t\t\t\tvar aux = auxs[i];\n\t\t\t\t\tif (aux.name == param) {\n\t\t\t\t\t\tp1Used = true;\n\t\t\t\t\t\tauxs.splice(i, 1);\n\t\t\t\t\t\tvar con = new Contract(aux.name).addToGroup(group);\n\t\t\t\t\t\tnew Link(aux.key, con.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\t\t\tnew Link(v.key, con.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\t\t\tauxs.push(con);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!p1Used)\n\t\t\t\t\tauxs.push(v);\n\n\t\t\t\treturn new Term(delta, auxs);\n\t\t\t}\n\n\t\t\telse if (ast instanceof Assign) {\n\t\t\t\tvar param = ast.param;\n\t\t\t\tvar setn = new Set().addToGroup(group);\n\t\t\t\tvar term = this.toGraph(ast.body, group);\n\t\t\t\tvar v = new Var(param).addToGroup(group);\n\t\t\t\tnew Link(setn.key, v.key, \"w\", \"s\").addToGroup(group);\n\t\t\t\tnew Link(setn.key, term.prin.key, \"e\", \"s\").addToGroup(group);\n\n\t\t\t\tvar auxs = Array.from(term.auxs);\n\t\t\t\tvar p1Used = false;\n\t\t\t\tvar auxNode1;\n\t\t\t\tfor (var i=0; i<term.auxs.length; i++) {\n\t\t\t\t\tvar aux = auxs[i];\n\t\t\t\t\tif (aux.name == param) {\n\t\t\t\t\t\tp1Used = true;\n\t\t\t\t\t\tauxs.splice(i, 1);\n\t\t\t\t\t\tvar con = new Contract(aux.name).addToGroup(group);\n\t\t\t\t\t\tnew Link(aux.key, con.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\t\t\tnew Link(v.key, con.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\t\t\tauxs.push(con);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!p1Used)\n\t\t\t\t\tauxs.push(v);\n\n\t\t\t\treturn new Term(setn, auxs);\n\t\t\t}\n\n\t\t\telse if (ast instanceof Propagation) {\n\t\t\t\tvar prop = new Prop().addToGroup(group);\n\t\t\t\treturn new Term(prop, []);\n\t\t\t}\n\t\t}\n\n\t\tdeleteVarNode(group) {\n\t\t\tfor (let node of Array.from(group.nodes)) {\n\t\t\t\tif (node instanceof Group)\n\t\t\t\t\tthis.deleteVarNode(node);\n\t\t\t\telse if (node instanceof Var) \n\t\t\t\t\tnode.deleteAndPreserveOutLink();\n\t\t\t}\n\t\t}\n\n\t\tstartPropagation() {\n\t\t\tthis.evaluating = true;\n\t\t\tthis.hasUpdate = false;\n\t\t\tfor (let key of this.cells) {\n\t\t\t\tvar cell = this.graph.findNodeByKey(key);\n\t\t\t\tvar evalToken = new MachineToken(this);\n\t\t\t\tevalToken.isMain = false;\n\t\t\t\tevalToken.setLink(cell.findLinksOutOf('e')[0]);\n\t\t\t\tthis.evalTokens.push(evalToken);\n\t\t\t} \n\t\t}\n\n\t\tshuffle(a) {\n\t\t    var j, x, i;\n\t\t    for (i = a.length - 1; i > 0; i--) {\n\t\t        j = Math.floor(Math.random() * (i + 1));\n\t\t        x = a[i];\n\t\t        a[i] = a[j];\n\t\t        a[j] = x;\n\t\t    }\n\t\t}\n\n\t\tbatchPass(tokens) {\n\t\t\tvar arr_2 = Array.from(tokens);\n\t\t\t// random\n\t\t\t/*\n\t\t\tvar arr = Array.from(new Array(tokens.length),(val,index)=>index+1);\n\t\t\tthis.shuffle(arr);\n\t\t\tfor (var i=0; i<arr.length; i++) {\n\t\t\t\tvar token = arr_2[arr[i]-1];\n\t\t\t\tthis.tokenPass(token, flag, dataStack, boxStack, modStack);\n\t\t\t}\n\t\t\t*/\n\t\t\t\n\t\t\t// all progress 1 step\n\t\t\tfor (var i=0; i<arr_2.length; i++) {\n\t\t\t\tvar token = arr_2[i];\n\t\t\t\t\n\t\t\t\tthis.tokenPass(token);\n\t\t\t}\n\t\t}\n\n\t\t// machine step\n\t\tpass(flag, dataStack, boxStack, modStack) {\t\n\t\t\tif (!finished) {\n\t\t\t\t/*\n\t\t\t\tthis.count++;\n\t\t\t\tif (this.count == 200) {\n\t\t\t\t\tthis.count = 0;\n\t\t\t\t\tthis.gc.collect();\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tif (this.evaluating) {\n\t\t\t\t\tthis.batchPass(this.evalTokens);\n\t\t\t\t\tif (this.evalTokens.length == 0) {\n\t\t\t\t\t\tthis.evaluating = false;\n\t\t\t\t\t\tvar machine = this;\n\t\t\t\t\t\tthis.newValues.forEach(function(value, key, map) {\n\t\t\t\t\t\t\tvar mod = machine.graph.findNodeByKey(key);\n\t\t\t\t\t\t\tvar oldData = mod.update(value);\n\t\t\t\t\t\t\tif (oldData != value)\n\t\t\t\t\t\t\t\tmachine.hasUpdate = true;\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.newValues.clear();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse\n\t\t\t\t\tthis.tokenPass(this.token, flag, dataStack, boxStack);\n\t\t\t}\n\t\t}\n\n\t\ttokenPass(token, flag, dataStack, boxStack) {\n\t\t\tvar node;\n\t\t\tif (!token.transited) {\n\t\t\t\tif (token.link != null) {\n\t\t\t\t\tvar target = token.forward ? token.link.to : token.link.from;\n\t\t\t\t\tnode = this.graph.findNodeByKey(target);\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t\tnode = this.graph.findNodeByKey(\"nd1\"); \n\t\t\t\t\n\t\t\t\tvar nextLink;\n\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\tnextLink = node.transition(token, token.link);\n\t\t\t\tconsole.log(nextLink);\n\n\n\t\t\t\tif (nextLink != null) {\n\t\t\t\t\ttoken.setLink(nextLink);\n\t\t\t\t\ttoken.transited = true;\n\t\t\t\t\tif (token.isMain) {\n\t\t\t\t\t\tthis.printHistory(token, flag, dataStack, boxStack); \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttoken.transited = false;\n\t\t\t\t\tif (token.isMain) {\n\t\t\t\t\t\ttoken.setLink(null);\n\t\t\t\t\t\t//this.gc.collect();\n\t\t\t\t\t\tplay = false;\n\t\t\t\t\t\tplaying = false;\n\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\ttoken.setLink(token.link);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tvar target = token.forward ? token.link.from : token.link.to;\n\t\t\t\tnode = this.graph.findNodeByKey(target);\n\t\t\t\tvar nextLink = node.rewrite(token, token.link);\n\t\t\t\tconsole.log(nextLink);\n\t\t\t\tif (!token.rewrite) {\n\t\t\t\t\ttoken.transited = false;\n\t\t\t\t\tthis.tokenPass(token, flag, dataStack, boxStack); \n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttoken.setLink(nextLink);\n\t\t\t\t\tif (token.isMain)\n\t\t\t\t\t\tthis.printHistory(token, flag, dataStack, boxStack);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t\n\n\t\tprintHistory(token, flag, dataStack, boxStack) {\n\t\t\tflag.val(token.rewriteFlag + '\\n' + flag.val());\n\t\t\tvar dataStr = token.dataStack.length == 0 ? '□' : Array.from(token.dataStack).reverse().toString() + ',□';\n\t\t\tdataStack.val(dataStr + '\\n' + dataStack.val());\n\t\t\tvar boxStr = token.boxStack.length == 0 ? '□' : Array.from(token.boxStack).reverse().toString() + ',□';\n\t\t\tboxStack.val(boxStr + '\\n' + boxStack.val());\n\t\t}\n\n\t}\n\treturn new GoIMachine();\t\n});","define(['group'], function(Group) {\n\n\t// general graph\n\tclass Graph {\n\t\t\n\t\tconstructor(machine) {\n\t\t\tthis.machine = machine;\n\t\t\tthis.clear();\n\t\t}\n\n\t\tclear() {\n\t\t\tthis.key = 0;\n\t\t\tthis.linkKey = 0;\n\t\t\tthis.allNodes = new Map(); // for efficiency searching\n\t\t\tthis.allLinks = []; // for printing ONLY\n\t\t\tthis.child = new Group(); \n\t\t}\n\n\t\t// give a key to a node and add it to allNodes\n\t\taddNode(node) {\n\t\t\tnode.key = 'nd' + this.key;\n\t\t\tthis.allNodes.set(node.key, node);\n\t\t\tthis.key++;\n\t\t}\n\n\t\t// also removes connected links\n\t\tremoveNode(node) {\n\t\t\tfor (let link of Array.from(node.findLinksConnected())) {\n\t\t\t\tlink.delete();\n\t\t\t}\n\t\t\treturn this.allNodes.delete(node.key);\n\t\t}\n\n\t\tfindNodeByKey(key) {\n\t\t\treturn this.allNodes.get(key);\n\t\t}\n\n\t\taddLink(link) {\n\t\t\tthis.allLinks.push(link);\n\t\t}\n\n\t\tremoveLink(link) {\n\t\t\tthis.allLinks.splice(this.allLinks.indexOf(link), 1);\n\t\t}\n\n\t\tdraw(width, height) {\n\t\t\tvar str = this.child.draw('\\n  ');\n\t\t\tstr += '\\n';\n\t\t\tfor (let link of this.allLinks) {\n\t\t\t\tstr += link.draw('\\n  ');\n\t\t\t}\n\t\t\treturn 'digraph G {'\n\t\t\t   \t+'\\n  rankdir=BT;'\n\t\t\t   \t+'\\n  edge[arrowhead=none,arrowtail=none];'\n\t\t\t   \t+'\\n  node[fixedsize=true,shape=circle,style=filled]'\n\t\t\t   \t+'\\n  size=\"' + width + ',' + height + '\";'\n\t\t\t   \t+'\\n  labeldistance=0;'\n\t\t\t   \t+'\\n  nodesep=.175;'\n\t  \t\t\t+'\\n  ranksep=.175;'\n\t\t\t\t+'\\n' \n\t\t\t\t+     str \n\t\t\t   \t+'\\n}';\n\t\t}\n\t}\n\n\treturn Graph;\n});\n","define(['node'], function(Node) {\n\n\t// general group in a graph (subgraph)\n\tclass Group extends Node {\n\t\tconstructor() {\n\t\t\tsuper(null, null, null); // shape, text, name\n\t\t\tthis.nodes = [];\n\t\t\tthis.links = []; // for copying\n\t\t}\n\n\t\taddNode(node) {\n\t\t\tthis.nodes.push(node);\n\t\t}\n\n\t\tremoveNode(node) {\n\t\t\treturn this.nodes.splice(this.nodes.indexOf(node), 1);\n\t\t}\n\n\t\taddLink(link) {\n\t\t\tthis.links.push(link);\n\t\t}\n\n\t\tremoveLink(link) {\n\t\t\tvar i = this.links.indexOf(link);\n\t\t\tif (i != -1)\n\t\t\t\tthis.links.splice(i, 1);\n\t\t}\n\n\t\tdelete() {\n\t\t\tfor (let node of Array.from(this.nodes)) {\n\t\t\t\tnode.delete();\n\t\t\t}\n\t\t\tsuper.delete();\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = \"\";\n\t\t\tfor (let node of this.nodes) {\n\t\t\t\tstr += node.draw(level);\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\treturn Group;\n});\n","define(function() {\n\n\tclass Link {\n\n\t\tconstructor(from, to, fromPort, toPort, reverse) {\n\t\t\tthis.from = from;\n\t\t\tthis.to = to;\n\t\t\tthis.fromPort = fromPort;\n\t\t\tthis.toPort = toPort;\n\t\t\tthis.reverse = reverse;\n\n\t\t\tthis.colour = null;\n\t\t\tthis.penWidth = null;\n\t\t\tthis.addToGraph(window.mainGraph); // cheating\n\t\t\tthis.addToNode(); // cheating\n\t\t}\n\n\t\taddToNode() {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.push(this);\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.push(this);\n\t\t}\n\n\t\taddToGraph(graph) {\n\t\t\tif (graph != null)\n\t\t\t\tgraph.addLink(this);\n\t\t\tthis.graph = graph;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\taddToGroup(group) {\n\t\t\tgroup.addLink(this);\n\t\t\tthis.group = group;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\tchangeToGroup(group) {\n\t\t\tthis.group.removeLink(this);\n\t\t\tthis.addToGroup(group);\n\t\t\treturn this;\n\t\t}\n\n\t\tchangeFrom(key, port) {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.splice(fromNode.links.indexOf(this), 1);\n\n\t\t\tthis.from = key;\n\t\t\tthis.fromPort = port;\n\t\t\tfromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.push(this);\n\t\t}\n\n\t\tchangeTo(key, port) {\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.splice(toNode.links.indexOf(this), 1);\n\n\t\t\tthis.to = key;\n\t\t\tthis.toPort = port;\n\t\t\ttoNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.push(this);\n\t\t}\n\n\t\tfocus(colour) {\n\t\t\tthis.colour = colour;\n\t\t\tthis.penWidth = \"20\";\n\t\t}\n\n\t\tclearFocus() {\n\t\t\tthis.colour = null;\n\t\t\tthis.penWidth = null;\n\t\t}\n\n\t\tdelete() {\n\t\t\tvar fromNode = this.graph.findNodeByKey(this.from);\n\t\t\tfromNode.links.splice(fromNode.links.indexOf(this), 1);\n\t\t\tvar toNode = this.graph.findNodeByKey(this.to);\n\t\t\ttoNode.links.splice(toNode.links.indexOf(this), 1);\n\t\t\tthis.group.removeLink(this);\n\t\t\tthis.graph.removeLink(this);\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this.from + \"->\" + this.to;\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = level;\n\n\t\t\tif (!this.reverse) {\n\t\t\t\tstr += this.from + '->' + this.to + '[';\n\t\t\t\tif (this.fromPort != null)\n\t\t\t\t\tstr += 'tailport=' + this.fromPort;\n\t\t\t\tif (this.toPort != null)\n\t\t\t\t\tstr += ',headport=' + this.toPort;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstr += this.to + '->' + this.from + '[dir=back';\n\t\t\t\tif (this.fromPort != null)\n\t\t\t\t\tstr += ',headport=' + this.fromPort;\n\t\t\t\tif (this.toPort != null)\n\t\t\t\t\tstr += ',tailport=' + this.toPort;\n\t\t\t}\n\n\t\t\tif (this.colour != null)\n\t\t\t\tstr += ',color=' + this.colour;\n\t\t\tif (this.penWidth != null)\n\t\t\t\tstr += ',penwidth=' + this.penWidth;\n\n\t\t\tstr += '];';\n\t\t\treturn str;\n\t\t}\n\t}\n\n\treturn Link;\n});","var showKey = false;\n\ndefine(function() {\n\n\tclass Node {\n\n\t\tconstructor(shape, text, colour, name) {\n\t\t\tthis.key = null;\n\t\t\tthis.shape = shape;\n\t\t\tthis.text = text;\n\t\t\tthis.colour = colour;\n\t\t\tthis.name = name; // identifier name or constant name if any\n\t\t\tthis.graph = null;\n\t\t\tthis.group = null;\n\t\t\tthis.width = null;\n\t\t\tthis.height = null;\n\t\t\tthis.links = [];\n\t\t\tthis.addToGraph(window.mainGraph); // cheating!\n\t\t}\n\n\t\taddToGraph(graph) {\n\t\t\tif (graph != null)\n\t\t\t\tgraph.addNode(this);\n\t\t\tthis.graph = graph;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\taddToGroup(group) {\n\t\t\tgroup.addNode(this);\n\t\t\tthis.group = group;\n\t\t\treturn this; // to provide chain operation\n\t\t}\n\n\t\tchangeToGroup(group) {\n\t\t\tthis.group.removeNode(this);\n\t\t\tthis.addToGroup(group);\n\t\t\treturn this;\n\t\t}\n\n\t\tfindLinksConnected() {\n\t\t\treturn this.links;\n\t\t}\n\n\t\tfindLinksInto(toPort) {\n\t\t\tvar links = [];\n\t\t\tfor (let link of this.links) {\n\t\t\t\tif (link.to == this.key && (toPort == null ? true : link.toPort == toPort))\n\t\t\t\t\tlinks.push(link);\n\t\t\t}\n\t\t\treturn links;\n\t\t}\n\n\t\tfindLinksOutOf(fromPort) {\n\t\t\tvar links = [];\n\t\t\tfor (let link of this.links) {\n\t\t\t\tif (link.from == this.key && (fromPort == null ? true : link.fromPort == fromPort))\n\t\t\t\t\tlinks.push(link);\n\t\t\t}\n\t\t\treturn links;\n\t\t}\n\n\t\tcopy(graph) {\n\t\t\tvar newNode = new Node(this.shape, this.text, this.name).addToGraph(graph);\n\t\t\tnewNode.width = this.width;\n\t\t\tnewNode.height = this.height;\n\t\t}\t\n\n\t\t// also delete any connected links\n\t\tdelete() {\n\t\t\tthis.group.removeNode(this);\n\t\t\tthis.graph.removeNode(this);\n\t\t}\n\n\t\tdraw(level) {\n\t\t\tvar str = level + this.key + '[label=\"' + this.text; \n\t\t\tif (showKey)\n\t\t\t\tstr += ':' + this.key;\n\t\t\tstr += '\"';\n\t\t\tif (this.shape != null)\n\t\t\t\tstr += ',shape=' + this.shape;\n\t\t\tif (this.width != null)\n\t\t\t\tstr += ',width=' + this.width;\n\t\t\tif (this.height != null)\n\t\t\t\tstr += ',height=' + this.height;\n\t\t\tstr += ',fillcolor=' + this.colour;\n\t\t\treturn str += '];'\n\t\t}\n\n\t\t// machine instructions\n\t\ttransition(token, link) {\n\t\t\treturn link;\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\ttoken.rewrite = false;\n\t\t\treturn nextLink;\n\t\t}\n\t}\n\n\treturn Node;\n});","define(['node', 'token', 'nodes/app', 'nodes/expo'], function(Node, Token, App, Expo) {\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\n\tclass Abs extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(null, \"λ\", \"yellow\");\n\t\t}\n\t\t\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key && link.toPort == \"s\") {\n\t\t\t\tvar data = token.dataStack.last();\n\t\t\t\tif (data == CompData.PROMPT) {\n\t\t\t\t\ttoken.dataStack.pop();\n\t\t\t\t\ttoken.dataStack.push([CompData.LAMBDA,CompData.EMPTY]);\n\t\t\t\t\ttoken.forward = false;\n\t\t\t\t\treturn link;\n\t\t\t\t}\n\t\t\t\telse if (data == CompData.R) {\n\t\t\t\t\tvar nextLink = this.findLinksOutOf(null)[0];\n\t\t\t\t\ttoken.dataStack.pop();\n\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_LAMBDA;\n\t\t\t\t\treturn nextLink; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\tif (token.rewriteFlag == RewriteFlag.F_LAMBDA && nextLink.from == this.key) {\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\n\t\t\t\tvar prev = this.graph.findNodeByKey(this.findLinksInto(\"s\")[0].from);\n\t\t\t\tif (prev instanceof App) {\n\t\t\t\t\t// M rule\n\t\t\t\t\tvar appLink = prev.findLinksInto(null)[0];\n\t\t\t\t\tvar appOtherLink = prev.findLinksOutOf(\"e\")[0];\n\t\t\t\t\tvar otherNextLink = this.findLinksInto(\"w\")[0];\n\n\t\t\t\t\tnextLink.changeFrom(appLink.from, appLink.fromPort);\n\t\t\t\t\tnextLink.changeToGroup(appLink.group);\n\t\t\t\t\t\n\t\t\t\t\totherNextLink.changeTo(appOtherLink.to, appOtherLink.toPort);\n\t\t\t\t\totherNextLink.reverse = false;\n\n\t\t\t\t\tvar otherNode = this.graph.findNodeByKey(otherNextLink.from);\n\t\t\t\t\tif (otherNode instanceof Expo) \n\t\t\t\t\t\totherNextLink.fromPort = \"n\";\n\t\t\t\t\totherNextLink.changeToGroup(appOtherLink.group);\n\t\t\t\t\t\n\t\t\t\t\tthis.delete();\n\t\t\t\t\tprev.delete();\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\ttoken.rewrite = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\t\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Abs();\n\t\t}\n\t}\n\n\treturn Abs;\n});","define(['node', 'token'], function(Node, Token) {\n\n\tvar CompData = Token.CompData();\n\n\tclass App extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(null, \"@\",\"yellow\");\n\t\t}\n\t\t\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(\"e\")[0];\n\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key && link.fromPort == \"e\") {\n\t\t\t\tvar nextLink = this.findLinksOutOf(\"w\")[0];\n\t\t\t\ttoken.dataStack.pop();\n\t\t\t\ttoken.dataStack.push(CompData.R);\n\t\t\t\ttoken.forward = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new App();\n\t\t}\n\t}\n\n\treturn App;\n});","define(['node', 'token', 'link', 'box-wrapper', 'nodes/promo', 'nodes/const', 'op'], \n\tfunction(Node, Token, Link, BoxWrapper, Promo, Const, Op) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\tvar BinOpType = Op.BinOpType;\n\n\tclass BinOp extends Node {\n\n\t\tconstructor(text) {\n\t\t\tsuper(null, text, \"mediumpurple1\");\n\t\t\tthis.subType = null;\n\t\t}\n\t\t\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(\"e\")[0];\n\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key && link.fromPort == \"e\") {\n\t\t\t\tvar nextLink = this.findLinksOutOf(\"w\")[0];\n\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\ttoken.forward = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key && link.fromPort == \"w\") {\n\t\t\t\tif (token.dataStack[token.dataStack.length-3] == CompData.PROMPT) {\n\t\t\t\t\tvar l = token.dataStack.pop();\n\t\t\t\t\tvar r = token.dataStack.pop();\n\t\t\t\t \t\t\ttoken.dataStack.pop();\n\t\t\t\t \tvar result = this.binOpApply(this.subType, l[0], r[0]);\n\n\t\t\t\t\ttoken.dataStack.push([result,CompData.EMPTY]);\n\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_OP;\t\n\t\t\t\t\treturn this.findLinksInto(null)[0];;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\tif (token.rewriteFlag == RewriteFlag.F_OP && nextLink.to == this.key) {\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\n\t\t\t\tvar left = this.graph.findNodeByKey(this.findLinksOutOf(\"w\")[0].to);\n\t\t\t\tvar right = this.graph.findNodeByKey(this.findLinksOutOf(\"e\")[0].to);\n\n\t\t\t\tif (left instanceof Promo && right instanceof Promo) {\n\t\t\t\t\tvar wrapper = BoxWrapper.create().addToGroup(this.group);\n\t\t\t\t\tvar newConst = new Const(token.dataStack.last()[0]).addToGroup(wrapper.box);\n\t\t\t\t\tnew Link(wrapper.prin.key, newConst.key, \"n\", \"s\").addToGroup(wrapper);\n\t\t\t\t\tnextLink.changeTo(wrapper.prin.key, \"s\");\n\t\t\t\t\t\n\t\t\t\t\tleft.group.delete();\n\t\t\t\t\tright.group.delete();\n\t\t\t\t\tthis.delete();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttoken.rewrite = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\t\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tbinOpApply(type, v1, v2) {\n\t\t\tswitch(type) {\n\t\t\t\tcase BinOpType.And: return v1 && v2;\n\t\t\t\tcase BinOpType.Or: return v1 || v2;\n\t\t\t\tcase BinOpType.Plus: return parseFloat(v1) + parseFloat(v2);\n\t\t\t\tcase BinOpType.Sub: return parseFloat(v1) - parseFloat(v2);\n\t\t\t\tcase BinOpType.Mult: return parseFloat(v1) * parseFloat(v2);\n\t\t\t\tcase BinOpType.Div: return parseFloat(v1) / parseFloat(v2);\n\t\t\t\tcase BinOpType.Lte: return parseFloat(v1) <= parseFloat(v2);\n\t\t\t}\n\t\t}\n\n\t\tstatic createPlus() {\n\t\t\tvar node = new BinOp(\"+\");\n\t\t\tnode.subType = BinOpType.Plus;\n\t\t\treturn node;\n\t\t}\n\n\t\tstatic createMult() {\n\t\t\tvar node = new BinOp(\"*\");\n\t\t\tnode.subType = BinOpType.Mult;\n\t\t\treturn node;\n\t\t}\n\n\t\tcopy() {\n\t\t\tvar newNode = new BinOp(this.text);\n\t\t\tnewNode.subType = this.subType;\n\t\t\treturn newNode;\n\t\t}\n\t}\n\n\treturn BinOp;\n});","define(['node', 'token'], function(Node, Token) {\n\n\tvar CompData = Token.CompData();\n\n\tclass Const extends Node {\n\n\t\tconstructor(name) {\n\t\t\tsuper(null, name, \"mediumpurple1\", name);\n\t\t}\n\t\t\n\t\ttransition(token, link) {\n\t\t\tif (token.dataStack.last() == CompData.PROMPT) {\n\t\t\t\ttoken.dataStack.pop();\n\t\t\t\ttoken.dataStack.push([this.name,CompData.EMPTY]);\n\t\t\t\ttoken.forward = false;\n\t\t\t\treturn link;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Const(this.name);\n\t\t}\n\t}\n\n\treturn Const;\n});","define(['token', 'nodes/expo'], function(Token, Expo) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\n\tclass Contract extends Expo {\n\n\t\tconstructor(name) {\n\t\t\tsuper(null, \"C\", name);\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(null)[0];\n\t\t\t\ttoken.boxStack.push(link);\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_C;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key && token.boxStack.length > 0) {\n\t\t\t\tvar nextLink = token.boxStack.pop();\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\tif (token.rewriteFlag == RewriteFlag.F_C && nextLink.from == this.key) {\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\n\t\t\t\tif (this.findLinksInto(null).length == 1) {\n\t\t\t\t\ttoken.boxStack.pop();\n\t\t\t\t\t/*\n\t\t\t\t\tfor (let _token of nextLink.tokens)\n\t\t\t\t\t\t_token.boxStack.pop();\n\t\t\t\t\t*/\n\t\t\t\t\tvar inLink = this.findLinksInto(null)[0];\n\t\t\t\t\t/*\n\t\t\t\t\tfor (let _token of inLink.tokens)\n\t\t\t\t\t\t_token.setLink(nextLink);\n\t\t\t\t\t*/\n\t\t\t\t\tnextLink.changeFrom(inLink.from, inLink.fromPort);\n\t\t\t\t\tthis.delete();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar i = token.boxStack.last();\n\t\t\t\t\tvar prev = this.graph.findNodeByKey(i.from);\n\t\t\t\t\tif (prev instanceof Contract) {\n\t\t\t\t\t\ttoken.boxStack.pop();\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tfor (let _token of Array.from(nextLink.tokens)) {\n\t\t\t\t\t\t\tif (_token.boxStack.last() == i)\n\t\t\t\t\t\t\t\t_token.boxStack.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let _token of Array.from(i.tokens)) {\n\t\t\t\t\t\t\t_token.setLink(nextLink);\n\t\t\t\t\t\t\t_token.rewriteFlag = RewriteFlag.F_C;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tfor (let link of prev.findLinksInto(null)) {\n\t\t\t\t\t\t\tlink.changeTo(this.key, \"s\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprev.delete();\n\t\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_C;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttoken.rewrite = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\t\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\tvar con = new Contract(this.name);\n\t\t\tcon.text = this.text;\n\t\t\treturn con;\n\t\t}\n\t}\n\n\treturn Contract;\n});","define(['node', 'token', 'box-wrapper', 'nodes/const', 'link', 'nodes/weak'],\n\tfunction(Node, Token, BoxWrapper, Const, Link, Weak) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\n\tclass Delta extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(null, \"Δ\", \"indianred1\");\n\t\t}\n\t\t\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(\"e\")[0];\n\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key) {\n\t\t\t\tif (link.fromPort == \"e\") {\n\t\t\t\t\tvar nextLink = this.findLinksOutOf(\"w\")[0];\n\t\t\t\t\ttoken.dataStack.pop();\n\t\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\t\ttoken.forward = true; \n\t\t\t\t\treturn nextLink;\n\t\t\t\t}\n\t\t\t\telse if (link.fromPort == \"w\") {\n\t\t\t\t\tif (token.dataStack[token.dataStack.length-2] == CompData.PROMPT) {\n\t\t\t\t\t\tvar data = token.dataStack.pop();\n\t\t\t\t\t\ttoken.dataStack.pop();\n\t\t\t\t\t\ttoken.dataStack.push([CompData.UNIT,CompData.EMPTY]);\n\n\t\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_DELTA + data[1];\n\t\t\t\t\t\treturn this.findLinksInto(null)[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) { \n\t\t\tif (token.rewriteFlag.substring(0,3) == RewriteFlag.F_DELTA && nextLink.to == this.key) {\n\t\t\t\tvar key = token.rewriteFlag.substring(3,token.rewriteFlag.length);\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\n\t\t\t\tvar data = token.dataStack.last();\n\t\t\t\tvar weak1 = new Weak().addToGroup(this.group);\n\t\t\t\tthis.findLinksOutOf(\"w\")[0].changeFrom(weak1.key, \"n\");\n\n\t\t\t\tvar mod = this.graph.findNodeByKey(key);\n\t\t\t\tvar weak2 = new Weak().addToGroup(this.group);\n\t\t\t\tmod.findLinksOutOf('e')[0].changeFrom(weak2.key, 'n');\n\t\t\t\tthis.findLinksOutOf(\"e\")[0].changeFrom(mod.key, \"e\");\n\n\t\t\t\tvar wrapper = BoxWrapper.create().addToGroup(this.group);\n\t\t\t\tvar con = new Const(data[0]).addToGroup(wrapper.box);\n\t\t\t\tnew Link(wrapper.prin.key, con.key, \"n\", \"s\").addToGroup(wrapper);\n\t\t\t\tthis.findLinksInto(null)[0].changeTo(wrapper.prin.key, \"s\");\n\t\t\t\tthis.delete();\n\t\t\t\t\n\t\t\t\ttoken.rewrite = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Delta();\n\t\t}\n\t}\n\n\treturn Delta;\n});","define(['node', 'token', 'box-wrapper', 'nodes/const', 'link', 'nodes/weak'], \n\tfunction(Node, Token, BoxWrapper, Const, Link, Weak) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\n\tclass Dep extends Node {\n\t\t\n\t\tconstructor() {\n\t\t\tsuper(null, 'p', \"mediumpurple1\");\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(null)[0]; \n\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key) {\n\t\t\t\tif (token.dataStack[token.dataStack.length-2] == CompData.PROMPT) {\n\t\t\t\t\tvar data = token.dataStack.pop();\n\t\t\t\t\ttoken.dataStack.pop();\n\t\t\t\t\ttoken.dataStack.push([data[0],CompData.EMPTY]);\n\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_DEP;\n\t\t\t\t\treturn this.findLinksInto(null)[0]; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\tif (nextLink.to == this.key && token.rewriteFlag == RewriteFlag.F_DEP) {\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\t\t\t\tvar data = token.dataStack.last();\n\n\t\t\t\tif ((isNumber(data[0]) || typeof(data[0]) === \"boolean\")) {\n\t\t\t\t\tvar outLink = this.findLinksOutOf(null)[0]; \n\t\t\t\t\tvar weak = new Weak(outLink.text).addToGroup(this.group);\n\t\t\t\t\toutLink.changeFrom(weak.key, \"n\");\n\n\t\t\t\t\tvar wrapper = BoxWrapper.create().addToGroup(this.group);\n\t\t\t\t\tvar newConst = new Const(data[0]).addToGroup(wrapper.box);\n\t\t\t\t\tnew Link(wrapper.prin.key, newConst.key, \"n\", \"s\").addToGroup(wrapper);\n\t\t\t\t\tnextLink.changeTo(wrapper.prin.key, \"s\");\n\t\t\t\t\t\n\t\t\t\t\tthis.delete();\n\t\t\t\t\ttoken.rewrite = true;\n\t\t\t\t}\n\n\t\t\t\treturn nextLink;\n\t\t\t}\n\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Dep();\n\t\t}\n\t}\n\n\treturn Dep;\n});","define(['nodes/expo'], function(Expo) {\n\n\tclass Der extends Expo {\n\n\t\tconstructor(name) {\n\t\t\tsuper(null, \"D\", name);\n\t\t}\n\t\t\n\t\tcopy() {\n\t\t\tvar der = new Der(this.name);\n\t\t\treturn der;\n\t\t}\n\t}\n\treturn Der;\n});\n","define(['node'], function(Node) {\n\n\tclass Deref extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(null, \"d\", \"mediumpurple1\"); \n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) \n\t\t\t\treturn this.findLinksOutOf(null)[0]; \n\t\t\telse if (link.from == this.key) \n\t\t\t\treturn this.findLinksInto(null)[0]; \t\t\t\t\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Deref();\n\t\t}\n\n\t}\n\treturn Deref;\n});","define(['node'], function(Node) {\n\n\tclass Expo extends Node {\n\n\t\tconstructor(shape, text, name) {\n\t\t\tsuper(shape, text, \"cyan\", name);\n\t\t\tthis.width = \".3\";\n\t\t\tthis.height = \".3\";\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(null)[0];\n\t\t\t\treturn nextLink;\t\n\t\t\t}\n\t\t\telse if (link.from == this.key) {\n\t\t\t\tvar nextLink = this.findLinksInto(null)[0];\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tdeleteAndPreserveInLink() { \n\t\t\tvar inLink = this.findLinksInto(null)[0];\n\t\t\tvar outLink = this.findLinksOutOf(null)[0];\n\t\t\tif (outLink != null && inLink != null) {\n\t\t\t\tinLink.changeTo(outLink.to, outLink.toPort);\n\t\t\t}\n\t\t\tsuper.delete();\n\t\t}\n\n\t\tdeleteAndPreserveOutLink() { \n\t\t\tvar inLink = this.findLinksInto(null)[0];\n\t\t\tvar outLink = this.findLinksOutOf(null)[0];\n\t\t\tif (inLink != null && outLink != null) {\n\t\t\t\toutLink.changeFrom(inLink.from, inLink.fromPort);\n\t\t\t}\n\t\t\tsuper.delete();\n\t\t}\n\t}\n\n\treturn Expo;\n});","define(['node', 'token', 'nodes/promo', 'nodes/weak'], \n\tfunction(Node, Token, Promo, Weak) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\t\n\tclass If extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(null, \"if\", \"mediumpurple1\");\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(\"w\")[0];\n\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key && link.fromPort == \"w\") {\n\t\t\t\tvar left = this.graph.findNodeByKey(this.findLinksOutOf(\"w\")[0].to);\n\t\t\t\tif (left instanceof Promo) {\n\t\t\t\t\tif (token.dataStack.last()[0] == true) {\n\t\t\t\t\t\tvar nextLink = this.findLinksOutOf(\"n\")[0];\n\t\t\t\t\t\ttoken.dataStack.pop();\n\t\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_IF;\n\t\t\t\t\t\ttoken.forward = true;\n\t\t\t\t\t\treturn nextLink; \n\t\t\t\t\t}\n\t\t\t\t\telse if (token.dataStack.last()[0] == false) {\n\t\t\t\t\t\tvar nextLink = this.findLinksOutOf(\"e\")[0];\n\t\t\t\t\t\ttoken.dataStack.pop();\n\t\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_IF;\n\t\t\t\t\t\ttoken.forward = true;\n\t\t\t\t\t\treturn nextLink; \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar nextLink = this.findLinksOutOf(\"n\")[0];\n\t\t\t\t\tvar data = token.dataStack.pop();\n\t\t\t\t\ttoken.dataStack.push(data[0]);\n\t\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\t\ttoken.forward = true;\n\t\t\t\t\treturn nextLink; \n\t\t\t\t}\n\t\t\t} \n\t\t\telse if (link.from == this.key) {\n\t\t\t\tif (link.fromPort == \"n\") {\n\t\t\t\t\tvar nextLink = this.findLinksOutOf(\"e\")[0];\n\t\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\t\ttoken.forward = true;\n\t\t\t\t\treturn nextLink; \n\t\t\t\t}\n\t\t\t\telse if (link.fromPort == \"e\") {\n\t\t\t\t\tvar nextLink = this.findLinksInto(\"s\")[0];\n\t\t\t\t\tvar y = token.dataStack.pop();\n\t\t\t\t\tvar x = token.dataStack.pop();\n\t\t\t\t\tvar cond = token.dataStack.pop();\n\t\t\t\t\tvar result;\n\t\t\t\t\tif (cond) \n\t\t\t\t\t\tresult = x;\n\t\t\t\t\telse\n\t\t\t\t\t\tresult = y;\n\t\t\t\t\ttoken.dataStack.pop();\n\t\t\t\t\ttoken.dataStack.push(result);\n\t\t\t\t\ttoken.forward = false;\n\t\t\t\t\treturn nextLink; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\tif (token.rewriteFlag == RewriteFlag.F_IF && nextLink.from == this.key) {\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\n\t\t\t\tvar left = this.graph.findNodeByKey(this.findLinksOutOf(\"w\")[0].to);\n\t\t\t\tif (left instanceof Promo) {\n\t\t\t\t\tvar downLink = this.findLinksInto(null)[0];\n\t\t\t\t\tvar otherLink = this.findLinksOutOf(nextLink.fromPort == \"n\"?\"e\":\"n\")[0];\n\t\t\t\t\tnextLink.changeFrom(downLink.from, downLink.fromPort);\n\t\t\t\t\tvar weak = new Weak(this.graph.findNodeByKey(otherLink.to).name).addToGroup(this.group);\n\t\t\t\t\totherLink.changeFrom(weak.key, \"n\");\n\t\t\t\t\tthis.delete();\n\t\t\t\t\tleft.group.delete();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttoken.rewrite = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\t\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new If();\n\t\t}\n\t}\n\n\treturn If;\n});","define(['node', 'token', 'nodes/delta', 'nodes/weak', 'nodes/contract'],\n\tfunction(Node, Token, Delta, Weak, Contract) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag =Token.RewriteFlag();\n\t\n\tclass Mod extends Node {\n\t\t\n\t\tconstructor() {\n\t\t\tsuper(null, \"M\", \"indianred1\");\n\t\t\tthis.graph.machine.cells.push(this.key);\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\treturn this.findLinksOutOf(\"w\")[0];\n\t\t\t}\n\t\t\telse if (link.from == this.key && link.fromPort == \"w\") {\n\t\t\t\tvar data = token.dataStack.pop();\n\t\t\t\ttoken.dataStack.push([data[0],this.key])\n\t\t\t\treturn this.findLinksInto(null)[0]; \n\t\t\t}\n\t\t\telse if (link.from == this.key && link.fromPort == \"e\") {\n\t\t\t\ttoken.machine.newValues.set(this.key, token.dataStack.last()[0]);\n\t\t\t\ttoken.delete();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tupdate(data) {\n\t\t\tvar leftLink = this.findLinksOutOf(\"w\")[0]; \n\n\t\t\tif ((isNumber(data) || typeof(data) === \"boolean\")) {\n\t\t\t\tvar value = this.graph.findNodeByKey(leftLink.to);\n\t\t\t\tvar oldData = value.name;\n\t\t\t\tvalue.text = data;\n\t\t\t\tvalue.name = data;\n\t\t\t\treturn oldData;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\tvar mod = new Mod();\n\t\t\treturn mod;\n\t\t}\n\t}\n\n\treturn Mod;\n});","define(['nodes/expo'], function(Expo) {\n\n\tclass Pax extends Expo {\n\n\t\tconstructor(name) {\n\t\t\tsuper(null, \"?\", name);\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Pax(this.name);\n\t\t}\n\n\t\tdelete() {\n\t\t\tthis.group.auxs.splice(this.group.auxs.indexOf(this), 1);\n\t\t\tsuper.delete();\n\t\t}\n\t}\n\treturn Pax;\n});","define(['token', 'term', 'link', 'nodes/expo', 'nodes/der', 'nodes/contract'], \n\tfunction(Token, Term, Link, Expo, Der, Contract) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\n\tclass Promo extends Expo {\n\n\t\tconstructor() {\n\t\t\tsuper(null, \"!\");\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(null)[0];\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_PROMO;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key) {\n\t\t\t\tvar nextLink = this.findLinksInto(null)[0];\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\tif (token.rewriteFlag == RewriteFlag.F_PROMO) {\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\t\t\t\tvar prev = this.graph.findNodeByKey(this.findLinksInto(null)[0].from);\n\n\t\t\t\tif (prev instanceof Der) {\n\t\t\t\t\tvar oldGroup = this.group;\n\t\t\t\t\toldGroup.moveOut(); // this.group is a box-wrapper\n\t\t\t\t\toldGroup.deleteAndPreserveLink();\n\t\t\t\t\tvar newNextLink = prev.findLinksInto(null)[0];\n\t\t\t\t\tprev.deleteAndPreserveInLink(); // preserve inLink\n\t\t\t\t\t\n\t\t\t\t\ttoken.rewrite = true;\n\t\t\t\t\treturn newNextLink;\n\t\t\t\t}\n\t\t\t\telse if (prev instanceof Contract && token.boxStack.length >= 1) {\n\t\t\t\t\tif (nextLink.from == this.key) {\n\t\t\t\t\t\tvar link = token.boxStack.pop();\n\t\t\t\t\t\tvar inLinks = prev.findLinksInto(null);\n\t\t\t\t\t\tif (inLinks.length == 1) { \n\t\t\t\t\t\t\t// this will not happen as the C-node should have taken care of it\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar newBoxWrapper = this.group.copy().addToGroup(this.group.group);\n\t\t\t\t\t\t\tTerm.joinAuxs(this.group.auxs, newBoxWrapper.auxs, newBoxWrapper.group);\n\t\t\t\t\t\t\tvar prevLink = prev.findLinksOutOf(null)[0];\n\t\t\t\t\t\t\tprevLink.changeTo(newBoxWrapper.prin.key, prev.findLinksOutOf(null)[0].toPort);\n\t\t\t\t\t\t\tlink.changeTo(this.key, \"s\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_PROMO;\n\t\t\t\t\t\ttoken.rewrite = true;\n\t\t\t\t\t\treturn nextLink;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttoken.rewrite = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\t\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Promo();\n\t\t}\n\t}\n\n\treturn Promo;\n});","define(['node', 'token', 'box-wrapper', 'nodes/const', 'link'],\n\tfunction(Node, Token, BoxWrapper, Const, Link) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\n\tclass Prop extends Node {\n\t\t\n\t\tconstructor() {\n\t\t\tsuper(null, \"s\", \"indianred1\");\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tif (token.dataStack.last() == CompData.PROMPT) {\n\t\t\t\t\ttoken.dataStack.pop();\n\t\t\t\t\ttoken.dataStack.push(false);\n\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_PROP;\n\t\t\t\t\ttoken.forward = false;\n\t\t\t\t\ttoken.machine.startPropagation();\n\t\t\t\t\treturn link; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\tif (token.rewriteFlag == RewriteFlag.F_PROP && nextLink.to == this.key) {\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\t\t\t\tvar data = token.machine.hasUpdate; \n\t\t\t\ttoken.dataStack.pop();\n\t\t\t\ttoken.dataStack.push([data,CompData.EMPTY]);\n\t\t\t\tvar wrapper = BoxWrapper.create().addToGroup(this.group);\n\t\t\t\tvar con = new Const(data).addToGroup(wrapper.box);\n\t\t\t\tnew Link(wrapper.prin.key, con.key, \"n\", \"s\").addToGroup(wrapper);\n\t\t\t\tnextLink.changeTo(wrapper.prin.key, \"s\");\n\t\t\t\tthis.delete();\n\n\t\t\t\ttoken.rewrite = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Prop();\n\t\t}\n\t}\n\n\treturn Prop;\n});","define(['node', 'token', 'nodes/mod', 'nodes/const', 'link'],\n\tfunction(Node, Token, Mod, Const, Link) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\n\tclass Prov extends Node {\n\t\t\n\t\tconstructor() {\n\t\t\tsuper('diamond', '', \"indianred1\");\n\t\t\tthis.width = \".3\";\n\t\t\tthis.height = \".3\";\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(null)[0];\n\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key) {\n\t\t\t\tvar data = token.dataStack.pop();\n\t\t\t\ttoken.dataStack.pop();\n\t\t\t\ttoken.dataStack.push(data);\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_MOD;\n\t\t\t\treturn this.findLinksInto(null)[0];\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\tif (nextLink.to == this.key && token.rewriteFlag == RewriteFlag.F_MOD) {\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\t\t\t\tvar data = token.dataStack.pop();\n\n\t\t\t\tif ((isNumber(data[0]) || typeof(data[0]) === \"boolean\")) {\n\t\t\t\t\tvar mod = new Mod().addToGroup(this.group);\n\t\t\t\t\tvar con = new Const(data[0]).addToGroup(this.group);\n\t\t\t\t\tnew Link(mod.key, con.key, \"w\", \"s\").addToGroup(this.group); \n\t\t\t\t\tvar outLink = this.findLinksOutOf(null)[0];\n\t\t\t\t\toutLink.changeFrom(mod.key, \"e\");\n\t\t\t\t\tvar inLink = this.findLinksInto(null)[0];\n\t\t\t\t\tinLink.changeTo(mod.key, \"s\");\n\t\t\t\t\tthis.delete();\n\t\t\t\t\ttoken.rewrite = true;  \n\t\t\t\t\ttoken.dataStack.push([data[0],mod.key]); \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn nextLink;\n\t\t\t}\n\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tdeleteAndPreserveInLink() { \n\t\t\tvar inLink = this.findLinksInto(null)[0];\n\t\t\tvar outLink = this.findLinksOutOf(null)[0];\n\t\t\tif (outLink != null && inLink != null) {\n\t\t\t\tinLink.changeTo(outLink.to, outLink.toPort);\n\t\t\t}\n\t\t\tsuper.delete();\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Prov();\n\t\t}\n\t}\n\n\treturn Prov;\n});","define(['node', 'token', 'term', 'link', 'nodes/expo'],\n\tfunction(Node, Token, Term, Link, Expo) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\n\tclass Recur extends Expo {\n\n\t\tconstructor() {\n\t\t\tsuper(null, \"μ\", \"mediumpurple1\");\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(\"e\")[0];\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_RECUR;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\tif (token.rewriteFlag == RewriteFlag.F_RECUR && nextLink.from == this.key) {\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\n\t\t\t\tvar wrapper = this.group.copy().addToGroup(this.group);\n\t\t\t\tTerm.joinAuxs(this.group.auxs, wrapper.auxs, wrapper.group);\t\n\n\t\t\t\tvar oldGroup = this.group;\n\t\t\t\tvar oldBox = this.group.box;\n\t\t\t\t\n\t\t\t\tthis.group.moveOut();\n\n\t\t\t\tvar leftLink = this.findLinksInto(\"w\")[0];\n\t\t\t\tleftLink.changeTo(wrapper.prin.key, \"s\");\n\t\t\t\tleftLink.fromPort = \"n\";\n\t\t\t\tleftLink.reverse = false;\n\t\t\t\tvar inLink = this.findLinksInto(\"s\")[0];\n\t\t\t\tvar outLink = this.findLinksOutOf(\"e\")[0];\n\t\t\t\toutLink.changeFrom(inLink.from, inLink.fromPort);\n\t\t\t\t\n\t\t\t\toldGroup.deleteAndPreserveLink();\n\n\t\t\t\ttoken.rewrite = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Recur();\n\t\t}\n\t}\n\n\treturn Recur;\n});","define(['node', 'token', 'box-wrapper', 'nodes/const', 'link', 'nodes/weak'],\n\tfunction(Node, Token, BoxWrapper, Const, Link, Weak) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\n\tclass Set extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(null, \"<<~\", \"indianred1\");\n\t\t}\n\t\t\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(\"e\")[0];\n\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key) {\n\t\t\t\tif (link.fromPort == \"e\") {\n\t\t\t\t\tvar nextLink = this.findLinksOutOf(\"w\")[0];\n\t\t\t\t\t//token.dataStack.pop();\n\t\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\t\ttoken.forward = true; \n\t\t\t\t\treturn nextLink;\n\t\t\t\t}\n\t\t\t\telse if (link.fromPort == \"w\") {\n\t\t\t\t\tif (token.dataStack[token.dataStack.length-3] == CompData.PROMPT) {\n\t\t\t\t\t\tvar data = token.dataStack.pop();\n\t\t\t\t\t\tvar new_v = token.dataStack.pop();\n\t\t\t\t\t\ttoken.dataStack.pop();\n\t\t\t\t\t\ttoken.dataStack.push([CompData.UNIT,CompData.EMPTY]);\n\n\t\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_DELTA + data[1] +';'+ new_v[0];\n\t\t\t\t\t\treturn this.findLinksInto(null)[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) { \n\t\t\tif (token.rewriteFlag.substring(0,3) == RewriteFlag.F_DELTA && nextLink.to == this.key) {\n\t\t\t\tvar string = token.rewriteFlag.substring(3,token.rewriteFlag.length);\n\t\t\t\tvar s = string.split(\";\");\n\t\t\t\tvar key = s[0];\n\t\t\t\tvar data = s[1];\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\n\t\t\t\tvar data = token.dataStack.last();\n\t\t\t\tvar weak1 = new Weak().addToGroup(this.group);\n\t\t\t\tthis.findLinksOutOf(\"w\")[0].changeFrom(weak1.key, \"n\");\n\n\t\t\t\tvar mod = this.graph.findNodeByKey(key);\n\t\t\t\tvar weak2 = new Weak().addToGroup(this.group);\n\t\t\t\tmod.findLinksOutOf('e')[0].changeFrom(weak2.key, 'n');\n\t\t\t\tthis.findLinksOutOf(\"e\")[0].changeFrom(mod.key, \"e\");\n\t\t\t\tthis.graph.findNodeByKey(mod.findLinksOutOf('e')[0].to).name = s[1];\n\n\t\t\t\tvar wrapper = BoxWrapper.create().addToGroup(this.group);\n\t\t\t\tvar con = new Const(data[0]).addToGroup(wrapper.box);\n\t\t\t\tnew Link(wrapper.prin.key, con.key, \"n\", \"s\").addToGroup(wrapper);\n\t\t\t\tthis.findLinksInto(null)[0].changeTo(wrapper.prin.key, \"s\");\n\t\t\t\tthis.delete();\n\t\t\t\t\n\t\t\t\ttoken.rewrite = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Set();\n\t\t}\n\t}\n\n\treturn Set;\n});","define(['node', 'token'], function(Node, Token) {\n\n\tvar CompData = Token.CompData();\n\n\tclass Start extends Node {\n\n\t\tconstructor() {\n\t\t\tsuper(\"point\", \"\", \"black\");\n\t\t}\n\t\t\n\t\ttransition(token) {\n\t\t\tif (token.link == null && token.dataStack.last() == CompData.PROMPT) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(null)[0];\n\t\t\t\ttoken.forward = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse \n\t\t\t\treturn null;\n\t\t}\n\t\t\n\t\tcopy() {\n\t\t\treturn new Start();\n\t\t}\n\n\t\tdraw(level) {\n\t\t\treturn level + this.key + '[shape=' + this.shape + '];'; \n\t\t}\n\n\t}\n\n\treturn Start;\n});","define(['node', 'token', 'link', 'box-wrapper', 'nodes/promo', 'nodes/const', 'op'],\n\tfunction(Node, Token, Link, BoxWrapper, Promo, Const, Op) {\n\n\tvar CompData = Token.CompData();\n\tvar RewriteFlag = Token.RewriteFlag();\n\tvar Link = require('link');\n\tvar UnOpType = Op.UnOpType;\n\n\tclass UnOp extends Node {\n\n\t\tconstructor(text) {\n\t\t\tsuper(null, text, \"mediumpurple1\");\n\t\t\tthis.subType = null;\n\t\t}\n\n\t\ttransition(token, link) {\n\t\t\tif (link.to == this.key) {\n\t\t\t\tvar nextLink = this.findLinksOutOf(null)[0];\n\t\t\t\ttoken.dataStack.push(CompData.PROMPT);\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\telse if (link.from == this.key) {\n\t\t\t\tif (token.dataStack[token.dataStack.length-2] == CompData.PROMPT) {\n\t\t\t\t\tvar v1 = token.dataStack.pop();\n\t\t\t\t\t\t\t token.dataStack.pop();\n\t\t\t\t\ttoken.dataStack.push([this.unOpApply(this.subType, v1[0]),CompData.EMPTY]);\n\t\t\t\t\ttoken.rewriteFlag = RewriteFlag.F_OP;\n\t\t\t\t\treturn this.findLinksInto(null)[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trewrite(token, nextLink) {\n\t\t\tif (token.rewriteFlag == RewriteFlag.F_OP && nextLink.to == this.key) {\n\t\t\t\ttoken.rewriteFlag = RewriteFlag.EMPTY;\n\t\t\t\t\n\t\t\t\tvar prev = this.graph.findNodeByKey(this.findLinksOutOf(null)[0].to);\n\t\t\t\tif (prev instanceof Promo) {\n\t\t\t\t\tvar wrapper = BoxWrapper.create().addToGroup(this.group);\n\t\t\t\t\tvar newConst = new Const(token.dataStack.last()[0]).addToGroup(wrapper.box);\n\t\t\t\t\tnew Link(wrapper.prin.key, newConst.key, \"n\", \"s\").addToGroup(wrapper);\n\t\t\t\t\tnextLink.changeTo(wrapper.prin.key, \"s\");\n\t\t\t\t\tprev.group.delete(); \n\t\t\t\t\tthis.delete(); \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttoken.rewrite = true;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t\t\n\t\t\telse if (token.rewriteFlag == RewriteFlag.EMPTY) {\n\t\t\t\ttoken.rewrite = false;\n\t\t\t\treturn nextLink;\n\t\t\t}\n\t\t}\n\n\t\tunOpApply(type, v1) {\n\t\t\tswitch(type) {\n\t\t\t\tcase UnOpType.Not: return !v1;\n\t\t\t}\n\t\t}\n\n\t\tcopy() {\n\t\t\tvar newNode = new UnOp(this.text);\n\t\t\tnewNode.subType = this.subType;\n\t\t\treturn newNode;\n\t\t}\n\n\t}\n\n\treturn UnOp;\n});","define(['nodes/der', 'nodes/abs', 'nodes/expo'], \n    function(Der, Abs, Expo) {\n\n\tclass Var extends Der {\n\n\t\tconstructor(name) {\n\t\t\tsuper(name);\n\t\t\tthis.text = \"V\";\n\t\t}\n\n\t\tdeleteAndPreserveOutLink() { \n\t\t\tvar inLink = this.findLinksInto(null)[0];\n\t\t\tvar outLink = this.findLinksOutOf(null)[0];\n\t\t\tvar inNode = this.graph.findNodeByKey(inLink.from);\n\t\t\tif (inLink != null && outLink != null) {\n\t\t\t\tif (this.graph.findNodeByKey(outLink.to) instanceof Abs && (inNode instanceof Expo))\n\t\t\t\t\toutLink.changeFrom(inLink.from, \"nw\");\n\t\t\t\telse\n\t\t\t\t\toutLink.changeFrom(inLink.from, inLink.fromPort);\n\t\t\t}\n\t\t\tthis.delete();\n\t\t}\n\t}\n\n\treturn Var;\n});","define(['nodes/expo'], function(Expo) {\n\n\tclass Weak extends Expo {\n\n\t\tconstructor() {\n\t\t\tsuper(null, 'C0');\n\t\t}\n\n\t\tcopy() {\n\t\t\treturn new Weak();\n\t\t}\n\t\t\n\t}\n\n\treturn Weak;\n});","define(function() {\n\n\tvar UnOpType = {\n\t\tNot: 0,\n\t}\n\n\tvar BinOpType = {\n\t\tAnd: 0,\n\t\tOr: 1,\n\t\tPlus: 2,\n\t\tSub: 3,\n\t\tMult: 4,\n\t\tDiv: 7,\n\t\tLte: 5,\n\t}\n\n\tvar OpType = {\n\t\tUnOpType: UnOpType,\n\t\tBinOpType: BinOpType,\n\t}\n\n\treturn OpType;\n})","define(['parser/token'], function(Token) {\n\n  class Lexer {\n    constructor(input) {\n      this._input = input;\n      this._index = 0;\n      this._token = undefined;\n      this._nextToken();\n    }\n\n    /**\n     * Return the next char of the input or '\\0' if we've reached the end\n     */\n    _nextChar() {\n      if (this._index >= this._input.length) {\n        return '\\0';\n      }\n\n      return this._input[this._index++];\n    }\n\n    /**\n     * Set this._token based on the remaining of the input\n     *\n     * This method is meant to be private, it doesn't return a token, just sets\n     * up the state for the helper functions.\n     */\n    _nextToken() {\n      let c;\n      do {\n        c = this._nextChar();\n      } while (/\\s/.test(c));\n\n      switch (c) {\n        case 'λ':\n        case '\\\\':\n          this._token = new Token(Token.LAMBDA);\n          break;\n\n        case '.':\n          this._token = new Token(Token.DOT);\n          break;\n\n        case ',':\n          this._token = new Token(Token.COMMA);\n          break;\n\n        case ';':\n          this._token = new Token(Token.SEQ);\n          break;\n\n        case '(':\n          this._token = new Token(Token.LPAREN);\n          break;\n\n        case ')':\n          this._token = new Token(Token.RPAREN);\n          break;\n\n        case '{':\n          this._token = new Token(Token.CLPAREN);\n          break;\n\n        case '}':\n          this._token = new Token(Token.CRPAREN);\n          break;\n\n        case '\\0':\n          this._token = new Token(Token.EOF);\n          break;\n\n        case '~':\n          this._token = new Token(Token.NOT);\n          break;\n\n        case '&':\n          if (this._nextChar() == '&')\n            this._token = new Token(Token.AND, null, 5);\n          else {\n            this._index--;\n            this.fail();\n          }\n          break;\n\n        case '|':\n          var c2 = this._nextChar();\n          if (c2 == '|')\n            this._token = new Token(Token.OR, null, 4);\n          else {\n            this._index--;\n            this.fail();\n          }\n          break;\n\n        case '+':\n          this._token = new Token(Token.PLUS, null, 12);\n          break;\n\n        case '-':\n          this._token = new Token(Token.SUB, null, 12);\n          break;\n\n        case '*':\n          this._token = new Token(Token.MULT, null, 13);\n          break;\n\n        case '/':\n          this._token = new Token(Token.DIV, null, 13);\n          break;\n\n        case '<':\n          if (this._nextChar() == '=')\n            this._token = new Token(Token.LTE, null, 10);\n          else {\n            this._index--;\n            this.fail();\n          }\n          break;\n\n        case '=':\n          this._token = new Token(Token.DEFINE);\n          break;\n\n        default:\n          // text for string\n          if (/[a-z]|_|'/.test(c)) {\n            let str = '';\n            do {\n              str += c;\n              c = this._nextChar();\n\n            } while (/[a-zA-Z]|'|_|[0-9]/.test(c));\n\n            // put back the last char which is not part of the identifier\n            this._index--;\n\n            if (str == \"let\")\n              this._token = new Token(Token.LET);\n            else if (str == \"in\")\n              this._token = new Token(Token.IN);\n            else if (str == \"rec\") \n              this._token = new Token(Token.REC);\n            else if (str == \"true\")\n              this._token = new Token(Token.TRUE);\n            else if (str == \"false\")\n              this._token = new Token(Token.FALSE);\n            else if (str == \"if\")\n              this._token = new Token(Token.IF);\n            else if (str == \"then\")\n              this._token = new Token(Token.THEN);\n            else if (str == \"else\")\n              this._token = new Token(Token.ELSE);\n            else if (str == \"link\")\n              this._token = new Token(Token.CHANGE);\n            else if (str == \"set\")\n              this._token = new Token(Token.SET);\n            else if (str == \"to\")\n              this._token = new Token(Token.TO);\n            else if (str == \"step\")\n              this._token = new Token(Token.PROP);\n            else if (str == \"peek\")\n              this._token = new Token(Token.DEP);\n            else if (str == \"deref\")\n              this._token = new Token(Token.DEREF);\n            else\n              this._token = new Token(Token.LCID, str);\n          } \n          // text for numbers\n          else if (/[0-9]/.test(c)) {\n            let str = '';\n            do {\n              str += c;\n              c = this._nextChar();\n            } while (/[0-9]/.test(c));\n\n            if (c == '.') {\n              do {\n                str += c;\n                c = this._nextChar();\n              } while (/[0-9]/.test(c));\n            }\n\n            // put back the last char which is not part of the identifier\n            this._index--;\n\n            this._token = new Token(Token.INT, parseFloat(str));\n          } \n          else {\n            this.fail();\n          }\n      }\n    }\n\n    /**\n     * Assert that the next token has the given type, return it, and skip to the\n     * next token.\n     */\n    token(type) {\n      if (!type) {\n        return this._token.value;\n      }\n\n      const token = this._token;\n      this.match(type);\n      return token.value;\n    }\n\n    lookahead() {\n      return this._token;\n    }\n\n    /**\n     * Throw an unexpected token error - ideally this would print the source\n     * location\n     */\n    fail() {\n      throw new Error(`Unexpected token at offset ${this._index}`);\n    }\n\n    /**\n     * Returns a boolean indicating whether the next token has the given type.\n     */\n    next(type) {\n      return this._token.type == type;\n    }\n\n    /**\n     * Assert that the next token has the given type and skip it.\n     */\n    match(type) {\n      if (this.next(type)) {\n        this._nextToken();\n        return;\n      }\n      console.error(`${this._index}: Invalid token: Expected '${type}' found '${this._token.type}'`);\n      throw new Error('Parse Error');\n    }\n\n    /**\n     * Same as `next`, but skips the token if it matches the expected type.\n     */\n    skip(type) {\n      if (this.next(type)) {\n        this._nextToken();\n        return true;\n      }\n      return false;\n    }\n  }\n\n  return Lexer;\n});\n","define(['parser/token', 'ast/abstraction', 'ast/application', 'ast/identifier',\n  'ast/constant', 'ast/unary-op', 'ast/binary-op', 'ast/if-then-else', 'ast/recursion',\n  'ast/provisional-constant', 'ast/change', 'ast/assign', 'ast/propagation',\n  'ast/deprecation', 'ast/deref', 'op'],\n  function(Token, Abstraction, Application, Identifier, \n    Constant, UnaryOp, BinaryOp, IfThenElse, Recursion,\n    ProvisionalConstant, Change, Assign, Propagation,\n    Deprecation, Dereference, Op) {\n\n  var BinOpType = Op.BinOpType;\n  var UnOpType = Op.UnOpType;\n\n  class Parser {\n    constructor(lexer) {\n      this.lexer = lexer;\n    }\n\n    parse() {\n      const result = this.term([]);\n      // make sure we consumed all the program, otherwise there was a syntax error\n      this.lexer.match(Token.EOF);\n\n      return result;\n    }\n\n    // term ::= LAMBDA LCID DOT term\n    //        | LET LCID DEFINE term IN term \n    //        | REC LCID DOT term\n    //        | IF term THEN term ELSE term\n    //        | application\n    term(ctx) {\n      if (this.lexer.skip(Token.LAMBDA)) {\n        const id = this.lexer.token(Token.LCID);\n        this.lexer.match(Token.DOT);\n        const term = this.term([id].concat(ctx));\n        return new Abstraction(id, term);\n      } \n      \n      else if (this.lexer.skip(Token.LET)) {\n        const id = this.lexer.token(Token.LCID);\n        this.lexer.match(Token.DEFINE)\n        var N = this.term(ctx);\n        this.lexer.match(Token.IN);\n        const M = this.term([id].concat(ctx));\n        return new Application(new Abstraction(id, M), N);\n      } \n      else if (this.lexer.skip(Token.REC)) {\n        const id = this.lexer.token(Token.LCID);\n        this.lexer.match(Token.DOT);\n        const term = this.term([id].concat(ctx));\n        return new Recursion(id, term);\n      }\n      else if (this.lexer.skip(Token.IF)) {\n        const cond = this.term(ctx);\n        this.lexer.match(Token.THEN);\n        const t1 = this.term(ctx);\n        this.lexer.match(Token.ELSE);\n        const t2 = this.term(ctx);\n        return new IfThenElse(cond, t1, t2);\n      }\n      else {\n        return this.application(ctx);\n      }\n    }\n\n    isBinaryOp(token) {\n      return token.type == Token.AND || token.type == Token.OR \n          || token.type == Token.PLUS || token.type == Token.SUB  \n          || token.type == Token.MULT || token.type == Token.DIV \n          || token.type == Token.LTE \n    }\n\n    parseBinop(ctx, lhs, pred) {\n      var nextToken = this.lexer.lookahead();\n      while (this.isBinaryOp(nextToken) && nextToken.pred >= pred) {\n        var op = nextToken;\n        this.lexer._nextToken();\n        var rhs = this.atom(ctx);\n        //var rhs = this.term(ctx);\n        nextToken = this.lexer.lookahead();\n        while (this.isBinaryOp(nextToken) && nextToken.pred > op.pred) {\n          rhs = this.parseBinop(ctx, rhs, nextToken.pred);\n          nextToken = this.lexer.lookahead();\n        }\n        if (op.type == Token.AND) {\n          lhs = new BinaryOp(BinOpType.And, \"&&\", lhs, rhs);\n        }\n        else if (op.type == Token.OR) {\n          lhs = new BinaryOp(BinOpType.Or, \"||\", lhs, rhs);\n        }\n        else if (op.type == Token.PLUS) {\n          lhs = new BinaryOp(BinOpType.Plus, \"+\", lhs, rhs);\n        }\n        else if (op.type == Token.SUB) {\n          lhs = new BinaryOp(BinOpType.Sub, \"-\", lhs, rhs);\n        }\n        else if (op.type == Token.MULT) {\n          lhs = new BinaryOp(BinOpType.Mult, \"*\", lhs, rhs);\n        }\n        else if (op.type == Token.DIV) {\n          lhs = new BinaryOp(BinOpType.Div, \"/\", lhs, rhs);\n        }\n        else if (op.type == Token.LTE) {\n          lhs = new BinaryOp(BinOpType.Lte, \"<=\", lhs, rhs);\n        }\n      }\n      return lhs;\n    }\n\n    application(ctx) {\n      let lhs = this.atom(ctx);    \n\n      while (true) {\n        var rhs;\n        if (this.isBinaryOp(this.lexer.lookahead())) {\n          lhs = this.parseBinop(ctx, lhs, 0);\n        }\n        else {\n          rhs = this.atom(ctx);\n          \n          if (!rhs) {\n            return lhs;\n          } else {\n            lhs = new Application(lhs, rhs);\n          }\n        }\n      }\n    }\n\n    // atom ::= LPAREN term RPAREN\n    //        | LCID\n    //        | INT\n    //        | TRUE\n    //        | FALSE\n    //        | NOT term\n    //        | PROP \n    //        | CHANGE LCID TO term\n    atom(ctx) {\n      if (this.lexer.skip(Token.LPAREN)) {\n        const term = this.term(ctx);\n        this.lexer.match(Token.RPAREN);\n        return term;\n      } \n      else if (this.lexer.next(Token.LCID)) {\n        const id = this.lexer.token(Token.LCID)\n        return new Identifier(ctx.indexOf(id), id);\n      } \n      else if (this.lexer.next(Token.INT)) {\n        const n = this.lexer.token(Token.INT);\n        return new Constant(n);\n      }\n      else if (this.lexer.skip(Token.TRUE)) {\n        return new Constant(true);\n      } \n      else if (this.lexer.skip(Token.FALSE)) {\n        return new Constant(false);\n      } \n      else if (this.lexer.skip(Token.NOT)) {\n        const term = this.term(ctx);\n        return new UnaryOp(UnOpType.Not, \"~\", term);\n      }\n      else if (this.lexer.skip(Token.PROP)) {\n        return new Propagation();\n      }\n      else if (this.lexer.skip(Token.DEP)) {\n        var term = this.term(ctx);\n        return new Deprecation(term);\n      }\n      else if (this.lexer.skip(Token.DEREF)) {\n        var term = this.term(ctx);\n        return new Dereference(term);\n      }\n      else if (this.lexer.skip(Token.CLPAREN)) {\n        var term = this.term(ctx);\n        this.lexer.match(Token.CRPAREN);\n        return new ProvisionalConstant(term);\n      }\n      else if (this.lexer.skip(Token.CHANGE)) {\n        const id = this.lexer.token(Token.LCID);\n        this.lexer.match(Token.TO);\n        const term = this.term(ctx);\n        return new Change(id, term);\n      }\n      else if (this.lexer.skip(Token.SET)) {\n        const id = this.lexer.token(Token.LCID);\n        this.lexer.match(Token.TO);\n        const term = this.term(ctx);\n        return new Assign(id, term); \n      }\n      else {\n        return undefined;\n      }\n    }\n  }\n\n  return Parser;\n});\n","define(function() {\n\n  class Token {\n    /**\n     * type should be one of the valid token types list below, and value is an\n     * optional value that can carry any extra information necessary for a given\n     * token type. (e.g. the matched string for an identifier)\n     */\n    constructor(type, value, pred) {\n      this.type = type;\n      this.value = value;\n      this.pred = pred;\n    }\n  };\n\n  [\n    'EOF', // we augment the tokens with EOF, to indicate the end of the input.\n    'LAMBDA',\n    'LPAREN',\n    'RPAREN',\n    'CLPAREN',\n    'CRPAREN',\n    'LCID',\n    'DOT', \n    'COMMA',\n    \n    'APP',\n\n    'LET',\n    'DEFINE',\n    'IN',\n\n    'REC',\n\n    'INT',\n\n    'TRUE',\n    'FALSE',\n\n    'NOT',\n\n    'AND',\n    'OR',\n    'PLUS',\n    'SUB',\n    'MULT',\n    'DIV',\n    'LTE',\n    \n    'IF',\n    'THEN',\n    'ELSE',\n\n    'SET',\n    'CHANGE',\n    'TO',\n    'PROP',\n    'DEP',\n    'DEREF',\n    //'SEQ',\n  ].forEach(token => Token[token] = token);\n\n  return Token;\n});\n","define(['group', 'link', 'nodes/pax', 'nodes/contract'], \n\tfunction(Group, Link, Pax, Contract) {\n\n\t// specific group for a term in the calculus\n\tclass Term extends Group {\n\n\t\tconstructor(prin, auxs) {\n\t\t\tsuper();\n\t\t\tthis.set(prin, auxs)\n\t\t}\n\n\t\tset(prin, auxs){\n\t\t\tthis.prin = prin;\n\t\t\tthis.auxs = auxs;\n\t\t\treturn this;\n\t\t}\n\n\t\tcreatePaxsOnTopOf(auxs) {\n\t\t\tvar newPaxs = [];\n\t\t\tfor (let pax of auxs) {\n\t\t\t\tvar newPax = new Pax(pax.name).addToGroup(this);\n\t\t\t\t\n\t\t\t\tif (pax.findLinksOutOf(null).length == 0)\n\t\t\t\t\tnew Link(pax.key, newPax.key, \"n\", \"s\").addToGroup(this);\n\t\t\t\telse {\n\t\t\t\t\tvar outLink = pax.findLinksOutOf(null)[0];\n\t\t\t\t\tnew Link(newPax.key, outLink.to, \"n\", outLink.toPort).addToGroup(this.group);\n\t\t\t\t\toutLink.changeTo(newPax.key, \"s\");\n\t\t\t\t\toutLink.changeToGroup(this);\n\t\t\t\t}\n\t\t\t\tnewPaxs.push(newPax);\n\t\t\t}\n\t\t\treturn newPaxs;\n\t\t}\n\n\t\tstatic joinAuxs(leftAuxs, rightAuxs, group) {\n\t\t\tvar newAuxs = leftAuxs.concat(rightAuxs);\n\t\t\toutter:\n\t\t\tfor (let leftAux of leftAuxs) {\n\t\t\t\tfor (let rightAux of rightAuxs) {\n\t\t\t\t\tif (leftAux.name == rightAux.name) {\n\t\t\t\t\t\tvar con = new Contract(leftAux.name).addToGroup(group);\n\n\t\t\t\t\t\tvar outLink = leftAux.findLinksOutOf(null)[0];\n\t\t\t\t\t\tif (typeof outLink != 'undefined') {\n\t\t\t\t\t\t\toutLink.changeFrom(con.key, outLink.fromPort);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnew Link(rightAux.key, con.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\t\t\tnew Link(leftAux.key, con.key, \"n\", \"s\").addToGroup(group);\n\t\t\t\t\t\tnewAuxs.splice(newAuxs.indexOf(leftAux), 1);\n\t\t\t\t\t\tnewAuxs.splice(newAuxs.indexOf(rightAux), 1);\n\t\t\t\t\t\tnewAuxs.push(con);\n\n\t\t\t\t\t\tcontinue outter;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newAuxs;\n\t\t}\n\t}\n\treturn Term;\n});\n\n","define(function() {\n\n\n\tvar CompData = {\n\t\tEMPTY: '-',\n\t\tPROMPT: '*',\n\t\tLAMBDA: 'λ',\n\t\tR: '@',\n\t\tUNIT: '•',\n\t\tIF0: 'if0',\n\t\tIF1: 'if1',\n\t}\n\n\tvar RewriteFlag = {\n\t\tEMPTY: '□',\n\t\tF_LAMBDA: '<λ>',\n\t\tF_OP: '<$>',\n\t\tF_IF: '<if>',\n\t\tF_C: '<C>',\n\t\tF_PROMO: '<!>',\n\t\tF_RECUR: '<μ>',\n\t\tF_MOD: '<M>',\n\t\tF_DEP: '<p>',\n\t\tF_DELTA: '<Δ>',\n\t\tF_PROP: '<s>',\n\t}\n\n\tclass MachineToken {\n\n\t\tstatic CompData() { return CompData; }\n\n\t\tstatic RewriteFlag() { return RewriteFlag; }\n\n\t\tconstructor(machine) {\n\t\t\tthis.machine = machine;\n\t\t\tthis.reset();\n\t\t}\n\n\t\tsetLink(link) {\n\t\t\tif (this.link != null) {\n\t\t\t\t//this.link.tokens.splice(this.link.tokens.indexOf(this), 1);\n\t\t\t\tthis.link.clearFocus();\n\t\t\t}\n\t\t\tthis.link = link;\n\t\t\tif (this.link != null) {\n\t\t\t\t//this.link.tokens.push(this);\n\t\t\t\tif (this.isMain)\n\t\t\t\t\tthis.link.focus(\"red\");\n\t\t\t\telse\n\t\t\t\t\tthis.link.focus(\"green\");\n\t\t\t}\n\t\t}\n\n\t\treset() {\n\t\t\tthis.forward = true;\n\t\t\tthis.rewrite = false;\n\t\t\tthis.transited = false;\n\t\t\t\n\t\t\tthis.link = null;\n\t\t\t\n\t\t\tthis.rewriteFlag = RewriteFlag.EMPTY;\n\t\t\tthis.dataStack = [CompData.PROMPT];\n\t\t\tthis.boxStack = [];\n\t\t}\n\n\t\tdelete() {\n\t\t\tthis.setLink(null);\n\t\t\tthis.machine.evalTokens.splice(this.machine.evalTokens.indexOf(this),1);\n\t\t}\n\t}\n\n\treturn MachineToken;\n});\n\n"],"sourceRoot":""}